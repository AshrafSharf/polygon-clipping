{"version":3,"file":"bundle.js","sources":["../../node_modules/splaytree/dist/splay.esm.js","../../dist/polygon-clipping.esm.js","../../node_modules/martinez-polygon-clipping/node_modules/splaytree/index.js","../../node_modules/martinez-polygon-clipping/src/edge_type.js","../../node_modules/martinez-polygon-clipping/src/operation.js","../../node_modules/martinez-polygon-clipping/src/compute_fields.js","../../node_modules/martinez-polygon-clipping/src/sweep_event.js","../../node_modules/martinez-polygon-clipping/src/equals.js","../../node_modules/martinez-polygon-clipping/src/signed_area.js","../../node_modules/martinez-polygon-clipping/src/compare_events.js","../../node_modules/martinez-polygon-clipping/src/divide_segment.js","../../node_modules/martinez-polygon-clipping/src/segment_intersection.js","../../node_modules/martinez-polygon-clipping/src/possible_intersection.js","../../node_modules/martinez-polygon-clipping/src/compare_segments.js","../../node_modules/martinez-polygon-clipping/src/connect_edges.js","../../node_modules/tinyqueue/index.js","../../node_modules/martinez-polygon-clipping/src/fill_queue.js","../../node_modules/martinez-polygon-clipping/src/index.js","../../node_modules/martinez-polygon-clipping/src/subdivide_segments.js","../../node_modules/turf-jsts/jsts.mjs","../../node_modules/@turf/union/main.es.js","../../node_modules/@turf/helpers/main.es.js","../../node_modules/@turf/meta/main.es.js","../../node_modules/@turf/truncate/main.es.js","../../node_modules/@turf/invariant/main.es.js","../../node_modules/@turf/clean-coords/main.es.js","../../node_modules/@turf/intersect/main.es.js","../../node_modules/@turf/area/main.es.js","../../node_modules/@turf/difference/main.es.js","../../node_modules/vue-runtime-helpers/dist/normalize-component.js","../../node_modules/vue-runtime-helpers/dist/inject-style/browser.js","../src/main.js"],"sourcesContent":["/**\n * splaytree v3.0.1\n * Fast Splay tree for Node and browser\n *\n * @author Alexander Milevski <info@w8r.name>\n * @license MIT\n * @preserve\n */\n\nclass Node {\r\n    constructor(key, data) {\r\n        this.next = null;\r\n        this.key = key;\r\n        this.data = data;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n}\n\n/* follows \"An implementation of top-down splaying\"\r\n * by D. Sleator <sleator@cs.cmu.edu> March 1992\r\n */\r\nfunction DEFAULT_COMPARE(a, b) {\r\n    return a > b ? 1 : a < b ? -1 : 0;\r\n}\r\n/**\r\n * Simple top down splay, not requiring i to be in the tree t.\r\n */\r\nfunction splay(i, t, comparator) {\r\n    const N = new Node(null, null);\r\n    let l = N;\r\n    let r = N;\r\n    while (true) {\r\n        const cmp = comparator(i, t.key);\r\n        //if (i < t.key) {\r\n        if (cmp < 0) {\r\n            if (t.left === null)\r\n                break;\r\n            //if (i < t.left.key) {\r\n            if (comparator(i, t.left.key) < 0) {\r\n                const y = t.left; /* rotate right */\r\n                t.left = y.right;\r\n                y.right = t;\r\n                t = y;\r\n                if (t.left === null)\r\n                    break;\r\n            }\r\n            r.left = t; /* link right */\r\n            r = t;\r\n            t = t.left;\r\n            //} else if (i > t.key) {\r\n        }\r\n        else if (cmp > 0) {\r\n            if (t.right === null)\r\n                break;\r\n            //if (i > t.right.key) {\r\n            if (comparator(i, t.right.key) > 0) {\r\n                const y = t.right; /* rotate left */\r\n                t.right = y.left;\r\n                y.left = t;\r\n                t = y;\r\n                if (t.right === null)\r\n                    break;\r\n            }\r\n            l.right = t; /* link left */\r\n            l = t;\r\n            t = t.right;\r\n        }\r\n        else\r\n            break;\r\n    }\r\n    /* assemble */\r\n    l.right = t.left;\r\n    r.left = t.right;\r\n    t.left = N.right;\r\n    t.right = N.left;\r\n    return t;\r\n}\r\nfunction insert(i, data, t, comparator) {\r\n    const node = new Node(i, data);\r\n    if (t === null) {\r\n        node.left = node.right = null;\r\n        return node;\r\n    }\r\n    t = splay(i, t, comparator);\r\n    const cmp = comparator(i, t.key);\r\n    if (cmp < 0) {\r\n        node.left = t.left;\r\n        node.right = t;\r\n        t.left = null;\r\n    }\r\n    else if (cmp >= 0) {\r\n        node.right = t.right;\r\n        node.left = t;\r\n        t.right = null;\r\n    }\r\n    return node;\r\n}\r\nfunction split(key, v, comparator) {\r\n    let left = null;\r\n    let right = null;\r\n    if (v) {\r\n        v = splay(key, v, comparator);\r\n        const cmp = comparator(v.key, key);\r\n        if (cmp === 0) {\r\n            left = v.left;\r\n            right = v.right;\r\n        }\r\n        else if (cmp < 0) {\r\n            right = v.right;\r\n            v.right = null;\r\n            left = v;\r\n        }\r\n        else {\r\n            left = v.left;\r\n            v.left = null;\r\n            right = v;\r\n        }\r\n    }\r\n    return { left, right };\r\n}\r\nfunction merge(left, right, comparator) {\r\n    if (right === null)\r\n        return left;\r\n    if (left === null)\r\n        return right;\r\n    right = splay(left.key, right, comparator);\r\n    right.left = left;\r\n    return right;\r\n}\r\n/**\r\n * Prints level of the tree\r\n */\r\nfunction printRow(root, prefix, isTail, out, printNode) {\r\n    if (root) {\r\n        out(`${prefix}${isTail ? '└── ' : '├── '}${printNode(root)}\\n`);\r\n        const indent = prefix + (isTail ? '    ' : '│   ');\r\n        if (root.left)\r\n            printRow(root.left, indent, false, out, printNode);\r\n        if (root.right)\r\n            printRow(root.right, indent, true, out, printNode);\r\n    }\r\n}\r\nclass Tree {\r\n    constructor(comparator = DEFAULT_COMPARE) {\r\n        this._root = null;\r\n        this._size = 0;\r\n        this._comparator = comparator;\r\n    }\r\n    /**\r\n     * Inserts a key, allows duplicates\r\n     */\r\n    insert(key, data) {\r\n        this._size++;\r\n        return this._root = insert(key, data, this._root, this._comparator);\r\n    }\r\n    /**\r\n     * Adds a key, if it is not present in the tree\r\n     */\r\n    add(key, data) {\r\n        const node = new Node(key, data);\r\n        if (this._root === null) {\r\n            node.left = node.right = null;\r\n            this._size++;\r\n            this._root = node;\r\n        }\r\n        const comparator = this._comparator;\r\n        const t = splay(key, this._root, comparator);\r\n        const cmp = comparator(key, t.key);\r\n        if (cmp === 0)\r\n            this._root = t;\r\n        else {\r\n            if (cmp < 0) {\r\n                node.left = t.left;\r\n                node.right = t;\r\n                t.left = null;\r\n            }\r\n            else if (cmp > 0) {\r\n                node.right = t.right;\r\n                node.left = t;\r\n                t.right = null;\r\n            }\r\n            this._size++;\r\n            this._root = node;\r\n        }\r\n        return this._root;\r\n    }\r\n    /**\r\n     * @param  {Key} key\r\n     * @return {Node|null}\r\n     */\r\n    remove(key) {\r\n        this._root = this._remove(key, this._root, this._comparator);\r\n    }\r\n    /**\r\n     * Deletes i from the tree if it's there\r\n     */\r\n    _remove(i, t, comparator) {\r\n        let x;\r\n        if (t === null)\r\n            return null;\r\n        t = splay(i, t, comparator);\r\n        const cmp = comparator(i, t.key);\r\n        if (cmp === 0) { /* found it */\r\n            if (t.left === null) {\r\n                x = t.right;\r\n            }\r\n            else {\r\n                x = splay(i, t.left, comparator);\r\n                x.right = t.right;\r\n            }\r\n            this._size--;\r\n            return x;\r\n        }\r\n        return t; /* It wasn't there */\r\n    }\r\n    /**\r\n     * Removes and returns the node with smallest key\r\n     */\r\n    pop() {\r\n        let node = this._root;\r\n        if (node) {\r\n            while (node.left)\r\n                node = node.left;\r\n            this._root = splay(node.key, this._root, this._comparator);\r\n            this._root = this._remove(node.key, this._root, this._comparator);\r\n            return { key: node.key, data: node.data };\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Find without splaying\r\n     */\r\n    findStatic(key) {\r\n        let current = this._root;\r\n        const compare = this._comparator;\r\n        while (current) {\r\n            const cmp = compare(key, current.key);\r\n            if (cmp === 0)\r\n                return current;\r\n            else if (cmp < 0)\r\n                current = current.left;\r\n            else\r\n                current = current.right;\r\n        }\r\n        return null;\r\n    }\r\n    find(key) {\r\n        if (this._root) {\r\n            this._root = splay(key, this._root, this._comparator);\r\n            if (this._comparator(key, this._root.key) !== 0)\r\n                return null;\r\n        }\r\n        return this._root;\r\n    }\r\n    contains(key) {\r\n        let current = this._root;\r\n        const compare = this._comparator;\r\n        while (current) {\r\n            const cmp = compare(key, current.key);\r\n            if (cmp === 0)\r\n                return true;\r\n            else if (cmp < 0)\r\n                current = current.left;\r\n            else\r\n                current = current.right;\r\n        }\r\n        return false;\r\n    }\r\n    forEach(visitor, ctx) {\r\n        let current = this._root;\r\n        const Q = []; /* Initialize stack s */\r\n        let done = false;\r\n        while (!done) {\r\n            if (current !== null) {\r\n                Q.push(current);\r\n                current = current.left;\r\n            }\r\n            else {\r\n                if (Q.length !== 0) {\r\n                    current = Q.pop();\r\n                    visitor.call(ctx, current);\r\n                    current = current.right;\r\n                }\r\n                else\r\n                    done = true;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Walk key range from `low` to `high`. Stops if `fn` returns a value.\r\n     */\r\n    range(low, high, fn, ctx) {\r\n        const Q = [];\r\n        const compare = this._comparator;\r\n        let node = this._root;\r\n        let cmp;\r\n        while (Q.length !== 0 || node) {\r\n            if (node) {\r\n                Q.push(node);\r\n                node = node.left;\r\n            }\r\n            else {\r\n                node = Q.pop();\r\n                cmp = compare(node.key, high);\r\n                if (cmp > 0) {\r\n                    break;\r\n                }\r\n                else if (compare(node.key, low) >= 0) {\r\n                    if (fn.call(ctx, node))\r\n                        return this; // stop if smth is returned\r\n                }\r\n                node = node.right;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns array of keys\r\n     */\r\n    keys() {\r\n        const keys = [];\r\n        this.forEach(({ key }) => keys.push(key));\r\n        return keys;\r\n    }\r\n    /**\r\n     * Returns array of all the data in the nodes\r\n     */\r\n    values() {\r\n        const values = [];\r\n        this.forEach(({ data }) => values.push(data));\r\n        return values;\r\n    }\r\n    min() {\r\n        if (this._root)\r\n            return this.minNode(this._root).key;\r\n        return null;\r\n    }\r\n    max() {\r\n        if (this._root)\r\n            return this.maxNode(this._root).key;\r\n        return null;\r\n    }\r\n    minNode(t = this._root) {\r\n        if (t)\r\n            while (t.left)\r\n                t = t.left;\r\n        return t;\r\n    }\r\n    maxNode(t = this._root) {\r\n        if (t)\r\n            while (t.right)\r\n                t = t.right;\r\n        return t;\r\n    }\r\n    /**\r\n     * Returns node at given index\r\n     */\r\n    at(index) {\r\n        let current = this._root;\r\n        let done = false;\r\n        let i = 0;\r\n        const Q = [];\r\n        while (!done) {\r\n            if (current) {\r\n                Q.push(current);\r\n                current = current.left;\r\n            }\r\n            else {\r\n                if (Q.length > 0) {\r\n                    current = Q.pop();\r\n                    if (i === index)\r\n                        return current;\r\n                    i++;\r\n                    current = current.right;\r\n                }\r\n                else\r\n                    done = true;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    next(d) {\r\n        let root = this._root;\r\n        let successor = null;\r\n        if (d.right) {\r\n            successor = d.right;\r\n            while (successor.left)\r\n                successor = successor.left;\r\n            return successor;\r\n        }\r\n        const comparator = this._comparator;\r\n        while (root) {\r\n            const cmp = comparator(d.key, root.key);\r\n            if (cmp === 0)\r\n                break;\r\n            else if (cmp < 0) {\r\n                successor = root;\r\n                root = root.left;\r\n            }\r\n            else\r\n                root = root.right;\r\n        }\r\n        return successor;\r\n    }\r\n    prev(d) {\r\n        let root = this._root;\r\n        let predecessor = null;\r\n        if (d.left !== null) {\r\n            predecessor = d.left;\r\n            while (predecessor.right)\r\n                predecessor = predecessor.right;\r\n            return predecessor;\r\n        }\r\n        const comparator = this._comparator;\r\n        while (root) {\r\n            const cmp = comparator(d.key, root.key);\r\n            if (cmp === 0)\r\n                break;\r\n            else if (cmp < 0)\r\n                root = root.left;\r\n            else {\r\n                predecessor = root;\r\n                root = root.right;\r\n            }\r\n        }\r\n        return predecessor;\r\n    }\r\n    clear() {\r\n        this._root = null;\r\n        this._size = 0;\r\n        return this;\r\n    }\r\n    toList() {\r\n        return toList(this._root);\r\n    }\r\n    /**\r\n     * Bulk-load items. Both array have to be same size\r\n     */\r\n    load(keys, values = [], presort = false) {\r\n        let size = keys.length;\r\n        const comparator = this._comparator;\r\n        // sort if needed\r\n        if (presort)\r\n            sort(keys, values, 0, size - 1, comparator);\r\n        if (this._root === null) { // empty tree\r\n            this._root = loadRecursive(keys, values, 0, size);\r\n            this._size = size;\r\n        }\r\n        else { // that re-builds the whole tree from two in-order traversals\r\n            const mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\r\n            size = this._size + size;\r\n            this._root = sortedListToBST({ head: mergedList }, 0, size);\r\n        }\r\n        return this;\r\n    }\r\n    isEmpty() { return this._root === null; }\r\n    get size() { return this._size; }\r\n    get root() { return this._root; }\r\n    toString(printNode = (n) => String(n.key)) {\r\n        const out = [];\r\n        printRow(this._root, '', true, (v) => out.push(v), printNode);\r\n        return out.join('');\r\n    }\r\n    update(key, newKey, newData) {\r\n        const comparator = this._comparator;\r\n        let { left, right } = split(key, this._root, comparator);\r\n        if (comparator(key, newKey) < 0) {\r\n            right = insert(newKey, newData, right, comparator);\r\n        }\r\n        else {\r\n            left = insert(newKey, newData, left, comparator);\r\n        }\r\n        this._root = merge(left, right, comparator);\r\n    }\r\n    split(key) {\r\n        return split(key, this._root, this._comparator);\r\n    }\r\n}\r\nfunction loadRecursive(keys, values, start, end) {\r\n    const size = end - start;\r\n    if (size > 0) {\r\n        const middle = start + Math.floor(size / 2);\r\n        const key = keys[middle];\r\n        const data = values[middle];\r\n        const node = new Node(key, data);\r\n        node.left = loadRecursive(keys, values, start, middle);\r\n        node.right = loadRecursive(keys, values, middle + 1, end);\r\n        return node;\r\n    }\r\n    return null;\r\n}\r\nfunction createList(keys, values) {\r\n    const head = new Node(null, null);\r\n    let p = head;\r\n    for (let i = 0; i < keys.length; i++) {\r\n        p = p.next = new Node(keys[i], values[i]);\r\n    }\r\n    p.next = null;\r\n    return head.next;\r\n}\r\nfunction toList(root) {\r\n    let current = root;\r\n    const Q = [];\r\n    let done = false;\r\n    const head = new Node(null, null);\r\n    let p = head;\r\n    while (!done) {\r\n        if (current) {\r\n            Q.push(current);\r\n            current = current.left;\r\n        }\r\n        else {\r\n            if (Q.length > 0) {\r\n                current = p = p.next = Q.pop();\r\n                current = current.right;\r\n            }\r\n            else\r\n                done = true;\r\n        }\r\n    }\r\n    p.next = null; // that'll work even if the tree was empty\r\n    return head.next;\r\n}\r\nfunction sortedListToBST(list, start, end) {\r\n    const size = end - start;\r\n    if (size > 0) {\r\n        const middle = start + Math.floor(size / 2);\r\n        const left = sortedListToBST(list, start, middle);\r\n        const root = list.head;\r\n        root.left = left;\r\n        list.head = list.head.next;\r\n        root.right = sortedListToBST(list, middle + 1, end);\r\n        return root;\r\n    }\r\n    return null;\r\n}\r\nfunction mergeLists(l1, l2, compare) {\r\n    const head = new Node(null, null); // dummy\r\n    let p = head;\r\n    let p1 = l1;\r\n    let p2 = l2;\r\n    while (p1 !== null && p2 !== null) {\r\n        if (compare(p1.key, p2.key) < 0) {\r\n            p.next = p1;\r\n            p1 = p1.next;\r\n        }\r\n        else {\r\n            p.next = p2;\r\n            p2 = p2.next;\r\n        }\r\n        p = p.next;\r\n    }\r\n    if (p1 !== null) {\r\n        p.next = p1;\r\n    }\r\n    else if (p2 !== null) {\r\n        p.next = p2;\r\n    }\r\n    return head.next;\r\n}\r\nfunction sort(keys, values, left, right, compare) {\r\n    if (left >= right)\r\n        return;\r\n    const pivot = keys[(left + right) >> 1];\r\n    let i = left - 1;\r\n    let j = right + 1;\r\n    while (true) {\r\n        do\r\n            i++;\r\n        while (compare(keys[i], pivot) < 0);\r\n        do\r\n            j--;\r\n        while (compare(keys[j], pivot) > 0);\r\n        if (i >= j)\r\n            break;\r\n        let tmp = keys[i];\r\n        keys[i] = keys[j];\r\n        keys[j] = tmp;\r\n        tmp = values[i];\r\n        values[i] = values[j];\r\n        values[j] = tmp;\r\n    }\r\n    sort(keys, values, left, j, compare);\r\n    sort(keys, values, j + 1, right, compare);\r\n}\n\nexport default Tree;\n//# sourceMappingURL=splay.esm.js.map\n","import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\nvar isInBbox = function isInBbox(bbox, point) {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\n\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\nvar epsilon = Number.EPSILON; // IE Polyfill\n\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n/* FLP comparator */\n\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  } // check if they're flp equal\n\n\n  var ab = a - b;\n\n  if (ab * ab < EPSILON_SQ * a * b) {\n    return 0;\n  } // normal comparison\n\n\n  return a < b ? -1 : 1;\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\n\nvar PtRounder =\n/*#__PURE__*/\nfunction () {\n  function PtRounder() {\n    _classCallCheck(this, PtRounder);\n\n    this.reset();\n  }\n\n  _createClass(PtRounder, [{\n    key: \"reset\",\n    value: function reset() {\n      this.xRounder = new CoordRounder();\n      this.yRounder = new CoordRounder();\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, y) {\n      return {\n        x: this.xRounder.round(x),\n        y: this.yRounder.round(y)\n      };\n    }\n  }]);\n\n  return PtRounder;\n}();\n\nvar CoordRounder =\n/*#__PURE__*/\nfunction () {\n  function CoordRounder() {\n    _classCallCheck(this, CoordRounder);\n\n    this.tree = new SplayTree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n    this.round(0);\n  } // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n\n\n  _createClass(CoordRounder, [{\n    key: \"round\",\n    value: function round(coord) {\n      var node = this.tree.add(coord);\n      var prevNode = this.tree.prev(node);\n\n      if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n        this.tree.remove(coord);\n        return prevNode.key;\n      }\n\n      var nextNode = this.tree.next(node);\n\n      if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n        this.tree.remove(coord);\n        return nextNode.key;\n      }\n\n      return coord;\n    }\n  }]);\n\n  return CoordRounder;\n}(); // singleton available by import\n\n\nvar rounder = new PtRounder();\n\n/* Cross Product of two vectors with first point at origin */\n\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n/* Dot Product of two vectors with first point at origin */\n\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n/* Comparator for two vectors with same starting point */\n\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n  var x1 = pt1.x + d2 * v1.x,\n      x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n      y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\nvar SweepEvent =\n/*#__PURE__*/\nfunction () {\n  _createClass(SweepEvent, null, [{\n    key: \"compare\",\n    // for ordering sweep events in the sweep event queue\n    value: function compare(a, b) {\n      // favor event with a point that the sweep line hits first\n      var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n      if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n      if (a.point !== b.point) a.link(b); // favor right events over left\n\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n      // ordering of this case is the same as for their segments\n\n      return Segment.compare(a.segment, b.segment);\n    } // for ordering points in sweep line order\n\n  }, {\n    key: \"comparePoints\",\n    value: function comparePoints(aPt, bPt) {\n      if (aPt.x < bPt.x) return -1;\n      if (aPt.x > bPt.x) return 1;\n      if (aPt.y < bPt.y) return -1;\n      if (aPt.y > bPt.y) return 1;\n      return 0;\n    } // Warning: 'point' input will be modified and re-used (for performance)\n\n  }]);\n\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n  }\n\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n\n      var otherEvents = other.point.events;\n\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n\n      this.checkForConsuming();\n    }\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      // FIXME: The loops in this method run O(n^2) => no good.\n      //        Maintain little ordered sweep event trees?\n      //        Can we maintaining an ordering that avoids the need\n      //        for the re-sorting with getLeftmostComparator in geom-out?\n      // Compare each pair of events to see if other events also match\n      var numEvents = this.point.events.length;\n\n      for (var i = 0; i < numEvents; i++) {\n        var evt1 = this.point.events[i];\n        if (evt1.segment.consumedBy !== undefined) continue;\n\n        for (var j = i + 1; j < numEvents; j++) {\n          var evt2 = this.point.events[j];\n          if (evt2.consumedBy !== undefined) continue;\n          if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n          evt1.segment.consume(evt2.segment);\n        }\n      }\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n\n      return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n\n      var cache = new Map();\n\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n\n        var _cache$get = cache.get(a),\n            asine = _cache$get.sine,\n            acosine = _cache$get.cosine;\n\n        var _cache$get2 = cache.get(b),\n            bsine = _cache$get2.sine,\n            bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n        if (asine >= 0 && bsine >= 0) {\n          if (acosine < bcosine) return 1;\n          if (acosine > bcosine) return -1;\n          return 0;\n        } // both below x-axis\n\n\n        if (asine < 0 && bsine < 0) {\n          if (acosine < bcosine) return -1;\n          if (acosine > bcosine) return 1;\n          return 0;\n        } // one above x-axis, one below\n\n\n        if (bsine < asine) return -1;\n        if (bsine > asine) return 1;\n        return 0;\n      };\n    }\n  }]);\n\n  return SweepEvent;\n}();\n\n// segments and sweep events when all else is identical\n\nvar segmentId = 0;\n\nvar Segment =\n/*#__PURE__*/\nfunction () {\n  _createClass(Segment, null, [{\n    key: \"compare\",\n\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    value: function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var blx = b.leftSE.point.x;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n      if (brx < alx) return 1;\n      if (arx < blx) return -1;\n      var aly = a.leftSE.point.y;\n      var bly = b.leftSE.point.y;\n      var ary = a.rightSE.point.y;\n      var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n      if (alx < blx) {\n        // are the two segments in the same horizontal plane?\n        if (bly < aly && bly < ary) return 1;\n        if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n        var aCmpBLeft = a.comparePoint(b.leftSE.point);\n        if (aCmpBLeft < 0) return 1;\n        if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n        var bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return -1;\n      } // is left endpoint of segment A the right-more?\n\n\n      if (alx > blx) {\n        if (aly < bly && aly < bry) return -1;\n        if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n        var bCmpALeft = b.comparePoint(a.leftSE.point);\n        if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n        var aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight < 0) return 1;\n        if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return 1;\n      } // if we get here, the two left endpoints are in the same\n      // vertical plane, ie alx === blx\n      // consider the lower left-endpoint to come first\n\n\n      if (aly < bly) return -1;\n      if (aly > bly) return 1; // left endpoints are identical\n      // check for colinearity by using the left-more right endpoint\n      // is the A right endpoint more left-more?\n\n      if (arx < brx) {\n        var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n        if (_bCmpARight !== 0) return _bCmpARight;\n      } // is the B right endpoint more left-more?\n\n\n      if (arx > brx) {\n        var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n        if (_aCmpBRight < 0) return 1;\n        if (_aCmpBRight > 0) return -1;\n      }\n\n      if (arx !== brx) {\n        // are these two [almost] vertical segments with opposite orientation?\n        // if so, the one with the lower right endpoint comes first\n        var ay = ary - aly;\n        var ax = arx - alx;\n        var by = bry - bly;\n        var bx = brx - blx;\n        if (ay > ax && by < bx) return 1;\n        if (ay < ax && by > bx) return -1;\n      } // we have colinear segments with matching orientation\n      // consider the one with more left-more right endpoint to be first\n\n\n      if (arx > brx) return 1;\n      if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n      // vertical plane, ie arx === brx\n      // consider the lower right-endpoint to come first\n\n      if (ary < bry) return -1;\n      if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n      // fall back on creation order as consistent tie-breaker\n\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1; // identical segment, ie a === b\n\n      return 0;\n    }\n    /* Warning: a reference to ringWindings input will be stored,\n     *  and possibly will be later modified */\n\n  }]);\n\n  function Segment(leftSE, rightSE, rings, windings) {\n    _classCallCheck(this, Segment);\n\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings; // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    value: function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n    /* A vector from the left point to the right */\n\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(pt) {\n      return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n    }\n    /* Compare this segment with a point.\n     *\n     * A point P is considered to be colinear to a segment if there\n     * exists a distance D such that if we travel along the segment\n     * from one * endpoint towards the other a distance D, we find\n     * ourselves at point P.\n     *\n     * Return value indicates:\n     *\n     *   1: point lies above the segment (to the left of vertical)\n     *   0: point is colinear to segment\n     *  -1: point lies below the segment (to the right of vertical)\n     */\n\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var lPt = this.leftSE.point;\n      var rPt = this.rightSE.point;\n      var v = this.vector(); // Exactly vertical segments.\n\n      if (lPt.x === rPt.x) {\n        if (point.x === lPt.x) return 0;\n        return point.x < lPt.x ? 1 : -1;\n      } // Nearly vertical segments with an intersection.\n      // Check to see where a point on the line with matching Y coordinate is.\n\n\n      var yDist = (point.y - lPt.y) / v.y;\n      var xFromYDist = lPt.x + yDist * v.x;\n      if (point.x === xFromYDist) return 0; // General case.\n      // Check to see where a point on the line with matching X coordinate is.\n\n      var xDist = (point.x - lPt.x) / v.x;\n      var yFromXDist = lPt.y + xDist * v.y;\n      if (point.y === yFromXDist) return 0;\n      return point.y < yFromXDist ? -1 : 1;\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var tBbox = this.bbox();\n      var oBbox = other.bbox();\n      var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n      if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n\n      var tlp = this.leftSE.point;\n      var trp = this.rightSE.point;\n      var olp = other.leftSE.point;\n      var orp = other.rightSE.point; // does each endpoint touch the other segment?\n      // note that we restrict the 'touching' definition to only allow segments\n      // to touch endpoints that lie forward from where we are in the sweep line pass\n\n      var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n      var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n      var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n      var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return trp;\n        if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n\n        return null;\n      } // does this left endpoint matches (other doesn't)\n\n\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE) {\n          if (tlp.x === orp.x && tlp.y === orp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return tlp;\n      } // does other left endpoint matches (this doesn't)\n\n\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE) {\n          if (trp.x === olp.x && trp.y === olp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return olp;\n      } // trivial intersection on right endpoints\n\n\n      if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n      if (touchesThisRSE) return trp;\n      if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n\n      var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n\n      if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n      if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n      return rounder.round(pt.x, pt.y);\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(point) {\n      var newEvents = [];\n      var alreadyLinked = point.events !== undefined;\n      var newLeftSE = new SweepEvent(point, true);\n      var newRightSE = new SweepEvent(point, false);\n      var oldRightSE = this.rightSE;\n      this.replaceRightSE(newRightSE);\n      newEvents.push(newRightSE);\n      newEvents.push(newLeftSE);\n      var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n      // sometimes one of the resulting new segments is vertical, in which\n      // case its left and right events may need to be swapped\n\n      if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n        newSeg.swapEvents();\n      }\n\n      if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n        this.swapEvents();\n      } // in the point we just used to create new sweep events with was already\n      // linked to other events, we need to check if either of the affected\n      // segments should be consumed\n\n\n      if (alreadyLinked) {\n        newLeftSE.checkForConsuming();\n        newRightSE.checkForConsuming();\n      }\n\n      return newEvents;\n    }\n    /* Swap which event is left and right */\n\n  }, {\n    key: \"swapEvents\",\n    value: function swapEvents() {\n      var tmpEvt = this.rightSE;\n      this.rightSE = this.leftSE;\n      this.leftSE = tmpEvt;\n      this.leftSE.isLeft = true;\n      this.rightSE.isLeft = false;\n\n      for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n        this.windings[i] *= -1;\n      }\n    }\n    /* Consume another segment. We take their rings under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n\n      while (consumer.consumedBy) {\n        consumer = consumer.consumedBy;\n      }\n\n      while (consumee.consumedBy) {\n        consumee = consumee.consumedBy;\n      }\n\n      var cmp = Segment.compare(consumer, consumee);\n      if (cmp === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n\n      if (cmp > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      } // make sure a segment doesn't consume it's prev\n\n\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n\n      for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n        var ring = consumee.rings[i];\n        var winding = consumee.windings[i];\n        var index = consumer.rings.indexOf(ring);\n\n        if (index === -1) {\n          consumer.rings.push(ring);\n          consumer.windings.push(winding);\n        } else consumer.windings[index] += winding;\n      }\n\n      consumee.rings = null;\n      consumee.windings = null;\n      consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      if (this._prevInResult !== undefined) return this._prevInResult;\n      if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n      return this._prevInResult;\n    }\n  }, {\n    key: \"beforeState\",\n    value: function beforeState() {\n      if (this._beforeState !== undefined) return this._beforeState;\n      if (!this.prev) this._beforeState = {\n        rings: [],\n        windings: [],\n        multiPolys: []\n      };else {\n        var seg = this.prev.consumedBy || this.prev;\n        this._beforeState = seg.afterState();\n      }\n      return this._beforeState;\n    }\n  }, {\n    key: \"afterState\",\n    value: function afterState() {\n      if (this._afterState !== undefined) return this._afterState;\n      var beforeState = this.beforeState();\n      this._afterState = {\n        rings: beforeState.rings.slice(0),\n        windings: beforeState.windings.slice(0),\n        multiPolys: []\n      };\n      var ringsAfter = this._afterState.rings;\n      var windingsAfter = this._afterState.windings;\n      var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n      for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n        var ring = this.rings[i];\n        var winding = this.windings[i];\n        var index = ringsAfter.indexOf(ring);\n\n        if (index === -1) {\n          ringsAfter.push(ring);\n          windingsAfter.push(winding);\n        } else windingsAfter[index] += winding;\n      } // calcualte polysAfter\n\n\n      var polysAfter = [];\n      var polysExclude = [];\n\n      for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n        if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n        var _ring = ringsAfter[_i];\n        var poly = _ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (_ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n          var _index = polysAfter.indexOf(_ring.poly);\n\n          if (_index !== -1) polysAfter.splice(_index, 1);\n        }\n      } // calculate multiPolysAfter\n\n\n      for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n        var mp = polysAfter[_i2].multiPoly;\n        if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n      }\n\n      return this._afterState;\n    }\n    /* Is this segment part of the final result? */\n\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      if (this._isInResult !== undefined) return this._isInResult;\n      var mpsBefore = this.beforeState().multiPolys;\n      var mpsAfter = this.afterState().multiPolys;\n\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            this._isInResult = noBefores !== noAfters;\n            break;\n          }\n\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n\n            this._isInResult = most === operation.numMultiPolys && least < most;\n            break;\n          }\n\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            this._isInResult = diff % 2 === 1;\n            break;\n          }\n\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n\n            this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n            break;\n          }\n\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n\n      return this._isInResult;\n    }\n  }], [{\n    key: \"fromRing\",\n    value: function fromRing(pt1, pt2, ring) {\n      var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n      var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n      if (cmpPts < 0) {\n        leftPt = pt1;\n        rightPt = pt2;\n        winding = 1;\n      } else if (cmpPts > 0) {\n        leftPt = pt2;\n        rightPt = pt1;\n        winding = -1;\n      } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n      var leftSE = new SweepEvent(leftPt, true);\n      var rightSE = new SweepEvent(rightPt, false);\n      return new Segment(leftSE, rightSE, [ring], [winding]);\n    }\n  }]);\n\n  return Segment;\n}();\n\nvar RingIn =\n/*#__PURE__*/\nfunction () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n\n    if (!Array.isArray(geomRing) || geomRing.length === 0) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n\n    if (typeof geomRing[0][0] !== 'number' || typeof geomRing[0][1] !== 'number') {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    var firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n    this.bbox = {\n      ll: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      },\n      ur: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      }\n    };\n    var prevPoint = firstPoint;\n\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      if (typeof geomRing[i][0] !== 'number' || typeof geomRing[i][1] !== 'number') {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      var point = rounder.round(geomRing[i][0], geomRing[i][1]); // skip repeated points\n\n      if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n      if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n      if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n      if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    } // add segment from last to first if last is not the same as first\n\n\n    if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n      this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n    }\n  }\n\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return RingIn;\n}();\nvar PolyIn =\n/*#__PURE__*/\nfunction () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n\n    if (!Array.isArray(geomPoly)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n    this.bbox = {\n      ll: {\n        x: this.exteriorRing.bbox.ll.x,\n        y: this.exteriorRing.bbox.ll.y\n      },\n      ur: {\n        x: this.exteriorRing.bbox.ur.x,\n        y: this.exteriorRing.bbox.ur.y\n      }\n    };\n    this.interiorRings = [];\n\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      var ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n\n    this.multiPoly = multiPoly;\n  }\n\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return PolyIn;\n}();\nvar MultiPolyIn =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyIn(geom, isSubject) {\n    _classCallCheck(this, MultiPolyIn);\n\n    if (!Array.isArray(geom)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    try {\n      // if the input looks like a polygon, convert it to a multipolygon\n      if (typeof geom[0][0][0] === 'number') geom = [geom];\n    } catch (ex) {// The input is either malformed or has empty arrays.\n      // In either case, it will be handled later on.\n    }\n\n    this.polys = [];\n    this.bbox = {\n      ll: {\n        x: Number.POSITIVE_INFINITY,\n        y: Number.POSITIVE_INFINITY\n      },\n      ur: {\n        x: Number.NEGATIVE_INFINITY,\n        y: Number.NEGATIVE_INFINITY\n      }\n    };\n\n    for (var i = 0, iMax = geom.length; i < iMax; i++) {\n      var poly = new PolyIn(geom[i], this);\n      if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n\n    this.isSubject = isSubject;\n  }\n\n  _createClass(MultiPolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return MultiPolyIn;\n}();\n\nvar RingOut =\n/*#__PURE__*/\nfunction () {\n  _createClass(RingOut, null, [{\n    key: \"factory\",\n\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    value: function factory(allSegments) {\n      var ringsOut = [];\n\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n        /* Walk the chain of linked events to form a closed ring */\n\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n          /* Is the ring complete? */\n\n          if (event.point === startingPoint) break;\n\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n            /* Only one way to go, so cotinue on the path */\n\n\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n            /* We must have an intersection. Check for a completed loop */\n\n\n            var indexLE = null;\n\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n\n\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n\n\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n\n        ringsOut.push(new RingOut(events));\n      }\n\n      return ringsOut;\n    }\n  }]);\n\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n\n    this.events = events;\n\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n\n    this.poly = null;\n  }\n\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      } // ring was all (within rounding error of angle calc) colinear points\n\n\n      if (points.length === 1) return null; // check if the starting point is necessary\n\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n\n      for (var _i = iStart; _i != iEnd; _i += step) {\n        orderedPoints.push([points[_i].x, points[_i].y]);\n      }\n\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n\n      return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n\n        if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        } // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n\n\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }]);\n\n  return RingOut;\n}();\nvar PolyOut =\n/*#__PURE__*/\nfunction () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n      if (geom[0] === null) return null;\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n\n      return geom;\n    }\n  }]);\n\n  return PolyOut;\n}();\nvar MultiPolyOut =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n\n      return polys;\n    }\n  }]);\n\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nvar SweepLine =\n/*#__PURE__*/\nfunction () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n    _classCallCheck(this, SweepLine);\n\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = []; // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n\n      if (event.consumedBy) {\n        if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n        return newEvents;\n      }\n\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined; // skip consumed segments still in tree\n\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      } // skip consumed segments still in tree\n\n\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n\n      if (event.isLeft) {\n        // Check for intersections against the previous segment in the sweep line\n        var prevMySplitter = null;\n\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        } // Check for intersections against the next segment in the sweep line\n\n\n        var nextMySplitter = null;\n\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        } // For simplicity, even if we find more than one intersection we only\n        // spilt on the 'earliest' (sweep-line style) of the intersections.\n        // The other intersection will be handled in a future process().\n\n\n        if (prevMySplitter !== null || nextMySplitter !== null) {\n          var mySplitter = null;\n          if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n            mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n          } // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n\n          var _newEventsFromSplit2 = segment.split(mySplitter);\n\n          for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n            newEvents.push(_newEventsFromSplit2[_i2]);\n          }\n        }\n\n        if (newEvents.length > 0) {\n          // We found some intersections, so re-do the current event to\n          // make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers\n          this.tree.remove(segment);\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n\n        this.tree.remove(segment);\n      }\n\n      return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split(pt);\n      newEvents.push(rightSE); // splitting can trigger consumption\n\n      if (seg.consumedBy === undefined) this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n\n  return SweepLine;\n}();\n\nvar Operation =\n/*#__PURE__*/\nfunction () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      rounder.reset();\n      /* Convert inputs to MultiPoly objects */\n\n      var multipolys = [new MultiPolyIn(geom, true)];\n\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n      }\n\n      operation.numMultiPolys = multipolys.length;\n      /* BBox optimization for difference operation\n       * If the bbox of a multipolygon that's part of the clipping doesn't\n       * intersect the bbox of the subject at all, we can just drop that\n       * multiploygon. */\n\n      if (operation.type === 'difference') {\n        // in place removal\n        var subject = multipolys[0];\n        var _i = 1;\n\n        while (_i < multipolys.length) {\n          if (getBboxOverlap(multipolys[_i].bbox, subject.bbox) !== null) _i++;else multipolys.splice(_i, 1);\n        }\n      }\n      /* BBox optimization for intersection operation\n       * If we can find any pair of multipolygons whose bbox does not overlap,\n       * then the result will be empty. */\n\n\n      if (operation.type === 'intersection') {\n        // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n        //       it could be optimized to O(n * ln(n))\n        for (var _i2 = 0, _iMax = multipolys.length; _i2 < _iMax; _i2++) {\n          var mpA = multipolys[_i2];\n\n          for (var j = _i2 + 1, jMax = multipolys.length; j < jMax; j++) {\n            if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n          }\n        }\n      }\n      /* Put segment endpoints in a priority queue */\n\n\n      var queue = new SplayTree(SweepEvent.compare);\n\n      for (var _i3 = 0, _iMax2 = multipolys.length; _i3 < _iMax2; _i3++) {\n        var sweepEvents = multipolys[_i3].getSweepEvents();\n\n        for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n          queue.insert(sweepEvents[_j]);\n        }\n      }\n      /* Pass the sweep line over those endpoints */\n\n\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n\n      while (node) {\n        var evt = node.key;\n\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          var seg = evt.segment;\n          throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n        }\n\n        var newEvents = sweepLine.process(evt);\n\n        for (var _i4 = 0, _iMax3 = newEvents.length; _i4 < _iMax3; _i4++) {\n          var _evt = newEvents[_i4];\n          if (_evt.consumedBy === undefined) queue.insert(_evt);\n        }\n\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      } // free some memory we don't need anymore\n\n\n      rounder.reset();\n      /* Collect and compile segments we're keeping into a multipolygon */\n\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n\n  return Operation;\n}(); // singleton available by import\n\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n\n  return operation.run('union', geom, moreGeoms);\n};\n\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n\n  return operation.run('intersection', geom, moreGeoms);\n};\n\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n\n  return operation.run('xor', geom, moreGeoms);\n};\n\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\n\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\nexport default class SplayTree {\n\n  constructor(compare = DEFAULT_COMPARE, noDuplicates = false) {\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  }\n\n\n  rotateLeft(x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) y.left.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)                this._root = y;\n    else if (x === x.parent.left) x.parent.left = y;\n    else                          x.parent.right = y;\n    if (y) y.left = x;\n    x.parent = y;\n  }\n\n\n  rotateRight(x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) y.right.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)               this._root = y;\n    else if(x === x.parent.left) x.parent.left = y;\n    else                         x.parent.right = y;\n    if (y) y.right = x;\n    x.parent = y;\n  }\n\n\n  _splay(x) {\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) this.rotateRight(p);\n        else              this.rotateLeft(p);\n      } else if (p.left === x && p.parent.left === p) {\n        this.rotateRight(p.parent);\n        this.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this.rotateLeft(p.parent);\n        this.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this.rotateRight(p);\n        this.rotateLeft(p);\n      } else {\n        this.rotateLeft(p);\n        this.rotateRight(p);\n      }\n    }\n  }\n\n\n  splay(x) {\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) ggp.left  = x;\n        else                 ggp.right = x;\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else gp.left = null;\n\n            p.right   = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else gp.right = null;\n\n            x.left    = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else p.left = null;\n\n        x.right  = p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else gp.right = null;\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else gp.left = null;\n\n            x.right   = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else p.right = null;\n\n        x.left   = p;\n        p.parent = x;\n      }\n    }\n  }\n\n\n  replace(u, v) {\n    if (!u.parent) this._root = v;\n    else if (u === u.parent.left) u.parent.left = v;\n    else u.parent.right = v;\n    if (v) v.parent = u.parent;\n  }\n\n\n  minNode(u = this._root) {\n    if (u) while (u.left) u = u.left;\n    return u;\n  }\n\n\n  maxNode(u = this._root) {\n    if (u) while (u.right) u = u.right;\n    return u;\n  }\n\n\n  insert(key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) return;\n        else if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    }\n\n    z = { key, data, left: null, right: null, parent: p };\n\n    if (!p)                          this._root = z;\n    else if (comp(p.key, z.key) < 0) p.right = z;\n    else                             p.left  = z;\n\n    this.splay(z);\n    this._size++;\n    return z;\n  }\n\n\n  find (key) {\n    var z    = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if      (cmp < 0) z = z.right;\n      else if (cmp > 0) z = z.left;\n      else              return z;\n    }\n    return null;\n  }\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param  {Key} key\n   * @return {boolean} true/false\n   */\n  contains (key) {\n    var node       = this._root;\n    var comparator = this._compare;\n    while (node)  {\n      var cmp = comparator(key, node.key);\n      if      (cmp === 0) return true;\n      else if (cmp < 0)   node = node.left;\n      else                node = node.right;\n    }\n\n    return false;\n  }\n\n\n  remove (key) {\n    var z = this.find(key);\n\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  removeNode(z) {\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  erase (key) {\n    var z = this.find(key);\n    if (!z) return;\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) sMax.right = t;\n      else   this._root = t;\n      t.parent = sMax;\n    }\n\n    this._size--;\n  }\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) node = node.left;\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  }\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) successor = successor.left;\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  }\n\n\n  /**\n   * Predecessor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) predecessor = predecessor.right;\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param  {forEachCallback} callback\n   * @return {SplayTree}\n   */\n  forEach(callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range(low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._compare;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load(keys = [], values = [], presort = false) {\n    if (this._size !== 0) throw new Error('bulk-load: tree is not empty');\n    const size = keys.length;\n    if (presort) sort(keys, values, 0, size - 1, this._compare);\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  }\n\n\n  min() {\n    var node = this.minNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n\n  max() {\n    var node = this.maxNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n  isEmpty() { return this._root === null; }\n  get size() { return this._size; }\n\n\n  /**\n   * Create a tree and load it with items\n   * @param  {Array<Key>}          keys\n   * @param  {Array<Value>?}        [values]\n\n   * @param  {Function?}            [comparator]\n   * @param  {Boolean?}             [presort=false] Pre-sort keys and values, using\n   *                                               tree's comparator. Sorting is done\n   *                                               in-place\n   * @param  {Boolean?}             [noDuplicates=false]   Allow duplicates\n   * @return {SplayTree}\n   */\n  static createTree(keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","export const NORMAL               = 0;\nexport const NON_CONTRIBUTING     = 1;\nexport const SAME_TRANSITION      = 2;\nexport const DIFFERENT_TRANSITION = 3;\n","export const INTERSECTION = 0;\nexport const UNION        = 1;\nexport const DIFFERENCE   = 2;\nexport const XOR          = 3;\n","import {\n  NORMAL,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION,\n  NON_CONTRIBUTING\n} from './edge_type';\nimport {\n  INTERSECTION,\n  UNION,\n  DIFFERENCE,\n  XOR\n} from './operation';\n\n/**\n * @param  {SweepEvent} event\n * @param  {SweepEvent} prev\n * @param  {Operation} operation\n */\nexport default function computeFields (event, prev, operation) {\n  // compute inOut and otherInOut fields\n  if (prev === null) {\n    event.inOut      = false;\n    event.otherInOut = true;\n\n  // previous line segment in sweepline belongs to the same polygon\n  } else {\n    if (event.isSubject === prev.isSubject) {\n      event.inOut      = !prev.inOut;\n      event.otherInOut = prev.otherInOut;\n\n    // previous line segment in sweepline belongs to the clipping polygon\n    } else {\n      event.inOut      = !prev.otherInOut;\n      event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n    }\n\n    // compute prevInResult field\n    if (prev) {\n      event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n        ? prev.prevInResult : prev;\n    }\n  }\n\n  // check if the line segment belongs to the Boolean operation\n  event.inResult = inResult(event, operation);\n}\n\n\n/* eslint-disable indent */\nfunction inResult(event, operation) {\n  switch (event.type) {\n    case NORMAL:\n      switch (operation) {\n        case INTERSECTION:\n          return !event.otherInOut;\n        case UNION:\n          return event.otherInOut;\n        case DIFFERENCE:\n          // return (event.isSubject && !event.otherInOut) ||\n          //         (!event.isSubject && event.otherInOut);\n          return (event.isSubject && event.otherInOut) ||\n                  (!event.isSubject && !event.otherInOut);\n        case XOR:\n          return true;\n      }\n      break;\n    case SAME_TRANSITION:\n      return operation === INTERSECTION || operation === UNION;\n    case DIFFERENT_TRANSITION:\n      return operation === DIFFERENCE;\n    case NON_CONTRIBUTING:\n      return false;\n  }\n  return false;\n}\n/* eslint-enable indent */\n","import { NORMAL } from './edge_type';\n\n\nexport default class SweepEvent {\n\n\n  /**\n   * Sweepline event\n   *\n   * @class {SweepEvent}\n   * @param {Array.<Number>}  point\n   * @param {Boolean}         left\n   * @param {SweepEvent=}     otherEvent\n   * @param {Boolean}         isSubject\n   * @param {Number}          edgeType\n   */\n  constructor (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Does event belong to result?\n     * @type {Boolean}\n     */\n    this.inResult = false;\n\n\n    // connection step\n\n    /**\n     * @type {Boolean}\n     */\n    this.resultInOut = false;\n\n    this.isExteriorRing = true;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isBelow (p) {\n    const p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isAbove (p) {\n    return !this.isBelow(p);\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  }\n\n\n  clone () {\n    const copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.inResult       = this.inResult;\n    copy.prevInResult   = this.prevInResult;\n    copy.isExteriorRing = this.isExteriorRing;\n    copy.inOut          = this.inOut;\n    copy.otherInOut     = this.otherInOut;\n\n    return copy;\n  }\n}\n","export default function equals(p1, p2) {\n  if (p1[0] === p2[0]) {\n    if (p1[1] === p2[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\n\n// const EPSILON = 1e-9;\n// const abs = Math.abs;\n// TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n// Precision problem.\n//\n// module.exports = function equals(p1, p2) {\n//   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n// };\n","/**\n * Signed area of the triangle (p0, p1, p2)\n * @param  {Array.<Number>} p0\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Number}\n */\nexport default function signedArea(p0, p1, p2) {\n  return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n}\n","import signedArea from './signed_area';\n\n/**\n * @param  {SweepEvent} e1\n * @param  {SweepEvent} e2\n * @return {Number}\n */\nexport default function compareEvents(e1, e2) {\n  const p1 = e1.point;\n  const p2 = e2.point;\n\n  // Different x-coordinate\n  if (p1[0] > p2[0]) return 1;\n  if (p1[0] < p2[0]) return -1;\n\n  // Different points, but same x-coordinate\n  // Event with lower y-coordinate is processed first\n  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\n  return specialCases(e1, e2, p1, p2);\n}\n\n\n/* eslint-disable no-unused-vars */\nfunction specialCases(e1, e2, p1, p2) {\n  // Same coordinates, but one is a left endpoint and the other is\n  // a right endpoint. The right endpoint is processed first\n  if (e1.left !== e2.left)\n    return e1.left ? 1 : -1;\n\n  // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n  // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n  // Same coordinates, both events\n  // are left endpoints or right endpoints.\n  // not collinear\n  if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n    // the event associate to the bottom segment is processed first\n    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n  }\n\n  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n}\n/* eslint-enable no-unused-vars */\n","import SweepEvent    from './sweep_event';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\n\n/**\n * @param  {SweepEvent} se\n * @param  {Array.<Number>} p\n * @param  {Queue} queue\n * @return {Queue}\n */\nexport default function divideSegment(se, p, queue)  {\n  const r = new SweepEvent(p, false, se,            se.isSubject);\n  const l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n  /* eslint-disable no-console */\n  if (equals(se.point, se.otherEvent.point)) {\n\n    console.warn('what is that, a collapsed segment?', se);\n  }\n  /* eslint-enable no-console */\n\n  r.contourId = l.contourId = se.contourId;\n\n  // avoid a rounding error. The left event would be processed after the right event\n  if (compareEvents(l, se.otherEvent) > 0) {\n    se.otherEvent.left = true;\n    l.left = false;\n  }\n\n  // avoid a rounding error. The left event would be processed after the right event\n  // if (compareEvents(se, r) > 0) {}\n\n  se.otherEvent.otherEvent = l;\n  se.otherEvent = r;\n\n  queue.push(l);\n  queue.push(r);\n\n  return queue;\n}\n","//const EPS = 1e-9;\n\n/**\n * Finds the magnitude of the cross product of two vectors (if we pretend\n * they're in three dimensions)\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The magnitude of the cross product\n */\nfunction crossProduct(a, b) {\n  return (a[0] * b[1]) - (a[1] * b[0]);\n}\n\n/**\n * Finds the dot product of two vectors.\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The dot product\n */\nfunction dotProduct(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]);\n}\n\n/**\n * Finds the intersection (if any) between two line segments a and b, given the\n * line segments' end points a1, a2 and b1, b2.\n *\n * This algorithm is based on Schneider and Eberly.\n * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n * Page 244.\n *\n * @param {Array.<Number>} a1 point of first line\n * @param {Array.<Number>} a2 point of first line\n * @param {Array.<Number>} b1 point of second line\n * @param {Array.<Number>} b2 point of second line\n * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n *                                         (meaning connected segments) as\n *                                         intersections\n * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n * intersection. If they overlap, the two end points of the overlapping segment.\n * Otherwise, null.\n */\nexport default function (a1, a2, b1, b2, noEndpointTouch) {\n  // The algorithm expects our lines in the form P + sd, where P is a point,\n  // s is on the interval [0, 1], and d is a vector.\n  // We are passed two points. P can be the first point of each pair. The\n  // vector, then, could be thought of as the distance (in x and y components)\n  // from the first point to the second point.\n  // So first, let's make our vectors:\n  const va = [a2[0] - a1[0], a2[1] - a1[1]];\n  const vb = [b2[0] - b1[0], b2[1] - b1[1]];\n  // We also define a function to convert back to regular point form:\n\n  /* eslint-disable arrow-body-style */\n\n  function toPoint(p, s, d) {\n    return [\n      p[0] + s * d[0],\n      p[1] + s * d[1]\n    ];\n  }\n\n  /* eslint-enable arrow-body-style */\n\n  // The rest is pretty much a straight port of the algorithm.\n  const e = [b1[0] - a1[0], b1[1] - a1[1]];\n  let kross    = crossProduct(va, vb);\n  let sqrKross = kross * kross;\n  const sqrLenA  = dotProduct(va, va);\n  //const sqrLenB  = dotProduct(vb, vb);\n\n  // Check for line intersection. This works because of the properties of the\n  // cross product -- specifically, two vectors are parallel if and only if the\n  // cross product is the 0 vector. The full calculation involves relative error\n  // to account for possible very small line segments. See Schneider & Eberly\n  // for details.\n  if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n    // If they're not parallel, then (because these are line segments) they\n    // still might not actually intersect. This code checks that the\n    // intersection point of the lines is actually on both line segments.\n    const s = crossProduct(e, vb) / kross;\n    if (s < 0 || s > 1) {\n      // not on line segment a\n      return null;\n    }\n    const t = crossProduct(e, va) / kross;\n    if (t < 0 || t > 1) {\n      // not on line segment b\n      return null;\n    }\n    if (s === 0 || s === 1) {\n      // on an endpoint of line segment a\n      return noEndpointTouch ? null : [toPoint(a1, s, va)];\n    }\n    if (t === 0 || t === 1) {\n      // on an endpoint of line segment b\n      return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n    }\n    return [toPoint(a1, s, va)];\n  }\n\n  // If we've reached this point, then the lines are either parallel or the\n  // same, but the segments could overlap partially or fully, or not at all.\n  // So we need to find the overlap, if any. To do that, we can use e, which is\n  // the (vector) difference between the two initial points. If this is parallel\n  // with the line itself, then the two lines are the same line, and there will\n  // be overlap.\n  //const sqrLenE = dotProduct(e, e);\n  kross = crossProduct(e, va);\n  sqrKross = kross * kross;\n\n  if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n  // Lines are just parallel, not the same. No overlap.\n    return null;\n  }\n\n  const sa = dotProduct(va, e) / sqrLenA;\n  const sb = sa + dotProduct(va, vb) / sqrLenA;\n  const smin = Math.min(sa, sb);\n  const smax = Math.max(sa, sb);\n\n  // this is, essentially, the FindIntersection acting on floats from\n  // Schneider & Eberly, just inlined into this function.\n  if (smin <= 1 && smax >= 0) {\n\n    // overlap on an end point\n    if (smin === 1) {\n      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n    }\n\n    if (smax === 0) {\n      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n    }\n\n    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\n    // There's overlap on a segment -- two points of intersection. Return both.\n    return [\n      toPoint(a1, smin > 0 ? smin : 0, va),\n      toPoint(a1, smax < 1 ? smax : 1, va)\n    ];\n  }\n\n  return null;\n}\n","import divideSegment from './divide_segment';\nimport intersection  from './segment_intersection';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\nimport {\n  NON_CONTRIBUTING,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION\n} from './edge_type';\n\n/**\n * @param  {SweepEvent} se1\n * @param  {SweepEvent} se2\n * @param  {Queue}      queue\n * @return {Number}\n */\nexport default function possibleIntersection (se1, se2, queue) {\n  // that disallows self-intersecting polygons,\n  // did cost us half a day, so I'll leave it\n  // out of respect\n  // if (se1.isSubject === se2.isSubject) return;\n  const inter = intersection(\n    se1.point, se1.otherEvent.point,\n    se2.point, se2.otherEvent.point\n  );\n\n  const nintersections = inter ? inter.length : 0;\n  if (nintersections === 0) return 0; // no intersection\n\n  // the line segments intersect at an endpoint of both line segments\n  if ((nintersections === 1) &&\n      (equals(se1.point, se2.point) ||\n       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n    return 0;\n  }\n\n  if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n    // if(se1.contourId === se2.contourId){\n    // console.warn('Edges of the same polygon overlap',\n    //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n    // }\n    //throw new Error('Edges of the same polygon overlap');\n    return 0;\n  }\n\n  // The line segments associated to se1 and se2 intersect\n  if (nintersections === 1) {\n\n    // if the intersection point is not an endpoint of se1\n    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n      divideSegment(se1, inter[0], queue);\n    }\n\n    // if the intersection point is not an endpoint of se2\n    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n      divideSegment(se2, inter[0], queue);\n    }\n    return 1;\n  }\n\n  // The line segments associated to se1 and se2 overlap\n  const events        = [];\n  let leftCoincide  = false;\n  let rightCoincide = false;\n\n  if (equals(se1.point, se2.point)) {\n    leftCoincide = true; // linked\n  } else if (compareEvents(se1, se2) === 1) {\n    events.push(se2, se1);\n  } else {\n    events.push(se1, se2);\n  }\n\n  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n    rightCoincide = true;\n  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n    events.push(se2.otherEvent, se1.otherEvent);\n  } else {\n    events.push(se1.otherEvent, se2.otherEvent);\n  }\n\n  if ((leftCoincide && rightCoincide) || leftCoincide) {\n    // both line segments are equal or share the left endpoint\n    se2.type = NON_CONTRIBUTING;\n    se1.type = (se2.inOut === se1.inOut)\n      ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n    if (leftCoincide && !rightCoincide) {\n      // honestly no idea, but changing events selection from [2, 1]\n      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n      divideSegment(events[1].otherEvent, events[0].point, queue);\n    }\n    return 2;\n  }\n\n  // the line segments share the right endpoint\n  if (rightCoincide) {\n    divideSegment(events[0], events[1].point, queue);\n    return 3;\n  }\n\n  // no line segment includes totally the other one\n  if (events[0] !== events[3].otherEvent) {\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[1], events[2].point, queue);\n    return 3;\n  }\n\n  // one line segment includes the other one\n  divideSegment(events[0], events[1].point, queue);\n  divideSegment(events[3].otherEvent, events[2].point, queue);\n\n  return 3;\n}\n","import signedArea    from './signed_area';\nimport compareEvents from './compare_events';\nimport equals        from './equals';\n\n\n/**\n * @param  {SweepEvent} le1\n * @param  {SweepEvent} le2\n * @return {Number}\n */\nexport default function compareSegments(le1, le2) {\n  if (le1 === le2) return 0;\n\n  // Segments are not collinear\n  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n    // If they share their left endpoint use the right endpoint to sort\n    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\n    // Different left endpoint: use the left endpoint to sort\n    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\n    // has the line segment associated to e1 been inserted\n    // into S after the line segment associated to e2 ?\n    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\n    // The line segment associated to e2 has been inserted\n    // into S after the line segment associated to e1\n    return le1.isBelow(le2.point) ? -1 : 1;\n  }\n\n  if (le1.isSubject === le2.isSubject) { // same polygon\n    let p1 = le1.point, p2 = le2.point;\n    if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n      p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]) return 0;\n      else return le1.contourId > le2.contourId ? 1 : -1;\n    }\n  } else { // Segments are collinear, but belong to separate polygons\n    return le1.isSubject ? -1 : 1;\n  }\n\n  return compareEvents(le1, le2) === 1 ? 1 : -1;\n}\n","import compareEvents from './compare_events';\nimport { DIFFERENCE } from './operation';\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<SweepEvent>}\n */\nfunction orderEvents(sortedEvents) {\n  let event, i, len, tmp;\n  const resultEvents = [];\n  for (i = 0, len = sortedEvents.length; i < len; i++) {\n    event = sortedEvents[i];\n    if ((event.left && event.inResult) ||\n      (!event.left && event.otherEvent.inResult)) {\n      resultEvents.push(event);\n    }\n  }\n  // Due to overlapping edges the resultEvents array can be not wholly sorted\n  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if ((i + 1) < len &&\n        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n        tmp = resultEvents[i];\n        resultEvents[i] = resultEvents[i + 1];\n        resultEvents[i + 1] = tmp;\n        sorted = false;\n      }\n    }\n  }\n\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    event.pos = i;\n  }\n\n  // imagine, the right event is found in the beginning of the queue,\n  // when his left counterpart is not marked yet\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    if (!event.left) {\n      tmp = event.pos;\n      event.pos = event.otherEvent.pos;\n      event.otherEvent.pos = tmp;\n    }\n  }\n\n  return resultEvents;\n}\n\n\n/**\n * @param  {Number} pos\n * @param  {Array.<SweepEvent>} resultEvents\n * @param  {Object>}    processed\n * @return {Number}\n */\nfunction nextPos(pos, resultEvents, processed, origIndex) {\n  let p, p1;\n  let newPos = pos + 1;\n  const length = resultEvents.length;\n\n  p  = resultEvents[pos].point;\n\n  if (newPos < length)\n    p1 = resultEvents[newPos].point;\n\n\n  // while in range and not the current one by value\n  while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n    if (!processed[newPos]) {\n      return newPos;\n    } else   {\n      newPos++;\n    }\n    p1 = resultEvents[newPos].point;\n  }\n\n  newPos = pos - 1;\n\n  while (processed[newPos] && newPos >= origIndex) {\n    newPos--;\n  }\n  return newPos;\n}\n\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<*>} polygons\n */\nexport default function connectEdges(sortedEvents, operation) {\n  let i, len;\n  const resultEvents = orderEvents(sortedEvents);\n\n  // \"false\"-filled array\n  const processed = {};\n  const result = [];\n  let event;\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    if (processed[i]) continue;\n    const contour = [[]];\n\n    if (!resultEvents[i].isExteriorRing) {\n      if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\n        result.push(contour);\n      } else if (result.length === 0) {\n        result.push([[contour]]);\n      } else {\n        result[result.length - 1].push(contour[0]);\n      }\n    } else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\n      result[result.length - 1].push(contour[0]);\n    } else {\n      result.push(contour);\n    }\n\n    const ringId = result.length - 1;\n    let pos = i;\n\n    const initial = resultEvents[i].point;\n    contour[0].push(initial);\n\n    while (pos >= i) {\n      event = resultEvents[pos];\n      processed[pos] = true;\n\n      if (event.left) {\n        event.resultInOut = false;\n        event.contourId   = ringId;\n      } else {\n        event.otherEvent.resultInOut = true;\n        event.otherEvent.contourId   = ringId;\n      }\n\n      pos = event.pos;\n      processed[pos] = true;\n      contour[0].push(resultEvents[pos].point);\n      pos = nextPos(pos, resultEvents, processed, i);\n    }\n\n    pos = pos === -1 ? i : pos;\n\n    event = resultEvents[pos];\n    processed[pos] = processed[event.pos] = true;\n    event.otherEvent.resultInOut = true;\n    event.otherEvent.contourId   = ringId;\n  }\n\n  // Handle if the result is a polygon (eg not multipoly)\n  // Commented it again, let's see what do we mean by that\n  // if (result.length === 1) result = result[0];\n  return result;\n}\n","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n","import Queue           from 'tinyqueue';\nimport SweepEvent      from './sweep_event';\nimport compareEvents   from './compare_events';\nimport { DIFFERENCE }  from './operation';\n\nconst max = Math.max;\nconst min = Math.min;\n\nlet contourId = 0;\n\n\nfunction processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n  let i, len, s1, s2, e1, e2;\n  for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n    s1 = contourOrHole[i];\n    s2 = contourOrHole[i + 1];\n    e1 = new SweepEvent(s1, false, undefined, isSubject);\n    e2 = new SweepEvent(s2, false, e1,        isSubject);\n    e1.otherEvent = e2;\n\n    if (s1[0] === s2[0] && s1[1] === s2[1]) {\n      continue; // skip collapsed edges, or it breaks\n    }\n\n    e1.contourId = e2.contourId = depth;\n    if (!isExteriorRing) {\n      e1.isExteriorRing = false;\n      e2.isExteriorRing = false;\n    }\n    if (compareEvents(e1, e2) > 0) {\n      e2.left = true;\n    } else {\n      e1.left = true;\n    }\n\n    const x = s1[0], y = s1[1];\n    bbox[0] = min(bbox[0], x);\n    bbox[1] = min(bbox[1], y);\n    bbox[2] = max(bbox[2], x);\n    bbox[3] = max(bbox[3], y);\n\n    // Pushing it so the queue is sorted from left to right,\n    // with object on the left having the highest priority.\n    Q.push(e1);\n    Q.push(e2);\n  }\n}\n\n\nexport default function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n  const eventQueue = new Queue(null, compareEvents);\n  let polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n  for (i = 0, ii = subject.length; i < ii; i++) {\n    polygonSet = subject[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n    }\n  }\n\n  for (i = 0, ii = clipping.length; i < ii; i++) {\n    polygonSet = clipping[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (operation === DIFFERENCE) isExteriorRing = false;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n    }\n  }\n\n  return eventQueue;\n}\n","import subdivideSegments from './subdivide_segments';\nimport connectEdges      from './connect_edges';\nimport fillQueue         from './fill_queue';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n}        from './operation';\n\nconst EMPTY = [];\n\n\nfunction trivialOperation(subject, clipping, operation) {\n  let result = null;\n  if (subject.length * clipping.length === 0) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = (subject.length === 0) ? clipping : subject;\n    }\n  }\n  return result;\n}\n\n\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n  let result = null;\n  if (sbbox[0] > cbbox[2] ||\n      cbbox[0] > sbbox[2] ||\n      sbbox[1] > cbbox[3] ||\n      cbbox[1] > sbbox[3]) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = subject.concat(clipping);\n    }\n  }\n  return result;\n}\n\n\nexport default function boolean(subject, clipping, operation) {\n  if (typeof subject[0][0][0] === 'number') {\n    subject = [subject];\n  }\n  if (typeof clipping[0][0][0] === 'number') {\n    clipping = [clipping];\n  }\n  let trivial = trivialOperation(subject, clipping, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  const sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n  const cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n  //console.time('fill queue');\n  const eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('fill queue');\n\n  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  //console.time('subdivide edges');\n  const sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('subdivide edges');\n\n  //console.time('connect vertices');\n  const result = connectEdges(sortedEvents, operation);\n  //console.timeEnd('connect vertices');\n  return result;\n}\n","import Tree                 from 'splaytree';\nimport computeFields        from './compute_fields';\nimport possibleIntersection from './possible_intersection';\nimport compareSegments      from './compare_segments';\nimport {\n  INTERSECTION,\n  DIFFERENCE\n} from './operation';\n\n\nexport default function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n  const sweepLine = new Tree(compareSegments);\n  const sortedEvents = [];\n\n  const rightbound = Math.min(sbbox[2], cbbox[2]);\n\n  let prev, next, begin;\n\n  while (eventQueue.length !== 0) {\n    let event = eventQueue.pop();\n    sortedEvents.push(event);\n\n    // optimization by bboxes for intersection and difference goes here\n    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n      break;\n    }\n\n    if (event.left) {\n      next  = prev = sweepLine.insert(event);\n      begin = sweepLine.minNode();\n\n      if (prev !== begin) prev = sweepLine.prev(prev);\n      else                prev = null;\n\n      next = sweepLine.next(next);\n\n      const prevEvent = prev ? prev.key : null;\n      let prevprevEvent;\n      computeFields(event, prevEvent, operation);\n      if (next) {\n        if (possibleIntersection(event, next.key, eventQueue) === 2) {\n          computeFields(event, prevEvent, operation);\n          computeFields(event, next.key, operation);\n        }\n      }\n\n      if (prev) {\n        if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n          let prevprev = prev;\n          if (prevprev !== begin) prevprev = sweepLine.prev(prevprev);\n          else                    prevprev = null;\n\n          prevprevEvent = prevprev ? prevprev.key : null;\n          computeFields(prevEvent, prevprevEvent, operation);\n          computeFields(event,     prevEvent,     operation);\n        }\n      }\n    } else {\n      event = event.otherEvent;\n      next = prev = sweepLine.find(event);\n\n      if (prev && next) {\n\n        if (prev !== begin) prev = sweepLine.prev(prev);\n        else                prev = null;\n\n        next = sweepLine.next(next);\n        sweepLine.remove(event);\n\n        if (next && prev) {\n          possibleIntersection(prev.key, next.key, eventQueue);\n        }\n      }\n    }\n  }\n  return sortedEvents;\n}\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","import { GeoJSONReader, GeoJSONWriter, UnionOp } from 'turf-jsts';\n\n/**\n * Takes two or more {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {...Feature<Polygon>} A polygon to combine\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union() {\n    var reader = new GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n\n    for (var i = 1; i < arguments.length; i++) {\n        result = UnionOp.union(result, reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n\n    var writer = new GeoJSONWriter();\n    result = writer.write(result);\n\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n}\n\nexport default union;\n","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\nexport default truncate;\n","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n","import { feature } from '@turf/helpers';\nimport { getCoords, getType } from '@turf/invariant';\n\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    // Backwards compatible with v4.0\n    var mutate = (typeof options === 'object') ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n\n    switch (type) {\n    case 'LineString':\n        newCoords = cleanLine(geojson);\n        break;\n    case 'MultiLineString':\n    case 'Polygon':\n        getCoords(geojson).forEach(function (line) {\n            newCoords.push(cleanLine(line));\n        });\n        break;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (polygons) {\n            var polyPoints = [];\n            polygons.forEach(function (ring) {\n                polyPoints.push(cleanLine(ring));\n            });\n            newCoords.push(polyPoints);\n        });\n        break;\n    case 'Point':\n        return geojson;\n    case 'MultiPoint':\n        var existing = {};\n        getCoords(geojson).forEach(function (coord) {\n            var key = coord.join('-');\n            if (!existing.hasOwnProperty(key)) {\n                newCoords.push(coord);\n                existing[key] = true;\n            }\n        });\n        break;\n    default:\n        throw new Error(type + ' geometry not supported');\n    }\n\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return {type: type, coordinates: newCoords};\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({type: type, coordinates: newCoords}, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\n\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1])) return points;\n\n    var prevPoint, point, nextPoint;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points[i - 1];\n        point = points[i];\n        nextPoint = points[i + 1];\n\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point)) {\n            newPoints.push(point);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n\n    if (cross !== 0) return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\nexport default cleanCoords;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport truncate from '@turf/truncate';\nimport { getGeom } from '@turf/invariant';\nimport { feature } from '@turf/helpers';\nimport cleanCoords from '@turf/clean-coords';\n\n// depend on jsts for now http://bjornharrtell.github.io/jsts/\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {Feature|null} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2) {\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n\n    // Return null if geometry is too narrow in coordinate precision\n    // fixes topology errors with JSTS\n    // https://github.com/Turfjs/turf/issues/463\n    // https://github.com/Turfjs/turf/pull/1004\n    if (cleanCoords(truncate(geom2, {precision: 4})).coordinates[0].length < 4) return null;\n    if (cleanCoords(truncate(geom1, {precision: 4})).coordinates[0].length < 4) return null;\n\n    var reader = new GeoJSONReader();\n    var a = reader.read(truncate(geom1));\n    var b = reader.read(truncate(geom2));\n    var intersection = OverlayOp.intersection(a, b);\n\n    // https://github.com/Turfjs/turf/issues/951\n    if (intersection.isEmpty()) return null;\n\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(intersection);\n    return feature(geom);\n}\n\nexport default intersect;\n","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport area from '@turf/area';\nimport { feature } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = getGeom(polygon1);\n    var geom2 = getGeom(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return feature(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new GeoJSONReader();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = OverlayOp.difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(differenced);\n\n    return feature(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (area(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        flattenEach(geom, function (feature$$1) {\n            if (area(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\nexport default difference;\n","'use strict';\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier\n/* server only */\n, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n  if (typeof shadowMode !== 'boolean') {\n    createInjectorSSR = createInjector;\n    createInjector = shadowMode;\n    shadowMode = false;\n  } // Vue.extend constructor export interop.\n\n\n  var options = typeof script === 'function' ? script.options : script; // render functions\n\n  if (template && template.render) {\n    options.render = template.render;\n    options.staticRenderFns = template.staticRenderFns;\n    options._compiled = true; // functional template\n\n    if (isFunctionalTemplate) {\n      options.functional = true;\n    }\n  } // scopedId\n\n\n  if (scopeId) {\n    options._scopeId = scopeId;\n  }\n\n  var hook;\n\n  if (moduleIdentifier) {\n    // server build\n    hook = function hook(context) {\n      // 2.3 injection\n      context = context || // cached call\n      this.$vnode && this.$vnode.ssrContext || // stateful\n      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n      // 2.2 with runInNewContext: true\n\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__;\n      } // inject component styles\n\n\n      if (style) {\n        style.call(this, createInjectorSSR(context));\n      } // register component module identifier for async chunk inference\n\n\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier);\n      }\n    }; // used by ssr in case component is cached and beforeCreate\n    // never gets called\n\n\n    options._ssrRegister = hook;\n  } else if (style) {\n    hook = shadowMode ? function () {\n      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n    } : function (context) {\n      style.call(this, createInjector(context));\n    };\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // register for functional component in vue file\n      var originalRender = options.render;\n\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context);\n        return originalRender(h, context);\n      };\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate;\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n    }\n  }\n\n  return script;\n}\n\nmodule.exports = normalizeComponent;\n//# sourceMappingURL=normalize-component.js.map\n","'use strict';\n\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\nfunction createInjector(context) {\n  return function (id, style) {\n    return addStyle(id, style);\n  };\n}\nvar HEAD = document.head || document.getElementsByTagName('head')[0];\nvar styles = {};\n\nfunction addStyle(id, css) {\n  var group = isOldIE ? css.media || 'default' : id;\n  var style = styles[group] || (styles[group] = {\n    ids: new Set(),\n    styles: []\n  });\n\n  if (!style.ids.has(id)) {\n    style.ids.add(id);\n    var code = css.source;\n\n    if (css.map) {\n      // https://developer.chrome.com/devtools/docs/javascript-debugging\n      // this makes source maps inside style tags work properly in Chrome\n      code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'; // http://stackoverflow.com/a/26603875\n\n      code += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) + ' */';\n    }\n\n    if (!style.element) {\n      style.element = document.createElement('style');\n      style.element.type = 'text/css';\n      if (css.media) style.element.setAttribute('media', css.media);\n      HEAD.appendChild(style.element);\n    }\n\n    if ('styleSheet' in style.element) {\n      style.styles.push(code);\n      style.element.styleSheet.cssText = style.styles.filter(Boolean).join('\\n');\n    } else {\n      var index = style.ids.size - 1;\n      var textNode = document.createTextNode(code);\n      var nodes = style.element.childNodes;\n      if (nodes[index]) style.element.removeChild(nodes[index]);\n      if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n    }\n  }\n}\n\nmodule.exports = createInjector;\n//# sourceMappingURL=browser.js.map\n","import Vue from 'vue'\nimport App from './App.vue'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n"],"names":["Node","key","data","next","left","right","DEFAULT_COMPARE","a","b","splay","i","t","comparator","N","l","r","cmp","y","insert","node","split","v","Tree","_root","_size","_comparator","this","_remove","x","current","compare","visitor","ctx","Q","done","push","length","pop","call","low","high","fn","keys","forEach","values","minNode","maxNode","index","d","root","successor","predecessor","head","p","toList","presort","size","sort","pivot","j","tmp","loadRecursive","start","end","middle","Math","floor","mergedList","l1","l2","p1","p2","mergeLists","createList","sortedListToBST","list","printNode","n","String","out","printRow","prefix","isTail","indent","join","newKey","newData","merge","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype","isInBbox","bbox","point","ll","ur","getBboxOverlap","b1","b2","lowerX","upperX","epsilon","Number","EPSILON","undefined","pow","EPSILON_SQ","ab","PtRounder","reset","value","xRounder","CoordRounder","yRounder","round","tree","SplayTree","coord","add","prevNode","prev","remove","nextNode","rounder","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","v1","v2","kross","sqrt","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","horizontalIntersection","pt","verticalIntersection","SweepEvent","isLeft","events","ptCmp","comparePoints","link","Segment","segment","aPt","bPt","other","Error","otherEvents","iMax","evt","checkForConsuming","numEvents","evt1","consumedBy","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","set","sine","cosine","has","_cache$get","get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","leftSE","rightSE","rings","windings","id","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","ay","ax","by","bx","newRightSE","y1","y2","isAnEndpoint","lPt","rPt","vector","yDist","xFromYDist","xDist","yFromXDist","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","pt1","pt2","ve","d1","d2","intersection","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","newSeg","slice","swapEvents","tmpEvt","consumer","consumee","_tmp","ring","winding","indexOf","_prevInResult","prevInResult","_beforeState","seg","afterState","multiPolys","_afterState","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","_i","_iMax","_ring","poly","isExterior","_index","splice","_i2","_iMax2","mp","multiPoly","_isInResult","mpsBefore","operation","type","noBefores","noAfters","least","most","numMultiPolys","diff","abs","isJustSubject","mps","isSubject","concat","leftPt","rightPt","cmpPts","RingIn","geomRing","Array","isArray","segments","firstPoint","prevPoint","fromRing","sweepEvents","PolyIn","geomPoly","exteriorRing","interiorRings","getSweepEvents","ringSweepEvents","jMax","MultiPolyIn","geom","ex","polys","POSITIVE_INFINITY","NEGATIVE_INFINITY","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","firstPt","lastPt","indexLE","getLeftmostComparator","intersectionLE","ringEvents","unshift","reverse","prevPt","points","_pt","_nextPt","nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","getGeom","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","arguments","find","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","_newEventsFromSplit2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","Operation","moreGeoms","multipolys","subject","mpA","_j","_jMax","sweepLine","prevQueueSize","process","_evt","factory","_len","_key","run","_len2","_key2","_len3","_key3","subjectGeom","_len4","clippingGeoms","_key4","noDuplicates","_compare","_noDuplicates","parent","rotateRight","rotateLeft","gp","ggp","u","z","comp","replace","s","sMax","returnValue","callback","load","NORMAL","NON_CONTRIBUTING","SAME_TRANSITION","DIFFERENT_TRANSITION","INTERSECTION","UNION","DIFFERENCE","XOR","computeFields","inOut","otherInOut","isVertical","inResult","otherEvent","edgeType","resultInOut","p0","isBelow","copy","equals","signedArea","compareEvents","e1","e2","specialCases","divideSegment","se","console","warn","contourId","possibleIntersection","se1","se2","a1","a2","noEndpointTouch","va","vb","toPoint","e","sqrKross","sqrLenA","sa","sb","smin","min","smax","max","nintersections","leftCoincide","rightCoincide","compareSegments","le1","le2","isAbove","nextPos","pos","resultEvents","processed","origIndex","newPos","connectEdges","sortedEvents","len","sorted","orderEvents","result","contour","ringId","initial","TinyQueue","defaultCompare","_down","item","_up","top","peek","halfLength","best","processPolygon","contourOrHole","depth","s1","s2","EMPTY","boolean","clipping","trivial","trivialOperation","sbbox","Infinity","cbbox","eventQueue","polygonSet","ii","jj","Queue","fillQueue","compareBBoxes","begin","rightbound","prevprev","subdivideSegments","arrayLike","relativeStart","parseInt","relativeEnd","isFinite","isInteger","val","parseFloat","isNaN","trunc","ceil","NumberUtil","interfaces_","getClass","equalsWithTolerance","x1","x2","tolerance","IllegalArgumentException","message","name","stack","__proto__","create","constructor","Double","staticAccessors$1","MAX_VALUE","doubleToLongBits","longBitsToDouble","isInfinite","defineProperties","Comparable","Clonable","Comparator","Serializable","Coordinate","NULL_ORDINATE","c","staticAccessors","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","ordinateIndex","equals2D","getOrdinate","equals3D","equalInZ","compareTo","o","clone","toString","distance3D","dx","dy","dz","distance","hashCode","setCoordinate","f","NaN","dimensionsToTest","_dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","CoordinateSequenceFactory","Location","staticAccessors$4","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","locationValue","hasInterface","MathUtil","staticAccessors$5","LOG_10","log10","ln","log","v3","v4","clamp","x$1","min$1","max$1","wrap","v1$1","v2$1","v3$1","average","StringBuffer","str","append","setCharAt","substr","Integer","intValue","Character","isWhitespace","toUpperCase","DD","_hi","_lo","init","dd","parse","hi","lo","staticAccessors$7","PI","TWO_PI","PI_2","E","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","scale","divide","gt","lt","multiply","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","y$1","isZero","selfSubtract","getSpecialNumberString","selfDivide","tc","ty","C","U","yhi","ylo","hc","hy","dump","createNaN","ge","exp","selfMultiply","reciprocal","fhi","flo","rint","setValue","value$1","isNegative","axdd","H","h","S","H$1","T","S$1","f$1","s$1","e$1","zhi","zlo","tx","hx","selfSqr","toStandardNotation","toSciNotation","specialStr","fill","sigDigits","num","charAt","stringOfChar","numZeroes","digits","expStr","trailingDigits","substring","digitsWithDecimal","isPositive","signum","strlen","signCh","numBeforeDec","ch","isDigit","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","CGAlgorithmsDD","staticAccessors$6","DP_SAFE_EPSILON","orientationIndex","q","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","q1","q2","denom1","denom2","denom","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","det","errbound","CoordinateSequence","staticAccessors$8","M","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","env","getY","toCoordinateArray","Exception","NotRepresentableException","Exception$$1","System","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","HCoordinate","w","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","px","py","pw","qx","qy","qw","xInt","yInt","Envelope","_minx","_maxx","_miny","_maxy","staticAccessors$9","getArea","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","expandToInclude","minExtent","translate","transX","transY","setToNull","maxExtent","expandBy","deltaX","deltaY","contains","centre","minq","maxq","minp","maxp","regExes","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","WKTParser","geometryFactory","GeometryFactory","read","wkt","geometry","matches","exec","search","toLowerCase","parse$1","apply","write","extractGeometry","getGeometryType","extract$1","wktType","isEmpty","coordinate","coordinate$1","point$1","_coordinates","multipoint","multipoint$1","array","_geometries","linestring","linestring$1","_points","linearring","linearring$1","multilinestring","multilinestring$1","polygon","polygon$1","_shell","_holes","multipolygon","multipolygon$1","geometrycollection","collection","createPoint","coords","trim","createMultiPoint","components","createLineString","createLinearRing","line","createMultiLineString","lines","createPolygon","shell","holes","createMultiPolygon","polygons","createGeometryCollection","wktArray","WKTWriter","parser","toLineString","RuntimeException","AssertionFailedException","RuntimeException$$1","Assert","shouldNeverReachHere","isTrue","assertion","expectedValue","actualValue","LineIntersector","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","staticAccessors$10","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","catBuf","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","precisionModel","isInteriorIntersection","inputLineIndex","computeEdgeDistance","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","dist","pdx","pdy","nonRobustComputeEdgeDistance","RobustLineIntersector","LineIntersector$$1","isInSegmentEnvelopes","intPt","env0","env1","CGAlgorithms","normalizeToMinimum","n1","n2","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","x3","x4","xabs","checkDD","intPtDD","isIn","println","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","nearestPt","minDist","distancePointLine","RobustDeterminant","sign","swap","k","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","countSegment","minx","maxx","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","sum","x0","x0$1","sum$1","distanceLineLine","A","B","D","noIntersection","rNumb","isPointInRing","computeLength","pts","y0","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","minDistance","isOnLine","lineIntersector","GeometryComponentFilter","filter","Geometry","_envelope","_factory","_SRID","_userData","getSRID","staticAccessors$11","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","isGeometryCollection","getSortIndex","getFactory","getGeometryN","isRectangle","g$1","equalsTopo","g","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","other$1","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","SRID","setUserData","userData","iterator","hasNext","aElement","bElement","comparison","isGeometryCollectionOrDerived","hasNonEmptyElements","geometries","hasNullElements","CoordinateFilter","BoundaryNodeRule","staticAccessors$12","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","boundaryCount","Collection","IndexOutOfBoundsException","addAll","toArray","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","array_","ensureCapacity","clear","element","oldElement","Iterator_","found","Iterator$$1","arrayList","arrayList_","position_","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coordArrayType","coll","isChanged","coord$2","obj","allowRepeated$2","coord$3","allowRepeated$3","i$2","i$3","coord$4","coord$5","allowRepeated$5","inc","closeRing","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","isRing","ptNotInList","testPts","testPt","scroll","coordinates","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","last","mid","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","Map$1","put","entrySet","SortedMap","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","hashSet_","BLACK","colorOf","color","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","getValue","getKey","oldValue","fixAfterInsertion","getFirstEntry","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","treeSet_","Arrays","asList","Dimension","staticAccessors$14","P","L","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","dimensionValue","toDimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","isDone","isGeometryChanged","GeometryCollection","Geometry$$1","getCoordinates","getNumPoints","childCoordinates","area","isEquivalentClass","otherCollection","getBoundaryDimension","dimension","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","getBoundary","MultiLineString","GeometryCollection$$1","isClosed","nLines","revLines","BoundaryOp","lineStrings","_geom","_geomFact","_bnRule","_endpointMap","bnRule","geom$1","bnRule$1","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createMultiPointFromCoords","LineString","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","valence","count","Counter","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","NEWLINE","SIMPLE_ORDINATE_FORMAT","chars","getStackTrace","os","ps","printStackTrace","t$1","stackTrace","lineNumberReader","readLine","separator","separatorlen","tokenList","tmpString","token","res","format","CoordinateSequences","copyCoord","minDim","dim","isEqual","cs1","cs2","cs1Size","extend","fact","newseq","cs","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","line$1","ls","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Puntal","Point","Polygonal","Polygon","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","convexHull","getExteriorRing","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","MultiPoint","isValid","LinearRing","LineString$$1","validateConstruction","MINIMUM_VALID_SIZE","MultiPolygon","allRings","allRingsArray","GeometryEditor","_isUserDataCopied","staticAccessors$16","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","isUserDataCopied","edit","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","hole","GeometryEditorOperation","editCoordinates","CoordinateArraySequence","_dimension","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","instanceObject","readResolve","HashMap","MapInterface","map_","entries","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","staticAccessors$19","maximumPreciseValue","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","getType","description","maxSigDigits","mostPrecise","pm1","pm2","_name","nameToTypeMap","staticAccessors$1$1","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","staticAccessors$2","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","coordinates$1","shell$1","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","geometryTypes","GeoJSONParser","json","JSON","Feature","feature","FeatureCollection","featureCollection","features","sub","linearRing","geoJson","shellGeoJson","holeGeoJson","GeoJSONReader","reducePrecision","GeoJSONWriter","Position","staticAccessors$20","ON","EmptyStackException","Stack","opposite","position","empty","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","de","side","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","pPrev","pNext","orientation","usePrev","findRightmostEdgeAtNode","star","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","dirEdgeList","TopologyException","msg","msgWithCoord","LinkedList","addLast","removeFirst","BufferSubgraph","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","startEdge","isVisited","computeDepths","de$1","copySymDepths","computeDepth","outsideDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","nodeStack","setDepth","symNode","getNodes","getDirectedEdges","TopologyLocation","location","on","gl","on$1","setAllLocations","locValue","setAllLocationsIfNull","isLine","newLoc","getLocations","flip","temp","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","locValue$1","isEqualOnSide","allPositionsEqual","loc","Label","elt","onLoc","lbl","geomIndex","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","getGeometryCount","location$1","toLine","toLineLabel","label","lineLabel","EdgeRing","_startDe","_maxNodeDegree","_edges","_pts","_label","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","isFirstEdge","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","degree","getOutgoingDegree","edge","edgePts","startIndex","startIndex$1","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","deLabel","deLabel$1","setShell","toPolygon","holeLR","MinimalEdgeRing","EdgeRing$$1","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","GraphComponent","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","im","computeIM","GraphComponent$$1","_coord","edges","isIncidentEdgeInResult","print","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","setNode","setLabelBoundary","NodeMap","nodeMap","nodeFact","addNode","createNode","node$1","getBoundaryNodes","bdyNodes","Quadrant","staticAccessors$21","NE","NW","SW","SE","isNorthern","quad","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","quadrant","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","edge$1","edge$2","p0$1","label$1","compareDirection","getDy","angle","atan2","className","lastDotPos","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","depthVal","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","printEdge","printReverse","setSym","setVisitedEdge","directionFactor","oppositePos","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","NodeFactory","PlanarGraph","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de1","de2","nodes","PolygonBuilder","_shellList","sortShellsAndHoles","edgeRings","shellList","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","getBounds","ItemBoundable","_bounds","_item","bounds","getItem","PriorityQueue","_items","poll","minItem","reorder","child","ItemVisitor","visitItem","SpatialIndex","itemEnv","query","AbstractNode","_childBoundables","_level","level","staticAccessors$22","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","bp","getDistance","getBoundable","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity$1","staticAccessors$23","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","level$1","boundables$1","boundable","searchBounds","getIntersectsOp","searchBounds$1","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","createHigherLevels","getRoot","item$1","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","nearestNeighbour","itemDist","initBndPair","itemDist$1","bp$1","initBndPair$1","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","centreX","avg","centreY","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","maxSegmentIndex","isInterior","SegmentNodeList","_nodeMap","getSplitCoordinates","addEndpoints","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","edgeList","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","NodedSegmentString","getData","eiNew","getSegmentOctant","checkSplitEdgesCorrectness","splitEdges","pt0","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","setData","NodableSegmentString","addIntersection","_nodeList","_data","safeOctant","intPt$1","addIntersectionNode","li","segmentIndex$1","getNodeList","normalizedSegmentIndex","nextSegIndex","addIntersections","getNodedSubstrings","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","LineSegment","staticAccessors$24","minX","orient0","orient1","geomFactory","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","minY","midPoint","closestPoints","closestPt","close00","closestPoint","close01","close10","close11","factor","maxX","comp0","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","pointAlong","bits0","hash0","bits1","MonotoneChainOverlapAction","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","overlap","mc1","start1","mc2","start2","getLineSegment","MonotoneChain","_start","_end","_context","_id","context","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","getChainStartIndices","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","pts$1","mcList","Noder","computeNodes","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","SinglePassNoder$$1","si","_monoChains","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","segStr","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","MonotoneChainOverlapAction$$1","_si","ss1","ss2","processIntersections","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","quadrantSegments$1","endCapStyle","setEndCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","staticAccessors$25","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","quadSegs","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","alpha","cos","BufferInputLineSimplifier","inputLine","_distanceTol","_isDeleted","_angleOrientation","_inputLine","staticAccessors$26","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","i0","distanceTol","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","simplify","collapseLine","OffsetSegmentString","_ptList","_minimimVertexDistance","staticAccessors$28","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","revere","addPts","startPt","setMinimumVertexDistance","minimimVertexDistance","Angle","staticAccessors$29","PI_TIMES_2","PI_OVER_2","PI_OVER_4","toDegrees","radians","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","staticAccessors$27","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","direction","radius","startAngle","endAngle","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","offset","sideSign","totalAngle","nSegs","currAngleInc","currAngle","createCircle","hasNarrowConcaveAngle","OffsetCurveBuilder","getOffsetCurve","inputPts","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","SubgraphDepthLocater","_subgraphs","_seg","_cga","subgraphs","staticAccessors$30","DepthSegment","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","dirEdge","stabbedSegments$1","ds","stabbingRayLeftPt$2","stabbedSegments$2","_leftDepth","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","Triangle","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","numx","numy","perpendicularBisector","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","_inputGeom","_curveBuilder","_curveList","inputGeom","curveBuilder","addPoint","curve","addCurve","addPolygon","offsetSide","shellCoord","isErodedCompletely","addPolygonRing","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","addLineString","getCurves","cwLeftLoc","cwRightLoc","addCollection","ringCoord","envMinDimension","PointOnGeometryLocator","locate","GeometryCollectionIterator","_parent","_atStart","_max","_subcollectionIterator","isAtomic","SimplePointInAreaLocator","containsPointInPolygon","geomi","g2","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","it$1","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","geomi$1","getDegree","insertEdgeEnd","DirectedEdgeStar","EdgeEndStar$$1","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","de0","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","mergeSymLabels","degree$1","findCoveredLineEdges","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","_orientation","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","_ocaMap","edgeColl","findEdgeIndex","findEqualEdge","SegmentIntersector","e0","segIndex0","segIndex1","IntersectionAdder","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","EdgeIntersection","getSegmentIndex","EdgeIntersectionList","Edge","MonotoneChainIndexer","MonotoneChainEdge","env2","mcb","chainIndex","computeIntersectsForChain","chainIndex0","mce","chainIndex1","mce$1","getStartIndexes","computeIntersects","Depth","NULL_VALUE","staticAccessors$31","depthValue","minDepth","newValue","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","newPts","setIsolated","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","BufferBuilder","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","mergeDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","processedGraphs","subgraph","createSubgraphs","createEmptyResultGeometry","getNoder","noder","buffer","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","ss","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","scaleFactor","isIntegerPrecision","noder$1","scaleFactor$1","offsetX","offsetY","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","NodingValidator","_segStrings","staticAccessors$33","checkEndPtVertexIntersections","checkInteriorIntersections","ss0","ss0$1","ss1$1","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","staticAccessors$34","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","staticAccessors$35","HotPixelSnapAction","snap","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","isNodeAdded","MonotoneChainSelectAction$$1","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","snapRound","intersections","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","BufferOp","_argGeom","_resultGeometry","_saveException","staticAccessors$32","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","getResultGeometry","bufferOp","distance$1","bufOp","g$2","distance$2","params","g$3","distance$3","bufOp$2","maxPrecisionDigits","bufEnvMax","minUnitLog10","PointPairDistance","_isNull","setMinimum","ptDist","initialize","setMaximum","DistanceToPointFinder","computeDistance","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","_maxPtDist","staticAccessors$36","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","distFilter","getMaxPointDistance","computeMaxVertexDistance","findDistance","bufferCurve","getDistancePoints","_minPtDist","midPt","PolygonExtracter","comps","_comps","LinearComponentExtracter","_lines","_isForcedToLineString","lines$1","isForcedToLineString","setForceToLineString","getLines","forceToLineString","geoms","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","locateInternal","shellLoc","locateInPolygonRing","holeLoc","p$2","updateLocationInfo","computeLocation","ml","mpoly","GeometryLocation","_component","_segIndex","component","INSIDE_AREA","component$1","staticAccessors$38","isInsideArea","getGeometryComponent","PointExtracter","getPoints","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","g0","g1","g0$1","g1$1","terminateDistance","computeContainmentDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","isWithinDistance","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","_g0","_g1","_ptDist","_densifyFrac","staticAccessors$39","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","densifyFrac","compute","computeOrientedDistance","discreteGeom","MaxPointDistanceFilter$1","fracFilter","orientedDistance","_euclideanDist","_numSubSegs","fraction","delx","dely","BufferDistanceValidator","input","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","staticAccessors$37","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","bufCurve","maxDist","haus","distDelta","checkPositiveValid","checkNegativeValid","inputCurve","getPolygonLines","checkMinimumDistance","getErrorIndicator","distOp","getErrorLocation","lineExtracter","getErrorMessage","BufferResultValidator","_errorMsg","staticAccessors$40","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","padding","expectedEnv","bufEnv","report","distValid","inputArea","resultArea","checkName","isValidMsg","validator","BasicSegmentString","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","findAllIntersections","setKeepIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","createAnyIntersectionFinder","createIntersectionCounter","FastNodingValidator","execute","intSegs","computeIntersections","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","mapOp","_mapOp","mapped","op","LineBuilder","_op","_lineEdgesList","_resultLineList","ptLocator","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","buildLines","OverlayOp","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","PointBuilder","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","snapTolerance$1","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","_srcGeom","staticAccessors$41","SNAP_PRECISION_FACTOR","snapGeom","extractTargetCoordinates","SnapTransformer","snapToSelf","cleanResult","snappedGeom","computeSnapTolerance","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","GeometryTransformer$$1","isSelfSnap","_snapPts","_isSelfSnap","snapLine","snapper","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","padStr","toBinaryString","bitStr","getBit","nBits","num1","num2","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","staticAccessors$42","Translater","addCommonBits","trans","removeCommonBits","invCoord","getCommonCoordinate","_commonBitsX","_commonBitsY","xp","yp","SnapOverlayOp","_cbr","selfSnap","remGeom","prepareResult","prepGeom","overlayOp","union","symDifference","SYMDIFFERENCE","difference","SnapIfNeededOverlayOp","isSuccess","savedException","MonotoneChain$2","SweepLineEvent","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","INSERT","staticAccessors$43","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","EdgeSetIntersector","SegmentIntersector$2","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","setIsDoneIfProperInt","isDoneWhenProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","nOverlaps","prepareEvents","processOverlaps","edges0","edges1","si$1","si$2","addEdge","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","_min","staticAccessors$45","NodeComparator","getMin","queryMin","queryMax","getMax","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","buildTree","buildLevel","buildRoot","ArrayListVisitor","getItems","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","SegmentVisitor","rcc","_counter","addLine","GeometryGraph","PlanarGraph$$1","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","_resultPrecisionModel","_arg","setComputationPrecision","g0$2","GeometryMapper","MapOp","op$1","mapped$1","gr","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","geom1","resultDimension","dim0","dim1","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","_g","_boundaryDistanceTolerance","_linework","boundaryDistanceTolerance","extractLinework","isWithinToleranceOfBoundary","extracter","PolygonalLineworkExtracter","linework","getLinework","OffsetPointGenerator","_doLeft","_doRight","extractPoints","offsetPts","computeOffsetPoints","setSidesToGenerate","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","staticAccessors$46","reportResult","expectedInterior","addTestPts","overlayOp$1","hasLocation","isValidResult","ptGen","getInvalidLocation","GeometryCombiner","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","elems","elemGeom","combine","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","_inputPolys","staticAccessors$47","STRTREE_NODE_CAPACITY","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","unionOptimized","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","UnionOp","reader","stringify","properties","options","isObject","isNumber","validateBBox","validateId","feat","geomEach","geojson","stopG","geometryMaybeCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","truncate","precision","mutate","coordEach","excludeWrapCoord","wrapShrink","coordIndex","multiFeatureIndex","geometryIndex","geomType","truncateCoords","getCoords","cleanCoords","_typeof","newCoords","cleanLine","polyPoints","existing","hasOwnProperty","nextPoint","newPoints","secondToLast","isPointOnLineSegment","startX","startY","endX","endY","dxl","dyl","intersect","poly1","poly2","geom2","initialValue","previousValue","currentGeometry","geomReduce","calculateArea","polygonArea","RADIUS","ringArea","lowerIndex","middleIndex","upperIndex","coordsLength","rad","_","polygon1","polygon2","removeEmptyPolygon","differenced","feature$$1","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","render","staticRenderFns","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","originalRender","beforeCreate","isOldIE","navigator","test","userAgent","HEAD","document","getElementsByTagName","styles","css","group","media","ids","code","source","sources","btoa","unescape","encodeURIComponent","createElement","setAttribute","appendChild","styleSheet","cssText","Boolean","textNode","createTextNode","childNodes","removeChild","insertBefore","addStyle","Vue","el","App"],"mappings":"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"}