{"version":3,"file":"bundle.js","sources":["../../dist/polygon-clipping.esm.js","../../node_modules/martinez-polygon-clipping/node_modules/splaytree/index.js","../../node_modules/martinez-polygon-clipping/src/edge_type.js","../../node_modules/martinez-polygon-clipping/src/operation.js","../../node_modules/martinez-polygon-clipping/src/compute_fields.js","../../node_modules/martinez-polygon-clipping/src/sweep_event.js","../../node_modules/martinez-polygon-clipping/src/equals.js","../../node_modules/martinez-polygon-clipping/src/signed_area.js","../../node_modules/martinez-polygon-clipping/src/compare_events.js","../../node_modules/martinez-polygon-clipping/src/divide_segment.js","../../node_modules/martinez-polygon-clipping/src/segment_intersection.js","../../node_modules/martinez-polygon-clipping/src/possible_intersection.js","../../node_modules/martinez-polygon-clipping/src/compare_segments.js","../../node_modules/martinez-polygon-clipping/src/connect_edges.js","../../node_modules/tinyqueue/index.js","../../node_modules/martinez-polygon-clipping/src/fill_queue.js","../../node_modules/martinez-polygon-clipping/src/index.js","../../node_modules/martinez-polygon-clipping/src/subdivide_segments.js","../../node_modules/turf-jsts/jsts.mjs","../../node_modules/@turf/union/main.es.js","../../node_modules/@turf/helpers/main.es.js","../../node_modules/@turf/meta/main.es.js","../../node_modules/@turf/truncate/main.es.js","../../node_modules/@turf/invariant/main.es.js","../../node_modules/@turf/clean-coords/main.es.js","../../node_modules/@turf/intersect/main.es.js","../../node_modules/@turf/area/main.es.js","../../node_modules/@turf/difference/main.es.js","../src/main.js"],"sourcesContent":["import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\nvar isInBbox = function isInBbox(bbox, point) {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\n\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\nvar epsilon = Number.EPSILON; // IE Polyfill\n\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n/* FLP comparator */\n\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  } // check if they're flp equal\n\n\n  var ab = a - b;\n\n  if (ab * ab < EPSILON_SQ * a * b) {\n    return 0;\n  } // normal comparison\n\n\n  return a < b ? -1 : 1;\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\n\nvar PtRounder = /*#__PURE__*/function () {\n  function PtRounder() {\n    _classCallCheck(this, PtRounder);\n\n    this.reset();\n  }\n\n  _createClass(PtRounder, [{\n    key: \"reset\",\n    value: function reset() {\n      this.xRounder = new CoordRounder();\n      this.yRounder = new CoordRounder();\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, y) {\n      return {\n        x: this.xRounder.round(x),\n        y: this.yRounder.round(y)\n      };\n    }\n  }]);\n\n  return PtRounder;\n}();\n\nvar CoordRounder = /*#__PURE__*/function () {\n  function CoordRounder() {\n    _classCallCheck(this, CoordRounder);\n\n    this.tree = new SplayTree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n    this.round(0);\n  } // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n\n\n  _createClass(CoordRounder, [{\n    key: \"round\",\n    value: function round(coord) {\n      var node = this.tree.add(coord);\n      var prevNode = this.tree.prev(node);\n\n      if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n        this.tree.remove(coord);\n        return prevNode.key;\n      }\n\n      var nextNode = this.tree.next(node);\n\n      if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n        this.tree.remove(coord);\n        return nextNode.key;\n      }\n\n      return coord;\n    }\n  }]);\n\n  return CoordRounder;\n}(); // singleton available by import\n\n\nvar rounder = new PtRounder();\n\n/* Cross Product of two vectors with first point at origin */\n\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n/* Dot Product of two vectors with first point at origin */\n\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n/* Comparator for two vectors with same starting point */\n\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n  var x1 = pt1.x + d2 * v1.x,\n      x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n      y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\nvar SweepEvent = /*#__PURE__*/function () {\n  _createClass(SweepEvent, null, [{\n    key: \"compare\",\n    // for ordering sweep events in the sweep event queue\n    value: function compare(a, b) {\n      // favor event with a point that the sweep line hits first\n      var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n      if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n      if (a.point !== b.point) a.link(b); // favor right events over left\n\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n      // ordering of this case is the same as for their segments\n\n      return Segment.compare(a.segment, b.segment);\n    } // for ordering points in sweep line order\n\n  }, {\n    key: \"comparePoints\",\n    value: function comparePoints(aPt, bPt) {\n      if (aPt.x < bPt.x) return -1;\n      if (aPt.x > bPt.x) return 1;\n      if (aPt.y < bPt.y) return -1;\n      if (aPt.y > bPt.y) return 1;\n      return 0;\n    } // Warning: 'point' input will be modified and re-used (for performance)\n\n  }]);\n\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n  }\n\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n\n      var otherEvents = other.point.events;\n\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n\n      this.checkForConsuming();\n    }\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      // FIXME: The loops in this method run O(n^2) => no good.\n      //        Maintain little ordered sweep event trees?\n      //        Can we maintaining an ordering that avoids the need\n      //        for the re-sorting with getLeftmostComparator in geom-out?\n      // Compare each pair of events to see if other events also match\n      var numEvents = this.point.events.length;\n\n      for (var i = 0; i < numEvents; i++) {\n        var evt1 = this.point.events[i];\n        if (evt1.segment.consumedBy !== undefined) continue;\n\n        for (var j = i + 1; j < numEvents; j++) {\n          var evt2 = this.point.events[j];\n          if (evt2.consumedBy !== undefined) continue;\n          if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n          evt1.segment.consume(evt2.segment);\n        }\n      }\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n\n      return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n\n      var cache = new Map();\n\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n\n        var _cache$get = cache.get(a),\n            asine = _cache$get.sine,\n            acosine = _cache$get.cosine;\n\n        var _cache$get2 = cache.get(b),\n            bsine = _cache$get2.sine,\n            bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n        if (asine >= 0 && bsine >= 0) {\n          if (acosine < bcosine) return 1;\n          if (acosine > bcosine) return -1;\n          return 0;\n        } // both below x-axis\n\n\n        if (asine < 0 && bsine < 0) {\n          if (acosine < bcosine) return -1;\n          if (acosine > bcosine) return 1;\n          return 0;\n        } // one above x-axis, one below\n\n\n        if (bsine < asine) return -1;\n        if (bsine > asine) return 1;\n        return 0;\n      };\n    }\n  }]);\n\n  return SweepEvent;\n}();\n\n// segments and sweep events when all else is identical\n\nvar segmentId = 0;\n\nvar Segment = /*#__PURE__*/function () {\n  _createClass(Segment, null, [{\n    key: \"compare\",\n\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    value: function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var blx = b.leftSE.point.x;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n      if (brx < alx) return 1;\n      if (arx < blx) return -1;\n      var aly = a.leftSE.point.y;\n      var bly = b.leftSE.point.y;\n      var ary = a.rightSE.point.y;\n      var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n      if (alx < blx) {\n        // are the two segments in the same horizontal plane?\n        if (bly < aly && bly < ary) return 1;\n        if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n        var aCmpBLeft = a.comparePoint(b.leftSE.point);\n        if (aCmpBLeft < 0) return 1;\n        if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n        var bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return -1;\n      } // is left endpoint of segment A the right-more?\n\n\n      if (alx > blx) {\n        if (aly < bly && aly < bry) return -1;\n        if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n        var bCmpALeft = b.comparePoint(a.leftSE.point);\n        if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n        var aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight < 0) return 1;\n        if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return 1;\n      } // if we get here, the two left endpoints are in the same\n      // vertical plane, ie alx === blx\n      // consider the lower left-endpoint to come first\n\n\n      if (aly < bly) return -1;\n      if (aly > bly) return 1; // left endpoints are identical\n      // check for colinearity by using the left-more right endpoint\n      // is the A right endpoint more left-more?\n\n      if (arx < brx) {\n        var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n        if (_bCmpARight !== 0) return _bCmpARight;\n      } // is the B right endpoint more left-more?\n\n\n      if (arx > brx) {\n        var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n        if (_aCmpBRight < 0) return 1;\n        if (_aCmpBRight > 0) return -1;\n      }\n\n      if (arx !== brx) {\n        // are these two [almost] vertical segments with opposite orientation?\n        // if so, the one with the lower right endpoint comes first\n        var ay = ary - aly;\n        var ax = arx - alx;\n        var by = bry - bly;\n        var bx = brx - blx;\n        if (ay > ax && by < bx) return 1;\n        if (ay < ax && by > bx) return -1;\n      } // we have colinear segments with matching orientation\n      // consider the one with more left-more right endpoint to be first\n\n\n      if (arx > brx) return 1;\n      if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n      // vertical plane, ie arx === brx\n      // consider the lower right-endpoint to come first\n\n      if (ary < bry) return -1;\n      if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n      // fall back on creation order as consistent tie-breaker\n\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1; // identical segment, ie a === b\n\n      return 0;\n    }\n    /* Warning: a reference to ringWindings input will be stored,\n     *  and possibly will be later modified */\n\n  }]);\n\n  function Segment(leftSE, rightSE, rings, windings) {\n    _classCallCheck(this, Segment);\n\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings; // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    value: function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n    /* A vector from the left point to the right */\n\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(pt) {\n      return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n    }\n    /* Compare this segment with a point.\n     *\n     * A point P is considered to be colinear to a segment if there\n     * exists a distance D such that if we travel along the segment\n     * from one * endpoint towards the other a distance D, we find\n     * ourselves at point P.\n     *\n     * Return value indicates:\n     *\n     *   1: point lies above the segment (to the left of vertical)\n     *   0: point is colinear to segment\n     *  -1: point lies below the segment (to the right of vertical)\n     */\n\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var lPt = this.leftSE.point;\n      var rPt = this.rightSE.point;\n      var v = this.vector(); // Exactly vertical segments.\n\n      if (lPt.x === rPt.x) {\n        if (point.x === lPt.x) return 0;\n        return point.x < lPt.x ? 1 : -1;\n      } // Nearly vertical segments with an intersection.\n      // Check to see where a point on the line with matching Y coordinate is.\n\n\n      var yDist = (point.y - lPt.y) / v.y;\n      var xFromYDist = lPt.x + yDist * v.x;\n      if (point.x === xFromYDist) return 0; // General case.\n      // Check to see where a point on the line with matching X coordinate is.\n\n      var xDist = (point.x - lPt.x) / v.x;\n      var yFromXDist = lPt.y + xDist * v.y;\n      if (point.y === yFromXDist) return 0;\n      return point.y < yFromXDist ? -1 : 1;\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var tBbox = this.bbox();\n      var oBbox = other.bbox();\n      var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n      if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n\n      var tlp = this.leftSE.point;\n      var trp = this.rightSE.point;\n      var olp = other.leftSE.point;\n      var orp = other.rightSE.point; // does each endpoint touch the other segment?\n      // note that we restrict the 'touching' definition to only allow segments\n      // to touch endpoints that lie forward from where we are in the sweep line pass\n\n      var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n      var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n      var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n      var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return trp;\n        if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n\n        return null;\n      } // does this left endpoint matches (other doesn't)\n\n\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE) {\n          if (tlp.x === orp.x && tlp.y === orp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return tlp;\n      } // does other left endpoint matches (this doesn't)\n\n\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE) {\n          if (trp.x === olp.x && trp.y === olp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return olp;\n      } // trivial intersection on right endpoints\n\n\n      if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n      if (touchesThisRSE) return trp;\n      if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n\n      var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n\n      if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n      if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n      return rounder.round(pt.x, pt.y);\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(point) {\n      var newEvents = [];\n      var alreadyLinked = point.events !== undefined;\n      var newLeftSE = new SweepEvent(point, true);\n      var newRightSE = new SweepEvent(point, false);\n      var oldRightSE = this.rightSE;\n      this.replaceRightSE(newRightSE);\n      newEvents.push(newRightSE);\n      newEvents.push(newLeftSE);\n      var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n      // sometimes one of the resulting new segments is vertical, in which\n      // case its left and right events may need to be swapped\n\n      if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n        newSeg.swapEvents();\n      }\n\n      if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n        this.swapEvents();\n      } // in the point we just used to create new sweep events with was already\n      // linked to other events, we need to check if either of the affected\n      // segments should be consumed\n\n\n      if (alreadyLinked) {\n        newLeftSE.checkForConsuming();\n        newRightSE.checkForConsuming();\n      }\n\n      return newEvents;\n    }\n    /* Swap which event is left and right */\n\n  }, {\n    key: \"swapEvents\",\n    value: function swapEvents() {\n      var tmpEvt = this.rightSE;\n      this.rightSE = this.leftSE;\n      this.leftSE = tmpEvt;\n      this.leftSE.isLeft = true;\n      this.rightSE.isLeft = false;\n\n      for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n        this.windings[i] *= -1;\n      }\n    }\n    /* Consume another segment. We take their rings under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n\n      while (consumer.consumedBy) {\n        consumer = consumer.consumedBy;\n      }\n\n      while (consumee.consumedBy) {\n        consumee = consumee.consumedBy;\n      }\n\n      var cmp = Segment.compare(consumer, consumee);\n      if (cmp === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n\n      if (cmp > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      } // make sure a segment doesn't consume it's prev\n\n\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n\n      for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n        var ring = consumee.rings[i];\n        var winding = consumee.windings[i];\n        var index = consumer.rings.indexOf(ring);\n\n        if (index === -1) {\n          consumer.rings.push(ring);\n          consumer.windings.push(winding);\n        } else consumer.windings[index] += winding;\n      }\n\n      consumee.rings = null;\n      consumee.windings = null;\n      consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      if (this._prevInResult !== undefined) return this._prevInResult;\n      if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n      return this._prevInResult;\n    }\n  }, {\n    key: \"beforeState\",\n    value: function beforeState() {\n      if (this._beforeState !== undefined) return this._beforeState;\n      if (!this.prev) this._beforeState = {\n        rings: [],\n        windings: [],\n        multiPolys: []\n      };else {\n        var seg = this.prev.consumedBy || this.prev;\n        this._beforeState = seg.afterState();\n      }\n      return this._beforeState;\n    }\n  }, {\n    key: \"afterState\",\n    value: function afterState() {\n      if (this._afterState !== undefined) return this._afterState;\n      var beforeState = this.beforeState();\n      this._afterState = {\n        rings: beforeState.rings.slice(0),\n        windings: beforeState.windings.slice(0),\n        multiPolys: []\n      };\n      var ringsAfter = this._afterState.rings;\n      var windingsAfter = this._afterState.windings;\n      var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n      for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n        var ring = this.rings[i];\n        var winding = this.windings[i];\n        var index = ringsAfter.indexOf(ring);\n\n        if (index === -1) {\n          ringsAfter.push(ring);\n          windingsAfter.push(winding);\n        } else windingsAfter[index] += winding;\n      } // calcualte polysAfter\n\n\n      var polysAfter = [];\n      var polysExclude = [];\n\n      for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n        if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n        var _ring = ringsAfter[_i];\n        var poly = _ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (_ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n          var _index = polysAfter.indexOf(_ring.poly);\n\n          if (_index !== -1) polysAfter.splice(_index, 1);\n        }\n      } // calculate multiPolysAfter\n\n\n      for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n        var mp = polysAfter[_i2].multiPoly;\n        if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n      }\n\n      return this._afterState;\n    }\n    /* Is this segment part of the final result? */\n\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      if (this._isInResult !== undefined) return this._isInResult;\n      var mpsBefore = this.beforeState().multiPolys;\n      var mpsAfter = this.afterState().multiPolys;\n\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            this._isInResult = noBefores !== noAfters;\n            break;\n          }\n\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n\n            this._isInResult = most === operation.numMultiPolys && least < most;\n            break;\n          }\n\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            this._isInResult = diff % 2 === 1;\n            break;\n          }\n\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n\n            this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n            break;\n          }\n\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n\n      return this._isInResult;\n    }\n  }], [{\n    key: \"fromRing\",\n    value: function fromRing(pt1, pt2, ring) {\n      var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n      var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n      if (cmpPts < 0) {\n        leftPt = pt1;\n        rightPt = pt2;\n        winding = 1;\n      } else if (cmpPts > 0) {\n        leftPt = pt2;\n        rightPt = pt1;\n        winding = -1;\n      } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n      var leftSE = new SweepEvent(leftPt, true);\n      var rightSE = new SweepEvent(rightPt, false);\n      return new Segment(leftSE, rightSE, [ring], [winding]);\n    }\n  }]);\n\n  return Segment;\n}();\n\nvar RingIn = /*#__PURE__*/function () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n\n    if (!Array.isArray(geomRing) || geomRing.length === 0) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n\n    if (typeof geomRing[0][0] !== 'number' || typeof geomRing[0][1] !== 'number') {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    var firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n    this.bbox = {\n      ll: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      },\n      ur: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      }\n    };\n    var prevPoint = firstPoint;\n\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      if (typeof geomRing[i][0] !== 'number' || typeof geomRing[i][1] !== 'number') {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      var point = rounder.round(geomRing[i][0], geomRing[i][1]); // skip repeated points\n\n      if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n      if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n      if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n      if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    } // add segment from last to first if last is not the same as first\n\n\n    if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n      this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n    }\n  }\n\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return RingIn;\n}();\nvar PolyIn = /*#__PURE__*/function () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n\n    if (!Array.isArray(geomPoly)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n    this.bbox = {\n      ll: {\n        x: this.exteriorRing.bbox.ll.x,\n        y: this.exteriorRing.bbox.ll.y\n      },\n      ur: {\n        x: this.exteriorRing.bbox.ur.x,\n        y: this.exteriorRing.bbox.ur.y\n      }\n    };\n    this.interiorRings = [];\n\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      var ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n\n    this.multiPoly = multiPoly;\n  }\n\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return PolyIn;\n}();\nvar MultiPolyIn = /*#__PURE__*/function () {\n  function MultiPolyIn(geom, isSubject) {\n    _classCallCheck(this, MultiPolyIn);\n\n    if (!Array.isArray(geom)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    try {\n      // if the input looks like a polygon, convert it to a multipolygon\n      if (typeof geom[0][0][0] === 'number') geom = [geom];\n    } catch (ex) {// The input is either malformed or has empty arrays.\n      // In either case, it will be handled later on.\n    }\n\n    this.polys = [];\n    this.bbox = {\n      ll: {\n        x: Number.POSITIVE_INFINITY,\n        y: Number.POSITIVE_INFINITY\n      },\n      ur: {\n        x: Number.NEGATIVE_INFINITY,\n        y: Number.NEGATIVE_INFINITY\n      }\n    };\n\n    for (var i = 0, iMax = geom.length; i < iMax; i++) {\n      var poly = new PolyIn(geom[i], this);\n      if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n\n    this.isSubject = isSubject;\n  }\n\n  _createClass(MultiPolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return MultiPolyIn;\n}();\n\nvar RingOut = /*#__PURE__*/function () {\n  _createClass(RingOut, null, [{\n    key: \"factory\",\n\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    value: function factory(allSegments) {\n      var ringsOut = [];\n\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n        /* Walk the chain of linked events to form a closed ring */\n\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n          /* Is the ring complete? */\n\n          if (event.point === startingPoint) break;\n\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n            /* Only one way to go, so cotinue on the path */\n\n\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n            /* We must have an intersection. Check for a completed loop */\n\n\n            var indexLE = null;\n\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n\n\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n\n\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n\n        ringsOut.push(new RingOut(events));\n      }\n\n      return ringsOut;\n    }\n  }]);\n\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n\n    this.events = events;\n\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n\n    this.poly = null;\n  }\n\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      } // ring was all (within rounding error of angle calc) colinear points\n\n\n      if (points.length === 1) return null; // check if the starting point is necessary\n\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n\n      for (var _i = iStart; _i != iEnd; _i += step) {\n        orderedPoints.push([points[_i].x, points[_i].y]);\n      }\n\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n\n      return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n\n        if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        } // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n\n\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }]);\n\n  return RingOut;\n}();\nvar PolyOut = /*#__PURE__*/function () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n      if (geom[0] === null) return null;\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n\n      return geom;\n    }\n  }]);\n\n  return PolyOut;\n}();\nvar MultiPolyOut = /*#__PURE__*/function () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n\n      return polys;\n    }\n  }]);\n\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nvar SweepLine = /*#__PURE__*/function () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n    _classCallCheck(this, SweepLine);\n\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = []; // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n\n      if (event.consumedBy) {\n        if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n        return newEvents;\n      }\n\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined; // skip consumed segments still in tree\n\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      } // skip consumed segments still in tree\n\n\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n\n      if (event.isLeft) {\n        // Check for intersections against the previous segment in the sweep line\n        var prevMySplitter = null;\n\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        } // Check for intersections against the next segment in the sweep line\n\n\n        var nextMySplitter = null;\n\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        } // For simplicity, even if we find more than one intersection we only\n        // spilt on the 'earliest' (sweep-line style) of the intersections.\n        // The other intersection will be handled in a future process().\n\n\n        if (prevMySplitter !== null || nextMySplitter !== null) {\n          var mySplitter = null;\n          if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n            mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n          } // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n\n          var _newEventsFromSplit2 = segment.split(mySplitter);\n\n          for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n            newEvents.push(_newEventsFromSplit2[_i2]);\n          }\n        }\n\n        if (newEvents.length > 0) {\n          // We found some intersections, so re-do the current event to\n          // make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers\n          this.tree.remove(segment);\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n\n        this.tree.remove(segment);\n      }\n\n      return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split(pt);\n      newEvents.push(rightSE); // splitting can trigger consumption\n\n      if (seg.consumedBy === undefined) this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n\n  return SweepLine;\n}();\n\nvar POLYGON_CLIPPING_MAX_QUEUE_SIZE = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1000000;\nvar POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1000000;\nvar Operation = /*#__PURE__*/function () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      rounder.reset();\n      /* Convert inputs to MultiPoly objects */\n\n      var multipolys = [new MultiPolyIn(geom, true)];\n\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n      }\n\n      operation.numMultiPolys = multipolys.length;\n      /* BBox optimization for difference operation\n       * If the bbox of a multipolygon that's part of the clipping doesn't\n       * intersect the bbox of the subject at all, we can just drop that\n       * multiploygon. */\n\n      if (operation.type === 'difference') {\n        // in place removal\n        var subject = multipolys[0];\n        var _i = 1;\n\n        while (_i < multipolys.length) {\n          if (getBboxOverlap(multipolys[_i].bbox, subject.bbox) !== null) _i++;else multipolys.splice(_i, 1);\n        }\n      }\n      /* BBox optimization for intersection operation\n       * If we can find any pair of multipolygons whose bbox does not overlap,\n       * then the result will be empty. */\n\n\n      if (operation.type === 'intersection') {\n        // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n        //       it could be optimized to O(n * ln(n))\n        for (var _i2 = 0, _iMax = multipolys.length; _i2 < _iMax; _i2++) {\n          var mpA = multipolys[_i2];\n\n          for (var j = _i2 + 1, jMax = multipolys.length; j < jMax; j++) {\n            if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n          }\n        }\n      }\n      /* Put segment endpoints in a priority queue */\n\n\n      var queue = new SplayTree(SweepEvent.compare);\n\n      for (var _i3 = 0, _iMax2 = multipolys.length; _i3 < _iMax2; _i3++) {\n        var sweepEvents = multipolys[_i3].getSweepEvents();\n\n        for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n          queue.insert(sweepEvents[_j]);\n\n          if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when putting segment endpoints in a priority queue ' + '(queue size too big). Please file a bug report.');\n          }\n        }\n      }\n      /* Pass the sweep line over those endpoints */\n\n\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n\n      while (node) {\n        var evt = node.key;\n\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          var seg = evt.segment;\n          throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n        }\n\n        if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error('Infinite loop when passing sweep line over endpoints ' + '(queue size too big). Please file a bug report.');\n        }\n\n        if (sweepLine.segments.length > POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error('Infinite loop when passing sweep line over endpoints ' + '(too many sweep line segments). Please file a bug report.');\n        }\n\n        var newEvents = sweepLine.process(evt);\n\n        for (var _i4 = 0, _iMax3 = newEvents.length; _i4 < _iMax3; _i4++) {\n          var _evt = newEvents[_i4];\n          if (_evt.consumedBy === undefined) queue.insert(_evt);\n        }\n\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      } // free some memory we don't need anymore\n\n\n      rounder.reset();\n      /* Collect and compile segments we're keeping into a multipolygon */\n\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n\n  return Operation;\n}(); // singleton available by import\n\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n\n  return operation.run('union', geom, moreGeoms);\n};\n\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n\n  return operation.run('intersection', geom, moreGeoms);\n};\n\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n\n  return operation.run('xor', geom, moreGeoms);\n};\n\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\n\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\nexport default class SplayTree {\n\n  constructor(compare = DEFAULT_COMPARE, noDuplicates = false) {\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  }\n\n\n  rotateLeft(x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) y.left.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)                this._root = y;\n    else if (x === x.parent.left) x.parent.left = y;\n    else                          x.parent.right = y;\n    if (y) y.left = x;\n    x.parent = y;\n  }\n\n\n  rotateRight(x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) y.right.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)               this._root = y;\n    else if(x === x.parent.left) x.parent.left = y;\n    else                         x.parent.right = y;\n    if (y) y.right = x;\n    x.parent = y;\n  }\n\n\n  _splay(x) {\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) this.rotateRight(p);\n        else              this.rotateLeft(p);\n      } else if (p.left === x && p.parent.left === p) {\n        this.rotateRight(p.parent);\n        this.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this.rotateLeft(p.parent);\n        this.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this.rotateRight(p);\n        this.rotateLeft(p);\n      } else {\n        this.rotateLeft(p);\n        this.rotateRight(p);\n      }\n    }\n  }\n\n\n  splay(x) {\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) ggp.left  = x;\n        else                 ggp.right = x;\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else gp.left = null;\n\n            p.right   = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else gp.right = null;\n\n            x.left    = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else p.left = null;\n\n        x.right  = p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else gp.right = null;\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else gp.left = null;\n\n            x.right   = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else p.right = null;\n\n        x.left   = p;\n        p.parent = x;\n      }\n    }\n  }\n\n\n  replace(u, v) {\n    if (!u.parent) this._root = v;\n    else if (u === u.parent.left) u.parent.left = v;\n    else u.parent.right = v;\n    if (v) v.parent = u.parent;\n  }\n\n\n  minNode(u = this._root) {\n    if (u) while (u.left) u = u.left;\n    return u;\n  }\n\n\n  maxNode(u = this._root) {\n    if (u) while (u.right) u = u.right;\n    return u;\n  }\n\n\n  insert(key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) return;\n        else if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    }\n\n    z = { key, data, left: null, right: null, parent: p };\n\n    if (!p)                          this._root = z;\n    else if (comp(p.key, z.key) < 0) p.right = z;\n    else                             p.left  = z;\n\n    this.splay(z);\n    this._size++;\n    return z;\n  }\n\n\n  find (key) {\n    var z    = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if      (cmp < 0) z = z.right;\n      else if (cmp > 0) z = z.left;\n      else              return z;\n    }\n    return null;\n  }\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param  {Key} key\n   * @return {boolean} true/false\n   */\n  contains (key) {\n    var node       = this._root;\n    var comparator = this._compare;\n    while (node)  {\n      var cmp = comparator(key, node.key);\n      if      (cmp === 0) return true;\n      else if (cmp < 0)   node = node.left;\n      else                node = node.right;\n    }\n\n    return false;\n  }\n\n\n  remove (key) {\n    var z = this.find(key);\n\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  removeNode(z) {\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  erase (key) {\n    var z = this.find(key);\n    if (!z) return;\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) sMax.right = t;\n      else   this._root = t;\n      t.parent = sMax;\n    }\n\n    this._size--;\n  }\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) node = node.left;\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  }\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) successor = successor.left;\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  }\n\n\n  /**\n   * Predecessor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) predecessor = predecessor.right;\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param  {forEachCallback} callback\n   * @return {SplayTree}\n   */\n  forEach(callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range(low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._compare;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load(keys = [], values = [], presort = false) {\n    if (this._size !== 0) throw new Error('bulk-load: tree is not empty');\n    const size = keys.length;\n    if (presort) sort(keys, values, 0, size - 1, this._compare);\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  }\n\n\n  min() {\n    var node = this.minNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n\n  max() {\n    var node = this.maxNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n  isEmpty() { return this._root === null; }\n  get size() { return this._size; }\n\n\n  /**\n   * Create a tree and load it with items\n   * @param  {Array<Key>}          keys\n   * @param  {Array<Value>?}        [values]\n\n   * @param  {Function?}            [comparator]\n   * @param  {Boolean?}             [presort=false] Pre-sort keys and values, using\n   *                                               tree's comparator. Sorting is done\n   *                                               in-place\n   * @param  {Boolean?}             [noDuplicates=false]   Allow duplicates\n   * @return {SplayTree}\n   */\n  static createTree(keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","export const NORMAL               = 0;\nexport const NON_CONTRIBUTING     = 1;\nexport const SAME_TRANSITION      = 2;\nexport const DIFFERENT_TRANSITION = 3;\n","export const INTERSECTION = 0;\nexport const UNION        = 1;\nexport const DIFFERENCE   = 2;\nexport const XOR          = 3;\n","import {\n  NORMAL,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION,\n  NON_CONTRIBUTING\n} from './edge_type';\nimport {\n  INTERSECTION,\n  UNION,\n  DIFFERENCE,\n  XOR\n} from './operation';\n\n/**\n * @param  {SweepEvent} event\n * @param  {SweepEvent} prev\n * @param  {Operation} operation\n */\nexport default function computeFields (event, prev, operation) {\n  // compute inOut and otherInOut fields\n  if (prev === null) {\n    event.inOut      = false;\n    event.otherInOut = true;\n\n  // previous line segment in sweepline belongs to the same polygon\n  } else {\n    if (event.isSubject === prev.isSubject) {\n      event.inOut      = !prev.inOut;\n      event.otherInOut = prev.otherInOut;\n\n    // previous line segment in sweepline belongs to the clipping polygon\n    } else {\n      event.inOut      = !prev.otherInOut;\n      event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n    }\n\n    // compute prevInResult field\n    if (prev) {\n      event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n        ? prev.prevInResult : prev;\n    }\n  }\n\n  // check if the line segment belongs to the Boolean operation\n  event.inResult = inResult(event, operation);\n}\n\n\n/* eslint-disable indent */\nfunction inResult(event, operation) {\n  switch (event.type) {\n    case NORMAL:\n      switch (operation) {\n        case INTERSECTION:\n          return !event.otherInOut;\n        case UNION:\n          return event.otherInOut;\n        case DIFFERENCE:\n          // return (event.isSubject && !event.otherInOut) ||\n          //         (!event.isSubject && event.otherInOut);\n          return (event.isSubject && event.otherInOut) ||\n                  (!event.isSubject && !event.otherInOut);\n        case XOR:\n          return true;\n      }\n      break;\n    case SAME_TRANSITION:\n      return operation === INTERSECTION || operation === UNION;\n    case DIFFERENT_TRANSITION:\n      return operation === DIFFERENCE;\n    case NON_CONTRIBUTING:\n      return false;\n  }\n  return false;\n}\n/* eslint-enable indent */\n","import { NORMAL } from './edge_type';\n\n\nexport default class SweepEvent {\n\n\n  /**\n   * Sweepline event\n   *\n   * @class {SweepEvent}\n   * @param {Array.<Number>}  point\n   * @param {Boolean}         left\n   * @param {SweepEvent=}     otherEvent\n   * @param {Boolean}         isSubject\n   * @param {Number}          edgeType\n   */\n  constructor (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Does event belong to result?\n     * @type {Boolean}\n     */\n    this.inResult = false;\n\n\n    // connection step\n\n    /**\n     * @type {Boolean}\n     */\n    this.resultInOut = false;\n\n    this.isExteriorRing = true;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isBelow (p) {\n    const p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isAbove (p) {\n    return !this.isBelow(p);\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  }\n\n\n  clone () {\n    const copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.inResult       = this.inResult;\n    copy.prevInResult   = this.prevInResult;\n    copy.isExteriorRing = this.isExteriorRing;\n    copy.inOut          = this.inOut;\n    copy.otherInOut     = this.otherInOut;\n\n    return copy;\n  }\n}\n","export default function equals(p1, p2) {\n  if (p1[0] === p2[0]) {\n    if (p1[1] === p2[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\n\n// const EPSILON = 1e-9;\n// const abs = Math.abs;\n// TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n// Precision problem.\n//\n// module.exports = function equals(p1, p2) {\n//   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n// };\n","/**\n * Signed area of the triangle (p0, p1, p2)\n * @param  {Array.<Number>} p0\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Number}\n */\nexport default function signedArea(p0, p1, p2) {\n  return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n}\n","import signedArea from './signed_area';\n\n/**\n * @param  {SweepEvent} e1\n * @param  {SweepEvent} e2\n * @return {Number}\n */\nexport default function compareEvents(e1, e2) {\n  const p1 = e1.point;\n  const p2 = e2.point;\n\n  // Different x-coordinate\n  if (p1[0] > p2[0]) return 1;\n  if (p1[0] < p2[0]) return -1;\n\n  // Different points, but same x-coordinate\n  // Event with lower y-coordinate is processed first\n  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\n  return specialCases(e1, e2, p1, p2);\n}\n\n\n/* eslint-disable no-unused-vars */\nfunction specialCases(e1, e2, p1, p2) {\n  // Same coordinates, but one is a left endpoint and the other is\n  // a right endpoint. The right endpoint is processed first\n  if (e1.left !== e2.left)\n    return e1.left ? 1 : -1;\n\n  // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n  // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n  // Same coordinates, both events\n  // are left endpoints or right endpoints.\n  // not collinear\n  if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n    // the event associate to the bottom segment is processed first\n    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n  }\n\n  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n}\n/* eslint-enable no-unused-vars */\n","import SweepEvent    from './sweep_event';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\n\n/**\n * @param  {SweepEvent} se\n * @param  {Array.<Number>} p\n * @param  {Queue} queue\n * @return {Queue}\n */\nexport default function divideSegment(se, p, queue)  {\n  const r = new SweepEvent(p, false, se,            se.isSubject);\n  const l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n  /* eslint-disable no-console */\n  if (equals(se.point, se.otherEvent.point)) {\n\n    console.warn('what is that, a collapsed segment?', se);\n  }\n  /* eslint-enable no-console */\n\n  r.contourId = l.contourId = se.contourId;\n\n  // avoid a rounding error. The left event would be processed after the right event\n  if (compareEvents(l, se.otherEvent) > 0) {\n    se.otherEvent.left = true;\n    l.left = false;\n  }\n\n  // avoid a rounding error. The left event would be processed after the right event\n  // if (compareEvents(se, r) > 0) {}\n\n  se.otherEvent.otherEvent = l;\n  se.otherEvent = r;\n\n  queue.push(l);\n  queue.push(r);\n\n  return queue;\n}\n","//const EPS = 1e-9;\n\n/**\n * Finds the magnitude of the cross product of two vectors (if we pretend\n * they're in three dimensions)\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The magnitude of the cross product\n */\nfunction crossProduct(a, b) {\n  return (a[0] * b[1]) - (a[1] * b[0]);\n}\n\n/**\n * Finds the dot product of two vectors.\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The dot product\n */\nfunction dotProduct(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]);\n}\n\n/**\n * Finds the intersection (if any) between two line segments a and b, given the\n * line segments' end points a1, a2 and b1, b2.\n *\n * This algorithm is based on Schneider and Eberly.\n * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n * Page 244.\n *\n * @param {Array.<Number>} a1 point of first line\n * @param {Array.<Number>} a2 point of first line\n * @param {Array.<Number>} b1 point of second line\n * @param {Array.<Number>} b2 point of second line\n * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n *                                         (meaning connected segments) as\n *                                         intersections\n * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n * intersection. If they overlap, the two end points of the overlapping segment.\n * Otherwise, null.\n */\nexport default function (a1, a2, b1, b2, noEndpointTouch) {\n  // The algorithm expects our lines in the form P + sd, where P is a point,\n  // s is on the interval [0, 1], and d is a vector.\n  // We are passed two points. P can be the first point of each pair. The\n  // vector, then, could be thought of as the distance (in x and y components)\n  // from the first point to the second point.\n  // So first, let's make our vectors:\n  const va = [a2[0] - a1[0], a2[1] - a1[1]];\n  const vb = [b2[0] - b1[0], b2[1] - b1[1]];\n  // We also define a function to convert back to regular point form:\n\n  /* eslint-disable arrow-body-style */\n\n  function toPoint(p, s, d) {\n    return [\n      p[0] + s * d[0],\n      p[1] + s * d[1]\n    ];\n  }\n\n  /* eslint-enable arrow-body-style */\n\n  // The rest is pretty much a straight port of the algorithm.\n  const e = [b1[0] - a1[0], b1[1] - a1[1]];\n  let kross    = crossProduct(va, vb);\n  let sqrKross = kross * kross;\n  const sqrLenA  = dotProduct(va, va);\n  //const sqrLenB  = dotProduct(vb, vb);\n\n  // Check for line intersection. This works because of the properties of the\n  // cross product -- specifically, two vectors are parallel if and only if the\n  // cross product is the 0 vector. The full calculation involves relative error\n  // to account for possible very small line segments. See Schneider & Eberly\n  // for details.\n  if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n    // If they're not parallel, then (because these are line segments) they\n    // still might not actually intersect. This code checks that the\n    // intersection point of the lines is actually on both line segments.\n    const s = crossProduct(e, vb) / kross;\n    if (s < 0 || s > 1) {\n      // not on line segment a\n      return null;\n    }\n    const t = crossProduct(e, va) / kross;\n    if (t < 0 || t > 1) {\n      // not on line segment b\n      return null;\n    }\n    if (s === 0 || s === 1) {\n      // on an endpoint of line segment a\n      return noEndpointTouch ? null : [toPoint(a1, s, va)];\n    }\n    if (t === 0 || t === 1) {\n      // on an endpoint of line segment b\n      return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n    }\n    return [toPoint(a1, s, va)];\n  }\n\n  // If we've reached this point, then the lines are either parallel or the\n  // same, but the segments could overlap partially or fully, or not at all.\n  // So we need to find the overlap, if any. To do that, we can use e, which is\n  // the (vector) difference between the two initial points. If this is parallel\n  // with the line itself, then the two lines are the same line, and there will\n  // be overlap.\n  //const sqrLenE = dotProduct(e, e);\n  kross = crossProduct(e, va);\n  sqrKross = kross * kross;\n\n  if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n  // Lines are just parallel, not the same. No overlap.\n    return null;\n  }\n\n  const sa = dotProduct(va, e) / sqrLenA;\n  const sb = sa + dotProduct(va, vb) / sqrLenA;\n  const smin = Math.min(sa, sb);\n  const smax = Math.max(sa, sb);\n\n  // this is, essentially, the FindIntersection acting on floats from\n  // Schneider & Eberly, just inlined into this function.\n  if (smin <= 1 && smax >= 0) {\n\n    // overlap on an end point\n    if (smin === 1) {\n      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n    }\n\n    if (smax === 0) {\n      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n    }\n\n    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\n    // There's overlap on a segment -- two points of intersection. Return both.\n    return [\n      toPoint(a1, smin > 0 ? smin : 0, va),\n      toPoint(a1, smax < 1 ? smax : 1, va)\n    ];\n  }\n\n  return null;\n}\n","import divideSegment from './divide_segment';\nimport intersection  from './segment_intersection';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\nimport {\n  NON_CONTRIBUTING,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION\n} from './edge_type';\n\n/**\n * @param  {SweepEvent} se1\n * @param  {SweepEvent} se2\n * @param  {Queue}      queue\n * @return {Number}\n */\nexport default function possibleIntersection (se1, se2, queue) {\n  // that disallows self-intersecting polygons,\n  // did cost us half a day, so I'll leave it\n  // out of respect\n  // if (se1.isSubject === se2.isSubject) return;\n  const inter = intersection(\n    se1.point, se1.otherEvent.point,\n    se2.point, se2.otherEvent.point\n  );\n\n  const nintersections = inter ? inter.length : 0;\n  if (nintersections === 0) return 0; // no intersection\n\n  // the line segments intersect at an endpoint of both line segments\n  if ((nintersections === 1) &&\n      (equals(se1.point, se2.point) ||\n       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n    return 0;\n  }\n\n  if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n    // if(se1.contourId === se2.contourId){\n    // console.warn('Edges of the same polygon overlap',\n    //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n    // }\n    //throw new Error('Edges of the same polygon overlap');\n    return 0;\n  }\n\n  // The line segments associated to se1 and se2 intersect\n  if (nintersections === 1) {\n\n    // if the intersection point is not an endpoint of se1\n    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n      divideSegment(se1, inter[0], queue);\n    }\n\n    // if the intersection point is not an endpoint of se2\n    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n      divideSegment(se2, inter[0], queue);\n    }\n    return 1;\n  }\n\n  // The line segments associated to se1 and se2 overlap\n  const events        = [];\n  let leftCoincide  = false;\n  let rightCoincide = false;\n\n  if (equals(se1.point, se2.point)) {\n    leftCoincide = true; // linked\n  } else if (compareEvents(se1, se2) === 1) {\n    events.push(se2, se1);\n  } else {\n    events.push(se1, se2);\n  }\n\n  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n    rightCoincide = true;\n  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n    events.push(se2.otherEvent, se1.otherEvent);\n  } else {\n    events.push(se1.otherEvent, se2.otherEvent);\n  }\n\n  if ((leftCoincide && rightCoincide) || leftCoincide) {\n    // both line segments are equal or share the left endpoint\n    se2.type = NON_CONTRIBUTING;\n    se1.type = (se2.inOut === se1.inOut)\n      ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n    if (leftCoincide && !rightCoincide) {\n      // honestly no idea, but changing events selection from [2, 1]\n      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n      divideSegment(events[1].otherEvent, events[0].point, queue);\n    }\n    return 2;\n  }\n\n  // the line segments share the right endpoint\n  if (rightCoincide) {\n    divideSegment(events[0], events[1].point, queue);\n    return 3;\n  }\n\n  // no line segment includes totally the other one\n  if (events[0] !== events[3].otherEvent) {\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[1], events[2].point, queue);\n    return 3;\n  }\n\n  // one line segment includes the other one\n  divideSegment(events[0], events[1].point, queue);\n  divideSegment(events[3].otherEvent, events[2].point, queue);\n\n  return 3;\n}\n","import signedArea    from './signed_area';\nimport compareEvents from './compare_events';\nimport equals        from './equals';\n\n\n/**\n * @param  {SweepEvent} le1\n * @param  {SweepEvent} le2\n * @return {Number}\n */\nexport default function compareSegments(le1, le2) {\n  if (le1 === le2) return 0;\n\n  // Segments are not collinear\n  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n    // If they share their left endpoint use the right endpoint to sort\n    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\n    // Different left endpoint: use the left endpoint to sort\n    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\n    // has the line segment associated to e1 been inserted\n    // into S after the line segment associated to e2 ?\n    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\n    // The line segment associated to e2 has been inserted\n    // into S after the line segment associated to e1\n    return le1.isBelow(le2.point) ? -1 : 1;\n  }\n\n  if (le1.isSubject === le2.isSubject) { // same polygon\n    let p1 = le1.point, p2 = le2.point;\n    if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n      p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]) return 0;\n      else return le1.contourId > le2.contourId ? 1 : -1;\n    }\n  } else { // Segments are collinear, but belong to separate polygons\n    return le1.isSubject ? -1 : 1;\n  }\n\n  return compareEvents(le1, le2) === 1 ? 1 : -1;\n}\n","import compareEvents from './compare_events';\nimport { DIFFERENCE } from './operation';\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<SweepEvent>}\n */\nfunction orderEvents(sortedEvents) {\n  let event, i, len, tmp;\n  const resultEvents = [];\n  for (i = 0, len = sortedEvents.length; i < len; i++) {\n    event = sortedEvents[i];\n    if ((event.left && event.inResult) ||\n      (!event.left && event.otherEvent.inResult)) {\n      resultEvents.push(event);\n    }\n  }\n  // Due to overlapping edges the resultEvents array can be not wholly sorted\n  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if ((i + 1) < len &&\n        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n        tmp = resultEvents[i];\n        resultEvents[i] = resultEvents[i + 1];\n        resultEvents[i + 1] = tmp;\n        sorted = false;\n      }\n    }\n  }\n\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    event.pos = i;\n  }\n\n  // imagine, the right event is found in the beginning of the queue,\n  // when his left counterpart is not marked yet\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    if (!event.left) {\n      tmp = event.pos;\n      event.pos = event.otherEvent.pos;\n      event.otherEvent.pos = tmp;\n    }\n  }\n\n  return resultEvents;\n}\n\n\n/**\n * @param  {Number} pos\n * @param  {Array.<SweepEvent>} resultEvents\n * @param  {Object>}    processed\n * @return {Number}\n */\nfunction nextPos(pos, resultEvents, processed, origIndex) {\n  let p, p1;\n  let newPos = pos + 1;\n  const length = resultEvents.length;\n\n  p  = resultEvents[pos].point;\n\n  if (newPos < length)\n    p1 = resultEvents[newPos].point;\n\n\n  // while in range and not the current one by value\n  while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n    if (!processed[newPos]) {\n      return newPos;\n    } else   {\n      newPos++;\n    }\n    p1 = resultEvents[newPos].point;\n  }\n\n  newPos = pos - 1;\n\n  while (processed[newPos] && newPos >= origIndex) {\n    newPos--;\n  }\n  return newPos;\n}\n\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<*>} polygons\n */\nexport default function connectEdges(sortedEvents, operation) {\n  let i, len;\n  const resultEvents = orderEvents(sortedEvents);\n\n  // \"false\"-filled array\n  const processed = {};\n  const result = [];\n  let event;\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    if (processed[i]) continue;\n    const contour = [[]];\n\n    if (!resultEvents[i].isExteriorRing) {\n      if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\n        result.push(contour);\n      } else if (result.length === 0) {\n        result.push([[contour]]);\n      } else {\n        result[result.length - 1].push(contour[0]);\n      }\n    } else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\n      result[result.length - 1].push(contour[0]);\n    } else {\n      result.push(contour);\n    }\n\n    const ringId = result.length - 1;\n    let pos = i;\n\n    const initial = resultEvents[i].point;\n    contour[0].push(initial);\n\n    while (pos >= i) {\n      event = resultEvents[pos];\n      processed[pos] = true;\n\n      if (event.left) {\n        event.resultInOut = false;\n        event.contourId   = ringId;\n      } else {\n        event.otherEvent.resultInOut = true;\n        event.otherEvent.contourId   = ringId;\n      }\n\n      pos = event.pos;\n      processed[pos] = true;\n      contour[0].push(resultEvents[pos].point);\n      pos = nextPos(pos, resultEvents, processed, i);\n    }\n\n    pos = pos === -1 ? i : pos;\n\n    event = resultEvents[pos];\n    processed[pos] = processed[event.pos] = true;\n    event.otherEvent.resultInOut = true;\n    event.otherEvent.contourId   = ringId;\n  }\n\n  // Handle if the result is a polygon (eg not multipoly)\n  // Commented it again, let's see what do we mean by that\n  // if (result.length === 1) result = result[0];\n  return result;\n}\n","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n","import Queue           from 'tinyqueue';\nimport SweepEvent      from './sweep_event';\nimport compareEvents   from './compare_events';\nimport { DIFFERENCE }  from './operation';\n\nconst max = Math.max;\nconst min = Math.min;\n\nlet contourId = 0;\n\n\nfunction processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n  let i, len, s1, s2, e1, e2;\n  for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n    s1 = contourOrHole[i];\n    s2 = contourOrHole[i + 1];\n    e1 = new SweepEvent(s1, false, undefined, isSubject);\n    e2 = new SweepEvent(s2, false, e1,        isSubject);\n    e1.otherEvent = e2;\n\n    if (s1[0] === s2[0] && s1[1] === s2[1]) {\n      continue; // skip collapsed edges, or it breaks\n    }\n\n    e1.contourId = e2.contourId = depth;\n    if (!isExteriorRing) {\n      e1.isExteriorRing = false;\n      e2.isExteriorRing = false;\n    }\n    if (compareEvents(e1, e2) > 0) {\n      e2.left = true;\n    } else {\n      e1.left = true;\n    }\n\n    const x = s1[0], y = s1[1];\n    bbox[0] = min(bbox[0], x);\n    bbox[1] = min(bbox[1], y);\n    bbox[2] = max(bbox[2], x);\n    bbox[3] = max(bbox[3], y);\n\n    // Pushing it so the queue is sorted from left to right,\n    // with object on the left having the highest priority.\n    Q.push(e1);\n    Q.push(e2);\n  }\n}\n\n\nexport default function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n  const eventQueue = new Queue(null, compareEvents);\n  let polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n  for (i = 0, ii = subject.length; i < ii; i++) {\n    polygonSet = subject[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n    }\n  }\n\n  for (i = 0, ii = clipping.length; i < ii; i++) {\n    polygonSet = clipping[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (operation === DIFFERENCE) isExteriorRing = false;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n    }\n  }\n\n  return eventQueue;\n}\n","import subdivideSegments from './subdivide_segments';\nimport connectEdges      from './connect_edges';\nimport fillQueue         from './fill_queue';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n}        from './operation';\n\nconst EMPTY = [];\n\n\nfunction trivialOperation(subject, clipping, operation) {\n  let result = null;\n  if (subject.length * clipping.length === 0) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = (subject.length === 0) ? clipping : subject;\n    }\n  }\n  return result;\n}\n\n\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n  let result = null;\n  if (sbbox[0] > cbbox[2] ||\n      cbbox[0] > sbbox[2] ||\n      sbbox[1] > cbbox[3] ||\n      cbbox[1] > sbbox[3]) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = subject.concat(clipping);\n    }\n  }\n  return result;\n}\n\n\nexport default function boolean(subject, clipping, operation) {\n  if (typeof subject[0][0][0] === 'number') {\n    subject = [subject];\n  }\n  if (typeof clipping[0][0][0] === 'number') {\n    clipping = [clipping];\n  }\n  let trivial = trivialOperation(subject, clipping, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  const sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n  const cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n  //console.time('fill queue');\n  const eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('fill queue');\n\n  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  //console.time('subdivide edges');\n  const sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('subdivide edges');\n\n  //console.time('connect vertices');\n  const result = connectEdges(sortedEvents, operation);\n  //console.timeEnd('connect vertices');\n  return result;\n}\n","import Tree                 from 'splaytree';\nimport computeFields        from './compute_fields';\nimport possibleIntersection from './possible_intersection';\nimport compareSegments      from './compare_segments';\nimport {\n  INTERSECTION,\n  DIFFERENCE\n} from './operation';\n\n\nexport default function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n  const sweepLine = new Tree(compareSegments);\n  const sortedEvents = [];\n\n  const rightbound = Math.min(sbbox[2], cbbox[2]);\n\n  let prev, next, begin;\n\n  while (eventQueue.length !== 0) {\n    let event = eventQueue.pop();\n    sortedEvents.push(event);\n\n    // optimization by bboxes for intersection and difference goes here\n    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n      break;\n    }\n\n    if (event.left) {\n      next  = prev = sweepLine.insert(event);\n      begin = sweepLine.minNode();\n\n      if (prev !== begin) prev = sweepLine.prev(prev);\n      else                prev = null;\n\n      next = sweepLine.next(next);\n\n      const prevEvent = prev ? prev.key : null;\n      let prevprevEvent;\n      computeFields(event, prevEvent, operation);\n      if (next) {\n        if (possibleIntersection(event, next.key, eventQueue) === 2) {\n          computeFields(event, prevEvent, operation);\n          computeFields(event, next.key, operation);\n        }\n      }\n\n      if (prev) {\n        if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n          let prevprev = prev;\n          if (prevprev !== begin) prevprev = sweepLine.prev(prevprev);\n          else                    prevprev = null;\n\n          prevprevEvent = prevprev ? prevprev.key : null;\n          computeFields(prevEvent, prevprevEvent, operation);\n          computeFields(event,     prevEvent,     operation);\n        }\n      }\n    } else {\n      event = event.otherEvent;\n      next = prev = sweepLine.find(event);\n\n      if (prev && next) {\n\n        if (prev !== begin) prev = sweepLine.prev(prev);\n        else                prev = null;\n\n        next = sweepLine.next(next);\n        sweepLine.remove(event);\n\n        if (next && prev) {\n          possibleIntersection(prev.key, next.key, eventQueue);\n        }\n      }\n    }\n  }\n  return sortedEvents;\n}\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","import { GeoJSONReader, GeoJSONWriter, UnionOp } from 'turf-jsts';\n\n/**\n * Takes two or more {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {...Feature<Polygon>} A polygon to combine\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union() {\n    var reader = new GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n\n    for (var i = 1; i < arguments.length; i++) {\n        result = UnionOp.union(result, reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n\n    var writer = new GeoJSONWriter();\n    result = writer.write(result);\n\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n}\n\nexport default union;\n","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\nexport default truncate;\n","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n","import { feature } from '@turf/helpers';\nimport { getCoords, getType } from '@turf/invariant';\n\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    // Backwards compatible with v4.0\n    var mutate = (typeof options === 'object') ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n\n    switch (type) {\n    case 'LineString':\n        newCoords = cleanLine(geojson);\n        break;\n    case 'MultiLineString':\n    case 'Polygon':\n        getCoords(geojson).forEach(function (line) {\n            newCoords.push(cleanLine(line));\n        });\n        break;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (polygons) {\n            var polyPoints = [];\n            polygons.forEach(function (ring) {\n                polyPoints.push(cleanLine(ring));\n            });\n            newCoords.push(polyPoints);\n        });\n        break;\n    case 'Point':\n        return geojson;\n    case 'MultiPoint':\n        var existing = {};\n        getCoords(geojson).forEach(function (coord) {\n            var key = coord.join('-');\n            if (!existing.hasOwnProperty(key)) {\n                newCoords.push(coord);\n                existing[key] = true;\n            }\n        });\n        break;\n    default:\n        throw new Error(type + ' geometry not supported');\n    }\n\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return {type: type, coordinates: newCoords};\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({type: type, coordinates: newCoords}, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\n\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1])) return points;\n\n    var prevPoint, point, nextPoint;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points[i - 1];\n        point = points[i];\n        nextPoint = points[i + 1];\n\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point)) {\n            newPoints.push(point);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n\n    if (cross !== 0) return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\nexport default cleanCoords;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport truncate from '@turf/truncate';\nimport { getGeom } from '@turf/invariant';\nimport { feature } from '@turf/helpers';\nimport cleanCoords from '@turf/clean-coords';\n\n// depend on jsts for now http://bjornharrtell.github.io/jsts/\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {Feature|null} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2) {\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n\n    // Return null if geometry is too narrow in coordinate precision\n    // fixes topology errors with JSTS\n    // https://github.com/Turfjs/turf/issues/463\n    // https://github.com/Turfjs/turf/pull/1004\n    if (cleanCoords(truncate(geom2, {precision: 4})).coordinates[0].length < 4) return null;\n    if (cleanCoords(truncate(geom1, {precision: 4})).coordinates[0].length < 4) return null;\n\n    var reader = new GeoJSONReader();\n    var a = reader.read(truncate(geom1));\n    var b = reader.read(truncate(geom2));\n    var intersection = OverlayOp.intersection(a, b);\n\n    // https://github.com/Turfjs/turf/issues/951\n    if (intersection.isEmpty()) return null;\n\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(intersection);\n    return feature(geom);\n}\n\nexport default intersect;\n","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport area from '@turf/area';\nimport { feature } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = getGeom(polygon1);\n    var geom2 = getGeom(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return feature(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new GeoJSONReader();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = OverlayOp.difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(differenced);\n\n    return feature(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (area(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        flattenEach(geom, function (feature$$1) {\n            if (area(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\nexport default difference;\n","import Vue from 'vue'\nimport App from './App.vue'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","isInBbox","bbox","point","ll","x","ur","y","getBboxOverlap","b1","b2","lowerX","upperX","epsilon","Number","EPSILON","undefined","Math","pow","EPSILON_SQ","cmp","a","b","ab","PtRounder","this","reset","value","xRounder","CoordRounder","yRounder","round","tree","SplayTree","coord","node","add","prevNode","prev","remove","nextNode","next","rounder","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","v1","v2","kross","v","sqrt","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","horizontalIntersection","pt","verticalIntersection","SweepEvent","isLeft","events","push","ptCmp","comparePoints","link","Segment","compare","segment","aPt","bPt","other","Error","otherEvents","iMax","evt","checkForConsuming","numEvents","evt1","consumedBy","j","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","set","sine","cosine","has","_cache$get","get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","leftSE","rightSE","rings","windings","id","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","ay","ax","by","bx","newRightSE","y1","y2","isAnEndpoint","lPt","rPt","vector","yDist","xFromYDist","xDist","yFromXDist","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","pt1","pt2","ve","d1","d2","intersection","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","newSeg","slice","swapEvents","tmpEvt","consumer","consumee","tmp","_tmp","ring","winding","index","indexOf","_prevInResult","prevInResult","_beforeState","seg","afterState","multiPolys","_afterState","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","_i","_iMax","_ring","poly","isExterior","_index","splice","_i2","_iMax2","mp","multiPoly","_isInResult","mpsBefore","operation","type","noBefores","noAfters","least","most","numMultiPolys","diff","abs","isJustSubject","mps","isSubject","concat","leftPt","rightPt","cmpPts","RingIn","geomRing","Array","isArray","segments","firstPoint","prevPoint","fromRing","sweepEvents","PolyIn","geomPoly","exteriorRing","interiorRings","getSweepEvents","ringSweepEvents","jMax","MultiPolyIn","geom","ex","polys","POSITIVE_INFINITY","NEGATIVE_INFINITY","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","firstPt","lastPt","indexLE","comparator","getLeftmostComparator","sort","intersectionLE","ringEvents","unshift","reverse","prevPt","points","_pt","_nextPt","nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","getGeom","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","arguments","insert","find","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","_newEventsFromSplit2","split","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","POLYGON_CLIPPING_MAX_QUEUE_SIZE","process","env","POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS","Operation","moreGeoms","multipolys","subject","mpA","_j","_jMax","size","sweepLine","prevQueueSize","pop","_evt","factory","_len","_key","run","_len2","_key2","_len3","_key3","subjectGeom","_len4","clippingGeoms","_key4","DEFAULT_COMPARE","noDuplicates","_compare","_root","_size","_noDuplicates","right","left","parent","p","rotateRight","rotateLeft","gp","ggp","l","r","u","data","z","comp","splay","minNode","replace","s","t","sMax","maxNode","returnValue","successor","predecessor","callback","current","done","low","high","fn","ctx","Q","call","keys","values","presort","pivot","loadRecursive","start","end","middle","floor","load","NORMAL","NON_CONTRIBUTING","SAME_TRANSITION","DIFFERENT_TRANSITION","INTERSECTION","UNION","DIFFERENCE","XOR","computeFields","inOut","otherInOut","isVertical","inResult","otherEvent","edgeType","resultInOut","p0","p1","isBelow","copy","equals","p2","signedArea","compareEvents","e1","e2","specialCases","divideSegment","se","console","warn","contourId","possibleIntersection","se1","se2","a1","a2","noEndpointTouch","va","vb","toPoint","d","e","sqrKross","sqrLenA","sa","sb","smin","min","smax","max","nintersections","leftCoincide","rightCoincide","compareSegments","le1","le2","isAbove","nextPos","pos","resultEvents","processed","origIndex","newPos","connectEdges","sortedEvents","len","sorted","orderEvents","result","contour","ringId","initial","TinyQueue","defaultCompare","_down","item","_up","top","peek","halfLength","best","processPolygon","contourOrHole","depth","s1","s2","EMPTY","boolean","clipping","trivial","trivialOperation","sbbox","Infinity","cbbox","eventQueue","polygonSet","ii","jj","Queue","fillQueue","compareBBoxes","begin","Tree","rightbound","prevprev","subdivideSegments","arrayLike","relativeStart","parseInt","relativeEnd","isFinite","isInteger","val","parseFloat","isNaN","trunc","ceil","NumberUtil","interfaces_","getClass","equalsWithTolerance","x1","x2","tolerance","IllegalArgumentException","message","name","stack","__proto__","create","constructor","Double","staticAccessors$1","MAX_VALUE","n","doubleToLongBits","longBitsToDouble","isInfinite","defineProperties","Comparable","Clonable","Comparator","Serializable","Coordinate","NULL_ORDINATE","c","staticAccessors","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","ordinateIndex","equals2D","getOrdinate","equals3D","equalInZ","compareTo","o","clone","toString","distance3D","dx","dy","dz","distance","hashCode","setCoordinate","f","NaN","dimensionsToTest","_dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","CoordinateSequenceFactory","Location","staticAccessors$4","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","locationValue","hasInterface","MathUtil","staticAccessors$5","LOG_10","log10","ln","log","v3","v4","clamp","x$1","min$1","max$1","wrap","v1$1","v2$1","v3$1","average","StringBuffer","str","append","setCharAt","substr","Integer","intValue","Character","isWhitespace","toUpperCase","DD","_hi","_lo","init","dd","parse","hi","lo","staticAccessors$7","PI","TWO_PI","PI_2","E","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","scale","divide","gt","lt","multiply","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","y$1","isZero","selfSubtract","getSpecialNumberString","selfDivide","tc","ty","C","U","yhi","ylo","hc","hy","dump","createNaN","ge","exp","selfMultiply","reciprocal","fhi","flo","rint","setValue","value$1","isNegative","axdd","H","h","S","H$1","T","S$1","f$1","s$1","e$1","zhi","zlo","tx","hx","selfSqr","toStandardNotation","toSciNotation","specialStr","fill","sigDigits","num","charAt","stringOfChar","numZeroes","digits","expStr","trailingDigits","substring","digitsWithDecimal","isPositive","signum","strlen","signCh","numBeforeDec","ch","isDigit","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","CGAlgorithmsDD","staticAccessors$6","DP_SAFE_EPSILON","orientationIndex","q","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","q1","q2","denom1","denom2","denom","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","det","errbound","CoordinateSequence","staticAccessors$8","M","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","getY","toCoordinateArray","Exception","NotRepresentableException","Exception$$1","System","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","HCoordinate","w","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","px","py","pw","qx","qy","qw","xInt","yInt","Envelope","_minx","_maxx","_miny","_maxy","staticAccessors$9","getArea","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","expandToInclude","minExtent","translate","transX","transY","setToNull","maxExtent","expandBy","deltaX","deltaY","contains","centre","minq","maxq","minp","maxp","regExes","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","WKTParser","geometryFactory","GeometryFactory","read","wkt","geometry","matches","exec","search","toLowerCase","parse$1","apply","write","extractGeometry","getGeometryType","extract$1","wktType","isEmpty","coordinate","coordinate$1","point$1","_coordinates","multipoint","multipoint$1","array","_geometries","join","linestring","linestring$1","_points","linearring","linearring$1","multilinestring","multilinestring$1","polygon","polygon$1","_shell","_holes","multipolygon","multipolygon$1","geometrycollection","collection","createPoint","coords","trim","createMultiPoint","components","createLineString","createLinearRing","line","createMultiLineString","lines","createPolygon","shell","holes","createMultiPolygon","polygons","createGeometryCollection","wktArray","WKTWriter","parser","toLineString","RuntimeException","AssertionFailedException","RuntimeException$$1","Assert","shouldNeverReachHere","isTrue","assertion","expectedValue","actualValue","LineIntersector","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","staticAccessors$10","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","catBuf","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","precisionModel","isInteriorIntersection","inputLineIndex","computeEdgeDistance","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","dist","pdx","pdy","nonRobustComputeEdgeDistance","RobustLineIntersector","LineIntersector$$1","isInSegmentEnvelopes","intPt","env0","env1","CGAlgorithms","normalizeToMinimum","n1","n2","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","x3","x4","xabs","checkDD","intPtDD","isIn","out","println","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","nearestPt","minDist","distancePointLine","RobustDeterminant","sign","swap","k","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","countSegment","minx","maxx","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","sum","x0","x0$1","sum$1","distanceLineLine","A","B","D","noIntersection","rNumb","isPointInRing","computeLength","pts","y0","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","minDistance","isOnLine","lineIntersector","GeometryComponentFilter","filter","Geometry","_envelope","_factory","_SRID","_userData","getSRID","staticAccessors$11","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","isGeometryCollection","getSortIndex","getFactory","getGeometryN","isRectangle","g$1","equalsTopo","g","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","other$1","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","SRID","setUserData","userData","iterator","hasNext","aElement","bElement","comparison","isGeometryCollectionOrDerived","hasNonEmptyElements","geometries","hasNullElements","CoordinateFilter","BoundaryNodeRule","staticAccessors$12","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","boundaryCount","Collection","IndexOutOfBoundsException","addAll","toArray","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","array_","ensureCapacity","clear","element","oldElement","Iterator_","found","Iterator$$1","arrayList","arrayList_","position_","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coordArrayType","coll","isChanged","coord$2","obj","allowRepeated$2","coord$3","allowRepeated$3","i$2","i$3","coord$4","coord$5","allowRepeated$5","inc","closeRing","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","isRing","ptNotInList","testPts","testPt","scroll","coordinates","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","last","mid","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","Map$1","put","entrySet","SortedMap","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","hashSet_","BLACK","colorOf","color","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","getValue","getKey","oldValue","fixAfterInsertion","getFirstEntry","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","treeSet_","Arrays","asList","Dimension","staticAccessors$14","P","L","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","dimensionValue","toDimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","isDone","isGeometryChanged","GeometryCollection","Geometry$$1","getCoordinates","getNumPoints","childCoordinates","area","isEquivalentClass","otherCollection","getBoundaryDimension","dimension","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","getBoundary","MultiLineString","GeometryCollection$$1","isClosed","nLines","revLines","BoundaryOp","lineStrings","_geom","_geomFact","_bnRule","_endpointMap","bnRule","geom$1","bnRule$1","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createMultiPointFromCoords","LineString","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","valence","count","Counter","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","NEWLINE","SIMPLE_ORDINATE_FORMAT","chars","String","getStackTrace","os","ps","printStackTrace","t$1","stackTrace","lineNumberReader","readLine","separator","separatorlen","tokenList","tmpString","token","res","format","CoordinateSequences","copyCoord","minDim","dim","isEqual","cs1","cs2","cs1Size","extend","fact","newseq","cs","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","line$1","ls","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Puntal","Point","Polygonal","Polygon","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","convexHull","getExteriorRing","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","MultiPoint","isValid","LinearRing","LineString$$1","validateConstruction","MINIMUM_VALID_SIZE","MultiPolygon","allRings","allRingsArray","GeometryEditor","_isUserDataCopied","staticAccessors$16","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","isUserDataCopied","edit","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","hole","GeometryEditorOperation","editCoordinates","CoordinateArraySequence","_dimension","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","instanceObject","readResolve","HashMap","MapInterface","map_","entries","forEach","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","staticAccessors$19","maximumPreciseValue","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","getType","description","maxSigDigits","mostPrecise","pm1","pm2","_name","nameToTypeMap","staticAccessors$1$1","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","staticAccessors$2","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","coordinates$1","shell$1","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","geometryTypes","GeoJSONParser","json","JSON","Feature","feature","FeatureCollection","featureCollection","features","sub","linearRing","geoJson","shellGeoJson","holeGeoJson","GeoJSONReader","reducePrecision","GeoJSONWriter","Position","staticAccessors$20","ON","EmptyStackException","Stack","opposite","position","empty","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","de","side","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","pPrev","pNext","orientation","usePrev","findRightmostEdgeAtNode","star","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","dirEdgeList","TopologyException","msg","msgWithCoord","LinkedList","addLast","removeFirst","BufferSubgraph","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","startEdge","isVisited","computeDepths","de$1","copySymDepths","computeDepth","outsideDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","nodeStack","setDepth","symNode","getNodes","getDirectedEdges","TopologyLocation","location","on","gl","on$1","setAllLocations","locValue","setAllLocationsIfNull","isLine","merge","newLoc","getLocations","flip","temp","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","locValue$1","isEqualOnSide","allPositionsEqual","loc","Label","elt","onLoc","lbl","geomIndex","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","getGeometryCount","location$1","toLine","toLineLabel","label","lineLabel","EdgeRing","_startDe","_maxNodeDegree","_edges","_pts","_label","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","isFirstEdge","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","degree","getOutgoingDegree","edge","edgePts","startIndex","startIndex$1","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","deLabel","deLabel$1","setShell","toPolygon","holeLR","MinimalEdgeRing","EdgeRing$$1","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","GraphComponent","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","im","computeIM","Node","GraphComponent$$1","_coord","edges","isIncidentEdgeInResult","print","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","setNode","setLabelBoundary","NodeMap","nodeMap","nodeFact","addNode","createNode","node$1","getBoundaryNodes","bdyNodes","Quadrant","staticAccessors$21","NE","NW","SW","SE","isNorthern","quad","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","quadrant","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","edge$1","edge$2","p0$1","label$1","compareDirection","getDy","angle","atan2","className","lastDotPos","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","depthVal","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","printEdge","printReverse","setSym","setVisitedEdge","directionFactor","oppositePos","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","NodeFactory","PlanarGraph","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de1","de2","nodes","PolygonBuilder","_shellList","sortShellsAndHoles","edgeRings","shellList","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","getBounds","ItemBoundable","_bounds","_item","bounds","getItem","PriorityQueue","_items","poll","minItem","reorder","child","ItemVisitor","visitItem","SpatialIndex","itemEnv","query","AbstractNode","_childBoundables","_level","level","staticAccessors$22","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","bp","getDistance","getBoundable","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity$1","staticAccessors$23","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","level$1","boundables$1","boundable","searchBounds","getIntersectsOp","searchBounds$1","visitor","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","createHigherLevels","getRoot","item$1","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","nearestNeighbour","itemDist","initBndPair","itemDist$1","bp$1","initBndPair$1","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","centreX","avg","centreY","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","maxSegmentIndex","isInterior","SegmentNodeList","_nodeMap","getSplitCoordinates","addEndpoints","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","edgeList","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","NodedSegmentString","getData","eiNew","getSegmentOctant","checkSplitEdgesCorrectness","splitEdges","pt0","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","setData","NodableSegmentString","addIntersection","_nodeList","_data","safeOctant","intPt$1","addIntersectionNode","li","segmentIndex$1","getNodeList","normalizedSegmentIndex","nextSegIndex","addIntersections","getNodedSubstrings","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","LineSegment","staticAccessors$24","minX","orient0","orient1","geomFactory","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","minY","midPoint","closestPoints","closestPt","close00","closestPoint","close01","close10","close11","factor","maxX","comp0","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","pointAlong","bits0","hash0","bits1","MonotoneChainOverlapAction","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","overlap","mc1","start1","mc2","start2","getLineSegment","MonotoneChain","_start","_end","_context","_id","context","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","getChainStartIndices","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","pts$1","mcList","list","Noder","computeNodes","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","SinglePassNoder$$1","si","_monoChains","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","segStr","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","MonotoneChainOverlapAction$$1","_si","ss1","ss2","processIntersections","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","quadrantSegments$1","endCapStyle","setEndCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","staticAccessors$25","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","quadSegs","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","alpha","cos","BufferInputLineSimplifier","inputLine","_distanceTol","_isDeleted","_angleOrientation","_inputLine","staticAccessors$26","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","i0","distanceTol","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","simplify","collapseLine","OffsetSegmentString","_ptList","_minimimVertexDistance","staticAccessors$28","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","revere","addPts","startPt","setMinimumVertexDistance","minimimVertexDistance","Angle","staticAccessors$29","PI_TIMES_2","PI_OVER_2","PI_OVER_4","toDegrees","radians","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","staticAccessors$27","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","direction","radius","startAngle","endAngle","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","offset","sideSign","totalAngle","nSegs","currAngleInc","currAngle","createCircle","hasNarrowConcaveAngle","OffsetCurveBuilder","getOffsetCurve","inputPts","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","SubgraphDepthLocater","_subgraphs","_seg","_cga","subgraphs","staticAccessors$30","DepthSegment","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","dirEdge","stabbedSegments$1","ds","stabbingRayLeftPt$2","stabbedSegments$2","_leftDepth","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","Triangle","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","numx","numy","perpendicularBisector","l1","l2","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","_inputGeom","_curveBuilder","_curveList","inputGeom","curveBuilder","addPoint","curve","addCurve","addPolygon","offsetSide","shellCoord","isErodedCompletely","addPolygonRing","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","addLineString","getCurves","cwLeftLoc","cwRightLoc","addCollection","ringCoord","envMinDimension","PointOnGeometryLocator","locate","GeometryCollectionIterator","_parent","_atStart","_max","_subcollectionIterator","isAtomic","SimplePointInAreaLocator","containsPointInPolygon","geomi","g2","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","it$1","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","geomi$1","getDegree","insertEdgeEnd","DirectedEdgeStar","EdgeEndStar$$1","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","de0","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","mergeSymLabels","degree$1","findCoveredLineEdges","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","_orientation","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","_ocaMap","edgeColl","findEdgeIndex","findEqualEdge","SegmentIntersector","e0","segIndex0","segIndex1","IntersectionAdder","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","EdgeIntersection","getSegmentIndex","EdgeIntersectionList","Edge","MonotoneChainIndexer","MonotoneChainEdge","env2","mcb","chainIndex","computeIntersectsForChain","chainIndex0","mce","chainIndex1","mce$1","getStartIndexes","computeIntersects","Depth","NULL_VALUE","staticAccessors$31","depthValue","minDepth","newValue","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","newPts","setIsolated","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","BufferBuilder","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","mergeDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","processedGraphs","subgraph","createSubgraphs","createEmptyResultGeometry","getNoder","noder","buffer","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","ss","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","scaleFactor","isIntegerPrecision","noder$1","scaleFactor$1","offsetX","offsetY","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","NodingValidator","_segStrings","staticAccessors$33","checkEndPtVertexIntersections","checkInteriorIntersections","ss0","ss0$1","ss1$1","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","staticAccessors$34","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","staticAccessors$35","HotPixelSnapAction","snap","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","isNodeAdded","MonotoneChainSelectAction$$1","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","snapRound","intersections","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","BufferOp","_argGeom","_resultGeometry","_saveException","staticAccessors$32","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","getResultGeometry","bufferOp","distance$1","bufOp","g$2","distance$2","params","g$3","distance$3","bufOp$2","maxPrecisionDigits","bufEnvMax","minUnitLog10","PointPairDistance","_isNull","setMinimum","ptDist","initialize","setMaximum","DistanceToPointFinder","computeDistance","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","_maxPtDist","staticAccessors$36","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","distFilter","getMaxPointDistance","computeMaxVertexDistance","findDistance","bufferCurve","getDistancePoints","_minPtDist","midPt","PolygonExtracter","comps","_comps","LinearComponentExtracter","_lines","_isForcedToLineString","lines$1","isForcedToLineString","setForceToLineString","getLines","forceToLineString","geoms","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","locateInternal","shellLoc","locateInPolygonRing","holeLoc","p$2","updateLocationInfo","computeLocation","ml","mpoly","GeometryLocation","_component","_segIndex","component","INSIDE_AREA","component$1","staticAccessors$38","isInsideArea","getGeometryComponent","PointExtracter","getPoints","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","g0","g1","g0$1","g1$1","terminateDistance","computeContainmentDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","isWithinDistance","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","_g0","_g1","_ptDist","_densifyFrac","staticAccessors$39","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","densifyFrac","compute","computeOrientedDistance","discreteGeom","MaxPointDistanceFilter$1","fracFilter","orientedDistance","_euclideanDist","_numSubSegs","fraction","delx","dely","BufferDistanceValidator","input","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","staticAccessors$37","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","bufCurve","maxDist","haus","distDelta","checkPositiveValid","checkNegativeValid","inputCurve","getPolygonLines","checkMinimumDistance","getErrorIndicator","distOp","getErrorLocation","lineExtracter","getErrorMessage","BufferResultValidator","_errorMsg","staticAccessors$40","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","padding","expectedEnv","bufEnv","report","distValid","inputArea","resultArea","checkName","isValidMsg","validator","BasicSegmentString","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","findAllIntersections","setKeepIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","createAnyIntersectionFinder","createIntersectionCounter","FastNodingValidator","execute","intSegs","computeIntersections","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","mapOp","_mapOp","mapped","op","LineBuilder","_op","_lineEdgesList","_resultLineList","ptLocator","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","buildLines","OverlayOp","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","PointBuilder","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","snapTolerance$1","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","_srcGeom","staticAccessors$41","SNAP_PRECISION_FACTOR","snapGeom","extractTargetCoordinates","SnapTransformer","snapToSelf","cleanResult","snappedGeom","computeSnapTolerance","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","GeometryTransformer$$1","isSelfSnap","_snapPts","_isSelfSnap","snapLine","snapper","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","padStr","toBinaryString","bitStr","getBit","nBits","num1","num2","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","staticAccessors$42","Translater","addCommonBits","trans","removeCommonBits","invCoord","getCommonCoordinate","_commonBitsX","_commonBitsY","xp","yp","SnapOverlayOp","_cbr","selfSnap","remGeom","prepareResult","prepGeom","overlayOp","union","symDifference","SYMDIFFERENCE","difference","SnapIfNeededOverlayOp","isSuccess","savedException","MonotoneChain$2","SweepLineEvent","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","INSERT","staticAccessors$43","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","EdgeSetIntersector","SegmentIntersector$2","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","setIsDoneIfProperInt","isDoneWhenProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","nOverlaps","prepareEvents","processOverlaps","edges0","edges1","si$1","si$2","addEdge","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","_min","staticAccessors$45","NodeComparator","getMin","queryMin","queryMax","getMax","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","buildTree","buildLevel","buildRoot","printNode","ArrayListVisitor","getItems","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","SegmentVisitor","rcc","_counter","addLine","GeometryGraph","PlanarGraph$$1","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","_resultPrecisionModel","_arg","setComputationPrecision","g0$2","GeometryMapper","MapOp","op$1","mapped$1","gr","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","geom1","resultDimension","dim0","dim1","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","_g","_boundaryDistanceTolerance","_linework","boundaryDistanceTolerance","extractLinework","isWithinToleranceOfBoundary","extracter","PolygonalLineworkExtracter","linework","getLinework","OffsetPointGenerator","_doLeft","_doRight","extractPoints","offsetPts","computeOffsetPoints","setSidesToGenerate","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","staticAccessors$46","reportResult","expectedInterior","addTestPts","overlayOp$1","hasLocation","isValidResult","ptGen","getInvalidLocation","GeometryCombiner","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","elems","elemGeom","combine","createList","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","_inputPolys","staticAccessors$47","STRTREE_NODE_CAPACITY","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","unionOptimized","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","UnionOp","reader","stringify","properties","options","isObject","isNumber","validateBBox","validateId","feat","geomEach","geojson","stopG","geometryMaybeCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","truncate","precision","mutate","coordEach","excludeWrapCoord","wrapShrink","coordIndex","multiFeatureIndex","geometryIndex","geomType","truncateCoords","getCoords","cleanCoords","_typeof","newCoords","cleanLine","polyPoints","existing","hasOwnProperty","nextPoint","newPoints","secondToLast","isPointOnLineSegment","startX","startY","endX","endY","dxl","dyl","intersect","poly1","poly2","geom2","initialValue","previousValue","currentGeometry","geomReduce","calculateArea","polygonArea","RADIUS","ringArea","lowerIndex","middleIndex","upperIndex","coordsLength","rad","_","polygon1","polygon2","removeEmptyPolygon","differenced","feature$$1","Vue","el","render","App"],"mappings":"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"}