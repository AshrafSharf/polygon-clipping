{"version":3,"file":"bundle.js","sources":["../../node_modules/splaytree/index.js","../../dist/polygon-clipping.esm.js","../../node_modules/martinez-polygon-clipping/node_modules/splaytree/index.js","../../node_modules/martinez-polygon-clipping/src/edge_type.js","../../node_modules/martinez-polygon-clipping/src/operation.js","../../node_modules/martinez-polygon-clipping/src/compute_fields.js","../../node_modules/martinez-polygon-clipping/src/sweep_event.js","../../node_modules/martinez-polygon-clipping/src/equals.js","../../node_modules/martinez-polygon-clipping/src/signed_area.js","../../node_modules/martinez-polygon-clipping/src/compare_events.js","../../node_modules/martinez-polygon-clipping/src/divide_segment.js","../../node_modules/martinez-polygon-clipping/src/segment_intersection.js","../../node_modules/martinez-polygon-clipping/src/possible_intersection.js","../../node_modules/martinez-polygon-clipping/src/compare_segments.js","../../node_modules/martinez-polygon-clipping/src/connect_edges.js","../../node_modules/tinyqueue/index.js","../../node_modules/martinez-polygon-clipping/src/fill_queue.js","../../node_modules/martinez-polygon-clipping/src/index.js","../../node_modules/martinez-polygon-clipping/src/subdivide_segments.js","../../node_modules/turf-jsts/jsts.mjs","../../node_modules/@turf/union/main.es.js","../../node_modules/@turf/helpers/main.es.js","../../node_modules/@turf/meta/main.es.js","../../node_modules/@turf/truncate/main.es.js","../../node_modules/@turf/invariant/main.es.js","../../node_modules/@turf/clean-coords/main.es.js","../../node_modules/@turf/intersect/main.es.js","../../node_modules/@turf/area/main.es.js","../../node_modules/@turf/difference/main.es.js","../src/App.vue","../src/main.js"],"sourcesContent":["/* follows \"An implementation of top-down splaying\"\n * by D. Sleator <sleator@cs.cmu.edu> March 1992\n */\n\n/**\n * @typedef {*} Key\n */\n\n\n/**\n * @typedef {*} Value\n */\n\n\n/**\n * @typedef {function(node:Node):void} Visitor\n */\n\n\n/**\n * @typedef {function(a:Key, b:Key):number} Comparator\n */\n\n\n/**\n * @param {function(node:Node):string} NodePrinter\n */\n\n\n/**\n * @typedef {Object}  Node\n * @property {Key}    Key\n * @property {Value=} data\n * @property {Node}   left\n * @property {Node}   right\n */\n\nclass Node {\n\n  constructor (key, data) {\n    this.key    = key;\n    this.data   = data;\n    this.left   = null;\n    this.right  = null;\n  }\n}\n\nfunction DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\n\n/**\n * Simple top down splay, not requiring i to be in the tree t.\n * @param {Key} i\n * @param {Node?} t\n * @param {Comparator} comparator\n */\nfunction splay (i, t, comparator) {\n  if (t === null) return t;\n  let l, r, y;\n  const N = new Node();\n  l = r = N;\n\n  while (true) {\n    const cmp = comparator(i, t.key);\n    //if (i < t.key) {\n    if (cmp < 0) {\n      if (t.left === null) break;\n      //if (i < t.left.key) {\n      if (comparator(i, t.left.key) < 0) {\n        y = t.left;                           /* rotate right */\n        t.left = y.right;\n        y.right = t;\n        t = y;\n        if (t.left === null) break;\n      }\n      r.left = t;                               /* link right */\n      r = t;\n      t = t.left;\n    //} else if (i > t.key) {\n    } else if (cmp > 0) {\n      if (t.right === null) break;\n      //if (i > t.right.key) {\n      if (comparator(i, t.right.key) > 0) {\n        y = t.right;                          /* rotate left */\n        t.right = y.left;\n        y.left = t;\n        t = y;\n        if (t.right === null) break;\n      }\n      l.right = t;                              /* link left */\n      l = t;\n      t = t.right;\n    } else {\n      break;\n    }\n  }\n  /* assemble */\n  l.right = t.left;\n  r.left = t.right;\n  t.left = N.right;\n  t.right = N.left;\n  return t;\n}\n\n\n/**\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}      root\n */\nfunction insert (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  tree._size++;\n\n  if (t === null) {\n    node.left = node.right = null;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp < 0) {\n    node.left = t.left;\n    node.right = t;\n    t.left = null;\n  } else if (cmp >= 0) {\n    node.right = t.right;\n    node.left = t;\n    t.right = null;\n  }\n  return node;\n}\n\n\n/**\n * Insert i into the tree t, unless it's already there.\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}       root\n */\nfunction add (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  if (t === null) {\n    node.left = node.right = null;\n    tree._size++;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp === 0) return t;\n  else {\n    if (cmp < 0) {\n      node.left = t.left;\n      node.right = t;\n      t.left = null;\n    } else if (cmp > 0) {\n      node.right = t.right;\n      node.left = t;\n      t.right = null;\n    }\n    tree._size++;\n    return node;\n  }\n}\n\n\n/**\n * Deletes i from the tree if it's there\n * @param {Key}        i\n * @param {Tree}       tree\n * @param {Comparator} comparator\n * @param {Tree}       tree\n * @return {Node}      new root\n */\nfunction remove (i, t, comparator, tree) {\n  let x;\n  if (t === null) return null;\n  t = splay(i, t, comparator);\n  var cmp = comparator(i, t.key);\n  if (cmp === 0) {               /* found it */\n    if (t.left === null) {\n      x = t.right;\n    } else {\n      x = splay(i, t.left, comparator);\n      x.right = t.right;\n    }\n    tree._size--;\n    return x;\n  }\n  return t;                         /* It wasn't there */\n}\n\n\nfunction split (key, v, comparator) {\n  let left, right;\n  if (v === null) {\n    left = right = null;\n  } else {\n    v = splay(key, v, comparator);\n\n    const cmp = comparator(v.key, key);\n    if (cmp === 0) {\n      left  = v.left;\n      right = v.right;\n    } else if (cmp < 0) {\n      right   = v.right;\n      v.right = null;\n      left    = v;\n    } else {\n      left   = v.left;\n      v.left = null;\n      right  = v;\n    }\n  }\n  return { left, right };\n}\n\n\nfunction merge (left, right, comparator) {\n  if (right === null) return left;\n  if (left  === null) return right;\n\n  right = splay(left.key, right, comparator);\n  right.left = left;\n  return right;\n}\n\n\n/**\n * Prints level of the tree\n * @param  {Node}                        root\n * @param  {String}                      prefix\n * @param  {Boolean}                     isTail\n * @param  {Array<string>}               out\n * @param  {Function(node:Node):String}  printNode\n */\nfunction printRow (root, prefix, isTail, out, printNode) {\n  if (root) {\n    out(`${ prefix }${ isTail ? '└── ' : '├── ' }${ printNode(root) }\\n`);\n    const indent = prefix + (isTail ? '    ' : '│   ');\n    if (root.left)  printRow(root.left,  indent, false, out, printNode);\n    if (root.right) printRow(root.right, indent, true,  out, printNode);\n  }\n}\n\n\nexport default class Tree {\n\n  constructor (comparator = DEFAULT_COMPARE) {\n    this._comparator = comparator;\n    this._root = null;\n    this._size = 0;\n  }\n\n\n  /**\n   * Inserts a key, allows duplicates\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  insert (key, data) {\n    return this._root = insert(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Adds a key, if it is not present in the tree\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  add (key, data) {\n    return this._root = add(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  remove (key) {\n    this._root = remove(key, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    let node = this._root;\n    if (node) {\n      while (node.left) node = node.left;\n      this._root = splay(node.key,  this._root, this._comparator);\n      this._root = remove(node.key, this._root, this._comparator, this);\n      return { key: node.key, data: node.data };\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  findStatic (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return current;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  find (key) {\n    if (this._root) {\n      this._root = splay(key, this._root, this._comparator);\n      if (this._comparator(key, this._root.key) !== 0) return null;\n    }\n    return this._root;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Boolean}\n   */\n  contains (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return true;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return false;\n  }\n\n\n  /**\n   * @param  {Visitor} visitor\n   * @param  {*=}      ctx\n   * @return {SplayTree}\n   */\n  forEach (visitor, ctx) {\n    let current = this._root;\n    const Q = [];  /* Initialize stack s */\n    let done = false;\n\n    while (!done) {\n      if (current !==  null) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length !== 0) {\n          current = Q.pop();\n          visitor.call(ctx, current);\n\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range (low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._comparator;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Returns array of keys\n   * @return {Array<Key>}\n   */\n  keys () {\n    const keys = [];\n    this.forEach(({ key }) => keys.push(key));\n    return keys;\n  }\n\n\n  /**\n   * Returns array of all the data in the nodes\n   * @return {Array<Value>}\n   */\n  values () {\n    const values = [];\n    this.forEach(({ data }) => values.push(data));\n    return values;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  min() {\n    if (this._root) return this.minNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  max() {\n    if (this._root) return this.maxNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  minNode(t = this._root) {\n    if (t) while (t.left) t = t.left;\n    return t;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  maxNode(t = this._root) {\n    if (t) while (t.right) t = t.right;\n    return t;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    let current = this._root, done = false, i = 0;\n    const Q = [];\n\n    while (!done) {\n      if (current) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length > 0) {\n          current = Q.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Node}   d\n   * @return {Node|null}\n   */\n  next (d) {\n    let root = this._root;\n    let successor = null;\n\n    if (d.right) {\n      successor = d.right;\n      while (successor.left) successor = successor.left;\n      return successor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) {\n        successor = root;\n        root = root.left;\n      } else root = root.right;\n    }\n\n    return successor;\n  }\n\n\n  /**\n   * @param  {Node} d\n   * @return {Node|null}\n   */\n  prev (d) {\n    let root = this._root;\n    let predecessor = null;\n\n    if (d.left !== null) {\n      predecessor = d.left;\n      while (predecessor.right) predecessor = predecessor.right;\n      return predecessor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) root = root.left;\n      else {\n        predecessor = root;\n        root = root.right;\n      }\n    }\n    return predecessor;\n  }\n\n\n  /**\n   * @return {SplayTree}\n   */\n  clear() {\n    this._root = null;\n    this._size = 0;\n    return this;\n  }\n\n\n  /**\n   * @return {NodeList}\n   */\n  toList() {\n    return toList(this._root);\n  }\n\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load (keys = [], values = [], presort = false) {\n    let size = keys.length;\n    const comparator = this._comparator;\n\n    // sort if needed\n    if (presort) sort(keys, values, 0, size - 1, comparator);\n\n    if (this._root === null) { // empty tree\n      this._root = loadRecursive(this._root, keys, values, 0, size);\n      this._size = size;\n    } else { // that re-builds the whole tree from two in-order traversals\n      const mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\n      size = this._size + size;\n      this._root = sortedListToBST({ head: mergedList }, 0, size);\n    }\n    return this;\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isEmpty() { return this._root === null; }\n\n  get size () { return this._size; }\n\n\n  /**\n   * @param  {NodePrinter=} printNode\n   * @return {String}\n   */\n  toString (printNode = (n) => n.key) {\n    const out = [];\n    printRow(this._root, '', true, (v) => out.push(v), printNode);\n    return out.join('');\n  }\n\n\n  update (key, newKey, newData) {\n    const comparator = this._comparator;\n    let { left, right } = split(key, this._root, comparator);\n    this._size--;\n    if (comparator(key, newKey) < 0) {\n      right = insert(newKey, newData, right, comparator, this);\n    } else {\n      left = insert(newKey, newData, left, comparator, this);\n    }\n    this._root = merge(left, right, comparator);\n  }\n\n\n  split(key) {\n    return split(key, this._root, this._comparator);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction createList(keys, values) {\n  const head = { next: null };\n  let p = head;\n  for (let i = 0; i < keys.length; i++) {\n    p = p.next = { key: keys[i], data: values[i] };\n  }\n  p.next = null;\n  return head.next;\n}\n\n\nfunction toList (root) {\n  var current = root;\n  var Q = [], done = false;\n\n  const head = { next: null };\n  let p = head;\n\n  while (!done) {\n    if (current) {\n      Q.push(current);\n      current = current.left;\n    } else {\n      if (Q.length > 0) {\n        current = p = p.next = Q.pop();\n        current = current.right;\n      } else done = true;\n    }\n  }\n  p.next = null; // that'll work even if the tree was empty\n  return head.next;\n}\n\n\nfunction sortedListToBST(list, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const left = sortedListToBST(list, start, middle);\n\n    const root = list.head;\n    root.left = left;\n\n    list.head = list.head.next;\n\n    root.right = sortedListToBST(list, middle + 1, end);\n    return root;\n  }\n  return null;\n}\n\n\nfunction mergeLists (l1, l2, compare = (a, b) => a - b) {\n  const head = {}; // dummy\n  let p = head;\n\n  let p1 = l1;\n  let p2 = l2;\n\n  while (p1 !== null && p2 !== null) {\n    if (compare(p1.key, p2.key) < 0) {\n      p.next = p1;\n      p1 = p1.next;\n    } else {\n      p.next = p2;\n      p2 = p2.next;\n    }\n    p = p.next;\n  }\n\n  if (p1 !== null)      p.next = p1;\n  else if (p2 !== null) p.next = p2;\n\n  return head.next;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\nvar epsilon = Number.EPSILON; // IE Polyfill\n\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n/* FLP comparator */\n\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  } // check if they're flp equal\n\n\n  if ((a - b) * (a - b) < EPSILON_SQ * a * b) {\n    return 0;\n  } // normal comparison\n\n\n  return a < b ? -1 : 1;\n};\n/* FLP point comparator, favors point encountered first by sweep line */\n\nvar cmpPoints = function cmpPoints(aPt, bPt) {\n  if (aPt === bPt) return 0; // fist compare X, then compare Y\n\n  var a = aPt.x;\n  var b = bPt.x; // inlined version of cmp() for performance boost\n\n  if (a <= -epsilon || epsilon <= a || b <= -epsilon || epsilon <= b) {\n    var diff = a - b;\n\n    if (diff * diff >= EPSILON_SQ * a * b) {\n      return a < b ? -1 : 1;\n    }\n  }\n\n  a = aPt.y;\n  b = bPt.y; // inlined version of cmp() for performance boost\n\n  if (a <= -epsilon || epsilon <= a || b <= -epsilon || epsilon <= b) {\n    var _diff = a - b;\n\n    if (_diff * _diff >= EPSILON_SQ * a * b) {\n      return a < b ? -1 : 1;\n    }\n  } // they're the same\n\n\n  return 0;\n};\n/* Greedy comparison. Two numbers are defined to touch\n * if their midpoint is indistinguishable from either. */\n\nvar touch = function touch(a, b) {\n  var m = (a + b) / 2;\n  return cmp(m, a) === 0 || cmp(m, b) === 0;\n};\n/* Greedy comparison. Two points are defined to touch\n * if their midpoint is indistinguishable from either. */\n\nvar touchPoints = function touchPoints(aPt, bPt) {\n  var mPt = {\n    x: (aPt.x + bPt.x) / 2,\n    y: (aPt.y + bPt.y) / 2\n  };\n  return cmpPoints(mPt, aPt) === 0 || cmpPoints(mPt, bPt) === 0;\n};\n\n/* Cross Product of two vectors with first point at origin */\n\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n/* Dot Product of two vectors with first point at origin */\n\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n/* Comparator for two vectors with same starting point */\n\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the closest point on an line (defined by a point and a vector)\n * to another point. */\n\nvar closestPoint = function closestPoint(pt1, v1, pt2) {\n  if (v1.x === 0) return {\n    x: pt1.x,\n    y: pt2.y // vertical vector\n\n  };\n  if (v1.y === 0) return {\n    x: pt2.x,\n    y: pt1.y // horizontal vector\n\n  };\n  var v2 = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var dist = dotProduct(v1, v2) / dotProduct(v1, v1);\n  return {\n    x: pt1.x + dist * v1.x,\n    y: pt1.y + dist * v1.y\n  };\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n  var x1 = pt1.x + d2 * v1.x,\n      x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n      y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\n/* Given input geometry as a standard array-of-arrays geojson-style\n * geometry, return one that uses objects as points, for better perf */\n\nvar pointsAsObjects = function pointsAsObjects(geom) {\n  // we can handle well-formed multipolys and polys\n  var output = [];\n\n  if (!Array.isArray(geom)) {\n    throw new Error('Input is not a Polygon or MultiPolygon');\n  }\n\n  for (var i = 0, iMax = geom.length; i < iMax; i++) {\n    if (!Array.isArray(geom[i]) || geom[i].length == 0) {\n      throw new Error('Input is not a Polygon or MultiPolygon');\n    }\n\n    output.push([]);\n\n    for (var j = 0, jMax = geom[i].length; j < jMax; j++) {\n      if (!Array.isArray(geom[i][j]) || geom[i][j].length == 0) {\n        throw new Error('Input is not a Polygon or MultiPolygon');\n      }\n\n      if (Array.isArray(geom[i][j][0])) {\n        // multipolygon\n        output[i].push([]);\n\n        for (var k = 0, kMax = geom[i][j].length; k < kMax; k++) {\n          if (!Array.isArray(geom[i][j][k]) || geom[i][j][k].length < 2) {\n            throw new Error('Input is not a Polygon or MultiPolygon');\n          }\n\n          if (geom[i][j][k].length > 2) {\n            throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n          }\n\n          output[i][j].push({\n            x: geom[i][j][k][0],\n            y: geom[i][j][k][1]\n          });\n        }\n      } else {\n        // polygon\n        if (geom[i][j].length < 2) {\n          throw new Error('Input is not a Polygon or MultiPolygon');\n        }\n\n        if (geom[i][j].length > 2) {\n          throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n        }\n\n        output[i].push({\n          x: geom[i][j][0],\n          y: geom[i][j][1]\n        });\n      }\n    }\n  }\n\n  return output;\n};\n/* WARN: input modified directly */\n\nvar forceMultiPoly = function forceMultiPoly(geom) {\n  if (Array.isArray(geom)) {\n    if (geom.length === 0) return; // allow empty multipolys\n\n    if (Array.isArray(geom[0])) {\n      if (Array.isArray(geom[0][0])) {\n        if (typeof geom[0][0][0].x === 'number' && typeof geom[0][0][0].y === 'number') {\n          // multipolygon\n          return;\n        }\n      }\n\n      if (typeof geom[0][0].x === 'number' && typeof geom[0][0].y === 'number') {\n        // polygon\n        geom.unshift(geom.splice(0));\n        return;\n      }\n    }\n  }\n\n  throw new Error('Unrecognized input - not a polygon nor multipolygon');\n};\n/* WARN: input modified directly */\n\nvar cleanMultiPoly = function cleanMultiPoly(multipoly) {\n  var i = 0;\n\n  while (i < multipoly.length) {\n    var poly = multipoly[i];\n\n    if (poly.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n\n    var exteriorRing = poly[0];\n    cleanRing(exteriorRing); // poly is dropped if exteriorRing is degenerate\n\n    if (exteriorRing.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n\n    var j = 1;\n\n    while (j < poly.length) {\n      var interiorRing = poly[j];\n      cleanRing(interiorRing);\n      if (interiorRing.length === 0) poly.splice(j, 1);else j++;\n    }\n\n    i++;\n  }\n};\n/* Clean ring:\n *  - remove duplicate points\n *  - remove colinear points\n *  - remove rings with no area (less than 3 distinct points)\n *  - un-close rings (last point should not repeat first)\n *\n * WARN: input modified directly */\n\nvar cleanRing = function cleanRing(ring) {\n  if (ring.length === 0) return;\n  if (cmpPoints(ring[0], ring[ring.length - 1]) === 0) ring.pop();\n\n  var isPointUncessary = function isPointUncessary(prevPt, pt, nextPt) {\n    return cmpPoints(prevPt, pt) === 0 || cmpPoints(pt, nextPt) === 0 || compareVectorAngles(pt, prevPt, nextPt) === 0;\n  };\n\n  var i = 0;\n  var prevPt, nextPt;\n\n  while (i < ring.length) {\n    prevPt = i === 0 ? ring[ring.length - 1] : ring[i - 1];\n    nextPt = i === ring.length - 1 ? ring[0] : ring[i + 1];\n    if (isPointUncessary(prevPt, ring[i], nextPt)) ring.splice(i, 1);else i++;\n  } // if our ring has less than 3 distinct points now (so is degenerate)\n  // shrink it down to the empty array to communicate to our caller to\n  // drop it\n\n\n  while (ring.length < 3 && ring.length > 0) {\n    ring.pop();\n  }\n};\n\n// segments and sweep events when all else is identical\n\nvar sweepEventId = 0;\n\nvar SweepEvent =\n/*#__PURE__*/\nfunction () {\n  _createClass(SweepEvent, null, [{\n    key: \"compare\",\n    value: function compare(a, b) {\n      // if the events are already linked, then we know the points are equal\n      if (a.point !== b.point) {\n        // favor event with a point that the sweep line hits first\n        var cmpX = cmp(a.point.x, b.point.x);\n        if (cmpX !== 0) return cmpX;\n        var cmpY = cmp(a.point.y, b.point.y);\n        if (cmpY !== 0) return cmpY; // Points are equal, so go ahead and link these events.\n\n        a.link(b);\n      } // favor right events over left\n\n\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // are they identical?\n\n      if (a === b) return 0; // The calcuations of relative segment angle below can give different\n      // results after segment splitting due to rounding errors.\n      // To maintain sweep event queue ordering, we thus skip these calculations\n      // if we already know the segements to be colinear (one of the requirements\n      // of the 'consumedBy' relationship).\n\n      var aConsumedBy = a;\n      var bConsumedBy = b;\n\n      while (aConsumedBy.consumedBy) {\n        aConsumedBy = aConsumedBy.consumedBy;\n      }\n\n      while (bConsumedBy.consumedBy) {\n        bConsumedBy = bConsumedBy.consumedBy;\n      }\n\n      if (aConsumedBy !== bConsumedBy) {\n        // favor vertical segments for left events, and non-vertical for right\n        // https://github.com/mfogel/polygon-clipping/issues/29\n        var aVert = a.segment.isVertical();\n        var bVert = b.segment.isVertical();\n        if (aVert && !bVert) return a.isLeft ? 1 : -1;\n        if (!aVert && bVert) return a.isLeft ? -1 : 1; // Favor events where the line segment is lower.\n        // Sometimes, because one segment is longer than the other,\n        // one of these comparisons will return 0 and the other won't.\n\n        var pointSegCmp = a.segment.compareVertically(b.otherSE.point);\n        if (pointSegCmp === 1) return -1;\n        if (pointSegCmp === -1) return 1;\n        var otherPointSegCmp = b.segment.compareVertically(a.otherSE.point);\n        if (otherPointSegCmp !== 0) return otherPointSegCmp; // NOTE:  We don't sort on segment length because that changes\n        //        as segments are divided.\n      } // as a tie-breaker, favor lower creation id\n\n\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1;\n      throw new Error(\"SweepEvent comparison failed at [\".concat(a.point.x, \", \").concat(a.point.y, \"]\"));\n    } // Warning: 'point' input will be modified and re-used (for performance)\n\n  }]);\n\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft;\n    this.id = ++sweepEventId; // this.segment, this.otherSE set by factory\n  }\n\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n\n      var otherEvents = other.point.events;\n\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n\n      this.segment.checkForConsuming();\n      other.segment.checkForConsuming();\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n\n      return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n\n      var cache = new Map();\n\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n\n        var _cache$get = cache.get(a),\n            asine = _cache$get.sine,\n            acosine = _cache$get.cosine;\n\n        var _cache$get2 = cache.get(b),\n            bsine = _cache$get2.sine,\n            bcosine = _cache$get2.cosine;\n\n        var cmpZeroASine = cmp(asine, 0);\n        var cmpZeroBSine = cmp(bsine, 0);\n        if (cmpZeroASine >= 0 && cmpZeroBSine >= 0) return cmp(bcosine, acosine);\n        if (cmpZeroASine < 0 && cmpZeroBSine < 0) return cmp(acosine, bcosine);\n        return cmp(bsine, asine);\n      };\n    }\n  }]);\n\n  return SweepEvent;\n}();\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\n\nvar isInBbox = function isInBbox(bbox, point) {\n  return cmp(bbox.ll.x, point.x) <= 0 && cmp(point.x, bbox.ur.x) <= 0 && cmp(bbox.ll.y, point.y) <= 0 && cmp(point.y, bbox.ur.y) <= 0;\n};\n/* Greedy comparison with a bbox. A point is defined to 'touch'\n * a bbox if:\n *  - it is inside the bbox\n *  - it 'touches' one of the sides (another greedy comparison) */\n\nvar touchesBbox = function touchesBbox(bbox, point) {\n  return (cmp(bbox.ll.x, point.x) <= 0 || touch(bbox.ll.x, point.x)) && (cmp(point.x, bbox.ur.x) <= 0 || touch(point.x, bbox.ur.x)) && (cmp(bbox.ll.y, point.y) <= 0 || touch(bbox.ll.y, point.y)) && (cmp(point.y, bbox.ur.y) <= 0 || touch(point.y, bbox.ur.y));\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\n\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (cmp(b2.ur.x, b1.ll.x) < 0 || cmp(b1.ur.x, b2.ll.x) < 0 || cmp(b2.ur.y, b1.ll.y) < 0 || cmp(b1.ur.y, b2.ll.y) < 0) return null; // find the middle two X values\n\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\nvar Segment =\n/*#__PURE__*/\nfunction () {\n  _createClass(Segment, null, [{\n    key: \"compare\",\n    value: function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var aly = a.leftSE.point.y;\n      var blx = b.leftSE.point.x;\n      var bly = b.leftSE.point.y;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n      if (cmp(brx, alx) < 0) return 1;\n      if (cmp(arx, blx) < 0) return -1; // check for a consumption relationship. if present,\n      // avoid the segment angle calculations (can yield\n      // inconsistent results after splitting)\n\n      var aConsumedBy = a;\n      var bConsumedBy = b;\n\n      while (aConsumedBy.consumedBy) {\n        aConsumedBy = aConsumedBy.consumedBy;\n      }\n\n      while (bConsumedBy.consumedBy) {\n        bConsumedBy = bConsumedBy.consumedBy;\n      } // for segment angle comparisons\n\n\n      var aCmpBLeft, aCmpBRight, bCmpALeft, bCmpARight;\n\n      if (aConsumedBy === bConsumedBy) {\n        // are they identical?\n        if (a === b) return 0; // colinear segments with matching left-endpoints, fall back\n        // on creation order of left sweep events as a tie-breaker\n\n        var aId = a.leftSE.id;\n        var bId = b.leftSE.id;\n        if (aId < bId) return -1;\n        if (aId > bId) return 1;\n      } else if ( // are a and b colinear?\n      (aCmpBLeft = a.comparePoint(b.leftSE.point)) === 0 && (aCmpBRight = a.comparePoint(b.rightSE.point)) === 0 && (bCmpALeft = b.comparePoint(a.leftSE.point)) === 0 && (bCmpARight = b.comparePoint(a.rightSE.point)) === 0) {\n        // a & b are colinear\n        // colinear segments with non-matching left-endpoints, consider\n        // the more-left endpoint to be earlier\n        var cmpLX = cmp(alx, blx);\n        if (cmpLX !== 0) return cmpLX; // NOTE: we do not use segment length to break a tie here, because\n        //       when segments are split their length changes\n        // colinear segments with matching left-endpoints, fall back\n        // on creation order of left sweep events as a tie-breaker\n\n        var _aId = a.leftSE.id;\n        var _bId = b.leftSE.id;\n        if (_aId < _bId) return -1;\n        if (_aId > _bId) return 1;\n      } else {\n        // a & b are not colinear\n        var _cmpLX = cmp(alx, blx); // if the left endpoints are not in the same vertical line,\n        // consider the placement of the left event of the right-more segment\n        // with respect to the left-more segment.\n\n\n        if (_cmpLX < 0) {\n          if (aCmpBLeft > 0) return -1;\n          if (aCmpBLeft < 0) return 1; // NOTE: fall-through is necessary here. why? Can that be avoided?\n        }\n\n        if (_cmpLX > 0) {\n          if (bCmpALeft === undefined) bCmpALeft = b.comparePoint(a.leftSE.point);\n          if (bCmpALeft !== 0) return bCmpALeft; // NOTE: fall-through is necessary here. why? Can that be avoided?\n        }\n\n        var cmpLY = cmp(aly, bly); // if left endpoints are in the same vertical line, lower means ealier\n\n        if (cmpLY !== 0) return cmpLY; // left endpoints match exactly\n        // special case verticals due to rounding errors\n        // part of https://github.com/mfogel/polygon-clipping/issues/29\n\n        var aVert = a.isVertical();\n        if (aVert !== b.isVertical()) return aVert ? 1 : -1; // sometimes, because one segment is longer than the other,\n        // one of these comparisons will return 0 and the other won't\n\n        if (aCmpBRight === undefined) aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight > 0) return -1;\n        if (aCmpBRight < 0) return 1;\n        if (bCmpARight === undefined) bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight;\n      }\n\n      throw new Error('Segment comparison of ' + \"[\".concat(a.leftSE.point.x, \", \").concat(a.leftSE.point.y, \"] -> [\").concat(a.rightSE.point.x, \", \").concat(a.rightSE.point.y, \"] \") + 'against ' + \"[\".concat(b.leftSE.point.x, \", \").concat(b.leftSE.point.y, \"] -> [\").concat(b.rightSE.point.x, \", \").concat(b.rightSE.point.y, \"] \") + 'failed. Please submit a bug report.');\n    }\n    /* Warning: a reference to ringsIn input will be stored,\n     *  and possibly will be later modified */\n\n  }]);\n\n  function Segment(leftSE, rightSE, ringsIn) {\n    _classCallCheck(this, Segment);\n\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.ringsIn = ringsIn;\n    this._cache = {}; // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    value: function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n    /* A vector from the left point to the right */\n\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isVertical\",\n    value: function isVertical() {\n      return cmp(this.leftSE.point.x, this.rightSE.point.x) === 0;\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(point) {\n      return cmpPoints(point, this.leftSE.point) === 0 || cmpPoints(point, this.rightSE.point) === 0;\n    }\n    /* Compare this segment with a point. Return value indicates:\n     *     1: point lies above or to the left of segment\n     *     0: point is colinear to segment\n     *    -1: point is below or to the right of segment */\n\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var interPt = closestPoint(this.leftSE.point, this.vector(), point);\n      var cmpY = cmp(point.y, interPt.y);\n      if (cmpY !== 0) return cmpY;\n      var cmpX = cmp(point.x, interPt.x);\n      var segCmpX = cmp(this.leftSE.point.y, this.rightSE.point.y); // depending on if our segment angles up or down,\n      // the x coord comparison means oppposite things\n\n      if (cmpX > 0) return segCmpX;\n\n      if (cmpX < 0) {\n        if (segCmpX > 0) return -1;\n        if (segCmpX < 0) return 1;\n      }\n\n      return 0;\n    }\n    /* Compare point vertically with segment.\n     *    1: point is below segment\n     *    0: segment appears to be vertical\n     *   -1: point is above segment */\n\n  }, {\n    key: \"compareVertically\",\n    value: function compareVertically(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var interPt = verticalIntersection(this.leftSE.point, this.vector(), point.x); // Trying to be as exact as possible here, hence not using flp comparisons\n\n      if (interPt !== null) {\n        if (point.y < interPt.y) return -1;\n        if (point.y > interPt.y) return 1;\n      }\n\n      return 0;\n    }\n    /* Does the point in question touch the given segment?\n     * Greedy - essentially a 2 * Number.EPSILON comparison.\n     * If it's not possible to add an independent point between the\n     * point and the segment, we say the point 'touches' the segment. */\n\n  }, {\n    key: \"touches\",\n    value: function touches(point) {\n      if (!touchesBbox(this.bbox(), point)) return false;\n      var cPt = closestPoint(this.leftSE.point, this.vector(), point);\n      var avgPt = {\n        x: (cPt.x + point.x) / 2,\n        y: (cPt.y + point.y) / 2\n      };\n      return touchPoints(avgPt, cPt) || touchPoints(avgPt, point);\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var bboxOverlap = getBboxOverlap(this.bbox(), other.bbox());\n      if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n      // does each endpoint touch the other segment?\n\n      var touchesOtherLSE = this.touches(other.leftSE.point);\n      var touchesThisLSE = other.touches(this.leftSE.point);\n      var touchesOtherRSE = this.touches(other.rightSE.point);\n      var touchesThisRSE = other.touches(this.rightSE.point); // do left endpoints match?\n\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return this.rightSE.point;\n        if (!touchesThisRSE && touchesOtherRSE) return other.rightSE.point; // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n\n        return null;\n      } // does this left endpoint matches (other doesn't)\n\n\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE && cmpPoints(this.leftSE.point, other.rightSE.point) === 0) return null; // t-intersection on left endpoint\n\n        return this.leftSE.point;\n      } // does other left endpoint matches (this doesn't)\n\n\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE && cmpPoints(this.rightSE.point, other.leftSE.point) === 0) return null; // t-intersection on left endpoint\n\n        return other.leftSE.point;\n      } // trivial intersection on right endpoints\n\n\n      if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n      if (touchesThisRSE) return this.rightSE.point;\n      if (touchesOtherRSE) return other.rightSE.point; // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n\n      var pt = intersection(this.leftSE.point, this.vector(), other.leftSE.point, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n\n      if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n      if (!isInBbox(bboxOverlap, pt)) return null; // We don't need to check if we need to 'snap' to an endpoint,\n      // because the endpoint cmps we did eariler were greedy\n\n      return pt;\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(points) {\n      // sort the points in sweep line order\n      points.sort(cmpPoints);\n      var prevSeg = this;\n      var prevPoint = null;\n      var newEvents = [];\n\n      for (var i = 0, iMax = points.length; i < iMax; i++) {\n        var point = points[i]; // skip repeated points\n\n        if (prevPoint && cmpPoints(prevPoint, point) === 0) continue;\n        var alreadyLinked = point.events !== undefined;\n        var newLeftSE = new SweepEvent(point, true);\n        var newRightSE = new SweepEvent(point, false);\n        var oldRightSE = prevSeg.rightSE;\n        prevSeg.replaceRightSE(newRightSE);\n        newEvents.push(newRightSE);\n        newEvents.push(newLeftSE);\n        prevSeg = new Segment(newLeftSE, oldRightSE, prevSeg.ringsIn.slice()); // in the point we just used to create new sweep events with was already\n        // linked to other events, we need to check if either of the affected\n        // segments should be consumed\n\n        if (alreadyLinked) {\n          newLeftSE.segment.checkForConsuming();\n          newRightSE.segment.checkForConsuming();\n        }\n\n        prevPoint = point;\n      }\n\n      return newEvents;\n    }\n    /* Do a pass over the linked events and to see if any segments\n     * should be consumed. If so, do it. */\n\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      if (this.leftSE.point.events.length === 1) return;\n      if (this.rightSE.point.events.length === 1) return;\n\n      for (var i = 0, iMax = this.leftSE.point.events.length; i < iMax; i++) {\n        var le = this.leftSE.point.events[i];\n        if (le === this.leftSE) continue;\n\n        for (var j = 0, jMax = this.rightSE.point.events.length; j < jMax; j++) {\n          var re = this.rightSE.point.events[j];\n          if (re === this.rightSE) continue;\n          if (le.segment === re.segment) this.consume(le.segment);\n        }\n      }\n    }\n    /* Consume another segment. We take their ringsIn under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n\n      while (consumer.consumedBy) {\n        consumer = consumer.consumedBy;\n      }\n\n      while (consumee.consumedBy) {\n        consumee = consumee.consumedBy;\n      }\n\n      var cmp$$1 = Segment.compare(consumer, consumee);\n      if (cmp$$1 === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n\n      if (cmp$$1 > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      } // make sure a segment doesn't consume it's prev\n\n\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n\n      for (var i = 0, iMax = consumee.ringsIn.length; i < iMax; i++) {\n        consumer.ringsIn.push(consumee.ringsIn[i]);\n      }\n\n      consumee.ringsIn = null;\n      consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      var key = 'prevInResult';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_prevInResult\",\n    value: function _prevInResult() {\n      if (!this.prev) return null;\n      if (this.prev.isInResult()) return this.prev;\n      return this.prev.prevInResult();\n    }\n  }, {\n    key: \"ringsBefore\",\n    value: function ringsBefore() {\n      var key = 'ringsBefore';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_ringsBefore\",\n    value: function _ringsBefore() {\n      if (!this.prev) return [];\n      return (this.prev.consumedBy || this.prev).ringsAfter();\n    }\n  }, {\n    key: \"ringsAfter\",\n    value: function ringsAfter() {\n      var key = 'ringsAfter';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_ringsAfter\",\n    value: function _ringsAfter() {\n      var rings = this.ringsBefore().slice(0);\n\n      for (var i = 0, iMax = this.ringsIn.length; i < iMax; i++) {\n        var ring = this.ringsIn[i];\n        var index = rings.indexOf(ring);\n        if (index === -1) rings.push(ring);else rings.splice(index, 1);\n      }\n\n      return rings;\n    }\n  }, {\n    key: \"multiPolysBefore\",\n    value: function multiPolysBefore() {\n      var key = 'multiPolysBefore';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_multiPolysBefore\",\n    value: function _multiPolysBefore() {\n      if (!this.prev) return [];\n      return (this.prev.consumedBy || this.prev).multiPolysAfter();\n    }\n  }, {\n    key: \"multiPolysAfter\",\n    value: function multiPolysAfter() {\n      var key = 'multiPolysAfter';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_multiPolysAfter\",\n    value: function _multiPolysAfter() {\n      // first calcualte our polysAfter\n      var polysAfter = [];\n      var polysExclude = [];\n      var ringsAfter = this.ringsAfter();\n\n      for (var i = 0, iMax = ringsAfter.length; i < iMax; i++) {\n        var ring = ringsAfter[i];\n        var poly = ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n          var index = polysAfter.indexOf(ring.poly);\n          if (index !== -1) polysAfter.splice(index, 1);\n        }\n      } // now calculate our multiPolysAfter\n\n\n      var mps = [];\n\n      for (var _i = 0, _iMax = polysAfter.length; _i < _iMax; _i++) {\n        var mp = polysAfter[_i].multiPoly;\n        if (mps.indexOf(mp) === -1) mps.push(mp);\n      }\n\n      return mps;\n    }\n    /* Is this segment part of the final result? */\n\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      var key = 'isInResult';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_isInResult\",\n    value: function _isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      var mpsBefore = this.multiPolysBefore();\n      var mpsAfter = this.multiPolysAfter();\n\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            return noBefores !== noAfters;\n          }\n\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n\n            return most === operation.numMultiPolys && least < most;\n          }\n\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            return diff % 2 === 1;\n          }\n\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n\n            return isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n          }\n\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n    }\n  }], [{\n    key: \"fromRing\",\n    value: function fromRing(point1, point2, ring) {\n      var leftSE, rightSE;\n      var ptCmp = cmpPoints(point1, point2);\n\n      if (ptCmp < 0) {\n        leftSE = new SweepEvent(point1, true);\n        rightSE = new SweepEvent(point2, false);\n      } else if (ptCmp > 0) {\n        leftSE = new SweepEvent(point2, true);\n        rightSE = new SweepEvent(point1, false);\n      } else {\n        throw new Error(\"Tried to create degenerate segment at [\".concat(point1.x, \", \").concat(point2.y, \"]\"));\n      }\n\n      return new Segment(leftSE, rightSE, [ring]);\n    }\n  }]);\n\n  return Segment;\n}();\n\nvar RingIn =\n/*#__PURE__*/\nfunction () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n    var prevPoint = geomRing[0];\n\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      var point = geomRing[i];\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      prevPoint = point;\n    }\n\n    this.segments.push(Segment.fromRing(prevPoint, geomRing[0], this));\n  }\n\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return RingIn;\n}();\nvar PolyIn =\n/*#__PURE__*/\nfunction () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n\n    this.exteriorRing = new RingIn(geomPoly[0], this, true);\n    this.interiorRings = [];\n\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      this.interiorRings.push(new RingIn(geomPoly[i], this, false));\n    }\n\n    this.multiPoly = multiPoly;\n  }\n\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return PolyIn;\n}();\nvar MultiPolyIn =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyIn(geomMultiPoly) {\n    _classCallCheck(this, MultiPolyIn);\n\n    this.polys = [];\n\n    for (var i = 0, iMax = geomMultiPoly.length; i < iMax; i++) {\n      this.polys.push(new PolyIn(geomMultiPoly[i], this));\n    }\n\n    this.isSubject = false;\n  }\n\n  _createClass(MultiPolyIn, [{\n    key: \"markAsSubject\",\n    value: function markAsSubject() {\n      this.isSubject = true;\n    }\n  }, {\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return MultiPolyIn;\n}();\n\nvar RingOut =\n/*#__PURE__*/\nfunction () {\n  _createClass(RingOut, null, [{\n    key: \"factory\",\n\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    value: function factory(allSegments) {\n      var ringsOut = [];\n\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n        /* Walk the chain of linked events to form a closed ring */\n\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n          /* Is the ring complete? */\n\n          if (event.point === startingPoint) break;\n\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n            /* Only one way to go, so cotinue on the path */\n\n\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n            /* We must have an intersection. Check for a completed loop */\n\n\n            var indexLE = null;\n\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n\n\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n\n\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n\n        ringsOut.push(new RingOut(events));\n      }\n\n      return ringsOut;\n    }\n  }]);\n\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n\n    this.events = events;\n\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n\n    this.poly = null;\n  }\n\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      } // ring was all (within rounding error of angle calc) colinear points\n\n\n      if (points.length === 1) return null; // check if the starting point is necessary\n\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n\n      for (var _i = iStart; _i != iEnd; _i += step) {\n        orderedPoints.push([points[_i].x, points[_i].y]);\n      }\n\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n\n      return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n\n        if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        } // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n\n\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }]);\n\n  return RingOut;\n}();\nvar PolyOut =\n/*#__PURE__*/\nfunction () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n      if (geom[0] === null) return null;\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n\n      return geom;\n    }\n  }]);\n\n  return PolyOut;\n}();\nvar MultiPolyOut =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n\n      return polys;\n    }\n  }]);\n\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nvar SweepLine =\n/*#__PURE__*/\nfunction () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n    _classCallCheck(this, SweepLine);\n\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = []; // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n\n      if (event.consumedBy) {\n        if (!event.isLeft) this.tree.remove(segment);\n        return newEvents;\n      }\n\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error('Unable to find segment ' + \"#\".concat(segment.leftSE.id, \" [\").concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"#\".concat(segment.rightSE.id, \" [\").concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined; // skip consumed segments still in tree\n\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      } // skip consumed segments still in tree\n\n\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n\n      if (event.isLeft) {\n        // TODO: would it make sense to just stop and bail out at the first time we're split?\n        //       rather than split ourselves multiple times?\n        var mySplitters = []; // Check for intersections against the previous segment in the sweep line\n\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) mySplitters.push(prevInter);\n\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        } // Check for intersections against the next segment in the sweep line\n\n\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) mySplitters.push(nextInter);\n\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        } // did we get some intersections? split ourselves if need be\n\n\n        if (newEvents.length > 0 || mySplitters.length > 0) {\n          // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n          this.tree.remove(segment);\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n\n          if (mySplitters.length > 0) {\n            var _newEventsFromSplit2 = segment.split(mySplitters);\n\n            for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n              newEvents.push(_newEventsFromSplit2[_i2]);\n            }\n          } // Make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers - re-do the current event.\n\n\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n\n        this.tree.remove(segment);\n      }\n\n      return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split([pt]);\n      newEvents.push(rightSE);\n      this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n\n  return SweepLine;\n}();\n\nvar Operation =\n/*#__PURE__*/\nfunction () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      /* Make a copy of the input geometry with points as objects, for perf */\n\n      var geoms = [pointsAsObjects(geom)];\n\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        geoms.push(pointsAsObjects(moreGeoms[i]));\n      }\n      /* Clean inputs */\n\n\n      for (var _i = 0, _iMax = geoms.length; _i < _iMax; _i++) {\n        forceMultiPoly(geoms[_i]);\n        cleanMultiPoly(geoms[_i]);\n      }\n      /* Convert inputs to MultiPoly objects, mark subject */\n\n\n      var multipolys = [];\n\n      for (var _i2 = 0, _iMax2 = geoms.length; _i2 < _iMax2; _i2++) {\n        multipolys.push(new MultiPolyIn(geoms[_i2]));\n      }\n\n      multipolys[0].markAsSubject();\n      operation.numMultiPolys = multipolys.length;\n      /* Put segment endpoints in a priority queue */\n\n      var queue = new SplayTree(SweepEvent.compare);\n\n      for (var _i3 = 0, _iMax3 = multipolys.length; _i3 < _iMax3; _i3++) {\n        var sweepEvents = multipolys[_i3].getSweepEvents();\n\n        for (var j = 0, jMax = sweepEvents.length; j < jMax; j++) {\n          queue.insert(sweepEvents[j]);\n        }\n      }\n      /* Pass the sweep line over those endpoints */\n\n\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n\n      while (node) {\n        var evt = node.key;\n\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error(\"Unable to pop() SweepEvent #\".concat(evt.id, \" [\").concat(evt.point.x, \", \").concat(evt.point.y, \"] \") + 'from queue. Please file a bug report.');\n        }\n\n        var newEvents = sweepLine.process(evt);\n\n        for (var _i4 = 0, _iMax4 = newEvents.length; _i4 < _iMax4; _i4++) {\n          queue.insert(newEvents[_i4]);\n        }\n\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      }\n      /* Collect and compile segments we're keeping into a multipolygon */\n\n\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n\n  return Operation;\n}(); // singleton available by import\n\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n\n  return operation.run('union', geom, moreGeoms);\n};\n\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n\n  return operation.run('intersection', geom, moreGeoms);\n};\n\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n\n  return operation.run('xor', geom, moreGeoms);\n};\n\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\n\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\nexport default class SplayTree {\n\n  constructor(compare = DEFAULT_COMPARE, noDuplicates = false) {\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  }\n\n\n  rotateLeft(x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) y.left.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)                this._root = y;\n    else if (x === x.parent.left) x.parent.left = y;\n    else                          x.parent.right = y;\n    if (y) y.left = x;\n    x.parent = y;\n  }\n\n\n  rotateRight(x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) y.right.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)               this._root = y;\n    else if(x === x.parent.left) x.parent.left = y;\n    else                         x.parent.right = y;\n    if (y) y.right = x;\n    x.parent = y;\n  }\n\n\n  _splay(x) {\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) this.rotateRight(p);\n        else              this.rotateLeft(p);\n      } else if (p.left === x && p.parent.left === p) {\n        this.rotateRight(p.parent);\n        this.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this.rotateLeft(p.parent);\n        this.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this.rotateRight(p);\n        this.rotateLeft(p);\n      } else {\n        this.rotateLeft(p);\n        this.rotateRight(p);\n      }\n    }\n  }\n\n\n  splay(x) {\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) ggp.left  = x;\n        else                 ggp.right = x;\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else gp.left = null;\n\n            p.right   = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else gp.right = null;\n\n            x.left    = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else p.left = null;\n\n        x.right  = p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else gp.right = null;\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else gp.left = null;\n\n            x.right   = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else p.right = null;\n\n        x.left   = p;\n        p.parent = x;\n      }\n    }\n  }\n\n\n  replace(u, v) {\n    if (!u.parent) this._root = v;\n    else if (u === u.parent.left) u.parent.left = v;\n    else u.parent.right = v;\n    if (v) v.parent = u.parent;\n  }\n\n\n  minNode(u = this._root) {\n    if (u) while (u.left) u = u.left;\n    return u;\n  }\n\n\n  maxNode(u = this._root) {\n    if (u) while (u.right) u = u.right;\n    return u;\n  }\n\n\n  insert(key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) return;\n        else if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    }\n\n    z = { key, data, left: null, right: null, parent: p };\n\n    if (!p)                          this._root = z;\n    else if (comp(p.key, z.key) < 0) p.right = z;\n    else                             p.left  = z;\n\n    this.splay(z);\n    this._size++;\n    return z;\n  }\n\n\n  find (key) {\n    var z    = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if      (cmp < 0) z = z.right;\n      else if (cmp > 0) z = z.left;\n      else              return z;\n    }\n    return null;\n  }\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param  {Key} key\n   * @return {boolean} true/false\n   */\n  contains (key) {\n    var node       = this._root;\n    var comparator = this._compare;\n    while (node)  {\n      var cmp = comparator(key, node.key);\n      if      (cmp === 0) return true;\n      else if (cmp < 0)   node = node.left;\n      else                node = node.right;\n    }\n\n    return false;\n  }\n\n\n  remove (key) {\n    var z = this.find(key);\n\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  removeNode(z) {\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  erase (key) {\n    var z = this.find(key);\n    if (!z) return;\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) sMax.right = t;\n      else   this._root = t;\n      t.parent = sMax;\n    }\n\n    this._size--;\n  }\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) node = node.left;\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  }\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) successor = successor.left;\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  }\n\n\n  /**\n   * Predecessor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) predecessor = predecessor.right;\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param  {forEachCallback} callback\n   * @return {SplayTree}\n   */\n  forEach(callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range(low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._compare;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load(keys = [], values = [], presort = false) {\n    if (this._size !== 0) throw new Error('bulk-load: tree is not empty');\n    const size = keys.length;\n    if (presort) sort(keys, values, 0, size - 1, this._compare);\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  }\n\n\n  min() {\n    var node = this.minNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n\n  max() {\n    var node = this.maxNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n  isEmpty() { return this._root === null; }\n  get size() { return this._size; }\n\n\n  /**\n   * Create a tree and load it with items\n   * @param  {Array<Key>}          keys\n   * @param  {Array<Value>?}        [values]\n\n   * @param  {Function?}            [comparator]\n   * @param  {Boolean?}             [presort=false] Pre-sort keys and values, using\n   *                                               tree's comparator. Sorting is done\n   *                                               in-place\n   * @param  {Boolean?}             [noDuplicates=false]   Allow duplicates\n   * @return {SplayTree}\n   */\n  static createTree(keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","export const NORMAL               = 0;\nexport const NON_CONTRIBUTING     = 1;\nexport const SAME_TRANSITION      = 2;\nexport const DIFFERENT_TRANSITION = 3;\n","export const INTERSECTION = 0;\nexport const UNION        = 1;\nexport const DIFFERENCE   = 2;\nexport const XOR          = 3;\n","import {\n  NORMAL,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION,\n  NON_CONTRIBUTING\n} from './edge_type';\nimport {\n  INTERSECTION,\n  UNION,\n  DIFFERENCE,\n  XOR\n} from './operation';\n\n/**\n * @param  {SweepEvent} event\n * @param  {SweepEvent} prev\n * @param  {Operation} operation\n */\nexport default function computeFields (event, prev, operation) {\n  // compute inOut and otherInOut fields\n  if (prev === null) {\n    event.inOut      = false;\n    event.otherInOut = true;\n\n  // previous line segment in sweepline belongs to the same polygon\n  } else {\n    if (event.isSubject === prev.isSubject) {\n      event.inOut      = !prev.inOut;\n      event.otherInOut = prev.otherInOut;\n\n    // previous line segment in sweepline belongs to the clipping polygon\n    } else {\n      event.inOut      = !prev.otherInOut;\n      event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n    }\n\n    // compute prevInResult field\n    if (prev) {\n      event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n        ? prev.prevInResult : prev;\n    }\n  }\n\n  // check if the line segment belongs to the Boolean operation\n  event.inResult = inResult(event, operation);\n}\n\n\n/* eslint-disable indent */\nfunction inResult(event, operation) {\n  switch (event.type) {\n    case NORMAL:\n      switch (operation) {\n        case INTERSECTION:\n          return !event.otherInOut;\n        case UNION:\n          return event.otherInOut;\n        case DIFFERENCE:\n          // return (event.isSubject && !event.otherInOut) ||\n          //         (!event.isSubject && event.otherInOut);\n          return (event.isSubject && event.otherInOut) ||\n                  (!event.isSubject && !event.otherInOut);\n        case XOR:\n          return true;\n      }\n      break;\n    case SAME_TRANSITION:\n      return operation === INTERSECTION || operation === UNION;\n    case DIFFERENT_TRANSITION:\n      return operation === DIFFERENCE;\n    case NON_CONTRIBUTING:\n      return false;\n  }\n  return false;\n}\n/* eslint-enable indent */\n","import { NORMAL } from './edge_type';\n\n\nexport default class SweepEvent {\n\n\n  /**\n   * Sweepline event\n   *\n   * @class {SweepEvent}\n   * @param {Array.<Number>}  point\n   * @param {Boolean}         left\n   * @param {SweepEvent=}     otherEvent\n   * @param {Boolean}         isSubject\n   * @param {Number}          edgeType\n   */\n  constructor (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Does event belong to result?\n     * @type {Boolean}\n     */\n    this.inResult = false;\n\n\n    // connection step\n\n    /**\n     * @type {Boolean}\n     */\n    this.resultInOut = false;\n\n    this.isExteriorRing = true;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isBelow (p) {\n    const p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isAbove (p) {\n    return !this.isBelow(p);\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  }\n\n\n  clone () {\n    const copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.inResult       = this.inResult;\n    copy.prevInResult   = this.prevInResult;\n    copy.isExteriorRing = this.isExteriorRing;\n    copy.inOut          = this.inOut;\n    copy.otherInOut     = this.otherInOut;\n\n    return copy;\n  }\n}\n","export default function equals(p1, p2) {\n  if (p1[0] === p2[0]) {\n    if (p1[1] === p2[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\n\n// const EPSILON = 1e-9;\n// const abs = Math.abs;\n// TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n// Precision problem.\n//\n// module.exports = function equals(p1, p2) {\n//   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n// };\n","/**\n * Signed area of the triangle (p0, p1, p2)\n * @param  {Array.<Number>} p0\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Number}\n */\nexport default function signedArea(p0, p1, p2) {\n  return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n}\n","import signedArea from './signed_area';\n\n/**\n * @param  {SweepEvent} e1\n * @param  {SweepEvent} e2\n * @return {Number}\n */\nexport default function compareEvents(e1, e2) {\n  const p1 = e1.point;\n  const p2 = e2.point;\n\n  // Different x-coordinate\n  if (p1[0] > p2[0]) return 1;\n  if (p1[0] < p2[0]) return -1;\n\n  // Different points, but same x-coordinate\n  // Event with lower y-coordinate is processed first\n  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\n  return specialCases(e1, e2, p1, p2);\n}\n\n\n/* eslint-disable no-unused-vars */\nfunction specialCases(e1, e2, p1, p2) {\n  // Same coordinates, but one is a left endpoint and the other is\n  // a right endpoint. The right endpoint is processed first\n  if (e1.left !== e2.left)\n    return e1.left ? 1 : -1;\n\n  // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n  // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n  // Same coordinates, both events\n  // are left endpoints or right endpoints.\n  // not collinear\n  if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n    // the event associate to the bottom segment is processed first\n    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n  }\n\n  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n}\n/* eslint-enable no-unused-vars */\n","import SweepEvent    from './sweep_event';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\n\n/**\n * @param  {SweepEvent} se\n * @param  {Array.<Number>} p\n * @param  {Queue} queue\n * @return {Queue}\n */\nexport default function divideSegment(se, p, queue)  {\n  const r = new SweepEvent(p, false, se,            se.isSubject);\n  const l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n  /* eslint-disable no-console */\n  if (equals(se.point, se.otherEvent.point)) {\n\n    console.warn('what is that, a collapsed segment?', se);\n  }\n  /* eslint-enable no-console */\n\n  r.contourId = l.contourId = se.contourId;\n\n  // avoid a rounding error. The left event would be processed after the right event\n  if (compareEvents(l, se.otherEvent) > 0) {\n    se.otherEvent.left = true;\n    l.left = false;\n  }\n\n  // avoid a rounding error. The left event would be processed after the right event\n  // if (compareEvents(se, r) > 0) {}\n\n  se.otherEvent.otherEvent = l;\n  se.otherEvent = r;\n\n  queue.push(l);\n  queue.push(r);\n\n  return queue;\n}\n","//const EPS = 1e-9;\n\n/**\n * Finds the magnitude of the cross product of two vectors (if we pretend\n * they're in three dimensions)\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The magnitude of the cross product\n */\nfunction crossProduct(a, b) {\n  return (a[0] * b[1]) - (a[1] * b[0]);\n}\n\n/**\n * Finds the dot product of two vectors.\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The dot product\n */\nfunction dotProduct(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]);\n}\n\n/**\n * Finds the intersection (if any) between two line segments a and b, given the\n * line segments' end points a1, a2 and b1, b2.\n *\n * This algorithm is based on Schneider and Eberly.\n * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n * Page 244.\n *\n * @param {Array.<Number>} a1 point of first line\n * @param {Array.<Number>} a2 point of first line\n * @param {Array.<Number>} b1 point of second line\n * @param {Array.<Number>} b2 point of second line\n * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n *                                         (meaning connected segments) as\n *                                         intersections\n * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n * intersection. If they overlap, the two end points of the overlapping segment.\n * Otherwise, null.\n */\nexport default function (a1, a2, b1, b2, noEndpointTouch) {\n  // The algorithm expects our lines in the form P + sd, where P is a point,\n  // s is on the interval [0, 1], and d is a vector.\n  // We are passed two points. P can be the first point of each pair. The\n  // vector, then, could be thought of as the distance (in x and y components)\n  // from the first point to the second point.\n  // So first, let's make our vectors:\n  const va = [a2[0] - a1[0], a2[1] - a1[1]];\n  const vb = [b2[0] - b1[0], b2[1] - b1[1]];\n  // We also define a function to convert back to regular point form:\n\n  /* eslint-disable arrow-body-style */\n\n  function toPoint(p, s, d) {\n    return [\n      p[0] + s * d[0],\n      p[1] + s * d[1]\n    ];\n  }\n\n  /* eslint-enable arrow-body-style */\n\n  // The rest is pretty much a straight port of the algorithm.\n  const e = [b1[0] - a1[0], b1[1] - a1[1]];\n  let kross    = crossProduct(va, vb);\n  let sqrKross = kross * kross;\n  const sqrLenA  = dotProduct(va, va);\n  //const sqrLenB  = dotProduct(vb, vb);\n\n  // Check for line intersection. This works because of the properties of the\n  // cross product -- specifically, two vectors are parallel if and only if the\n  // cross product is the 0 vector. The full calculation involves relative error\n  // to account for possible very small line segments. See Schneider & Eberly\n  // for details.\n  if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n    // If they're not parallel, then (because these are line segments) they\n    // still might not actually intersect. This code checks that the\n    // intersection point of the lines is actually on both line segments.\n    const s = crossProduct(e, vb) / kross;\n    if (s < 0 || s > 1) {\n      // not on line segment a\n      return null;\n    }\n    const t = crossProduct(e, va) / kross;\n    if (t < 0 || t > 1) {\n      // not on line segment b\n      return null;\n    }\n    if (s === 0 || s === 1) {\n      // on an endpoint of line segment a\n      return noEndpointTouch ? null : [toPoint(a1, s, va)];\n    }\n    if (t === 0 || t === 1) {\n      // on an endpoint of line segment b\n      return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n    }\n    return [toPoint(a1, s, va)];\n  }\n\n  // If we've reached this point, then the lines are either parallel or the\n  // same, but the segments could overlap partially or fully, or not at all.\n  // So we need to find the overlap, if any. To do that, we can use e, which is\n  // the (vector) difference between the two initial points. If this is parallel\n  // with the line itself, then the two lines are the same line, and there will\n  // be overlap.\n  //const sqrLenE = dotProduct(e, e);\n  kross = crossProduct(e, va);\n  sqrKross = kross * kross;\n\n  if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n  // Lines are just parallel, not the same. No overlap.\n    return null;\n  }\n\n  const sa = dotProduct(va, e) / sqrLenA;\n  const sb = sa + dotProduct(va, vb) / sqrLenA;\n  const smin = Math.min(sa, sb);\n  const smax = Math.max(sa, sb);\n\n  // this is, essentially, the FindIntersection acting on floats from\n  // Schneider & Eberly, just inlined into this function.\n  if (smin <= 1 && smax >= 0) {\n\n    // overlap on an end point\n    if (smin === 1) {\n      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n    }\n\n    if (smax === 0) {\n      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n    }\n\n    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\n    // There's overlap on a segment -- two points of intersection. Return both.\n    return [\n      toPoint(a1, smin > 0 ? smin : 0, va),\n      toPoint(a1, smax < 1 ? smax : 1, va)\n    ];\n  }\n\n  return null;\n}\n","import divideSegment from './divide_segment';\nimport intersection  from './segment_intersection';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\nimport {\n  NON_CONTRIBUTING,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION\n} from './edge_type';\n\n/**\n * @param  {SweepEvent} se1\n * @param  {SweepEvent} se2\n * @param  {Queue}      queue\n * @return {Number}\n */\nexport default function possibleIntersection (se1, se2, queue) {\n  // that disallows self-intersecting polygons,\n  // did cost us half a day, so I'll leave it\n  // out of respect\n  // if (se1.isSubject === se2.isSubject) return;\n  const inter = intersection(\n    se1.point, se1.otherEvent.point,\n    se2.point, se2.otherEvent.point\n  );\n\n  const nintersections = inter ? inter.length : 0;\n  if (nintersections === 0) return 0; // no intersection\n\n  // the line segments intersect at an endpoint of both line segments\n  if ((nintersections === 1) &&\n      (equals(se1.point, se2.point) ||\n       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n    return 0;\n  }\n\n  if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n    // if(se1.contourId === se2.contourId){\n    // console.warn('Edges of the same polygon overlap',\n    //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n    // }\n    //throw new Error('Edges of the same polygon overlap');\n    return 0;\n  }\n\n  // The line segments associated to se1 and se2 intersect\n  if (nintersections === 1) {\n\n    // if the intersection point is not an endpoint of se1\n    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n      divideSegment(se1, inter[0], queue);\n    }\n\n    // if the intersection point is not an endpoint of se2\n    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n      divideSegment(se2, inter[0], queue);\n    }\n    return 1;\n  }\n\n  // The line segments associated to se1 and se2 overlap\n  const events        = [];\n  let leftCoincide  = false;\n  let rightCoincide = false;\n\n  if (equals(se1.point, se2.point)) {\n    leftCoincide = true; // linked\n  } else if (compareEvents(se1, se2) === 1) {\n    events.push(se2, se1);\n  } else {\n    events.push(se1, se2);\n  }\n\n  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n    rightCoincide = true;\n  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n    events.push(se2.otherEvent, se1.otherEvent);\n  } else {\n    events.push(se1.otherEvent, se2.otherEvent);\n  }\n\n  if ((leftCoincide && rightCoincide) || leftCoincide) {\n    // both line segments are equal or share the left endpoint\n    se2.type = NON_CONTRIBUTING;\n    se1.type = (se2.inOut === se1.inOut)\n      ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n    if (leftCoincide && !rightCoincide) {\n      // honestly no idea, but changing events selection from [2, 1]\n      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n      divideSegment(events[1].otherEvent, events[0].point, queue);\n    }\n    return 2;\n  }\n\n  // the line segments share the right endpoint\n  if (rightCoincide) {\n    divideSegment(events[0], events[1].point, queue);\n    return 3;\n  }\n\n  // no line segment includes totally the other one\n  if (events[0] !== events[3].otherEvent) {\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[1], events[2].point, queue);\n    return 3;\n  }\n\n  // one line segment includes the other one\n  divideSegment(events[0], events[1].point, queue);\n  divideSegment(events[3].otherEvent, events[2].point, queue);\n\n  return 3;\n}\n","import signedArea    from './signed_area';\nimport compareEvents from './compare_events';\nimport equals        from './equals';\n\n\n/**\n * @param  {SweepEvent} le1\n * @param  {SweepEvent} le2\n * @return {Number}\n */\nexport default function compareSegments(le1, le2) {\n  if (le1 === le2) return 0;\n\n  // Segments are not collinear\n  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n    // If they share their left endpoint use the right endpoint to sort\n    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\n    // Different left endpoint: use the left endpoint to sort\n    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\n    // has the line segment associated to e1 been inserted\n    // into S after the line segment associated to e2 ?\n    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\n    // The line segment associated to e2 has been inserted\n    // into S after the line segment associated to e1\n    return le1.isBelow(le2.point) ? -1 : 1;\n  }\n\n  if (le1.isSubject === le2.isSubject) { // same polygon\n    let p1 = le1.point, p2 = le2.point;\n    if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n      p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]) return 0;\n      else return le1.contourId > le2.contourId ? 1 : -1;\n    }\n  } else { // Segments are collinear, but belong to separate polygons\n    return le1.isSubject ? -1 : 1;\n  }\n\n  return compareEvents(le1, le2) === 1 ? 1 : -1;\n}\n","import compareEvents from './compare_events';\nimport { DIFFERENCE } from './operation';\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<SweepEvent>}\n */\nfunction orderEvents(sortedEvents) {\n  let event, i, len, tmp;\n  const resultEvents = [];\n  for (i = 0, len = sortedEvents.length; i < len; i++) {\n    event = sortedEvents[i];\n    if ((event.left && event.inResult) ||\n      (!event.left && event.otherEvent.inResult)) {\n      resultEvents.push(event);\n    }\n  }\n  // Due to overlapping edges the resultEvents array can be not wholly sorted\n  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if ((i + 1) < len &&\n        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n        tmp = resultEvents[i];\n        resultEvents[i] = resultEvents[i + 1];\n        resultEvents[i + 1] = tmp;\n        sorted = false;\n      }\n    }\n  }\n\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    event.pos = i;\n  }\n\n  // imagine, the right event is found in the beginning of the queue,\n  // when his left counterpart is not marked yet\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    if (!event.left) {\n      tmp = event.pos;\n      event.pos = event.otherEvent.pos;\n      event.otherEvent.pos = tmp;\n    }\n  }\n\n  return resultEvents;\n}\n\n\n/**\n * @param  {Number} pos\n * @param  {Array.<SweepEvent>} resultEvents\n * @param  {Object>}    processed\n * @return {Number}\n */\nfunction nextPos(pos, resultEvents, processed, origIndex) {\n  let p, p1;\n  let newPos = pos + 1;\n  const length = resultEvents.length;\n\n  p  = resultEvents[pos].point;\n\n  if (newPos < length)\n    p1 = resultEvents[newPos].point;\n\n\n  // while in range and not the current one by value\n  while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n    if (!processed[newPos]) {\n      return newPos;\n    } else   {\n      newPos++;\n    }\n    p1 = resultEvents[newPos].point;\n  }\n\n  newPos = pos - 1;\n\n  while (processed[newPos] && newPos >= origIndex) {\n    newPos--;\n  }\n  return newPos;\n}\n\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<*>} polygons\n */\nexport default function connectEdges(sortedEvents, operation) {\n  let i, len;\n  const resultEvents = orderEvents(sortedEvents);\n\n  // \"false\"-filled array\n  const processed = {};\n  const result = [];\n  let event;\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    if (processed[i]) continue;\n    const contour = [[]];\n\n    if (!resultEvents[i].isExteriorRing) {\n      if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\n        result.push(contour);\n      } else if (result.length === 0) {\n        result.push([[contour]]);\n      } else {\n        result[result.length - 1].push(contour[0]);\n      }\n    } else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\n      result[result.length - 1].push(contour[0]);\n    } else {\n      result.push(contour);\n    }\n\n    const ringId = result.length - 1;\n    let pos = i;\n\n    const initial = resultEvents[i].point;\n    contour[0].push(initial);\n\n    while (pos >= i) {\n      event = resultEvents[pos];\n      processed[pos] = true;\n\n      if (event.left) {\n        event.resultInOut = false;\n        event.contourId   = ringId;\n      } else {\n        event.otherEvent.resultInOut = true;\n        event.otherEvent.contourId   = ringId;\n      }\n\n      pos = event.pos;\n      processed[pos] = true;\n      contour[0].push(resultEvents[pos].point);\n      pos = nextPos(pos, resultEvents, processed, i);\n    }\n\n    pos = pos === -1 ? i : pos;\n\n    event = resultEvents[pos];\n    processed[pos] = processed[event.pos] = true;\n    event.otherEvent.resultInOut = true;\n    event.otherEvent.contourId   = ringId;\n  }\n\n  // Handle if the result is a polygon (eg not multipoly)\n  // Commented it again, let's see what do we mean by that\n  // if (result.length === 1) result = result[0];\n  return result;\n}\n","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n","import Queue           from 'tinyqueue';\nimport SweepEvent      from './sweep_event';\nimport compareEvents   from './compare_events';\nimport { DIFFERENCE }  from './operation';\n\nconst max = Math.max;\nconst min = Math.min;\n\nlet contourId = 0;\n\n\nfunction processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n  let i, len, s1, s2, e1, e2;\n  for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n    s1 = contourOrHole[i];\n    s2 = contourOrHole[i + 1];\n    e1 = new SweepEvent(s1, false, undefined, isSubject);\n    e2 = new SweepEvent(s2, false, e1,        isSubject);\n    e1.otherEvent = e2;\n\n    if (s1[0] === s2[0] && s1[1] === s2[1]) {\n      continue; // skip collapsed edges, or it breaks\n    }\n\n    e1.contourId = e2.contourId = depth;\n    if (!isExteriorRing) {\n      e1.isExteriorRing = false;\n      e2.isExteriorRing = false;\n    }\n    if (compareEvents(e1, e2) > 0) {\n      e2.left = true;\n    } else {\n      e1.left = true;\n    }\n\n    const x = s1[0], y = s1[1];\n    bbox[0] = min(bbox[0], x);\n    bbox[1] = min(bbox[1], y);\n    bbox[2] = max(bbox[2], x);\n    bbox[3] = max(bbox[3], y);\n\n    // Pushing it so the queue is sorted from left to right,\n    // with object on the left having the highest priority.\n    Q.push(e1);\n    Q.push(e2);\n  }\n}\n\n\nexport default function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n  const eventQueue = new Queue(null, compareEvents);\n  let polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n  for (i = 0, ii = subject.length; i < ii; i++) {\n    polygonSet = subject[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n    }\n  }\n\n  for (i = 0, ii = clipping.length; i < ii; i++) {\n    polygonSet = clipping[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (operation === DIFFERENCE) isExteriorRing = false;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n    }\n  }\n\n  return eventQueue;\n}\n","import subdivideSegments from './subdivide_segments';\nimport connectEdges      from './connect_edges';\nimport fillQueue         from './fill_queue';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n}        from './operation';\n\nconst EMPTY = [];\n\n\nfunction trivialOperation(subject, clipping, operation) {\n  let result = null;\n  if (subject.length * clipping.length === 0) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = (subject.length === 0) ? clipping : subject;\n    }\n  }\n  return result;\n}\n\n\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n  let result = null;\n  if (sbbox[0] > cbbox[2] ||\n      cbbox[0] > sbbox[2] ||\n      sbbox[1] > cbbox[3] ||\n      cbbox[1] > sbbox[3]) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = subject.concat(clipping);\n    }\n  }\n  return result;\n}\n\n\nexport default function boolean(subject, clipping, operation) {\n  if (typeof subject[0][0][0] === 'number') {\n    subject = [subject];\n  }\n  if (typeof clipping[0][0][0] === 'number') {\n    clipping = [clipping];\n  }\n  let trivial = trivialOperation(subject, clipping, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  const sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n  const cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n  //console.time('fill queue');\n  const eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('fill queue');\n\n  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  //console.time('subdivide edges');\n  const sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('subdivide edges');\n\n  //console.time('connect vertices');\n  const result = connectEdges(sortedEvents, operation);\n  //console.timeEnd('connect vertices');\n  return result;\n}\n","import Tree                 from 'splaytree';\nimport computeFields        from './compute_fields';\nimport possibleIntersection from './possible_intersection';\nimport compareSegments      from './compare_segments';\nimport {\n  INTERSECTION,\n  DIFFERENCE\n} from './operation';\n\n\nexport default function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n  const sweepLine = new Tree(compareSegments);\n  const sortedEvents = [];\n\n  const rightbound = Math.min(sbbox[2], cbbox[2]);\n\n  let prev, next, begin;\n\n  while (eventQueue.length !== 0) {\n    let event = eventQueue.pop();\n    sortedEvents.push(event);\n\n    // optimization by bboxes for intersection and difference goes here\n    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n      break;\n    }\n\n    if (event.left) {\n      next  = prev = sweepLine.insert(event);\n      begin = sweepLine.minNode();\n\n      if (prev !== begin) prev = sweepLine.prev(prev);\n      else                prev = null;\n\n      next = sweepLine.next(next);\n\n      const prevEvent = prev ? prev.key : null;\n      let prevprevEvent;\n      computeFields(event, prevEvent, operation);\n      if (next) {\n        if (possibleIntersection(event, next.key, eventQueue) === 2) {\n          computeFields(event, prevEvent, operation);\n          computeFields(event, next.key, operation);\n        }\n      }\n\n      if (prev) {\n        if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n          let prevprev = prev;\n          if (prevprev !== begin) prevprev = sweepLine.prev(prevprev);\n          else                    prevprev = null;\n\n          prevprevEvent = prevprev ? prevprev.key : null;\n          computeFields(prevEvent, prevprevEvent, operation);\n          computeFields(event,     prevEvent,     operation);\n        }\n      }\n    } else {\n      event = event.otherEvent;\n      next = prev = sweepLine.find(event);\n\n      if (prev && next) {\n\n        if (prev !== begin) prev = sweepLine.prev(prev);\n        else                prev = null;\n\n        next = sweepLine.next(next);\n        sweepLine.remove(event);\n\n        if (next && prev) {\n          possibleIntersection(prev.key, next.key, eventQueue);\n        }\n      }\n    }\n  }\n  return sortedEvents;\n}\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","import { GeoJSONReader, GeoJSONWriter, UnionOp } from 'turf-jsts';\n\n/**\n * Takes two or more {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {...Feature<Polygon>} A polygon to combine\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union() {\n    var reader = new GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n\n    for (var i = 1; i < arguments.length; i++) {\n        result = UnionOp.union(result, reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n\n    var writer = new GeoJSONWriter();\n    result = writer.write(result);\n\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n}\n\nexport default union;\n","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\nexport default truncate;\n","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n","import { feature } from '@turf/helpers';\nimport { getCoords, getType } from '@turf/invariant';\n\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    // Backwards compatible with v4.0\n    var mutate = (typeof options === 'object') ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n\n    switch (type) {\n    case 'LineString':\n        newCoords = cleanLine(geojson);\n        break;\n    case 'MultiLineString':\n    case 'Polygon':\n        getCoords(geojson).forEach(function (line) {\n            newCoords.push(cleanLine(line));\n        });\n        break;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (polygons) {\n            var polyPoints = [];\n            polygons.forEach(function (ring) {\n                polyPoints.push(cleanLine(ring));\n            });\n            newCoords.push(polyPoints);\n        });\n        break;\n    case 'Point':\n        return geojson;\n    case 'MultiPoint':\n        var existing = {};\n        getCoords(geojson).forEach(function (coord) {\n            var key = coord.join('-');\n            if (!existing.hasOwnProperty(key)) {\n                newCoords.push(coord);\n                existing[key] = true;\n            }\n        });\n        break;\n    default:\n        throw new Error(type + ' geometry not supported');\n    }\n\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return {type: type, coordinates: newCoords};\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({type: type, coordinates: newCoords}, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\n\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1])) return points;\n\n    var prevPoint, point, nextPoint;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points[i - 1];\n        point = points[i];\n        nextPoint = points[i + 1];\n\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point)) {\n            newPoints.push(point);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n\n    if (cross !== 0) return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\nexport default cleanCoords;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport truncate from '@turf/truncate';\nimport { getGeom } from '@turf/invariant';\nimport { feature } from '@turf/helpers';\nimport cleanCoords from '@turf/clean-coords';\n\n// depend on jsts for now http://bjornharrtell.github.io/jsts/\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {Feature|null} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2) {\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n\n    // Return null if geometry is too narrow in coordinate precision\n    // fixes topology errors with JSTS\n    // https://github.com/Turfjs/turf/issues/463\n    // https://github.com/Turfjs/turf/pull/1004\n    if (cleanCoords(truncate(geom2, {precision: 4})).coordinates[0].length < 4) return null;\n    if (cleanCoords(truncate(geom1, {precision: 4})).coordinates[0].length < 4) return null;\n\n    var reader = new GeoJSONReader();\n    var a = reader.read(truncate(geom1));\n    var b = reader.read(truncate(geom2));\n    var intersection = OverlayOp.intersection(a, b);\n\n    // https://github.com/Turfjs/turf/issues/951\n    if (intersection.isEmpty()) return null;\n\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(intersection);\n    return feature(geom);\n}\n\nexport default intersect;\n","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport area from '@turf/area';\nimport { feature } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = getGeom(polygon1);\n    var geom2 = getGeom(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return feature(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new GeoJSONReader();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = OverlayOp.difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(differenced);\n\n    return feature(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (area(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        flattenEach(geom, function (feature$$1) {\n            if (area(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\nexport default difference;\n","<template>\n  <div id=\"app\">\n    <div id=\"map\">\n      <div class=\"control leaflet-bar\">\n        <h4>Input Data</h4>\n        <select v-on:change=\"setInput\">\n          <option>Asia</option>\n          <option>Almost Parallel Segments</option>\n          <option>Saw & Cheese</option>\n        </select>\n        <br><br>\n        <div v-for=\"operation in operations\">\n          <input type=\"radio\" name=\"some\" :value=\"operation\" v-on:change=\"setOperation\" v-model=\"selectedOperation\"> {{operation}}\n        </div>\n\n        <h4>Performance</h4>\n        <p>\n          polygon-clipping {{performance}} m/s<br>\n          martinez {{martinezPerf}} m/s<br>\n          jsts {{jstsPerf}} m/s<br>\n        </p>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport pc from '../..'\n\n// the martinez packaging is somewhat broken\nimport martinezBool from 'martinez-polygon-clipping'\nvar martinezUnion = (p1, p2) => martinezBool(p1, p2, 1)\nvar martinezIntersection = (p1, p2) => martinezBool(p1, p2, 0)\nvar martinezDifference = (p1, p2) => martinezBool(p1, p2, 2)\nvar martinezXor = (p1, p2) => martinezBool(p1, p2, 3)\n\n// turf v5 runs off of jsts under the hood\nimport jstsUnion from '@turf/union'\nimport jstsIntersection from '@turf/intersect'\nimport jstsDifference from '@turf/difference'\nvar jstsXor = null\n\nvar operation = pc.intersection\nvar martinezOp = martinezUnion\nvar jstsOp = jstsUnion\nvar inData = null\nvar inLayer = null\nvar outLayer = null\nvar map = null\n\nimport asia from '../geojson/asia-with-poly.json'\nimport parallel from '../geojson/parallel.json'\nimport cheese from '../geojson/cheese.json'\n\nexport default {\n  name: 'app',\n  data () {\n    return {\n      operations: ['Intersection', 'Union', 'Difference', 'XOR'],\n      selectedOperation: 'Intersection',\n      performance: '',\n      martinezPerf: '',\n      jstsPerf: ''\n    }\n  },\n  methods: {\n    setInput (e) {\n      inLayer.clearLayers()\n      outLayer.clearLayers()\n      if (e.target.value === 'Asia') inData = asia\n      if (e.target.value === 'Almost Parallel Segments') inData = parallel\n      if (e.target.value === 'Saw & Cheese') inData = cheese\n      inLayer.addData(inData)\n      map.fitBounds(inLayer.getBounds(), {\n        padding: [20, 20]\n      })\n      this.runOperation()\n    },\n    setOperation (e) {\n      this.selectedOperation = e.target.value\n      outLayer.clearLayers()\n\n      if (this.selectedOperation === 'Union') {\n        operation = pc.union\n        martinezOp = martinezUnion\n        jstsOp = jstsUnion\n      }\n      if (this.selectedOperation === 'Intersection') {\n        operation = pc.intersection\n        martinezOp = martinezIntersection\n        jstsOp = jstsIntersection\n      }\n      if (this.selectedOperation === 'XOR') {\n        operation = pc.xor\n        martinezOp = martinezXor\n        jstsOp = jstsXor\n      }\n      if (this.selectedOperation === 'Difference') {\n        operation = pc.difference\n        martinezOp = martinezDifference\n        jstsOp = jstsDifference\n      }\n\n      this.runOperation()\n    },\n    runOperation () {\n      var t0 = performance.now()\n      var outData = operation(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.performance = (performance.now() - t0).toFixed(2)\n\n      outLayer.addData({\n        'type': 'MultiPolygon',\n        'coordinates': outData\n      }).addTo(map)\n\n      var m0 = performance.now()\n      martinezOp(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.martinezPerf = (performance.now() - m0).toFixed(2)\n\n      if (jstsOp !== null) {\n        var j0 = performance.now()\n        jstsOp(inData.features[0], inData.features[1])\n        this.jstsPerf = (performance.now() - j0).toFixed(2)\n      } else {\n        this.jstsPerf = 'N/A'\n      }\n    }\n  },\n  mounted () {\n    inData = asia\n    map = window.map = L.map('map', {\n      minZoom: 1,\n      maxZoom: 20,\n      center: [0, 0],\n      zoom: 2,\n      crs: L.CRS.Simple\n    })\n\n    inLayer = L.geoJson(asia).addTo(map)\n\n    map.fitBounds(inLayer.getBounds(), {\n      padding: [20, 20]\n    })\n    outLayer = L.geoJson({\n      type: 'FeatureCollection',\n      features: []\n    }, {\n      color: 'red'\n    }).addTo(map)\n\n    this.runOperation()\n  }\n}\n</script>\n\n<style>\n    html, body, #app, #map {\n      width: 100%;\n      height: 100%;\n      margin: 0px;\n    }\n\n  .control {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background: white;\n    padding: 10px;\n    z-index: 10000;\n  }\n\n  h4{\n    margin-bottom: 5px\n  }\n  p{\n    margin-top: 5px;\n  }\n</style>\n","import Vue from 'vue'\nimport App from './App.vue'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n"],"names":["Node","key","data","left","right","DEFAULT_COMPARE","a","b","splay","i","t","comparator","l","r","y","N","cmp","insert","tree","node","_size","remove","x","split","v","Tree","_comparator","_root","this","add","current","compare","visitor","ctx","Q","done","push","length","pop","call","low","high","fn","keys","forEach","values","minNode","maxNode","index","d","root","successor","predecessor","head","next","p","toList","presort","size","sort","pivot","j","tmp","loadRecursive","parent","start","end","middle","Math","floor","mergedList","l1","l2","p1","p2","mergeLists","createList","sortedListToBST","list","printNode","n","out","printRow","prefix","isTail","indent","join","newKey","newData","merge","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype","epsilon","Number","EPSILON","undefined","pow","EPSILON_SQ","cmpPoints","aPt","bPt","diff","_diff","touch","m","touchPoints","mPt","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","v1","v2","kross","sqrt","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","closestPoint","pt1","pt2","dist","horizontalIntersection","pt","verticalIntersection","pointsAsObjects","geom","output","Array","isArray","Error","iMax","jMax","k","kMax","forceMultiPoly","unshift","splice","cleanMultiPoly","multipoly","poly","exteriorRing","cleanRing","interiorRing","ring","prevPt","nextPt","isPointUncessary","sweepEventId","SweepEvent","point","isLeft","events","id","value","cmpX","cmpY","link","aConsumedBy","bConsumedBy","consumedBy","aVert","segment","isVertical","bVert","pointSegCmp","compareVertically","otherSE","otherPointSegCmp","concat","other","otherEvents","evt","checkForConsuming","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","set","sine","cosine","has","_cache$get","get","asine","acosine","_cache$get2","bsine","bcosine","cmpZeroASine","cmpZeroBSine","Segment","leftSE","rightSE","ringsIn","_cache","alx","aly","blx","bly","arx","brx","aCmpBLeft","aCmpBRight","bCmpALeft","bCmpARight","aId","bId","comparePoint","cmpLX","_aId","_bId","_cmpLX","cmpLY","newRightSE","y1","y2","ll","ur","isAnEndpoint","interPt","vector","segCmpX","bbox","touchesBbox","cPt","avgPt","bboxOverlap","b1","b2","lowerX","upperX","getBboxOverlap","touchesOtherLSE","touches","touchesThisLSE","touchesOtherRSE","touchesThisRSE","ve","d1","d2","intersection","points","prevSeg","prevPoint","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","slice","le","re","consume","consumer","consumee","cmp$$1","prev","_tmp","prevInResult","ringsAfter","rings","ringsBefore","indexOf","multiPolysAfter","polysAfter","polysExclude","isExterior","mps","_i","_iMax","mp","multiPoly","mpsBefore","multiPolysBefore","mpsAfter","operation","type","least","most","numMultiPolys","abs","isJustSubject","isSubject","point1","point2","ptCmp","RingIn","geomRing","segments","fromRing","sweepEvents","PolyIn","geomPoly","interiorRings","getSweepEvents","ringSweepEvents","MultiPolyIn","geomMultiPoly","polys","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","firstPt","lastPt","indexLE","getLeftmostComparator","intersectionLE","ringEvents","reverse","_pt","_nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevPrevSeg","PolyOut","getGeom","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","arguments","SplayTree","find","prevNode","nextNode","nextSeg","mySplitters","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextInter","_newEventsFromSplit","_newEventsFromSplit2","_i2","_iMax2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","seg","Operation","moreGeoms","geoms","multipolys","markAsSubject","sweepLine","prevQueueSize","process","factory","_len","_key","run","_len2","_key2","_len3","_key3","subjectGeom","_len4","clippingGeoms","_key4","noDuplicates","_compare","_noDuplicates","rotateRight","rotateLeft","gp","ggp","u","z","comp","replace","s","sMax","returnValue","callback","load","NORMAL","NON_CONTRIBUTING","SAME_TRANSITION","DIFFERENT_TRANSITION","INTERSECTION","UNION","DIFFERENCE","XOR","computeFields","inOut","otherInOut","inResult","otherEvent","edgeType","resultInOut","p0","isBelow","copy","equals","signedArea","compareEvents","e1","e2","specialCases","divideSegment","se","console","warn","contourId","possibleIntersection","se1","se2","a1","a2","noEndpointTouch","va","vb","toPoint","e","sqrKross","sqrLenA","sa","sb","smin","min","smax","max","nintersections","leftCoincide","rightCoincide","compareSegments","le1","le2","isAbove","nextPos","pos","resultEvents","processed","origIndex","newPos","connectEdges","sortedEvents","len","sorted","orderEvents","result","contour","ringId","initial","TinyQueue","defaultCompare","_down","item","_up","top","peek","halfLength","best","processPolygon","contourOrHole","depth","s1","s2","EMPTY","boolean","subject","clipping","trivial","trivialOperation","sbbox","Infinity","cbbox","eventQueue","polygonSet","ii","jj","Queue","fillQueue","compareBBoxes","begin","rightbound","prevprev","subdivideSegments","arrayLike","relativeStart","parseInt","relativeEnd","isFinite","isInteger","val","parseFloat","isNaN","trunc","ceil","NumberUtil","interfaces_","getClass","equalsWithTolerance","x1","x2","tolerance","IllegalArgumentException","message","name","stack","__proto__","create","constructor","Double","staticAccessors$1","MAX_VALUE","doubleToLongBits","longBitsToDouble","isInfinite","defineProperties","Comparable","Clonable","Comparator","Serializable","Coordinate","NULL_ORDINATE","c","staticAccessors","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","ordinateIndex","equals2D","getOrdinate","equals3D","equalInZ","compareTo","o","clone","toString","distance3D","dx","dy","dz","distance","hashCode","setCoordinate","f","NaN","dimensionsToTest","_dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","CoordinateSequenceFactory","Location","staticAccessors$4","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","locationValue","hasInterface","MathUtil","staticAccessors$5","LOG_10","log10","ln","log","v3","v4","clamp","x$1","min$1","max$1","wrap","v1$1","v2$1","v3$1","average","StringBuffer","str","append","setCharAt","substr","Integer","intValue","Character","isWhitespace","toUpperCase","DD","_hi","_lo","init","dd","parse","hi","lo","staticAccessors$7","PI","TWO_PI","PI_2","E","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","extractSignificantDigits","insertDecimalPoint","magnitude","mag","scale","divide","gt","lt","multiply","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","y$1","isZero","selfSubtract","getSpecialNumberString","selfDivide","tc","ty","C","U","yhi","ylo","hc","hy","dump","createNaN","ge","exp","selfMultiply","reciprocal","fhi","flo","rint","setValue","value$1","isNegative","ax","axdd","H","h","S","H$1","T","S$1","f$1","s$1","e$1","zhi","zlo","tx","hx","selfSqr","toStandardNotation","toSciNotation","specialStr","fill","sigDigits","num","charAt","stringOfChar","numZeroes","digits","expStr","trailingDigits","substring","digitsWithDecimal","isPositive","signum","strlen","signCh","numBeforeDec","ch","isDigit","ex","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","CGAlgorithmsDD","staticAccessors$6","DP_SAFE_EPSILON","orientationIndex","q","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","q1","q2","denom1","denom2","denom","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","det","errbound","CoordinateSequence","staticAccessors$8","M","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","env","getY","toCoordinateArray","Exception","NotRepresentableException","Exception$$1","System","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","HCoordinate","w","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","px","py","pw","qx","qy","qw","xInt","yInt","Envelope","_minx","_maxx","_miny","_maxy","staticAccessors$9","getArea","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","expandToInclude","minExtent","translate","transX","transY","setToNull","maxExtent","expandBy","deltaX","deltaY","contains","centre","minq","maxq","minp","maxp","regExes","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","WKTParser","geometryFactory","GeometryFactory","read","wkt","geometry","matches","exec","search","toLowerCase","parse$1","apply","write","extractGeometry","getGeometryType","extract$1","wktType","isEmpty","coordinate","coordinate$1","point$1","_coordinates","multipoint","multipoint$1","array","_geometries","linestring","linestring$1","_points","linearring","linearring$1","multilinestring","multilinestring$1","polygon","polygon$1","_shell","_holes","multipolygon","multipolygon$1","geometrycollection","collection","createPoint","coords","trim","createMultiPoint","components","createLineString","createLinearRing","line","createMultiLineString","lines","createPolygon","shell","holes","createMultiPolygon","polygons","createGeometryCollection","wktArray","WKTWriter","parser","toLineString","RuntimeException","AssertionFailedException","RuntimeException$$1","Assert","shouldNeverReachHere","isTrue","assertion","expectedValue","actualValue","LineIntersector","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","staticAccessors$10","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","catBuf","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","precisionModel","isInteriorIntersection","inputLineIndex","computeEdgeDistance","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","pdx","pdy","nonRobustComputeEdgeDistance","RobustLineIntersector","LineIntersector$$1","isInSegmentEnvelopes","intPt","env0","env1","CGAlgorithms","normalizeToMinimum","n1","n2","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","x3","x4","xabs","checkDD","intPtDD","isIn","println","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","nearestPt","minDist","distancePointLine","RobustDeterminant","sign","swap","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","countSegment","minx","maxx","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","sum","x0","x0$1","sum$1","distanceLineLine","A","B","D","noIntersection","rNumb","isPointInRing","computeLength","pts","y0","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","minDistance","isOnLine","lineIntersector","GeometryComponentFilter","filter","Geometry","_envelope","_factory","_SRID","_userData","getSRID","staticAccessors$11","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","isGeometryCollection","getSortIndex","getFactory","getGeometryN","isRectangle","g$1","equalsTopo","g","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","other$1","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","SRID","setUserData","userData","iterator","hasNext","aElement","bElement","comparison","isGeometryCollectionOrDerived","hasNonEmptyElements","geometries","hasNullElements","CoordinateFilter","coord","BoundaryNodeRule","staticAccessors$12","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","boundaryCount","Collection","IndexOutOfBoundsException","addAll","toArray","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","array_","ensureCapacity","clear","element","oldElement","Iterator_","found","Iterator$$1","arrayList","arrayList_","position_","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coordArrayType","coll","isChanged","coord$2","obj","allowRepeated$2","coord$3","allowRepeated$3","i$2","i$3","coord$4","coord$5","allowRepeated$5","inc","closeRing","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","isRing","ptNotInList","testPts","testPt","scroll","coordinates","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","last","mid","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","Map$1","put","entrySet","SortedMap","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","hashSet_","BLACK","colorOf","color","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","getValue","getKey","oldValue","fixAfterInsertion","getFirstEntry","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","treeSet_","Arrays","asList","Dimension","staticAccessors$14","P","L","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","dimensionValue","toDimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","isDone","isGeometryChanged","GeometryCollection","Geometry$$1","getCoordinates","getNumPoints","childCoordinates","area","isEquivalentClass","otherCollection","getBoundaryDimension","dimension","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","getBoundary","MultiLineString","GeometryCollection$$1","isClosed","nLines","revLines","BoundaryOp","lineStrings","_geom","_geomFact","_bnRule","_endpointMap","bnRule","geom$1","bnRule$1","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createMultiPointFromCoords","LineString","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","valence","count","Counter","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","NEWLINE","SIMPLE_ORDINATE_FORMAT","chars","String","getStackTrace","os","ps","printStackTrace","t$1","stackTrace","lineNumberReader","readLine","separator","separatorlen","tokenList","tmpString","token","res","format","CoordinateSequences","copyCoord","minDim","dim","isEqual","cs1","cs2","cs1Size","extend","fact","newseq","cs","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","line$1","ls","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Puntal","Point","Polygonal","Polygon","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","convexHull","getExteriorRing","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","MultiPoint","isValid","LinearRing","LineString$$1","validateConstruction","MINIMUM_VALID_SIZE","MultiPolygon","allRings","allRingsArray","GeometryEditor","_isUserDataCopied","staticAccessors$16","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","isUserDataCopied","edit","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","hole","GeometryEditorOperation","editCoordinates","CoordinateArraySequence","_dimension","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","instanceObject","readResolve","HashMap","MapInterface","map_","entries","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","staticAccessors$19","maximumPreciseValue","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","getType","description","round","maxSigDigits","mostPrecise","pm1","pm2","_name","nameToTypeMap","staticAccessors$1$1","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","staticAccessors$2","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","coordinates$1","shell$1","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","geometryTypes","GeoJSONParser","json","JSON","Feature","feature","FeatureCollection","featureCollection","features","sub","linearRing","geoJson","shellGeoJson","holeGeoJson","GeoJSONReader","reducePrecision","GeoJSONWriter","Position","staticAccessors$20","ON","EmptyStackException","Stack","opposite","position","empty","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","de","side","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","pPrev","pNext","orientation","usePrev","findRightmostEdgeAtNode","star","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","dirEdgeList","TopologyException","msg","msgWithCoord","LinkedList","addLast","removeFirst","BufferSubgraph","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","startEdge","isVisited","computeDepths","de$1","copySymDepths","computeDepth","outsideDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","nodeStack","setDepth","symNode","getNodes","getDirectedEdges","TopologyLocation","location","on","gl","on$1","setAllLocations","locValue","setAllLocationsIfNull","isLine","newLoc","getLocations","flip","temp","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","locValue$1","isEqualOnSide","allPositionsEqual","loc","Label","elt","onLoc","lbl","geomIndex","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","getGeometryCount","location$1","toLine","toLineLabel","label","lineLabel","EdgeRing","_startDe","_maxNodeDegree","_edges","_pts","_label","_ring","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","isFirstEdge","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","degree","getOutgoingDegree","edge","edgePts","startIndex","startIndex$1","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","deLabel","deLabel$1","setShell","toPolygon","holeLR","MinimalEdgeRing","EdgeRing$$1","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","im","computeIM","GraphComponent$$1","_coord","edges","isIncidentEdgeInResult","print","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","setNode","setLabelBoundary","NodeMap","nodeMap","nodeFact","addNode","createNode","node$1","getBoundaryNodes","bdyNodes","Quadrant","staticAccessors$21","NE","NW","SW","SE","isNorthern","quad","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","quadrant","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","edge$1","edge$2","p0$1","label$1","compareDirection","getDy","angle","atan2","className","lastDotPos","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","depthVal","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","printEdge","printReverse","setSym","setVisitedEdge","directionFactor","oppositePos","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","NodeFactory","PlanarGraph","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de1","de2","nodes","PolygonBuilder","_shellList","sortShellsAndHoles","edgeRings","shellList","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","getBounds","ItemBoundable","_bounds","_item","bounds","getItem","PriorityQueue","_items","poll","minItem","reorder","child","ItemVisitor","visitItem","SpatialIndex","itemEnv","query","AbstractNode","_childBoundables","_level","level","staticAccessors$22","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","bp","getDistance","getBoundable","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity$1","staticAccessors$23","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","level$1","boundables$1","boundable","searchBounds","getIntersectsOp","searchBounds$1","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","createHigherLevels","getRoot","item$1","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","nearestNeighbour","itemDist","initBndPair","POSITIVE_INFINITY","itemDist$1","bp$1","initBndPair$1","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","centreX","avg","centreY","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","maxSegmentIndex","isInterior","SegmentNodeList","_nodeMap","getSplitCoordinates","addEndpoints","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","edgeList","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","NodedSegmentString","getData","eiNew","getSegmentOctant","checkSplitEdgesCorrectness","splitEdges","pt0","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","setData","NodableSegmentString","addIntersection","_nodeList","_data","safeOctant","intPt$1","addIntersectionNode","li","segmentIndex$1","getNodeList","normalizedSegmentIndex","nextSegIndex","addIntersections","getNodedSubstrings","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","LineSegment","staticAccessors$24","minX","orient0","orient1","geomFactory","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","minY","midPoint","closestPoints","closestPt","close00","close01","close10","close11","factor","maxX","comp0","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","pointAlong","bits0","hash0","bits1","MonotoneChainOverlapAction","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","overlap","mc1","start1","mc2","start2","getLineSegment","MonotoneChain","_start","_end","_context","_id","context","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","getChainStartIndices","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","pts$1","mcList","Noder","computeNodes","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","SinglePassNoder$$1","si","_monoChains","_index","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","segStr","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","MonotoneChainOverlapAction$$1","_si","ss1","ss2","processIntersections","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","quadrantSegments$1","endCapStyle","setEndCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","staticAccessors$25","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","quadSegs","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","alpha","cos","BufferInputLineSimplifier","inputLine","_distanceTol","_isDeleted","_angleOrientation","_inputLine","staticAccessors$26","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","i0","distanceTol","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","simplify","collapseLine","OffsetSegmentString","_ptList","_minimimVertexDistance","staticAccessors$28","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","revere","addPts","startPt","setMinimumVertexDistance","minimimVertexDistance","Angle","staticAccessors$29","PI_TIMES_2","PI_OVER_2","PI_OVER_4","toDegrees","radians","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","staticAccessors$27","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","direction","radius","startAngle","endAngle","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","offset","sideSign","totalAngle","nSegs","currAngleInc","currAngle","createCircle","hasNarrowConcaveAngle","OffsetCurveBuilder","getOffsetCurve","inputPts","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","SubgraphDepthLocater","_subgraphs","_seg","_cga","subgraphs","staticAccessors$30","DepthSegment","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","dirEdge","stabbedSegments$1","ds","stabbingRayLeftPt$2","stabbedSegments$2","_leftDepth","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","Triangle","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","numx","numy","perpendicularBisector","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","_inputGeom","_curveBuilder","_curveList","inputGeom","curveBuilder","addPoint","curve","addCurve","addPolygon","offsetSide","shellCoord","isErodedCompletely","addPolygonRing","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","addLineString","getCurves","cwLeftLoc","cwRightLoc","addCollection","ringCoord","envMinDimension","PointOnGeometryLocator","locate","GeometryCollectionIterator","_parent","_atStart","_max","_subcollectionIterator","isAtomic","SimplePointInAreaLocator","containsPointInPolygon","geomi","g2","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","it$1","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","geomi$1","getDegree","insertEdgeEnd","DirectedEdgeStar","EdgeEndStar$$1","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","de0","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","mergeSymLabels","degree$1","findCoveredLineEdges","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","_orientation","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","_ocaMap","edgeColl","findEdgeIndex","findEqualEdge","SegmentIntersector","e0","segIndex0","segIndex1","IntersectionAdder","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","EdgeIntersection","getSegmentIndex","EdgeIntersectionList","Edge","MonotoneChainIndexer","MonotoneChainEdge","env2","mcb","chainIndex","computeIntersectsForChain","chainIndex0","mce","chainIndex1","mce$1","getStartIndexes","computeIntersects","Depth","NULL_VALUE","staticAccessors$31","depthValue","minDepth","newValue","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","newPts","setIsolated","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","BufferBuilder","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","mergeDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","processedGraphs","subgraph","createSubgraphs","createEmptyResultGeometry","getNoder","noder","buffer","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","ss","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","scaleFactor","isIntegerPrecision","noder$1","scaleFactor$1","offsetX","offsetY","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","NodingValidator","_segStrings","staticAccessors$33","checkEndPtVertexIntersections","checkInteriorIntersections","ss0","ss0$1","ss1$1","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","staticAccessors$34","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","staticAccessors$35","HotPixelSnapAction","snap","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","isNodeAdded","MonotoneChainSelectAction$$1","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","snapRound","intersections","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","BufferOp","_argGeom","_resultGeometry","_saveException","staticAccessors$32","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","getResultGeometry","bufferOp","distance$1","bufOp","g$2","distance$2","params","g$3","distance$3","bufOp$2","maxPrecisionDigits","bufEnvMax","minUnitLog10","PointPairDistance","_isNull","setMinimum","ptDist","initialize","setMaximum","DistanceToPointFinder","computeDistance","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","_maxPtDist","staticAccessors$36","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","distFilter","getMaxPointDistance","computeMaxVertexDistance","findDistance","bufferCurve","getDistancePoints","_minPtDist","midPt","PolygonExtracter","comps","_comps","LinearComponentExtracter","_lines","_isForcedToLineString","lines$1","isForcedToLineString","setForceToLineString","getLines","forceToLineString","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","locateInternal","shellLoc","locateInPolygonRing","holeLoc","p$2","updateLocationInfo","computeLocation","ml","mpoly","GeometryLocation","_component","_segIndex","component","INSIDE_AREA","component$1","staticAccessors$38","isInsideArea","getGeometryComponent","PointExtracter","getPoints","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","g0","g1","g0$1","g1$1","terminateDistance","computeContainmentDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","isWithinDistance","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","_g0","_g1","_ptDist","_densifyFrac","staticAccessors$39","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","densifyFrac","compute","computeOrientedDistance","discreteGeom","MaxPointDistanceFilter$1","fracFilter","orientedDistance","_euclideanDist","_numSubSegs","fraction","delx","dely","BufferDistanceValidator","input","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","staticAccessors$37","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","bufCurve","maxDist","haus","distDelta","checkPositiveValid","checkNegativeValid","inputCurve","getPolygonLines","checkMinimumDistance","getErrorIndicator","distOp","getErrorLocation","lineExtracter","getErrorMessage","BufferResultValidator","_errorMsg","staticAccessors$40","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","padding","expectedEnv","bufEnv","report","distValid","inputArea","resultArea","checkName","isValidMsg","validator","BasicSegmentString","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","findAllIntersections","setKeepIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","createAnyIntersectionFinder","createIntersectionCounter","FastNodingValidator","execute","intSegs","computeIntersections","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","mapOp","_mapOp","mapped","op","LineBuilder","_op","_lineEdgesList","_resultLineList","ptLocator","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","buildLines","OverlayOp","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","PointBuilder","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","snapTolerance$1","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","_srcGeom","staticAccessors$41","SNAP_PRECISION_FACTOR","snapGeom","extractTargetCoordinates","SnapTransformer","snapToSelf","cleanResult","snappedGeom","computeSnapTolerance","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","GeometryTransformer$$1","isSelfSnap","_snapPts","_isSelfSnap","snapLine","snapper","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","padStr","toBinaryString","bitStr","getBit","nBits","num1","num2","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","staticAccessors$42","Translater","addCommonBits","trans","removeCommonBits","invCoord","getCommonCoordinate","_commonBitsX","_commonBitsY","xp","yp","SnapOverlayOp","_cbr","selfSnap","remGeom","prepareResult","prepGeom","overlayOp","union","symDifference","SYMDIFFERENCE","difference","SnapIfNeededOverlayOp","isSuccess","savedException","MonotoneChain$2","SweepLineEvent","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","INSERT","staticAccessors$43","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","EdgeSetIntersector","SegmentIntersector$2","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","setIsDoneIfProperInt","isDoneWhenProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","nOverlaps","prepareEvents","processOverlaps","edges0","edges1","si$1","si$2","addEdge","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","_min","NEGATIVE_INFINITY","staticAccessors$45","NodeComparator","getMin","queryMin","queryMax","getMax","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","buildTree","buildLevel","buildRoot","ArrayListVisitor","getItems","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","SegmentVisitor","rcc","_counter","addLine","GeometryGraph","PlanarGraph$$1","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","_resultPrecisionModel","_arg","setComputationPrecision","g0$2","GeometryMapper","MapOp","op$1","mapped$1","gr","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","geom1","resultDimension","dim0","dim1","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","_g","_boundaryDistanceTolerance","_linework","boundaryDistanceTolerance","extractLinework","isWithinToleranceOfBoundary","extracter","PolygonalLineworkExtracter","linework","getLinework","OffsetPointGenerator","_doLeft","_doRight","extractPoints","offsetPts","computeOffsetPoints","setSidesToGenerate","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","staticAccessors$46","reportResult","expectedInterior","addTestPts","overlayOp$1","hasLocation","isValidResult","ptGen","getInvalidLocation","GeometryCombiner","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","elems","elemGeom","combine","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","_inputPolys","staticAccessors$47","STRTREE_NODE_CAPACITY","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","unionOptimized","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","UnionOp","reader","stringify","properties","options","isObject","isNumber","validateBBox","validateId","feat","geomEach","geojson","stopG","geometryMaybeCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","truncate","precision","mutate","coordEach","excludeWrapCoord","wrapShrink","coordIndex","multiFeatureIndex","geometryIndex","geomType","truncateCoords","getCoords","cleanCoords","_typeof","newCoords","cleanLine","polyPoints","existing","hasOwnProperty","nextPoint","newPoints","secondToLast","isPointOnLineSegment","startX","startY","endX","endY","dxl","dyl","intersect","poly1","poly2","geom2","initialValue","previousValue","currentGeometry","geomReduce","calculateArea","polygonArea","RADIUS","ringArea","lowerIndex","middleIndex","upperIndex","coordsLength","rad","_","polygon1","polygon2","removeEmptyPolygon","differenced","feature$$1","script","Vue","el","render","App"],"mappings":"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"}