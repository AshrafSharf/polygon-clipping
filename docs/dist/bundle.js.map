{"version":3,"file":"bundle.js","sources":["../../dist/polygon-clipping.esm.js","../../node_modules/martinez-polygon-clipping/node_modules/splaytree/index.js","../../node_modules/martinez-polygon-clipping/src/edge_type.js","../../node_modules/martinez-polygon-clipping/src/operation.js","../../node_modules/martinez-polygon-clipping/src/compute_fields.js","../../node_modules/martinez-polygon-clipping/src/sweep_event.js","../../node_modules/martinez-polygon-clipping/src/equals.js","../../node_modules/martinez-polygon-clipping/src/signed_area.js","../../node_modules/martinez-polygon-clipping/src/compare_events.js","../../node_modules/martinez-polygon-clipping/src/divide_segment.js","../../node_modules/martinez-polygon-clipping/src/segment_intersection.js","../../node_modules/martinez-polygon-clipping/src/possible_intersection.js","../../node_modules/martinez-polygon-clipping/src/compare_segments.js","../../node_modules/martinez-polygon-clipping/src/connect_edges.js","../../node_modules/tinyqueue/index.js","../../node_modules/martinez-polygon-clipping/src/fill_queue.js","../../node_modules/martinez-polygon-clipping/src/index.js","../../node_modules/martinez-polygon-clipping/src/subdivide_segments.js","../../node_modules/turf-jsts/jsts.mjs","../../node_modules/@turf/union/main.es.js","../../node_modules/@turf/helpers/main.es.js","../../node_modules/@turf/meta/main.es.js","../../node_modules/@turf/truncate/main.es.js","../../node_modules/@turf/invariant/main.es.js","../../node_modules/@turf/clean-coords/main.es.js","../../node_modules/@turf/intersect/main.es.js","../../node_modules/@turf/area/main.es.js","../../node_modules/@turf/difference/main.es.js","../src/App.vue","../src/main.js"],"sourcesContent":["import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\nvar isInBbox = function isInBbox(bbox, point) {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\n\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\nvar epsilon = Number.EPSILON; // IE Polyfill\n\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n/* FLP comparator */\n\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  } // check if one is positive and the other negative\n\n\n  if (a < 0 && 0 < b) return -1;\n  if (b < 0 && 0 < a) return 1; // check if they're flp equal\n\n  var ab = a - b;\n\n  if (ab * ab < EPSILON_SQ * a * b) {\n    return 0;\n  } // normal comparison\n\n\n  return a < b ? -1 : 1;\n};\n\n/* Cross Product of two vectors with first point at origin */\n\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n/* Dot Product of two vectors with first point at origin */\n\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n/* Comparator for two vectors with same starting point */\n\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the closest point on an line (defined by two points)\n * to another point. */\n\nvar closestPoint = function closestPoint(ptA1, ptA2, ptB) {\n  if (ptA1.x === ptA2.x) return {\n    x: ptA1.x,\n    y: ptB.y // vertical vector\n\n  };\n  if (ptA1.y === ptA2.y) return {\n    x: ptB.x,\n    y: ptA1.y // horizontal vector\n    // determinne which point is further away\n    // we use the further point as our base in the calculation, so that the\n    // vectors are more parallel, providing more accurate dot product\n\n  };\n  var v1 = {\n    x: ptB.x - ptA1.x,\n    y: ptB.y - ptA1.y\n  };\n  var v2 = {\n    x: ptB.x - ptA2.x,\n    y: ptB.y - ptA2.y\n  };\n  var vFar, vA, farPt;\n\n  if (dotProduct(v1, v1) > dotProduct(v2, v2)) {\n    vFar = v1;\n    vA = {\n      x: ptA2.x - ptA1.x,\n      y: ptA2.y - ptA1.y\n    };\n    farPt = ptA1;\n  } else {\n    vFar = v2;\n    vA = {\n      x: ptA1.x - ptA2.x,\n      y: ptA1.y - ptA2.y\n    };\n    farPt = ptA2;\n  }\n\n  var dist = dotProduct(vA, vFar) / dotProduct(vA, vA);\n  return {\n    x: farPt.x + dist * vA.x,\n    y: farPt.y + dist * vA.y\n  };\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n  var x1 = pt1.x + d2 * v1.x,\n      x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n      y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\n\nvar PtRounder =\n/*#__PURE__*/\nfunction () {\n  function PtRounder() {\n    _classCallCheck(this, PtRounder);\n\n    this.reset();\n  }\n\n  _createClass(PtRounder, [{\n    key: \"reset\",\n    value: function reset() {\n      this.xRounder = new CoordRounder();\n      this.yRounder = new CoordRounder();\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, y) {\n      return {\n        x: this.xRounder.round(x),\n        y: this.yRounder.round(y)\n      };\n    }\n  }]);\n\n  return PtRounder;\n}();\n\nvar CoordRounder =\n/*#__PURE__*/\nfunction () {\n  function CoordRounder() {\n    _classCallCheck(this, CoordRounder);\n\n    this.tree = new SplayTree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n    this.round(0);\n  } // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n\n\n  _createClass(CoordRounder, [{\n    key: \"round\",\n    value: function round(coord) {\n      var node = this.tree.add(coord);\n      var prevNode = this.tree.prev(node);\n\n      if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n        this.tree.remove(coord);\n        return prevNode.key;\n      }\n\n      var nextNode = this.tree.next(node);\n\n      if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n        this.tree.remove(coord);\n        return nextNode.key;\n      }\n\n      return coord;\n    }\n  }]);\n\n  return CoordRounder;\n}(); // singleton available by import\n\n\nvar rounder = new PtRounder();\n\n/* Given input geometry as a standard array-of-arrays geojson-style\n * geometry, return one that uses objects as points, for better perf */\n\nvar pointsAsObjects = function pointsAsObjects(geom) {\n  // we can handle well-formed multipolys and polys\n  var output = [];\n\n  if (!Array.isArray(geom)) {\n    throw new Error('Input is not a Polygon or MultiPolygon');\n  }\n\n  for (var i = 0, iMax = geom.length; i < iMax; i++) {\n    if (!Array.isArray(geom[i]) || geom[i].length == 0) {\n      throw new Error('Input is not a Polygon or MultiPolygon');\n    }\n\n    output.push([]);\n\n    for (var j = 0, jMax = geom[i].length; j < jMax; j++) {\n      if (!Array.isArray(geom[i][j]) || geom[i][j].length == 0) {\n        throw new Error('Input is not a Polygon or MultiPolygon');\n      }\n\n      if (Array.isArray(geom[i][j][0])) {\n        // multipolygon\n        output[i].push([]);\n\n        for (var k = 0, kMax = geom[i][j].length; k < kMax; k++) {\n          if (!Array.isArray(geom[i][j][k]) || geom[i][j][k].length < 2) {\n            throw new Error('Input is not a Polygon or MultiPolygon');\n          }\n\n          if (geom[i][j][k].length > 2) {\n            throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n          }\n\n          output[i][j].push(rounder.round(geom[i][j][k][0], geom[i][j][k][1]));\n        }\n      } else {\n        // polygon\n        if (geom[i][j].length < 2) {\n          throw new Error('Input is not a Polygon or MultiPolygon');\n        }\n\n        if (geom[i][j].length > 2) {\n          throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n        }\n\n        output[i].push(rounder.round(geom[i][j][0], geom[i][j][1]));\n      }\n    }\n  }\n\n  return output;\n};\n/* WARN: input modified directly */\n\nvar forceMultiPoly = function forceMultiPoly(geom) {\n  if (Array.isArray(geom)) {\n    if (geom.length === 0) return; // allow empty multipolys\n\n    if (Array.isArray(geom[0])) {\n      if (Array.isArray(geom[0][0])) {\n        if (typeof geom[0][0][0].x === 'number' && typeof geom[0][0][0].y === 'number') {\n          // multipolygon\n          return;\n        }\n      }\n\n      if (typeof geom[0][0].x === 'number' && typeof geom[0][0].y === 'number') {\n        // polygon\n        geom.unshift(geom.splice(0));\n        return;\n      }\n    }\n  }\n\n  throw new Error('Unrecognized input - not a polygon nor multipolygon');\n};\n/* WARN: input modified directly */\n\nvar cleanMultiPoly = function cleanMultiPoly(multipoly) {\n  var i = 0;\n\n  while (i < multipoly.length) {\n    var poly = multipoly[i];\n\n    if (poly.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n\n    var exteriorRing = poly[0];\n    cleanRing(exteriorRing); // poly is dropped if exteriorRing is degenerate\n\n    if (exteriorRing.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n\n    var j = 1;\n\n    while (j < poly.length) {\n      var interiorRing = poly[j];\n      cleanRing(interiorRing);\n      if (interiorRing.length === 0) poly.splice(j, 1);else j++;\n    }\n\n    i++;\n  }\n};\n/* Clean ring:\n *  - remove duplicate points\n *  - remove colinear points\n *  - remove rings with no area (less than 3 distinct points)\n *  - un-close rings (last point should not repeat first)\n *\n * WARN: input modified directly */\n\nvar cleanRing = function cleanRing(ring) {\n  if (ring.length === 0) return;\n  var firstPt = ring[0];\n  var lastPt = ring[ring.length - 1];\n  if (firstPt.x === lastPt.x && firstPt.y === lastPt.y) ring.pop();\n\n  var isPointUncessary = function isPointUncessary(prevPt, pt, nextPt) {\n    return prevPt.x === pt.x && prevPt.y === pt.y || nextPt.x === pt.x && nextPt.y === pt.y || compareVectorAngles(pt, prevPt, nextPt) === 0;\n  };\n\n  var i = 0;\n  var prevPt, nextPt;\n\n  while (i < ring.length) {\n    prevPt = i === 0 ? ring[ring.length - 1] : ring[i - 1];\n    nextPt = i === ring.length - 1 ? ring[0] : ring[i + 1];\n    if (isPointUncessary(prevPt, ring[i], nextPt)) ring.splice(i, 1);else i++;\n  } // if our ring has less than 3 distinct points now (so is degenerate)\n  // shrink it down to the empty array to communicate to our caller to\n  // drop it\n\n\n  while (ring.length < 3 && ring.length > 0) {\n    ring.pop();\n  }\n};\n\nvar SweepEvent =\n/*#__PURE__*/\nfunction () {\n  _createClass(SweepEvent, null, [{\n    key: \"compare\",\n    // for ordering sweep events in the sweep event queue\n    value: function compare(a, b) {\n      // favor event with a point that the sweep line hits first\n      var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n      if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n      if (a.point !== b.point) a.link(b); // favor right events over left\n\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n      // ordering of this case is the same as for their segments\n\n      return Segment.compare(a.segment, b.segment);\n    } // for ordering points in sweep line order\n\n  }, {\n    key: \"comparePoints\",\n    value: function comparePoints(aPt, bPt) {\n      if (aPt.x < bPt.x) return -1;\n      if (aPt.x > bPt.x) return 1;\n      if (aPt.y < bPt.y) return -1;\n      if (aPt.y > bPt.y) return 1;\n      return 0;\n    } // Warning: 'point' input will be modified and re-used (for performance)\n\n  }]);\n\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n  }\n\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n\n      var otherEvents = other.point.events;\n\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n\n      this.checkForConsuming();\n    }\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      // FIXME: The loops in this method run O(n^2) => no good.\n      //        Maintain little ordered sweep event trees?\n      //        Can we maintaining an ordering that avoids the need\n      //        for the re-sorting with getLeftmostComparator in geom-out?\n      // Compare each pair of events to see if other events also match\n      var numEvents = this.point.events.length;\n\n      for (var i = 0; i < numEvents; i++) {\n        var evt1 = this.point.events[i];\n        if (evt1.segment.consumedBy !== undefined) continue;\n\n        for (var j = i + 1; j < numEvents; j++) {\n          var evt2 = this.point.events[j];\n          if (evt2.consumedBy !== undefined) continue;\n          if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n          evt1.segment.consume(evt2.segment);\n        }\n      }\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n\n      return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n\n      var cache = new Map();\n\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n\n        var _cache$get = cache.get(a),\n            asine = _cache$get.sine,\n            acosine = _cache$get.cosine;\n\n        var _cache$get2 = cache.get(b),\n            bsine = _cache$get2.sine,\n            bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n        if (asine >= 0 && bsine >= 0) {\n          if (acosine < bcosine) return 1;\n          if (acosine > bcosine) return -1;\n          return 0;\n        } // both below x-axis\n\n\n        if (asine < 0 && bsine < 0) {\n          if (acosine < bcosine) return -1;\n          if (acosine > bcosine) return 1;\n          return 0;\n        } // one above x-axis, one below\n\n\n        if (bsine < asine) return -1;\n        if (bsine > asine) return 1;\n        return 0;\n      };\n    }\n  }]);\n\n  return SweepEvent;\n}();\n\n// segments and sweep events when all else is identical\n\nvar segmentId = 0;\n\nvar Segment =\n/*#__PURE__*/\nfunction () {\n  _createClass(Segment, null, [{\n    key: \"compare\",\n\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    value: function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var blx = b.leftSE.point.x;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n      if (brx < alx) return 1;\n      if (arx < blx) return -1;\n      var aly = a.leftSE.point.y;\n      var bly = b.leftSE.point.y;\n      var ary = a.rightSE.point.y;\n      var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n      if (alx < blx) {\n        // are the two segments in the same horizontal plane?\n        if (bly < aly && bly < ary) return 1;\n        if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n        var aCmpBLeft = a.comparePoint(b.leftSE.point);\n        if (aCmpBLeft < 0) return 1;\n        if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n        var bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return -1;\n      } // is left endpoint of segment A the right-more?\n\n\n      if (alx > blx) {\n        if (aly < bly && aly < bry) return -1;\n        if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n        var bCmpALeft = b.comparePoint(a.leftSE.point);\n        if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n        var aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight < 0) return 1;\n        if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return 1;\n      } // if we get here, the two left endpoints are in the same\n      // vertical plane, ie alx === blx\n      // consider the lower left-endpoint to come first\n\n\n      if (aly < bly) return -1;\n      if (aly > bly) return 1; // left endpoints are identical\n      // check for colinearity by using the left-more right endpoint\n      // is the A right endpoint more left-more?\n\n      if (arx < brx) {\n        var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n        if (_bCmpARight !== 0) return _bCmpARight;\n      } // is the B right endpoint more left-more?\n\n\n      if (arx > brx) {\n        var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n        if (_aCmpBRight < 0) return 1;\n        if (_aCmpBRight > 0) return -1;\n      }\n\n      if (arx !== brx) {\n        // are these two [almost] vertical segments with opposite orientation?\n        // if so, the one with the lower right endpoint comes first\n        var ay = ary - aly;\n        var ax = arx - alx;\n        var by = bry - bly;\n        var bx = brx - blx;\n        if (ay > ax && by < bx) return 1;\n        if (ay < ax && by > bx) return -1;\n      } // we have colinear segments with matching orientation\n      // consider the one with more left-more right endpoint to be first\n\n\n      if (arx > brx) return 1;\n      if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n      // vertical plane, ie arx === brx\n      // consider the lower right-endpoint to come first\n\n      if (ary < bry) return -1;\n      if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n      // fall back on creation order as consistent tie-breaker\n\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1; // identical segment, ie a === b\n\n      return 0;\n    }\n    /* Warning: a reference to ringWindings input will be stored,\n     *  and possibly will be later modified */\n\n  }]);\n\n  function Segment(leftSE, rightSE, rings, windings) {\n    _classCallCheck(this, Segment);\n\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings; // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    value: function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n    /* A vector from the left point to the right */\n\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(pt) {\n      return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n    }\n    /* Compare this segment with a point. Return value indicates:\n     *     1: point lies above or to the left of segment\n     *     0: point is colinear to segment\n     *    -1: point is below or to the right of segment */\n\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var interPt = closestPoint(this.leftSE.point, this.rightSE.point, point); // use cmp() to do the same rounding as would apply in rounder.round\n      // but avoid using rounder.round for performance boost, and to avoid\n      // saving the result in the rounding trees\n      // also, there is a fair amount of rounding error introduced when computing\n      // the closestPoint to a nearly vertical or horizontal segment. Thus, we use\n      // the more accurate coordinate for comparison of the two points\n\n      var lx = this.leftSE.point.x;\n      var ly = this.leftSE.point.y;\n      var rx = this.rightSE.point.x;\n      var ry = this.rightSE.point.y; // is the segment upward sloping?\n\n      if (ry >= ly) {\n        // is the segment more vertical?\n        if (ry - ly > rx - lx) {\n          // use the X coordinate\n          var cmpX = cmp(interPt.x, point.x);\n          if (cmpX != 0) return cmpX;\n        } else {\n          // segment is more horizontal, so use Y coord\n          var cmpY = cmp(point.y, interPt.y);\n          if (cmpY != 0) return cmpY;\n        }\n      } else {\n        // segment is more downward sloping\n        // is the segment more vertical?\n        if (ly - ry > rx - lx) {\n          // use the X coordinate\n          var _cmpX = cmp(point.x, interPt.x);\n\n          if (_cmpX != 0) return _cmpX;\n        } else {\n          // segment is more horizontal, so use the Y coordinate\n          var _cmpY = cmp(point.y, interPt.y);\n\n          if (_cmpY != 0) return _cmpY;\n        }\n      } // on the line\n\n\n      return 0;\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var tBbox = this.bbox();\n      var oBbox = other.bbox();\n      var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n      if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n\n      var tlp = this.leftSE.point;\n      var trp = this.rightSE.point;\n      var olp = other.leftSE.point;\n      var orp = other.rightSE.point; // does each endpoint touch the other segment?\n      // note that we restrict the 'touching' definition to only allow segments\n      // to touch endpoints that lie forward from where we are in the sweep line pass\n\n      var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n      var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n      var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n      var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return trp;\n        if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n\n        return null;\n      } // does this left endpoint matches (other doesn't)\n\n\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE) {\n          if (tlp.x === orp.x && tlp.y === orp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return tlp;\n      } // does other left endpoint matches (this doesn't)\n\n\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE) {\n          if (trp.x === olp.x && trp.y === olp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return olp;\n      } // trivial intersection on right endpoints\n\n\n      if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n      if (touchesThisRSE) return trp;\n      if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n\n      var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n\n      if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n      if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n      return rounder.round(pt.x, pt.y);\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(point) {\n      var newEvents = [];\n      var alreadyLinked = point.events !== undefined;\n      var newLeftSE = new SweepEvent(point, true);\n      var newRightSE = new SweepEvent(point, false);\n      var oldRightSE = this.rightSE;\n      this.replaceRightSE(newRightSE);\n      newEvents.push(newRightSE);\n      newEvents.push(newLeftSE);\n      var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n      // sometimes one of the resulting new segments is vertical, in which\n      // case its left and right events may need to be swapped\n\n      if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n        newSeg.swapEvents();\n      }\n\n      if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n        this.swapEvents();\n      } // in the point we just used to create new sweep events with was already\n      // linked to other events, we need to check if either of the affected\n      // segments should be consumed\n\n\n      if (alreadyLinked) {\n        newLeftSE.checkForConsuming();\n        newRightSE.checkForConsuming();\n      }\n\n      return newEvents;\n    }\n    /* Swap which event is left and right */\n\n  }, {\n    key: \"swapEvents\",\n    value: function swapEvents() {\n      var tmpEvt = this.rightSE;\n      this.rightSE = this.leftSE;\n      this.leftSE = tmpEvt;\n      this.leftSE.isLeft = true;\n      this.rightSE.isLeft = false;\n\n      for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n        this.windings[i] *= -1;\n      }\n    }\n    /* Consume another segment. We take their rings under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n\n      while (consumer.consumedBy) {\n        consumer = consumer.consumedBy;\n      }\n\n      while (consumee.consumedBy) {\n        consumee = consumee.consumedBy;\n      }\n\n      var cmp$$1 = Segment.compare(consumer, consumee);\n      if (cmp$$1 === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n\n      if (cmp$$1 > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      } // make sure a segment doesn't consume it's prev\n\n\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n\n      for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n        var ring = consumee.rings[i];\n        var winding = consumee.windings[i];\n        var index = consumer.rings.indexOf(ring);\n\n        if (index === -1) {\n          consumer.rings.push(ring);\n          consumer.windings.push(winding);\n        } else consumer.windings[index] += winding;\n      }\n\n      consumee.rings = null;\n      consumee.windings = null;\n      consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      if (this._prevInResult !== undefined) return this._prevInResult;\n      if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n      return this._prevInResult;\n    }\n  }, {\n    key: \"beforeState\",\n    value: function beforeState() {\n      if (this._beforeState !== undefined) return this._beforeState;\n      if (!this.prev) this._beforeState = {\n        rings: [],\n        windings: [],\n        multiPolys: []\n      };else {\n        var seg = this.prev.consumedBy || this.prev;\n        this._beforeState = seg.afterState();\n      }\n      return this._beforeState;\n    }\n  }, {\n    key: \"afterState\",\n    value: function afterState() {\n      if (this._afterState !== undefined) return this._afterState;\n      var beforeState = this.beforeState();\n      this._afterState = {\n        rings: beforeState.rings.slice(0),\n        windings: beforeState.windings.slice(0),\n        multiPolys: []\n      };\n      var ringsAfter = this._afterState.rings;\n      var windingsAfter = this._afterState.windings;\n      var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n      for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n        var ring = this.rings[i];\n        var winding = this.windings[i];\n        var index = ringsAfter.indexOf(ring);\n\n        if (index === -1) {\n          ringsAfter.push(ring);\n          windingsAfter.push(winding);\n        } else windingsAfter[index] += winding;\n      } // calcualte polysAfter\n\n\n      var polysAfter = [];\n      var polysExclude = [];\n\n      for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n        if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n        var _ring = ringsAfter[_i];\n        var poly = _ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (_ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n          var _index = polysAfter.indexOf(_ring.poly);\n\n          if (_index !== -1) polysAfter.splice(_index, 1);\n        }\n      } // calculate multiPolysAfter\n\n\n      for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n        var mp = polysAfter[_i2].multiPoly;\n        if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n      }\n\n      return this._afterState;\n    }\n    /* Is this segment part of the final result? */\n\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      if (this._isInResult !== undefined) return this._isInResult;\n      var mpsBefore = this.beforeState().multiPolys;\n      var mpsAfter = this.afterState().multiPolys;\n\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            this._isInResult = noBefores !== noAfters;\n            break;\n          }\n\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n\n            this._isInResult = most === operation.numMultiPolys && least < most;\n            break;\n          }\n\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            this._isInResult = diff % 2 === 1;\n            break;\n          }\n\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n\n            this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n            break;\n          }\n\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n\n      return this._isInResult;\n    }\n  }], [{\n    key: \"fromRing\",\n    value: function fromRing(pt1, pt2, ring) {\n      var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n      var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n      if (cmpPts < 0) {\n        leftPt = pt1;\n        rightPt = pt2;\n        winding = 1;\n      } else if (cmpPts > 0) {\n        leftPt = pt2;\n        rightPt = pt1;\n        winding = -1;\n      } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n      var leftSE = new SweepEvent(leftPt, true);\n      var rightSE = new SweepEvent(rightPt, false);\n      return new Segment(leftSE, rightSE, [ring], [winding]);\n    }\n  }]);\n\n  return Segment;\n}();\n\nvar RingIn =\n/*#__PURE__*/\nfunction () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n    var prevPoint = geomRing[0];\n    this.bbox = {\n      ll: {\n        x: prevPoint.x,\n        y: prevPoint.y\n      },\n      ur: {\n        x: prevPoint.x,\n        y: prevPoint.y\n      }\n    };\n\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      var point = geomRing[i];\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n      if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n      if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n      if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    }\n\n    this.segments.push(Segment.fromRing(prevPoint, geomRing[0], this));\n  }\n\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return RingIn;\n}();\nvar PolyIn =\n/*#__PURE__*/\nfunction () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n\n    this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n    this.bbox = {\n      ll: {\n        x: this.exteriorRing.bbox.ll.x,\n        y: this.exteriorRing.bbox.ll.y\n      },\n      ur: {\n        x: this.exteriorRing.bbox.ur.x,\n        y: this.exteriorRing.bbox.ur.y\n      }\n    };\n    this.interiorRings = [];\n\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      var ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n\n    this.multiPoly = multiPoly;\n  }\n\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return PolyIn;\n}();\nvar MultiPolyIn =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyIn(geomMultiPoly) {\n    _classCallCheck(this, MultiPolyIn);\n\n    this.polys = [];\n    this.bbox = {\n      ll: {\n        x: Number.POSITIVE_INFINITY,\n        y: Number.POSITIVE_INFINITY\n      },\n      ur: {\n        x: Number.NEGATIVE_INFINITY,\n        y: Number.NEGATIVE_INFINITY\n      }\n    };\n\n    for (var i = 0, iMax = geomMultiPoly.length; i < iMax; i++) {\n      var poly = new PolyIn(geomMultiPoly[i], this);\n      if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n\n    this.isSubject = false;\n  }\n\n  _createClass(MultiPolyIn, [{\n    key: \"markAsSubject\",\n    value: function markAsSubject() {\n      this.isSubject = true;\n    }\n  }, {\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return MultiPolyIn;\n}();\n\nvar RingOut =\n/*#__PURE__*/\nfunction () {\n  _createClass(RingOut, null, [{\n    key: \"factory\",\n\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    value: function factory(allSegments) {\n      var ringsOut = [];\n\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n        /* Walk the chain of linked events to form a closed ring */\n\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n          /* Is the ring complete? */\n\n          if (event.point === startingPoint) break;\n\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n            /* Only one way to go, so cotinue on the path */\n\n\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n            /* We must have an intersection. Check for a completed loop */\n\n\n            var indexLE = null;\n\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n\n\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n\n\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n\n        ringsOut.push(new RingOut(events));\n      }\n\n      return ringsOut;\n    }\n  }]);\n\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n\n    this.events = events;\n\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n\n    this.poly = null;\n  }\n\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      } // ring was all (within rounding error of angle calc) colinear points\n\n\n      if (points.length === 1) return null; // check if the starting point is necessary\n\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n\n      for (var _i = iStart; _i != iEnd; _i += step) {\n        orderedPoints.push([points[_i].x, points[_i].y]);\n      }\n\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n\n      return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n\n        if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        } // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n\n\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }]);\n\n  return RingOut;\n}();\nvar PolyOut =\n/*#__PURE__*/\nfunction () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n      if (geom[0] === null) return null;\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n\n      return geom;\n    }\n  }]);\n\n  return PolyOut;\n}();\nvar MultiPolyOut =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n\n      return polys;\n    }\n  }]);\n\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nvar SweepLine =\n/*#__PURE__*/\nfunction () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n    _classCallCheck(this, SweepLine);\n\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = []; // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n\n      if (event.consumedBy) {\n        if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n        return newEvents;\n      }\n\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined; // skip consumed segments still in tree\n\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      } // skip consumed segments still in tree\n\n\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n\n      if (event.isLeft) {\n        // Check for intersections against the previous segment in the sweep line\n        var prevMySplitter = null;\n\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        } // Check for intersections against the next segment in the sweep line\n\n\n        var nextMySplitter = null;\n\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        } // For simplicity, even if we find more than one intersection we only\n        // spilt on the 'earliest' (sweep-line style) of the intersections.\n        // The other intersection will be handled in a future process().\n\n\n        if (prevMySplitter !== null || nextMySplitter !== null) {\n          var mySplitter = null;\n          if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n            if (cmpSplitters < 0) mySplitter = prevMySplitter;\n            if (cmpSplitters > 0) mySplitter = nextMySplitter; // the two splitters are the exact same point\n\n            mySplitter = prevMySplitter;\n          } // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n\n          var _newEventsFromSplit2 = segment.split(mySplitter);\n\n          for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n            newEvents.push(_newEventsFromSplit2[_i2]);\n          }\n        }\n\n        if (newEvents.length > 0) {\n          // We found some intersections, so re-do the current event to\n          // make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers\n          this.tree.remove(segment);\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n\n        this.tree.remove(segment);\n      }\n\n      return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split(pt);\n      newEvents.push(rightSE); // splitting can trigger consumption\n\n      if (seg.consumedBy === undefined) this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n\n  return SweepLine;\n}();\n\nvar Operation =\n/*#__PURE__*/\nfunction () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      rounder.reset();\n      /* Make a copy of the input geometry with rounded points as objects */\n\n      var geoms = [pointsAsObjects(geom)];\n\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        geoms.push(pointsAsObjects(moreGeoms[i]));\n      }\n      /* Clean inputs */\n\n\n      for (var _i = 0, _iMax = geoms.length; _i < _iMax; _i++) {\n        forceMultiPoly(geoms[_i]);\n        cleanMultiPoly(geoms[_i]);\n      }\n      /* Convert inputs to MultiPoly objects, mark subject */\n\n\n      var multipolys = [];\n\n      for (var _i2 = 0, _iMax2 = geoms.length; _i2 < _iMax2; _i2++) {\n        multipolys.push(new MultiPolyIn(geoms[_i2]));\n      }\n\n      multipolys[0].markAsSubject();\n      operation.numMultiPolys = multipolys.length;\n      /* BBox optimization for difference operation\n       * If the bbox of a multipolygon that's part of the clipping doesn't\n       * intersect the bbox of the subject at all, we can just drop that\n       * multiploygon. */\n\n      if (operation.type === 'difference') {\n        // in place removal\n        var subject = multipolys[0];\n        var _i3 = 1;\n\n        while (_i3 < multipolys.length) {\n          if (getBboxOverlap(multipolys[_i3].bbox, subject.bbox) !== null) _i3++;else multipolys.splice(_i3, 1);\n        }\n      }\n      /* BBox optimization for intersection operation\n       * If we can find any pair of multipolygons whose bbox does not overlap,\n       * then the result will be empty. */\n\n\n      if (operation.type === 'intersection') {\n        // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n        //       it could be optimized to O(n * ln(n))\n        for (var _i4 = 0, _iMax3 = multipolys.length; _i4 < _iMax3; _i4++) {\n          var mpA = multipolys[_i4];\n\n          for (var j = _i4 + 1, jMax = multipolys.length; j < jMax; j++) {\n            if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n          }\n        }\n      }\n      /* Put segment endpoints in a priority queue */\n\n\n      var queue = new SplayTree(SweepEvent.compare);\n\n      for (var _i5 = 0, _iMax4 = multipolys.length; _i5 < _iMax4; _i5++) {\n        var sweepEvents = multipolys[_i5].getSweepEvents();\n\n        for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n          queue.insert(sweepEvents[_j]);\n        }\n      }\n      /* Pass the sweep line over those endpoints */\n\n\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n\n      while (node) {\n        var evt = node.key;\n\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          var seg = evt.segment;\n          throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n        }\n\n        var newEvents = sweepLine.process(evt);\n\n        for (var _i6 = 0, _iMax5 = newEvents.length; _i6 < _iMax5; _i6++) {\n          var _evt = newEvents[_i6];\n          if (_evt.consumedBy === undefined) queue.insert(_evt);\n        }\n\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      } // free some memory we don't need anymore\n\n\n      rounder.reset();\n      /* Collect and compile segments we're keeping into a multipolygon */\n\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n\n  return Operation;\n}(); // singleton available by import\n\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n\n  return operation.run('union', geom, moreGeoms);\n};\n\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n\n  return operation.run('intersection', geom, moreGeoms);\n};\n\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n\n  return operation.run('xor', geom, moreGeoms);\n};\n\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\n\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\nexport default class SplayTree {\n\n  constructor(compare = DEFAULT_COMPARE, noDuplicates = false) {\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  }\n\n\n  rotateLeft(x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) y.left.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)                this._root = y;\n    else if (x === x.parent.left) x.parent.left = y;\n    else                          x.parent.right = y;\n    if (y) y.left = x;\n    x.parent = y;\n  }\n\n\n  rotateRight(x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) y.right.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)               this._root = y;\n    else if(x === x.parent.left) x.parent.left = y;\n    else                         x.parent.right = y;\n    if (y) y.right = x;\n    x.parent = y;\n  }\n\n\n  _splay(x) {\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) this.rotateRight(p);\n        else              this.rotateLeft(p);\n      } else if (p.left === x && p.parent.left === p) {\n        this.rotateRight(p.parent);\n        this.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this.rotateLeft(p.parent);\n        this.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this.rotateRight(p);\n        this.rotateLeft(p);\n      } else {\n        this.rotateLeft(p);\n        this.rotateRight(p);\n      }\n    }\n  }\n\n\n  splay(x) {\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) ggp.left  = x;\n        else                 ggp.right = x;\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else gp.left = null;\n\n            p.right   = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else gp.right = null;\n\n            x.left    = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else p.left = null;\n\n        x.right  = p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else gp.right = null;\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else gp.left = null;\n\n            x.right   = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else p.right = null;\n\n        x.left   = p;\n        p.parent = x;\n      }\n    }\n  }\n\n\n  replace(u, v) {\n    if (!u.parent) this._root = v;\n    else if (u === u.parent.left) u.parent.left = v;\n    else u.parent.right = v;\n    if (v) v.parent = u.parent;\n  }\n\n\n  minNode(u = this._root) {\n    if (u) while (u.left) u = u.left;\n    return u;\n  }\n\n\n  maxNode(u = this._root) {\n    if (u) while (u.right) u = u.right;\n    return u;\n  }\n\n\n  insert(key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) return;\n        else if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    }\n\n    z = { key, data, left: null, right: null, parent: p };\n\n    if (!p)                          this._root = z;\n    else if (comp(p.key, z.key) < 0) p.right = z;\n    else                             p.left  = z;\n\n    this.splay(z);\n    this._size++;\n    return z;\n  }\n\n\n  find (key) {\n    var z    = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if      (cmp < 0) z = z.right;\n      else if (cmp > 0) z = z.left;\n      else              return z;\n    }\n    return null;\n  }\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param  {Key} key\n   * @return {boolean} true/false\n   */\n  contains (key) {\n    var node       = this._root;\n    var comparator = this._compare;\n    while (node)  {\n      var cmp = comparator(key, node.key);\n      if      (cmp === 0) return true;\n      else if (cmp < 0)   node = node.left;\n      else                node = node.right;\n    }\n\n    return false;\n  }\n\n\n  remove (key) {\n    var z = this.find(key);\n\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  removeNode(z) {\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  erase (key) {\n    var z = this.find(key);\n    if (!z) return;\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) sMax.right = t;\n      else   this._root = t;\n      t.parent = sMax;\n    }\n\n    this._size--;\n  }\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) node = node.left;\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  }\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) successor = successor.left;\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  }\n\n\n  /**\n   * Predecessor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) predecessor = predecessor.right;\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param  {forEachCallback} callback\n   * @return {SplayTree}\n   */\n  forEach(callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range(low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._compare;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load(keys = [], values = [], presort = false) {\n    if (this._size !== 0) throw new Error('bulk-load: tree is not empty');\n    const size = keys.length;\n    if (presort) sort(keys, values, 0, size - 1, this._compare);\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  }\n\n\n  min() {\n    var node = this.minNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n\n  max() {\n    var node = this.maxNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n  isEmpty() { return this._root === null; }\n  get size() { return this._size; }\n\n\n  /**\n   * Create a tree and load it with items\n   * @param  {Array<Key>}          keys\n   * @param  {Array<Value>?}        [values]\n\n   * @param  {Function?}            [comparator]\n   * @param  {Boolean?}             [presort=false] Pre-sort keys and values, using\n   *                                               tree's comparator. Sorting is done\n   *                                               in-place\n   * @param  {Boolean?}             [noDuplicates=false]   Allow duplicates\n   * @return {SplayTree}\n   */\n  static createTree(keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","export const NORMAL               = 0;\nexport const NON_CONTRIBUTING     = 1;\nexport const SAME_TRANSITION      = 2;\nexport const DIFFERENT_TRANSITION = 3;\n","export const INTERSECTION = 0;\nexport const UNION        = 1;\nexport const DIFFERENCE   = 2;\nexport const XOR          = 3;\n","import {\n  NORMAL,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION,\n  NON_CONTRIBUTING\n} from './edge_type';\nimport {\n  INTERSECTION,\n  UNION,\n  DIFFERENCE,\n  XOR\n} from './operation';\n\n/**\n * @param  {SweepEvent} event\n * @param  {SweepEvent} prev\n * @param  {Operation} operation\n */\nexport default function computeFields (event, prev, operation) {\n  // compute inOut and otherInOut fields\n  if (prev === null) {\n    event.inOut      = false;\n    event.otherInOut = true;\n\n  // previous line segment in sweepline belongs to the same polygon\n  } else {\n    if (event.isSubject === prev.isSubject) {\n      event.inOut      = !prev.inOut;\n      event.otherInOut = prev.otherInOut;\n\n    // previous line segment in sweepline belongs to the clipping polygon\n    } else {\n      event.inOut      = !prev.otherInOut;\n      event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n    }\n\n    // compute prevInResult field\n    if (prev) {\n      event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n        ? prev.prevInResult : prev;\n    }\n  }\n\n  // check if the line segment belongs to the Boolean operation\n  event.inResult = inResult(event, operation);\n}\n\n\n/* eslint-disable indent */\nfunction inResult(event, operation) {\n  switch (event.type) {\n    case NORMAL:\n      switch (operation) {\n        case INTERSECTION:\n          return !event.otherInOut;\n        case UNION:\n          return event.otherInOut;\n        case DIFFERENCE:\n          // return (event.isSubject && !event.otherInOut) ||\n          //         (!event.isSubject && event.otherInOut);\n          return (event.isSubject && event.otherInOut) ||\n                  (!event.isSubject && !event.otherInOut);\n        case XOR:\n          return true;\n      }\n      break;\n    case SAME_TRANSITION:\n      return operation === INTERSECTION || operation === UNION;\n    case DIFFERENT_TRANSITION:\n      return operation === DIFFERENCE;\n    case NON_CONTRIBUTING:\n      return false;\n  }\n  return false;\n}\n/* eslint-enable indent */\n","import { NORMAL } from './edge_type';\n\n\nexport default class SweepEvent {\n\n\n  /**\n   * Sweepline event\n   *\n   * @class {SweepEvent}\n   * @param {Array.<Number>}  point\n   * @param {Boolean}         left\n   * @param {SweepEvent=}     otherEvent\n   * @param {Boolean}         isSubject\n   * @param {Number}          edgeType\n   */\n  constructor (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Does event belong to result?\n     * @type {Boolean}\n     */\n    this.inResult = false;\n\n\n    // connection step\n\n    /**\n     * @type {Boolean}\n     */\n    this.resultInOut = false;\n\n    this.isExteriorRing = true;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isBelow (p) {\n    const p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isAbove (p) {\n    return !this.isBelow(p);\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  }\n\n\n  clone () {\n    const copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.inResult       = this.inResult;\n    copy.prevInResult   = this.prevInResult;\n    copy.isExteriorRing = this.isExteriorRing;\n    copy.inOut          = this.inOut;\n    copy.otherInOut     = this.otherInOut;\n\n    return copy;\n  }\n}\n","export default function equals(p1, p2) {\n  if (p1[0] === p2[0]) {\n    if (p1[1] === p2[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\n\n// const EPSILON = 1e-9;\n// const abs = Math.abs;\n// TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n// Precision problem.\n//\n// module.exports = function equals(p1, p2) {\n//   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n// };\n","/**\n * Signed area of the triangle (p0, p1, p2)\n * @param  {Array.<Number>} p0\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Number}\n */\nexport default function signedArea(p0, p1, p2) {\n  return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n}\n","import signedArea from './signed_area';\n\n/**\n * @param  {SweepEvent} e1\n * @param  {SweepEvent} e2\n * @return {Number}\n */\nexport default function compareEvents(e1, e2) {\n  const p1 = e1.point;\n  const p2 = e2.point;\n\n  // Different x-coordinate\n  if (p1[0] > p2[0]) return 1;\n  if (p1[0] < p2[0]) return -1;\n\n  // Different points, but same x-coordinate\n  // Event with lower y-coordinate is processed first\n  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\n  return specialCases(e1, e2, p1, p2);\n}\n\n\n/* eslint-disable no-unused-vars */\nfunction specialCases(e1, e2, p1, p2) {\n  // Same coordinates, but one is a left endpoint and the other is\n  // a right endpoint. The right endpoint is processed first\n  if (e1.left !== e2.left)\n    return e1.left ? 1 : -1;\n\n  // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n  // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n  // Same coordinates, both events\n  // are left endpoints or right endpoints.\n  // not collinear\n  if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n    // the event associate to the bottom segment is processed first\n    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n  }\n\n  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n}\n/* eslint-enable no-unused-vars */\n","import SweepEvent    from './sweep_event';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\n\n/**\n * @param  {SweepEvent} se\n * @param  {Array.<Number>} p\n * @param  {Queue} queue\n * @return {Queue}\n */\nexport default function divideSegment(se, p, queue)  {\n  const r = new SweepEvent(p, false, se,            se.isSubject);\n  const l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n  /* eslint-disable no-console */\n  if (equals(se.point, se.otherEvent.point)) {\n\n    console.warn('what is that, a collapsed segment?', se);\n  }\n  /* eslint-enable no-console */\n\n  r.contourId = l.contourId = se.contourId;\n\n  // avoid a rounding error. The left event would be processed after the right event\n  if (compareEvents(l, se.otherEvent) > 0) {\n    se.otherEvent.left = true;\n    l.left = false;\n  }\n\n  // avoid a rounding error. The left event would be processed after the right event\n  // if (compareEvents(se, r) > 0) {}\n\n  se.otherEvent.otherEvent = l;\n  se.otherEvent = r;\n\n  queue.push(l);\n  queue.push(r);\n\n  return queue;\n}\n","//const EPS = 1e-9;\n\n/**\n * Finds the magnitude of the cross product of two vectors (if we pretend\n * they're in three dimensions)\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The magnitude of the cross product\n */\nfunction crossProduct(a, b) {\n  return (a[0] * b[1]) - (a[1] * b[0]);\n}\n\n/**\n * Finds the dot product of two vectors.\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The dot product\n */\nfunction dotProduct(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]);\n}\n\n/**\n * Finds the intersection (if any) between two line segments a and b, given the\n * line segments' end points a1, a2 and b1, b2.\n *\n * This algorithm is based on Schneider and Eberly.\n * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n * Page 244.\n *\n * @param {Array.<Number>} a1 point of first line\n * @param {Array.<Number>} a2 point of first line\n * @param {Array.<Number>} b1 point of second line\n * @param {Array.<Number>} b2 point of second line\n * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n *                                         (meaning connected segments) as\n *                                         intersections\n * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n * intersection. If they overlap, the two end points of the overlapping segment.\n * Otherwise, null.\n */\nexport default function (a1, a2, b1, b2, noEndpointTouch) {\n  // The algorithm expects our lines in the form P + sd, where P is a point,\n  // s is on the interval [0, 1], and d is a vector.\n  // We are passed two points. P can be the first point of each pair. The\n  // vector, then, could be thought of as the distance (in x and y components)\n  // from the first point to the second point.\n  // So first, let's make our vectors:\n  const va = [a2[0] - a1[0], a2[1] - a1[1]];\n  const vb = [b2[0] - b1[0], b2[1] - b1[1]];\n  // We also define a function to convert back to regular point form:\n\n  /* eslint-disable arrow-body-style */\n\n  function toPoint(p, s, d) {\n    return [\n      p[0] + s * d[0],\n      p[1] + s * d[1]\n    ];\n  }\n\n  /* eslint-enable arrow-body-style */\n\n  // The rest is pretty much a straight port of the algorithm.\n  const e = [b1[0] - a1[0], b1[1] - a1[1]];\n  let kross    = crossProduct(va, vb);\n  let sqrKross = kross * kross;\n  const sqrLenA  = dotProduct(va, va);\n  //const sqrLenB  = dotProduct(vb, vb);\n\n  // Check for line intersection. This works because of the properties of the\n  // cross product -- specifically, two vectors are parallel if and only if the\n  // cross product is the 0 vector. The full calculation involves relative error\n  // to account for possible very small line segments. See Schneider & Eberly\n  // for details.\n  if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n    // If they're not parallel, then (because these are line segments) they\n    // still might not actually intersect. This code checks that the\n    // intersection point of the lines is actually on both line segments.\n    const s = crossProduct(e, vb) / kross;\n    if (s < 0 || s > 1) {\n      // not on line segment a\n      return null;\n    }\n    const t = crossProduct(e, va) / kross;\n    if (t < 0 || t > 1) {\n      // not on line segment b\n      return null;\n    }\n    if (s === 0 || s === 1) {\n      // on an endpoint of line segment a\n      return noEndpointTouch ? null : [toPoint(a1, s, va)];\n    }\n    if (t === 0 || t === 1) {\n      // on an endpoint of line segment b\n      return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n    }\n    return [toPoint(a1, s, va)];\n  }\n\n  // If we've reached this point, then the lines are either parallel or the\n  // same, but the segments could overlap partially or fully, or not at all.\n  // So we need to find the overlap, if any. To do that, we can use e, which is\n  // the (vector) difference between the two initial points. If this is parallel\n  // with the line itself, then the two lines are the same line, and there will\n  // be overlap.\n  //const sqrLenE = dotProduct(e, e);\n  kross = crossProduct(e, va);\n  sqrKross = kross * kross;\n\n  if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n  // Lines are just parallel, not the same. No overlap.\n    return null;\n  }\n\n  const sa = dotProduct(va, e) / sqrLenA;\n  const sb = sa + dotProduct(va, vb) / sqrLenA;\n  const smin = Math.min(sa, sb);\n  const smax = Math.max(sa, sb);\n\n  // this is, essentially, the FindIntersection acting on floats from\n  // Schneider & Eberly, just inlined into this function.\n  if (smin <= 1 && smax >= 0) {\n\n    // overlap on an end point\n    if (smin === 1) {\n      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n    }\n\n    if (smax === 0) {\n      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n    }\n\n    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\n    // There's overlap on a segment -- two points of intersection. Return both.\n    return [\n      toPoint(a1, smin > 0 ? smin : 0, va),\n      toPoint(a1, smax < 1 ? smax : 1, va)\n    ];\n  }\n\n  return null;\n}\n","import divideSegment from './divide_segment';\nimport intersection  from './segment_intersection';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\nimport {\n  NON_CONTRIBUTING,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION\n} from './edge_type';\n\n/**\n * @param  {SweepEvent} se1\n * @param  {SweepEvent} se2\n * @param  {Queue}      queue\n * @return {Number}\n */\nexport default function possibleIntersection (se1, se2, queue) {\n  // that disallows self-intersecting polygons,\n  // did cost us half a day, so I'll leave it\n  // out of respect\n  // if (se1.isSubject === se2.isSubject) return;\n  const inter = intersection(\n    se1.point, se1.otherEvent.point,\n    se2.point, se2.otherEvent.point\n  );\n\n  const nintersections = inter ? inter.length : 0;\n  if (nintersections === 0) return 0; // no intersection\n\n  // the line segments intersect at an endpoint of both line segments\n  if ((nintersections === 1) &&\n      (equals(se1.point, se2.point) ||\n       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n    return 0;\n  }\n\n  if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n    // if(se1.contourId === se2.contourId){\n    // console.warn('Edges of the same polygon overlap',\n    //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n    // }\n    //throw new Error('Edges of the same polygon overlap');\n    return 0;\n  }\n\n  // The line segments associated to se1 and se2 intersect\n  if (nintersections === 1) {\n\n    // if the intersection point is not an endpoint of se1\n    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n      divideSegment(se1, inter[0], queue);\n    }\n\n    // if the intersection point is not an endpoint of se2\n    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n      divideSegment(se2, inter[0], queue);\n    }\n    return 1;\n  }\n\n  // The line segments associated to se1 and se2 overlap\n  const events        = [];\n  let leftCoincide  = false;\n  let rightCoincide = false;\n\n  if (equals(se1.point, se2.point)) {\n    leftCoincide = true; // linked\n  } else if (compareEvents(se1, se2) === 1) {\n    events.push(se2, se1);\n  } else {\n    events.push(se1, se2);\n  }\n\n  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n    rightCoincide = true;\n  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n    events.push(se2.otherEvent, se1.otherEvent);\n  } else {\n    events.push(se1.otherEvent, se2.otherEvent);\n  }\n\n  if ((leftCoincide && rightCoincide) || leftCoincide) {\n    // both line segments are equal or share the left endpoint\n    se2.type = NON_CONTRIBUTING;\n    se1.type = (se2.inOut === se1.inOut)\n      ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n    if (leftCoincide && !rightCoincide) {\n      // honestly no idea, but changing events selection from [2, 1]\n      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n      divideSegment(events[1].otherEvent, events[0].point, queue);\n    }\n    return 2;\n  }\n\n  // the line segments share the right endpoint\n  if (rightCoincide) {\n    divideSegment(events[0], events[1].point, queue);\n    return 3;\n  }\n\n  // no line segment includes totally the other one\n  if (events[0] !== events[3].otherEvent) {\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[1], events[2].point, queue);\n    return 3;\n  }\n\n  // one line segment includes the other one\n  divideSegment(events[0], events[1].point, queue);\n  divideSegment(events[3].otherEvent, events[2].point, queue);\n\n  return 3;\n}\n","import signedArea    from './signed_area';\nimport compareEvents from './compare_events';\nimport equals        from './equals';\n\n\n/**\n * @param  {SweepEvent} le1\n * @param  {SweepEvent} le2\n * @return {Number}\n */\nexport default function compareSegments(le1, le2) {\n  if (le1 === le2) return 0;\n\n  // Segments are not collinear\n  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n    // If they share their left endpoint use the right endpoint to sort\n    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\n    // Different left endpoint: use the left endpoint to sort\n    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\n    // has the line segment associated to e1 been inserted\n    // into S after the line segment associated to e2 ?\n    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\n    // The line segment associated to e2 has been inserted\n    // into S after the line segment associated to e1\n    return le1.isBelow(le2.point) ? -1 : 1;\n  }\n\n  if (le1.isSubject === le2.isSubject) { // same polygon\n    let p1 = le1.point, p2 = le2.point;\n    if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n      p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]) return 0;\n      else return le1.contourId > le2.contourId ? 1 : -1;\n    }\n  } else { // Segments are collinear, but belong to separate polygons\n    return le1.isSubject ? -1 : 1;\n  }\n\n  return compareEvents(le1, le2) === 1 ? 1 : -1;\n}\n","import compareEvents from './compare_events';\nimport { DIFFERENCE } from './operation';\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<SweepEvent>}\n */\nfunction orderEvents(sortedEvents) {\n  let event, i, len, tmp;\n  const resultEvents = [];\n  for (i = 0, len = sortedEvents.length; i < len; i++) {\n    event = sortedEvents[i];\n    if ((event.left && event.inResult) ||\n      (!event.left && event.otherEvent.inResult)) {\n      resultEvents.push(event);\n    }\n  }\n  // Due to overlapping edges the resultEvents array can be not wholly sorted\n  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if ((i + 1) < len &&\n        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n        tmp = resultEvents[i];\n        resultEvents[i] = resultEvents[i + 1];\n        resultEvents[i + 1] = tmp;\n        sorted = false;\n      }\n    }\n  }\n\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    event.pos = i;\n  }\n\n  // imagine, the right event is found in the beginning of the queue,\n  // when his left counterpart is not marked yet\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    if (!event.left) {\n      tmp = event.pos;\n      event.pos = event.otherEvent.pos;\n      event.otherEvent.pos = tmp;\n    }\n  }\n\n  return resultEvents;\n}\n\n\n/**\n * @param  {Number} pos\n * @param  {Array.<SweepEvent>} resultEvents\n * @param  {Object>}    processed\n * @return {Number}\n */\nfunction nextPos(pos, resultEvents, processed, origIndex) {\n  let p, p1;\n  let newPos = pos + 1;\n  const length = resultEvents.length;\n\n  p  = resultEvents[pos].point;\n\n  if (newPos < length)\n    p1 = resultEvents[newPos].point;\n\n\n  // while in range and not the current one by value\n  while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n    if (!processed[newPos]) {\n      return newPos;\n    } else   {\n      newPos++;\n    }\n    p1 = resultEvents[newPos].point;\n  }\n\n  newPos = pos - 1;\n\n  while (processed[newPos] && newPos >= origIndex) {\n    newPos--;\n  }\n  return newPos;\n}\n\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<*>} polygons\n */\nexport default function connectEdges(sortedEvents, operation) {\n  let i, len;\n  const resultEvents = orderEvents(sortedEvents);\n\n  // \"false\"-filled array\n  const processed = {};\n  const result = [];\n  let event;\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    if (processed[i]) continue;\n    const contour = [[]];\n\n    if (!resultEvents[i].isExteriorRing) {\n      if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\n        result.push(contour);\n      } else if (result.length === 0) {\n        result.push([[contour]]);\n      } else {\n        result[result.length - 1].push(contour[0]);\n      }\n    } else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\n      result[result.length - 1].push(contour[0]);\n    } else {\n      result.push(contour);\n    }\n\n    const ringId = result.length - 1;\n    let pos = i;\n\n    const initial = resultEvents[i].point;\n    contour[0].push(initial);\n\n    while (pos >= i) {\n      event = resultEvents[pos];\n      processed[pos] = true;\n\n      if (event.left) {\n        event.resultInOut = false;\n        event.contourId   = ringId;\n      } else {\n        event.otherEvent.resultInOut = true;\n        event.otherEvent.contourId   = ringId;\n      }\n\n      pos = event.pos;\n      processed[pos] = true;\n      contour[0].push(resultEvents[pos].point);\n      pos = nextPos(pos, resultEvents, processed, i);\n    }\n\n    pos = pos === -1 ? i : pos;\n\n    event = resultEvents[pos];\n    processed[pos] = processed[event.pos] = true;\n    event.otherEvent.resultInOut = true;\n    event.otherEvent.contourId   = ringId;\n  }\n\n  // Handle if the result is a polygon (eg not multipoly)\n  // Commented it again, let's see what do we mean by that\n  // if (result.length === 1) result = result[0];\n  return result;\n}\n","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n","import Queue           from 'tinyqueue';\nimport SweepEvent      from './sweep_event';\nimport compareEvents   from './compare_events';\nimport { DIFFERENCE }  from './operation';\n\nconst max = Math.max;\nconst min = Math.min;\n\nlet contourId = 0;\n\n\nfunction processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n  let i, len, s1, s2, e1, e2;\n  for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n    s1 = contourOrHole[i];\n    s2 = contourOrHole[i + 1];\n    e1 = new SweepEvent(s1, false, undefined, isSubject);\n    e2 = new SweepEvent(s2, false, e1,        isSubject);\n    e1.otherEvent = e2;\n\n    if (s1[0] === s2[0] && s1[1] === s2[1]) {\n      continue; // skip collapsed edges, or it breaks\n    }\n\n    e1.contourId = e2.contourId = depth;\n    if (!isExteriorRing) {\n      e1.isExteriorRing = false;\n      e2.isExteriorRing = false;\n    }\n    if (compareEvents(e1, e2) > 0) {\n      e2.left = true;\n    } else {\n      e1.left = true;\n    }\n\n    const x = s1[0], y = s1[1];\n    bbox[0] = min(bbox[0], x);\n    bbox[1] = min(bbox[1], y);\n    bbox[2] = max(bbox[2], x);\n    bbox[3] = max(bbox[3], y);\n\n    // Pushing it so the queue is sorted from left to right,\n    // with object on the left having the highest priority.\n    Q.push(e1);\n    Q.push(e2);\n  }\n}\n\n\nexport default function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n  const eventQueue = new Queue(null, compareEvents);\n  let polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n  for (i = 0, ii = subject.length; i < ii; i++) {\n    polygonSet = subject[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n    }\n  }\n\n  for (i = 0, ii = clipping.length; i < ii; i++) {\n    polygonSet = clipping[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (operation === DIFFERENCE) isExteriorRing = false;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n    }\n  }\n\n  return eventQueue;\n}\n","import subdivideSegments from './subdivide_segments';\nimport connectEdges      from './connect_edges';\nimport fillQueue         from './fill_queue';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n}        from './operation';\n\nconst EMPTY = [];\n\n\nfunction trivialOperation(subject, clipping, operation) {\n  let result = null;\n  if (subject.length * clipping.length === 0) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = (subject.length === 0) ? clipping : subject;\n    }\n  }\n  return result;\n}\n\n\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n  let result = null;\n  if (sbbox[0] > cbbox[2] ||\n      cbbox[0] > sbbox[2] ||\n      sbbox[1] > cbbox[3] ||\n      cbbox[1] > sbbox[3]) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = subject.concat(clipping);\n    }\n  }\n  return result;\n}\n\n\nexport default function boolean(subject, clipping, operation) {\n  if (typeof subject[0][0][0] === 'number') {\n    subject = [subject];\n  }\n  if (typeof clipping[0][0][0] === 'number') {\n    clipping = [clipping];\n  }\n  let trivial = trivialOperation(subject, clipping, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  const sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n  const cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n  //console.time('fill queue');\n  const eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('fill queue');\n\n  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  //console.time('subdivide edges');\n  const sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('subdivide edges');\n\n  //console.time('connect vertices');\n  const result = connectEdges(sortedEvents, operation);\n  //console.timeEnd('connect vertices');\n  return result;\n}\n","import Tree                 from 'splaytree';\nimport computeFields        from './compute_fields';\nimport possibleIntersection from './possible_intersection';\nimport compareSegments      from './compare_segments';\nimport {\n  INTERSECTION,\n  DIFFERENCE\n} from './operation';\n\n\nexport default function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n  const sweepLine = new Tree(compareSegments);\n  const sortedEvents = [];\n\n  const rightbound = Math.min(sbbox[2], cbbox[2]);\n\n  let prev, next, begin;\n\n  while (eventQueue.length !== 0) {\n    let event = eventQueue.pop();\n    sortedEvents.push(event);\n\n    // optimization by bboxes for intersection and difference goes here\n    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n      break;\n    }\n\n    if (event.left) {\n      next  = prev = sweepLine.insert(event);\n      begin = sweepLine.minNode();\n\n      if (prev !== begin) prev = sweepLine.prev(prev);\n      else                prev = null;\n\n      next = sweepLine.next(next);\n\n      const prevEvent = prev ? prev.key : null;\n      let prevprevEvent;\n      computeFields(event, prevEvent, operation);\n      if (next) {\n        if (possibleIntersection(event, next.key, eventQueue) === 2) {\n          computeFields(event, prevEvent, operation);\n          computeFields(event, next.key, operation);\n        }\n      }\n\n      if (prev) {\n        if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n          let prevprev = prev;\n          if (prevprev !== begin) prevprev = sweepLine.prev(prevprev);\n          else                    prevprev = null;\n\n          prevprevEvent = prevprev ? prevprev.key : null;\n          computeFields(prevEvent, prevprevEvent, operation);\n          computeFields(event,     prevEvent,     operation);\n        }\n      }\n    } else {\n      event = event.otherEvent;\n      next = prev = sweepLine.find(event);\n\n      if (prev && next) {\n\n        if (prev !== begin) prev = sweepLine.prev(prev);\n        else                prev = null;\n\n        next = sweepLine.next(next);\n        sweepLine.remove(event);\n\n        if (next && prev) {\n          possibleIntersection(prev.key, next.key, eventQueue);\n        }\n      }\n    }\n  }\n  return sortedEvents;\n}\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","import { GeoJSONReader, GeoJSONWriter, UnionOp } from 'turf-jsts';\n\n/**\n * Takes two or more {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {...Feature<Polygon>} A polygon to combine\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union() {\n    var reader = new GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n\n    for (var i = 1; i < arguments.length; i++) {\n        result = UnionOp.union(result, reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n\n    var writer = new GeoJSONWriter();\n    result = writer.write(result);\n\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n}\n\nexport default union;\n","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\nexport default truncate;\n","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n","import { feature } from '@turf/helpers';\nimport { getCoords, getType } from '@turf/invariant';\n\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    // Backwards compatible with v4.0\n    var mutate = (typeof options === 'object') ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n\n    switch (type) {\n    case 'LineString':\n        newCoords = cleanLine(geojson);\n        break;\n    case 'MultiLineString':\n    case 'Polygon':\n        getCoords(geojson).forEach(function (line) {\n            newCoords.push(cleanLine(line));\n        });\n        break;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (polygons) {\n            var polyPoints = [];\n            polygons.forEach(function (ring) {\n                polyPoints.push(cleanLine(ring));\n            });\n            newCoords.push(polyPoints);\n        });\n        break;\n    case 'Point':\n        return geojson;\n    case 'MultiPoint':\n        var existing = {};\n        getCoords(geojson).forEach(function (coord) {\n            var key = coord.join('-');\n            if (!existing.hasOwnProperty(key)) {\n                newCoords.push(coord);\n                existing[key] = true;\n            }\n        });\n        break;\n    default:\n        throw new Error(type + ' geometry not supported');\n    }\n\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return {type: type, coordinates: newCoords};\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({type: type, coordinates: newCoords}, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\n\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1])) return points;\n\n    var prevPoint, point, nextPoint;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points[i - 1];\n        point = points[i];\n        nextPoint = points[i + 1];\n\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point)) {\n            newPoints.push(point);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n\n    if (cross !== 0) return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\nexport default cleanCoords;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport truncate from '@turf/truncate';\nimport { getGeom } from '@turf/invariant';\nimport { feature } from '@turf/helpers';\nimport cleanCoords from '@turf/clean-coords';\n\n// depend on jsts for now http://bjornharrtell.github.io/jsts/\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {Feature|null} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2) {\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n\n    // Return null if geometry is too narrow in coordinate precision\n    // fixes topology errors with JSTS\n    // https://github.com/Turfjs/turf/issues/463\n    // https://github.com/Turfjs/turf/pull/1004\n    if (cleanCoords(truncate(geom2, {precision: 4})).coordinates[0].length < 4) return null;\n    if (cleanCoords(truncate(geom1, {precision: 4})).coordinates[0].length < 4) return null;\n\n    var reader = new GeoJSONReader();\n    var a = reader.read(truncate(geom1));\n    var b = reader.read(truncate(geom2));\n    var intersection = OverlayOp.intersection(a, b);\n\n    // https://github.com/Turfjs/turf/issues/951\n    if (intersection.isEmpty()) return null;\n\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(intersection);\n    return feature(geom);\n}\n\nexport default intersect;\n","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport area from '@turf/area';\nimport { feature } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = getGeom(polygon1);\n    var geom2 = getGeom(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return feature(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new GeoJSONReader();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = OverlayOp.difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(differenced);\n\n    return feature(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (area(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        flattenEach(geom, function (feature$$1) {\n            if (area(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\nexport default difference;\n","<template>\n  <div id=\"app\">\n    <div id=\"map\">\n      <div class=\"control leaflet-bar\">\n        <h4>Input Data</h4>\n        <select v-on:change=\"setInput\">\n          <option>Asia</option>\n          <option>Almost Parallel Segments</option>\n          <option>Saw & Cheese</option>\n        </select>\n        <br><br>\n        <div v-for=\"operation in operations\">\n          <input type=\"radio\" name=\"some\" :value=\"operation\" v-on:change=\"setOperation\" v-model=\"selectedOperation\"> {{operation}}\n        </div>\n\n        <h4>Performance</h4>\n        <p>\n          polygon-clipping {{performance}} m/s<br>\n          martinez {{martinezPerf}} m/s<br>\n          jsts {{jstsPerf}} m/s<br>\n        </p>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport pc from '../..'\n\n// the martinez packaging is somewhat broken\nimport martinezBool from 'martinez-polygon-clipping'\nvar martinezUnion = (p1, p2) => martinezBool(p1, p2, 1)\nvar martinezIntersection = (p1, p2) => martinezBool(p1, p2, 0)\nvar martinezDifference = (p1, p2) => martinezBool(p1, p2, 2)\nvar martinezXor = (p1, p2) => martinezBool(p1, p2, 3)\n\n// turf v5 runs off of jsts under the hood\nimport jstsUnion from '@turf/union'\nimport jstsIntersection from '@turf/intersect'\nimport jstsDifference from '@turf/difference'\nvar jstsXor = null\n\nvar operation = pc.intersection\nvar martinezOp = martinezUnion\nvar jstsOp = jstsUnion\nvar inData = null\nvar inLayer = null\nvar outLayer = null\nvar map = null\n\nimport asia from '../geojson/asia-with-poly.json'\nimport parallel from '../geojson/parallel.json'\nimport cheese from '../geojson/cheese.json'\n\nexport default {\n  name: 'app',\n  data () {\n    return {\n      operations: ['Intersection', 'Union', 'Difference', 'XOR'],\n      selectedOperation: 'Intersection',\n      performance: '',\n      martinezPerf: '',\n      jstsPerf: ''\n    }\n  },\n  methods: {\n    setInput (e) {\n      inLayer.clearLayers()\n      outLayer.clearLayers()\n      if (e.target.value === 'Asia') inData = asia\n      if (e.target.value === 'Almost Parallel Segments') inData = parallel\n      if (e.target.value === 'Saw & Cheese') inData = cheese\n      inLayer.addData(inData)\n      map.fitBounds(inLayer.getBounds(), {\n        padding: [20, 20]\n      })\n      this.runOperation()\n    },\n    setOperation (e) {\n      this.selectedOperation = e.target.value\n      outLayer.clearLayers()\n\n      if (this.selectedOperation === 'Union') {\n        operation = pc.union\n        martinezOp = martinezUnion\n        jstsOp = jstsUnion\n      }\n      if (this.selectedOperation === 'Intersection') {\n        operation = pc.intersection\n        martinezOp = martinezIntersection\n        jstsOp = jstsIntersection\n      }\n      if (this.selectedOperation === 'XOR') {\n        operation = pc.xor\n        martinezOp = martinezXor\n        jstsOp = jstsXor\n      }\n      if (this.selectedOperation === 'Difference') {\n        operation = pc.difference\n        martinezOp = martinezDifference\n        jstsOp = jstsDifference\n      }\n\n      this.runOperation()\n    },\n    runOperation () {\n      var t0 = performance.now()\n      var outData = operation(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.performance = (performance.now() - t0).toFixed(2)\n\n      outLayer.addData({\n        'type': 'MultiPolygon',\n        'coordinates': outData\n      }).addTo(map)\n\n      var m0 = performance.now()\n      martinezOp(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.martinezPerf = (performance.now() - m0).toFixed(2)\n\n      if (jstsOp !== null) {\n        var j0 = performance.now()\n        jstsOp(inData.features[0], inData.features[1])\n        this.jstsPerf = (performance.now() - j0).toFixed(2)\n      } else {\n        this.jstsPerf = 'N/A'\n      }\n    }\n  },\n  mounted () {\n    inData = asia\n    map = window.map = L.map('map', {\n      minZoom: 1,\n      maxZoom: 20,\n      center: [0, 0],\n      zoom: 2,\n      crs: L.CRS.Simple\n    })\n\n    inLayer = L.geoJson(asia).addTo(map)\n\n    map.fitBounds(inLayer.getBounds(), {\n      padding: [20, 20]\n    })\n    outLayer = L.geoJson({\n      type: 'FeatureCollection',\n      features: []\n    }, {\n      color: 'red'\n    }).addTo(map)\n\n    this.runOperation()\n  }\n}\n</script>\n\n<style>\n    html, body, #app, #map {\n      width: 100%;\n      height: 100%;\n      margin: 0px;\n    }\n\n  .control {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background: white;\n    padding: 10px;\n    z-index: 10000;\n  }\n\n  h4{\n    margin-bottom: 5px\n  }\n  p{\n    margin-top: 5px;\n  }\n</style>\n","import Vue from 'vue'\nimport App from './App.vue'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","isInBbox","bbox","point","ll","x","ur","y","getBboxOverlap","b1","b2","lowerX","upperX","epsilon","Number","EPSILON","undefined","Math","pow","EPSILON_SQ","cmp","a","b","ab","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","v1","v2","kross","v","sqrt","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","horizontalIntersection","pt","verticalIntersection","PtRounder","this","reset","value","xRounder","CoordRounder","yRounder","round","tree","SplayTree","coord","node","add","prevNode","prev","remove","nextNode","next","rounder","pointsAsObjects","geom","output","Array","isArray","Error","iMax","push","j","jMax","k","kMax","forceMultiPoly","unshift","splice","cleanMultiPoly","multipoly","poly","exteriorRing","cleanRing","interiorRing","ring","firstPt","lastPt","pop","prevPt","nextPt","isPointUncessary","SweepEvent","isLeft","events","ptCmp","comparePoints","link","Segment","compare","segment","aPt","bPt","other","otherEvents","evt","checkForConsuming","numEvents","evt1","consumedBy","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","set","sine","cosine","has","_cache$get","get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","leftSE","rightSE","rings","windings","id","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","ay","ax","by","bx","newRightSE","y1","y2","isAnEndpoint","interPt","ptA1","ptA2","ptB","vFar","vA","farPt","dist","closestPoint","lx","ly","rx","ry","cmpX","cmpY","_cmpX","_cmpY","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","pt1","pt2","ve","d1","d2","intersection","vector","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","newSeg","slice","swapEvents","tmpEvt","consumer","consumee","cmp$$1","tmp","_tmp","winding","index","indexOf","_prevInResult","prevInResult","_beforeState","seg","afterState","multiPolys","_afterState","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","_i","_iMax","_ring","isExterior","_index","_i2","_iMax2","mp","multiPoly","_isInResult","mpsBefore","operation","type","noBefores","noAfters","least","most","numMultiPolys","diff","abs","isJustSubject","mps","isSubject","concat","leftPt","rightPt","cmpPts","RingIn","geomRing","segments","prevPoint","fromRing","sweepEvents","PolyIn","geomPoly","interiorRings","getSweepEvents","ringSweepEvents","MultiPolyIn","geomMultiPoly","polys","POSITIVE_INFINITY","NEGATIVE_INFINITY","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","indexLE","comparator","getLeftmostComparator","sort","intersectionLE","ringEvents","reverse","points","_pt","_nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","getGeom","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","arguments","insert","find","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","cmpSplitters","_newEventsFromSplit2","split","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","Operation","moreGeoms","geoms","multipolys","markAsSubject","subject","mpA","_i5","_j","_jMax","sweepLine","prevQueueSize","size","process","_i6","_iMax5","_evt","factory","_len","_key","run","_len2","_key2","_len3","_key3","subjectGeom","_len4","clippingGeoms","_key4","DEFAULT_COMPARE","noDuplicates","_compare","_root","_size","_noDuplicates","right","left","parent","p","rotateRight","rotateLeft","gp","ggp","l","r","u","data","z","comp","splay","minNode","replace","s","t","sMax","maxNode","returnValue","successor","predecessor","callback","current","done","low","high","fn","ctx","Q","call","keys","values","presort","pivot","loadRecursive","start","end","middle","floor","load","NORMAL","NON_CONTRIBUTING","SAME_TRANSITION","DIFFERENT_TRANSITION","INTERSECTION","UNION","DIFFERENCE","XOR","computeFields","inOut","otherInOut","isVertical","inResult","otherEvent","edgeType","resultInOut","p0","p1","isBelow","copy","equals","p2","signedArea","compareEvents","e1","e2","specialCases","divideSegment","se","console","warn","contourId","possibleIntersection","se1","se2","a1","a2","noEndpointTouch","va","vb","toPoint","d","e","sqrKross","sqrLenA","sa","sb","smin","min","smax","max","nintersections","leftCoincide","rightCoincide","compareSegments","le1","le2","isAbove","nextPos","pos","resultEvents","processed","origIndex","newPos","connectEdges","sortedEvents","len","sorted","orderEvents","result","contour","ringId","initial","TinyQueue","defaultCompare","_down","item","_up","top","peek","halfLength","best","processPolygon","contourOrHole","depth","s1","s2","EMPTY","boolean","clipping","trivial","trivialOperation","sbbox","Infinity","cbbox","eventQueue","polygonSet","ii","jj","Queue","fillQueue","compareBBoxes","begin","Tree","rightbound","prevprev","subdivideSegments","arrayLike","relativeStart","parseInt","relativeEnd","isFinite","isInteger","val","parseFloat","isNaN","trunc","ceil","NumberUtil","interfaces_","getClass","equalsWithTolerance","x1","x2","tolerance","IllegalArgumentException","message","name","stack","__proto__","create","constructor","Double","staticAccessors$1","MAX_VALUE","n","doubleToLongBits","longBitsToDouble","isInfinite","defineProperties","Comparable","Clonable","Comparator","Serializable","Coordinate","NULL_ORDINATE","c","staticAccessors","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","ordinateIndex","equals2D","getOrdinate","equals3D","equalInZ","compareTo","o","clone","toString","distance3D","dx","dy","dz","distance","hashCode","setCoordinate","f","NaN","dimensionsToTest","_dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","CoordinateSequenceFactory","Location","staticAccessors$4","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","locationValue","hasInterface","MathUtil","staticAccessors$5","LOG_10","log10","ln","log","v3","v4","clamp","x$1","min$1","max$1","wrap","v1$1","v2$1","v3$1","average","StringBuffer","str","append","setCharAt","substr","Integer","intValue","Character","isWhitespace","toUpperCase","DD","_hi","_lo","init","dd","parse","hi","lo","staticAccessors$7","PI","TWO_PI","PI_2","E","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","scale","divide","gt","lt","multiply","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","y$1","isZero","selfSubtract","getSpecialNumberString","selfDivide","tc","ty","C","U","yhi","ylo","hc","hy","dump","createNaN","ge","exp","selfMultiply","reciprocal","fhi","flo","rint","setValue","value$1","isNegative","axdd","H","h","S","H$1","T","S$1","f$1","s$1","e$1","zhi","zlo","tx","hx","selfSqr","toStandardNotation","toSciNotation","specialStr","fill","sigDigits","num","charAt","stringOfChar","numZeroes","digits","expStr","trailingDigits","substring","digitsWithDecimal","isPositive","signum","strlen","signCh","numBeforeDec","ch","isDigit","ex","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","CGAlgorithmsDD","staticAccessors$6","DP_SAFE_EPSILON","orientationIndex","q","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","q1","q2","denom1","denom2","denom","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","det","errbound","CoordinateSequence","staticAccessors$8","M","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","env","getY","toCoordinateArray","Exception","NotRepresentableException","Exception$$1","System","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","HCoordinate","w","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","px","py","pw","qx","qy","qw","xInt","yInt","Envelope","_minx","_maxx","_miny","_maxy","staticAccessors$9","getArea","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","expandToInclude","minExtent","translate","transX","transY","setToNull","maxExtent","expandBy","deltaX","deltaY","contains","centre","minq","maxq","minp","maxp","regExes","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","WKTParser","geometryFactory","GeometryFactory","read","wkt","geometry","matches","exec","search","toLowerCase","parse$1","apply","write","extractGeometry","getGeometryType","extract$1","wktType","isEmpty","coordinate","coordinate$1","point$1","_coordinates","multipoint","multipoint$1","array","_geometries","join","linestring","linestring$1","_points","linearring","linearring$1","multilinestring","multilinestring$1","polygon","polygon$1","_shell","_holes","multipolygon","multipolygon$1","geometrycollection","collection","createPoint","coords","trim","createMultiPoint","components","createLineString","createLinearRing","line","createMultiLineString","lines","createPolygon","shell","holes","createMultiPolygon","polygons","createGeometryCollection","wktArray","WKTWriter","parser","toLineString","RuntimeException","AssertionFailedException","RuntimeException$$1","Assert","shouldNeverReachHere","isTrue","assertion","expectedValue","actualValue","LineIntersector","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","staticAccessors$10","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","catBuf","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","precisionModel","isInteriorIntersection","inputLineIndex","computeEdgeDistance","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","pdx","pdy","nonRobustComputeEdgeDistance","RobustLineIntersector","LineIntersector$$1","isInSegmentEnvelopes","intPt","env0","env1","CGAlgorithms","normalizeToMinimum","n1","n2","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","x3","x4","xabs","checkDD","intPtDD","isIn","out","println","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","nearestPt","minDist","distancePointLine","RobustDeterminant","sign","swap","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","countSegment","minx","maxx","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","sum","x0","x0$1","sum$1","distanceLineLine","A","B","D","noIntersection","rNumb","isPointInRing","computeLength","pts","y0","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","minDistance","isOnLine","lineIntersector","GeometryComponentFilter","filter","Geometry","_envelope","_factory","_SRID","_userData","getSRID","staticAccessors$11","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","isGeometryCollection","getSortIndex","getFactory","getGeometryN","isRectangle","g$1","equalsTopo","g","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","other$1","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","SRID","setUserData","userData","iterator","hasNext","aElement","bElement","comparison","isGeometryCollectionOrDerived","hasNonEmptyElements","geometries","hasNullElements","CoordinateFilter","BoundaryNodeRule","staticAccessors$12","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","boundaryCount","Collection","IndexOutOfBoundsException","addAll","toArray","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","array_","ensureCapacity","clear","element","oldElement","Iterator_","found","Iterator$$1","arrayList","arrayList_","position_","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coordArrayType","coll","isChanged","coord$2","obj","allowRepeated$2","coord$3","allowRepeated$3","i$2","i$3","coord$4","coord$5","allowRepeated$5","inc","closeRing","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","isRing","ptNotInList","testPts","testPt","scroll","coordinates","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","last","mid","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","Map$1","put","entrySet","SortedMap","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","hashSet_","BLACK","colorOf","color","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","getValue","getKey","oldValue","fixAfterInsertion","getFirstEntry","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","treeSet_","Arrays","asList","Dimension","staticAccessors$14","P","L","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","dimensionValue","toDimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","isDone","isGeometryChanged","GeometryCollection","Geometry$$1","getCoordinates","getNumPoints","childCoordinates","area","isEquivalentClass","otherCollection","getBoundaryDimension","dimension","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","getBoundary","MultiLineString","GeometryCollection$$1","isClosed","nLines","revLines","BoundaryOp","lineStrings","_geom","_geomFact","_bnRule","_endpointMap","bnRule","geom$1","bnRule$1","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createMultiPointFromCoords","LineString","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","valence","count","Counter","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","NEWLINE","SIMPLE_ORDINATE_FORMAT","chars","String","getStackTrace","os","ps","printStackTrace","t$1","stackTrace","lineNumberReader","readLine","separator","separatorlen","tokenList","tmpString","token","res","format","CoordinateSequences","copyCoord","minDim","dim","isEqual","cs1","cs2","cs1Size","extend","fact","newseq","cs","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","line$1","ls","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Puntal","Point","Polygonal","Polygon","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","convexHull","getExteriorRing","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","MultiPoint","isValid","LinearRing","LineString$$1","validateConstruction","MINIMUM_VALID_SIZE","MultiPolygon","allRings","allRingsArray","GeometryEditor","_isUserDataCopied","staticAccessors$16","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","isUserDataCopied","edit","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","hole","GeometryEditorOperation","editCoordinates","CoordinateArraySequence","_dimension","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","instanceObject","readResolve","HashMap","MapInterface","map_","entries","forEach","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","staticAccessors$19","maximumPreciseValue","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","getType","description","maxSigDigits","mostPrecise","pm1","pm2","_name","nameToTypeMap","staticAccessors$1$1","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","staticAccessors$2","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","coordinates$1","shell$1","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","geometryTypes","GeoJSONParser","json","JSON","Feature","feature","FeatureCollection","featureCollection","features","sub","linearRing","geoJson","shellGeoJson","holeGeoJson","GeoJSONReader","reducePrecision","GeoJSONWriter","Position","staticAccessors$20","ON","EmptyStackException","Stack","opposite","position","empty","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","de","side","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","pPrev","pNext","orientation","usePrev","findRightmostEdgeAtNode","star","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","dirEdgeList","TopologyException","msg","msgWithCoord","LinkedList","addLast","removeFirst","BufferSubgraph","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","startEdge","isVisited","computeDepths","de$1","copySymDepths","computeDepth","outsideDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","nodeStack","setDepth","symNode","getNodes","getDirectedEdges","TopologyLocation","location","on","gl","on$1","setAllLocations","locValue","setAllLocationsIfNull","isLine","merge","newLoc","getLocations","flip","temp","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","locValue$1","isEqualOnSide","allPositionsEqual","loc","Label","elt","onLoc","lbl","geomIndex","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","getGeometryCount","location$1","toLine","toLineLabel","label","lineLabel","EdgeRing","_startDe","_maxNodeDegree","_edges","_pts","_label","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","isFirstEdge","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","degree","getOutgoingDegree","edge","edgePts","startIndex","startIndex$1","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","deLabel","deLabel$1","setShell","toPolygon","holeLR","MinimalEdgeRing","EdgeRing$$1","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","GraphComponent","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","im","computeIM","Node","GraphComponent$$1","_coord","edges","isIncidentEdgeInResult","print","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","setNode","setLabelBoundary","NodeMap","nodeMap","nodeFact","addNode","createNode","node$1","getBoundaryNodes","bdyNodes","Quadrant","staticAccessors$21","NE","NW","SW","SE","isNorthern","quad","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","quadrant","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","edge$1","edge$2","p0$1","label$1","compareDirection","getDy","angle","atan2","className","lastDotPos","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","depthVal","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","printEdge","printReverse","setSym","setVisitedEdge","directionFactor","oppositePos","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","NodeFactory","PlanarGraph","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de1","de2","nodes","PolygonBuilder","_shellList","sortShellsAndHoles","edgeRings","shellList","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","getBounds","ItemBoundable","_bounds","_item","bounds","getItem","PriorityQueue","_items","poll","minItem","reorder","child","ItemVisitor","visitItem","SpatialIndex","itemEnv","query","AbstractNode","_childBoundables","_level","level","staticAccessors$22","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","bp","getDistance","getBoundable","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity$1","staticAccessors$23","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","level$1","boundables$1","boundable","searchBounds","getIntersectsOp","searchBounds$1","visitor","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","createHigherLevels","getRoot","item$1","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","nearestNeighbour","itemDist","initBndPair","itemDist$1","bp$1","initBndPair$1","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","centreX","avg","centreY","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","maxSegmentIndex","isInterior","SegmentNodeList","_nodeMap","getSplitCoordinates","addEndpoints","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","edgeList","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","NodedSegmentString","getData","eiNew","getSegmentOctant","checkSplitEdgesCorrectness","splitEdges","pt0","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","setData","NodableSegmentString","addIntersection","_nodeList","_data","safeOctant","intPt$1","addIntersectionNode","li","segmentIndex$1","getNodeList","normalizedSegmentIndex","nextSegIndex","addIntersections","getNodedSubstrings","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","LineSegment","staticAccessors$24","minX","orient0","orient1","geomFactory","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","minY","midPoint","closestPoints","closestPt","close00","close01","close10","close11","factor","maxX","comp0","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","pointAlong","bits0","hash0","bits1","MonotoneChainOverlapAction","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","overlap","mc1","start1","mc2","start2","getLineSegment","MonotoneChain","_start","_end","_context","_id","context","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","getChainStartIndices","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","pts$1","mcList","list","Noder","computeNodes","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","SinglePassNoder$$1","si","_monoChains","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","segStr","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","MonotoneChainOverlapAction$$1","_si","ss1","ss2","processIntersections","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","quadrantSegments$1","endCapStyle","setEndCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","staticAccessors$25","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","quadSegs","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","alpha","cos","BufferInputLineSimplifier","inputLine","_distanceTol","_isDeleted","_angleOrientation","_inputLine","staticAccessors$26","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","i0","distanceTol","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","simplify","collapseLine","OffsetSegmentString","_ptList","_minimimVertexDistance","staticAccessors$28","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","revere","addPts","startPt","setMinimumVertexDistance","minimimVertexDistance","Angle","staticAccessors$29","PI_TIMES_2","PI_OVER_2","PI_OVER_4","toDegrees","radians","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","staticAccessors$27","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","direction","radius","startAngle","endAngle","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","offset","sideSign","totalAngle","nSegs","currAngleInc","currAngle","createCircle","hasNarrowConcaveAngle","OffsetCurveBuilder","getOffsetCurve","inputPts","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","SubgraphDepthLocater","_subgraphs","_seg","_cga","subgraphs","staticAccessors$30","DepthSegment","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","dirEdge","stabbedSegments$1","ds","stabbingRayLeftPt$2","stabbedSegments$2","_leftDepth","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","Triangle","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","numx","numy","perpendicularBisector","l1","l2","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","_inputGeom","_curveBuilder","_curveList","inputGeom","curveBuilder","addPoint","curve","addCurve","addPolygon","offsetSide","shellCoord","isErodedCompletely","addPolygonRing","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","addLineString","getCurves","cwLeftLoc","cwRightLoc","addCollection","ringCoord","envMinDimension","PointOnGeometryLocator","locate","GeometryCollectionIterator","_parent","_atStart","_max","_subcollectionIterator","isAtomic","SimplePointInAreaLocator","containsPointInPolygon","geomi","g2","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","it$1","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","geomi$1","getDegree","insertEdgeEnd","DirectedEdgeStar","EdgeEndStar$$1","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","de0","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","mergeSymLabels","degree$1","findCoveredLineEdges","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","_orientation","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","_ocaMap","edgeColl","findEdgeIndex","findEqualEdge","SegmentIntersector","e0","segIndex0","segIndex1","IntersectionAdder","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","EdgeIntersection","getSegmentIndex","EdgeIntersectionList","Edge","MonotoneChainIndexer","MonotoneChainEdge","env2","mcb","chainIndex","computeIntersectsForChain","chainIndex0","mce","chainIndex1","mce$1","getStartIndexes","computeIntersects","Depth","NULL_VALUE","staticAccessors$31","depthValue","minDepth","newValue","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","newPts","setIsolated","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","BufferBuilder","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","mergeDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","processedGraphs","subgraph","createSubgraphs","createEmptyResultGeometry","getNoder","noder","buffer","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","ss","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","scaleFactor","isIntegerPrecision","noder$1","scaleFactor$1","offsetX","offsetY","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","NodingValidator","_segStrings","staticAccessors$33","checkEndPtVertexIntersections","checkInteriorIntersections","ss0","ss0$1","ss1$1","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","staticAccessors$34","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","staticAccessors$35","HotPixelSnapAction","snap","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","isNodeAdded","MonotoneChainSelectAction$$1","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","snapRound","intersections","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","BufferOp","_argGeom","_resultGeometry","_saveException","staticAccessors$32","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","getResultGeometry","bufferOp","distance$1","bufOp","g$2","distance$2","params","g$3","distance$3","bufOp$2","maxPrecisionDigits","bufEnvMax","minUnitLog10","PointPairDistance","_isNull","setMinimum","ptDist","initialize","setMaximum","DistanceToPointFinder","computeDistance","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","_maxPtDist","staticAccessors$36","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","distFilter","getMaxPointDistance","computeMaxVertexDistance","findDistance","bufferCurve","getDistancePoints","_minPtDist","midPt","PolygonExtracter","comps","_comps","LinearComponentExtracter","_lines","_isForcedToLineString","lines$1","isForcedToLineString","setForceToLineString","getLines","forceToLineString","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","locateInternal","shellLoc","locateInPolygonRing","holeLoc","p$2","updateLocationInfo","computeLocation","ml","mpoly","GeometryLocation","_component","_segIndex","component","INSIDE_AREA","component$1","staticAccessors$38","isInsideArea","getGeometryComponent","PointExtracter","getPoints","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","g0","g1","g0$1","g1$1","terminateDistance","computeContainmentDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","isWithinDistance","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","_g0","_g1","_ptDist","_densifyFrac","staticAccessors$39","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","densifyFrac","compute","computeOrientedDistance","discreteGeom","MaxPointDistanceFilter$1","fracFilter","orientedDistance","_euclideanDist","_numSubSegs","fraction","delx","dely","BufferDistanceValidator","input","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","staticAccessors$37","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","bufCurve","maxDist","haus","distDelta","checkPositiveValid","checkNegativeValid","inputCurve","getPolygonLines","checkMinimumDistance","getErrorIndicator","distOp","getErrorLocation","lineExtracter","getErrorMessage","BufferResultValidator","_errorMsg","staticAccessors$40","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","padding","expectedEnv","bufEnv","report","distValid","inputArea","resultArea","checkName","isValidMsg","validator","BasicSegmentString","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","findAllIntersections","setKeepIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","createAnyIntersectionFinder","createIntersectionCounter","FastNodingValidator","execute","intSegs","computeIntersections","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","mapOp","_mapOp","mapped","op","LineBuilder","_op","_lineEdgesList","_resultLineList","ptLocator","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","buildLines","OverlayOp","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","PointBuilder","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","snapTolerance$1","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","_srcGeom","staticAccessors$41","SNAP_PRECISION_FACTOR","snapGeom","extractTargetCoordinates","SnapTransformer","snapToSelf","cleanResult","snappedGeom","computeSnapTolerance","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","GeometryTransformer$$1","isSelfSnap","_snapPts","_isSelfSnap","snapLine","snapper","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","padStr","toBinaryString","bitStr","getBit","nBits","num1","num2","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","staticAccessors$42","Translater","addCommonBits","trans","removeCommonBits","invCoord","getCommonCoordinate","_commonBitsX","_commonBitsY","xp","yp","SnapOverlayOp","_cbr","selfSnap","remGeom","prepareResult","prepGeom","overlayOp","union","symDifference","SYMDIFFERENCE","difference","SnapIfNeededOverlayOp","isSuccess","savedException","MonotoneChain$2","SweepLineEvent","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","INSERT","staticAccessors$43","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","EdgeSetIntersector","SegmentIntersector$2","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","setIsDoneIfProperInt","isDoneWhenProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","nOverlaps","prepareEvents","processOverlaps","edges0","edges1","si$1","si$2","addEdge","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","_min","staticAccessors$45","NodeComparator","getMin","queryMin","queryMax","getMax","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","buildTree","buildLevel","buildRoot","printNode","ArrayListVisitor","getItems","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","SegmentVisitor","rcc","_counter","addLine","GeometryGraph","PlanarGraph$$1","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","_resultPrecisionModel","_arg","setComputationPrecision","g0$2","GeometryMapper","MapOp","op$1","mapped$1","gr","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","geom1","resultDimension","dim0","dim1","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","_g","_boundaryDistanceTolerance","_linework","boundaryDistanceTolerance","extractLinework","isWithinToleranceOfBoundary","extracter","PolygonalLineworkExtracter","linework","getLinework","OffsetPointGenerator","_doLeft","_doRight","extractPoints","offsetPts","computeOffsetPoints","setSidesToGenerate","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","staticAccessors$46","reportResult","expectedInterior","addTestPts","overlayOp$1","hasLocation","isValidResult","ptGen","getInvalidLocation","GeometryCombiner","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","elems","elemGeom","combine","createList","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","_inputPolys","staticAccessors$47","STRTREE_NODE_CAPACITY","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","unionOptimized","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","UnionOp","reader","stringify","properties","options","isObject","isNumber","validateBBox","validateId","feat","geomEach","geojson","stopG","geometryMaybeCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","truncate","precision","mutate","coordEach","excludeWrapCoord","wrapShrink","coordIndex","multiFeatureIndex","geometryIndex","geomType","truncateCoords","getCoords","cleanCoords","_typeof","newCoords","cleanLine","polyPoints","existing","hasOwnProperty","nextPoint","newPoints","secondToLast","isPointOnLineSegment","startX","startY","endX","endY","dxl","dyl","intersect","poly1","poly2","geom2","initialValue","previousValue","currentGeometry","geomReduce","calculateArea","polygonArea","RADIUS","ringArea","lowerIndex","middleIndex","upperIndex","coordsLength","rad","_","polygon1","polygon2","removeEmptyPolygon","differenced","feature$$1","script","Vue","el","render","App"],"mappings":"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"}