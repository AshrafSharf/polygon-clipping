{"version":3,"file":"bundle.js","sources":["../../node_modules/splaytree/index.js","../../dist/polygon-clipping.esm.js","../../node_modules/martinez-polygon-clipping/node_modules/splaytree/index.js","../../node_modules/martinez-polygon-clipping/src/edge_type.js","../../node_modules/martinez-polygon-clipping/src/operation.js","../../node_modules/martinez-polygon-clipping/src/compute_fields.js","../../node_modules/martinez-polygon-clipping/src/sweep_event.js","../../node_modules/martinez-polygon-clipping/src/equals.js","../../node_modules/martinez-polygon-clipping/src/signed_area.js","../../node_modules/martinez-polygon-clipping/src/compare_events.js","../../node_modules/martinez-polygon-clipping/src/divide_segment.js","../../node_modules/martinez-polygon-clipping/src/segment_intersection.js","../../node_modules/martinez-polygon-clipping/src/possible_intersection.js","../../node_modules/martinez-polygon-clipping/src/compare_segments.js","../../node_modules/martinez-polygon-clipping/src/connect_edges.js","../../node_modules/tinyqueue/index.js","../../node_modules/martinez-polygon-clipping/src/fill_queue.js","../../node_modules/martinez-polygon-clipping/src/index.js","../../node_modules/martinez-polygon-clipping/src/subdivide_segments.js","../../node_modules/turf-jsts/jsts.mjs","../../node_modules/@turf/union/main.es.js","../../node_modules/@turf/helpers/main.es.js","../../node_modules/@turf/meta/main.es.js","../../node_modules/@turf/truncate/main.es.js","../../node_modules/@turf/invariant/main.es.js","../../node_modules/@turf/clean-coords/main.es.js","../../node_modules/@turf/intersect/main.es.js","../../node_modules/@turf/area/main.es.js","../../node_modules/@turf/difference/main.es.js","../src/App.vue","../src/main.js"],"sourcesContent":["/* follows \"An implementation of top-down splaying\"\n * by D. Sleator <sleator@cs.cmu.edu> March 1992\n */\n\n/**\n * @typedef {*} Key\n */\n\n\n/**\n * @typedef {*} Value\n */\n\n\n/**\n * @typedef {function(node:Node):void} Visitor\n */\n\n\n/**\n * @typedef {function(a:Key, b:Key):number} Comparator\n */\n\n\n/**\n * @param {function(node:Node):string} NodePrinter\n */\n\n\n/**\n * @typedef {Object}  Node\n * @property {Key}    Key\n * @property {Value=} data\n * @property {Node}   left\n * @property {Node}   right\n */\n\nclass Node {\n\n  constructor (key, data) {\n    this.key    = key;\n    this.data   = data;\n    this.left   = null;\n    this.right  = null;\n  }\n}\n\nfunction DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\n\n/**\n * Simple top down splay, not requiring i to be in the tree t.\n * @param {Key} i\n * @param {Node?} t\n * @param {Comparator} comparator\n */\nfunction splay (i, t, comparator) {\n  if (t === null) return t;\n  let l, r, y;\n  const N = new Node();\n  l = r = N;\n\n  while (true) {\n    const cmp = comparator(i, t.key);\n    //if (i < t.key) {\n    if (cmp < 0) {\n      if (t.left === null) break;\n      //if (i < t.left.key) {\n      if (comparator(i, t.left.key) < 0) {\n        y = t.left;                           /* rotate right */\n        t.left = y.right;\n        y.right = t;\n        t = y;\n        if (t.left === null) break;\n      }\n      r.left = t;                               /* link right */\n      r = t;\n      t = t.left;\n    //} else if (i > t.key) {\n    } else if (cmp > 0) {\n      if (t.right === null) break;\n      //if (i > t.right.key) {\n      if (comparator(i, t.right.key) > 0) {\n        y = t.right;                          /* rotate left */\n        t.right = y.left;\n        y.left = t;\n        t = y;\n        if (t.right === null) break;\n      }\n      l.right = t;                              /* link left */\n      l = t;\n      t = t.right;\n    } else {\n      break;\n    }\n  }\n  /* assemble */\n  l.right = t.left;\n  r.left = t.right;\n  t.left = N.right;\n  t.right = N.left;\n  return t;\n}\n\n\n/**\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}      root\n */\nfunction insert (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  tree._size++;\n\n  if (t === null) {\n    node.left = node.right = null;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp < 0) {\n    node.left = t.left;\n    node.right = t;\n    t.left = null;\n  } else if (cmp >= 0) {\n    node.right = t.right;\n    node.left = t;\n    t.right = null;\n  }\n  return node;\n}\n\n\n/**\n * Insert i into the tree t, unless it's already there.\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}       root\n */\nfunction add (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  if (t === null) {\n    node.left = node.right = null;\n    tree._size++;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp === 0) return t;\n  else {\n    if (cmp < 0) {\n      node.left = t.left;\n      node.right = t;\n      t.left = null;\n    } else if (cmp > 0) {\n      node.right = t.right;\n      node.left = t;\n      t.right = null;\n    }\n    tree._size++;\n    return node;\n  }\n}\n\n\n/**\n * Deletes i from the tree if it's there\n * @param {Key}        i\n * @param {Tree}       tree\n * @param {Comparator} comparator\n * @param {Tree}       tree\n * @return {Node}      new root\n */\nfunction remove (i, t, comparator, tree) {\n  let x;\n  if (t === null) return null;\n  t = splay(i, t, comparator);\n  var cmp = comparator(i, t.key);\n  if (cmp === 0) {               /* found it */\n    if (t.left === null) {\n      x = t.right;\n    } else {\n      x = splay(i, t.left, comparator);\n      x.right = t.right;\n    }\n    tree._size--;\n    return x;\n  }\n  return t;                         /* It wasn't there */\n}\n\n\nfunction split (key, v, comparator) {\n  let left, right;\n  if (v === null) {\n    left = right = null;\n  } else {\n    v = splay(key, v, comparator);\n\n    const cmp = comparator(v.key, key);\n    if (cmp === 0) {\n      left  = v.left;\n      right = v.right;\n    } else if (cmp < 0) {\n      right   = v.right;\n      v.right = null;\n      left    = v;\n    } else {\n      left   = v.left;\n      v.left = null;\n      right  = v;\n    }\n  }\n  return { left, right };\n}\n\n\nfunction merge (left, right, comparator) {\n  if (right === null) return left;\n  if (left  === null) return right;\n\n  right = splay(left.key, right, comparator);\n  right.left = left;\n  return right;\n}\n\n\n/**\n * Prints level of the tree\n * @param  {Node}                        root\n * @param  {String}                      prefix\n * @param  {Boolean}                     isTail\n * @param  {Array<string>}               out\n * @param  {Function(node:Node):String}  printNode\n */\nfunction printRow (root, prefix, isTail, out, printNode) {\n  if (root) {\n    out(`${ prefix }${ isTail ? '└── ' : '├── ' }${ printNode(root) }\\n`);\n    const indent = prefix + (isTail ? '    ' : '│   ');\n    if (root.left)  printRow(root.left,  indent, false, out, printNode);\n    if (root.right) printRow(root.right, indent, true,  out, printNode);\n  }\n}\n\n\nexport default class Tree {\n\n  constructor (comparator = DEFAULT_COMPARE) {\n    this._comparator = comparator;\n    this._root = null;\n    this._size = 0;\n  }\n\n\n  /**\n   * Inserts a key, allows duplicates\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  insert (key, data) {\n    return this._root = insert(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Adds a key, if it is not present in the tree\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  add (key, data) {\n    return this._root = add(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  remove (key) {\n    this._root = remove(key, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    let node = this._root;\n    if (node) {\n      while (node.left) node = node.left;\n      this._root = splay(node.key,  this._root, this._comparator);\n      this._root = remove(node.key, this._root, this._comparator, this);\n      return { key: node.key, data: node.data };\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  findStatic (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return current;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  find (key) {\n    if (this._root) {\n      this._root = splay(key, this._root, this._comparator);\n      if (this._comparator(key, this._root.key) !== 0) return null;\n    }\n    return this._root;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Boolean}\n   */\n  contains (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return true;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return false;\n  }\n\n\n  /**\n   * @param  {Visitor} visitor\n   * @param  {*=}      ctx\n   * @return {SplayTree}\n   */\n  forEach (visitor, ctx) {\n    let current = this._root;\n    const Q = [];  /* Initialize stack s */\n    let done = false;\n\n    while (!done) {\n      if (current !==  null) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length !== 0) {\n          current = Q.pop();\n          visitor.call(ctx, current);\n\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range (low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._comparator;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Returns array of keys\n   * @return {Array<Key>}\n   */\n  keys () {\n    const keys = [];\n    this.forEach(({ key }) => keys.push(key));\n    return keys;\n  }\n\n\n  /**\n   * Returns array of all the data in the nodes\n   * @return {Array<Value>}\n   */\n  values () {\n    const values = [];\n    this.forEach(({ data }) => values.push(data));\n    return values;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  min() {\n    if (this._root) return this.minNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  max() {\n    if (this._root) return this.maxNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  minNode(t = this._root) {\n    if (t) while (t.left) t = t.left;\n    return t;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  maxNode(t = this._root) {\n    if (t) while (t.right) t = t.right;\n    return t;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    let current = this._root, done = false, i = 0;\n    const Q = [];\n\n    while (!done) {\n      if (current) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length > 0) {\n          current = Q.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Node}   d\n   * @return {Node|null}\n   */\n  next (d) {\n    let root = this._root;\n    let successor = null;\n\n    if (d.right) {\n      successor = d.right;\n      while (successor.left) successor = successor.left;\n      return successor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) {\n        successor = root;\n        root = root.left;\n      } else root = root.right;\n    }\n\n    return successor;\n  }\n\n\n  /**\n   * @param  {Node} d\n   * @return {Node|null}\n   */\n  prev (d) {\n    let root = this._root;\n    let predecessor = null;\n\n    if (d.left !== null) {\n      predecessor = d.left;\n      while (predecessor.right) predecessor = predecessor.right;\n      return predecessor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) root = root.left;\n      else {\n        predecessor = root;\n        root = root.right;\n      }\n    }\n    return predecessor;\n  }\n\n\n  /**\n   * @return {SplayTree}\n   */\n  clear() {\n    this._root = null;\n    this._size = 0;\n    return this;\n  }\n\n\n  /**\n   * @return {NodeList}\n   */\n  toList() {\n    return toList(this._root);\n  }\n\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load (keys = [], values = [], presort = false) {\n    let size = keys.length;\n    const comparator = this._comparator;\n\n    // sort if needed\n    if (presort) sort(keys, values, 0, size - 1, comparator);\n\n    if (this._root === null) { // empty tree\n      this._root = loadRecursive(this._root, keys, values, 0, size);\n      this._size = size;\n    } else { // that re-builds the whole tree from two in-order traversals\n      const mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\n      size = this._size + size;\n      this._root = sortedListToBST({ head: mergedList }, 0, size);\n    }\n    return this;\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isEmpty() { return this._root === null; }\n\n  get size () { return this._size; }\n\n\n  /**\n   * @param  {NodePrinter=} printNode\n   * @return {String}\n   */\n  toString (printNode = (n) => n.key) {\n    const out = [];\n    printRow(this._root, '', true, (v) => out.push(v), printNode);\n    return out.join('');\n  }\n\n\n  update (key, newKey, newData) {\n    const comparator = this._comparator;\n    let { left, right } = split(key, this._root, comparator);\n    this._size--;\n    if (comparator(key, newKey) < 0) {\n      right = insert(newKey, newData, right, comparator, this);\n    } else {\n      left = insert(newKey, newData, left, comparator, this);\n    }\n    this._root = merge(left, right, comparator);\n  }\n\n\n  split(key) {\n    return split(key, this._root, this._comparator);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction createList(keys, values) {\n  const head = { next: null };\n  let p = head;\n  for (let i = 0; i < keys.length; i++) {\n    p = p.next = { key: keys[i], data: values[i] };\n  }\n  p.next = null;\n  return head.next;\n}\n\n\nfunction toList (root) {\n  var current = root;\n  var Q = [], done = false;\n\n  const head = { next: null };\n  let p = head;\n\n  while (!done) {\n    if (current) {\n      Q.push(current);\n      current = current.left;\n    } else {\n      if (Q.length > 0) {\n        current = p = p.next = Q.pop();\n        current = current.right;\n      } else done = true;\n    }\n  }\n  p.next = null; // that'll work even if the tree was empty\n  return head.next;\n}\n\n\nfunction sortedListToBST(list, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const left = sortedListToBST(list, start, middle);\n\n    const root = list.head;\n    root.left = left;\n\n    list.head = list.head.next;\n\n    root.right = sortedListToBST(list, middle + 1, end);\n    return root;\n  }\n  return null;\n}\n\n\nfunction mergeLists (l1, l2, compare = (a, b) => a - b) {\n  const head = {}; // dummy\n  let p = head;\n\n  let p1 = l1;\n  let p2 = l2;\n\n  while (p1 !== null && p2 !== null) {\n    if (compare(p1.key, p2.key) < 0) {\n      p.next = p1;\n      p1 = p1.next;\n    } else {\n      p.next = p2;\n      p2 = p2.next;\n    }\n    p = p.next;\n  }\n\n  if (p1 !== null)      p.next = p1;\n  else if (p2 !== null) p.next = p2;\n\n  return head.next;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\nvar epsilon = Number.EPSILON; // IE Polyfill\n\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n/* FLP comparator */\n\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  } // check if they're flp equal\n\n\n  if ((a - b) * (a - b) < EPSILON_SQ * a * b) {\n    return 0;\n  } // normal comparison\n\n\n  return a < b ? -1 : 1;\n};\n/* Greedy comparison. Two numbers are defined to touch\n * if their midpoint is indistinguishable from either. */\n\nvar touch = function touch(a, b) {\n  var m = (a + b) / 2;\n  return cmp(m, a) === 0 || cmp(m, b) === 0;\n};\n/* Greedy comparison. Two points are defined to touch\n * if their midpoint is indistinguishable from either. */\n\nvar touchPoints = function touchPoints(aPt, bPt) {\n  // call directly to (skip touch()) cmp() for performance boost\n  var mx = (aPt.x + bPt.x) / 2;\n  var aXMiss = cmp(mx, aPt.x) !== 0;\n  if (aXMiss && cmp(mx, bPt.x) !== 0) return false;\n  var my = (aPt.y + bPt.y) / 2;\n  var aYMiss = cmp(my, aPt.y) !== 0;\n  if (aYMiss && cmp(my, bPt.y) !== 0) return false; // we have touching on both x & y, we have to make sure it's\n  // not just on opposite points thou\n\n  if (aYMiss && aYMiss) return true;\n  if (!aYMiss && !aYMiss) return true;\n  return false;\n};\n\n/* Cross Product of two vectors with first point at origin */\n\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n/* Dot Product of two vectors with first point at origin */\n\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n/* Comparator for two vectors with same starting point */\n\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the closest point on an line (defined by two points)\n * to another point. */\n\nvar closestPoint = function closestPoint(ptA1, ptA2, ptB) {\n  if (ptA1.x === ptA2.x) return {\n    x: ptA1.x,\n    y: ptB.y // vertical vector\n\n  };\n  if (ptA1.y === ptA2.y) return {\n    x: ptB.x,\n    y: ptA1.y // horizontal vector\n    // determinne which point is further away\n\n  };\n  var v1 = {\n    x: ptA1.x - ptB.x,\n    y: ptA1.y - ptB.y\n  };\n  var v2 = {\n    x: ptA2.x - ptB.x,\n    y: ptA2.y - ptB.y\n  };\n  var nearPt = ptA1;\n  var farPt = ptA2;\n\n  if (dotProduct(v1, v1) > dotProduct(v2, v2)) {\n    farPt = ptA1;\n    nearPt = ptA2;\n  } // use the further point as our base in the calculation, so that the\n  // vectors are more parallel, providing more accurate dot product\n\n\n  var vA = {\n    x: nearPt.x - farPt.x,\n    y: nearPt.y - farPt.y\n  };\n  var vB = {\n    x: ptB.x - farPt.x,\n    y: ptB.y - farPt.y\n  };\n  var dist = dotProduct(vA, vB) / dotProduct(vA, vA);\n  return {\n    x: farPt.x + dist * vA.x,\n    y: farPt.y + dist * vA.y\n  };\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n  var x1 = pt1.x + d2 * v1.x,\n      x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n      y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\n\nvar PtRounder =\n/*#__PURE__*/\nfunction () {\n  function PtRounder() {\n    _classCallCheck(this, PtRounder);\n\n    this.reset();\n  }\n\n  _createClass(PtRounder, [{\n    key: \"reset\",\n    value: function reset() {\n      this.xRounder = new CoordRounder();\n      this.yRounder = new CoordRounder();\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, y) {\n      return {\n        x: this.xRounder.round(x),\n        y: this.yRounder.round(y)\n      };\n    }\n  }]);\n\n  return PtRounder;\n}();\n\nvar CoordRounder =\n/*#__PURE__*/\nfunction () {\n  function CoordRounder() {\n    _classCallCheck(this, CoordRounder);\n\n    this.tree = new SplayTree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n    this.round(0);\n  } // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n\n\n  _createClass(CoordRounder, [{\n    key: \"round\",\n    value: function round(coord) {\n      var node = this.tree.add(coord);\n      var prevNode = this.tree.prev(node);\n\n      if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n        this.tree.remove(coord);\n        return prevNode.key;\n      }\n\n      var nextNode = this.tree.next(node);\n\n      if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n        this.tree.remove(coord);\n        return nextNode.key;\n      }\n\n      return coord;\n    }\n  }]);\n\n  return CoordRounder;\n}(); // singleton available by import\n\n\nvar rounder = new PtRounder();\n\n/* Given input geometry as a standard array-of-arrays geojson-style\n * geometry, return one that uses objects as points, for better perf */\n\nvar pointsAsObjects = function pointsAsObjects(geom) {\n  // we can handle well-formed multipolys and polys\n  var output = [];\n\n  if (!Array.isArray(geom)) {\n    throw new Error('Input is not a Polygon or MultiPolygon');\n  }\n\n  for (var i = 0, iMax = geom.length; i < iMax; i++) {\n    if (!Array.isArray(geom[i]) || geom[i].length == 0) {\n      throw new Error('Input is not a Polygon or MultiPolygon');\n    }\n\n    output.push([]);\n\n    for (var j = 0, jMax = geom[i].length; j < jMax; j++) {\n      if (!Array.isArray(geom[i][j]) || geom[i][j].length == 0) {\n        throw new Error('Input is not a Polygon or MultiPolygon');\n      }\n\n      if (Array.isArray(geom[i][j][0])) {\n        // multipolygon\n        output[i].push([]);\n\n        for (var k = 0, kMax = geom[i][j].length; k < kMax; k++) {\n          if (!Array.isArray(geom[i][j][k]) || geom[i][j][k].length < 2) {\n            throw new Error('Input is not a Polygon or MultiPolygon');\n          }\n\n          if (geom[i][j][k].length > 2) {\n            throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n          }\n\n          output[i][j].push(rounder.round(geom[i][j][k][0], geom[i][j][k][1]));\n        }\n      } else {\n        // polygon\n        if (geom[i][j].length < 2) {\n          throw new Error('Input is not a Polygon or MultiPolygon');\n        }\n\n        if (geom[i][j].length > 2) {\n          throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n        }\n\n        output[i].push(rounder.round(geom[i][j][0], geom[i][j][1]));\n      }\n    }\n  }\n\n  return output;\n};\n/* WARN: input modified directly */\n\nvar forceMultiPoly = function forceMultiPoly(geom) {\n  if (Array.isArray(geom)) {\n    if (geom.length === 0) return; // allow empty multipolys\n\n    if (Array.isArray(geom[0])) {\n      if (Array.isArray(geom[0][0])) {\n        if (typeof geom[0][0][0].x === 'number' && typeof geom[0][0][0].y === 'number') {\n          // multipolygon\n          return;\n        }\n      }\n\n      if (typeof geom[0][0].x === 'number' && typeof geom[0][0].y === 'number') {\n        // polygon\n        geom.unshift(geom.splice(0));\n        return;\n      }\n    }\n  }\n\n  throw new Error('Unrecognized input - not a polygon nor multipolygon');\n};\n/* WARN: input modified directly */\n\nvar cleanMultiPoly = function cleanMultiPoly(multipoly) {\n  var i = 0;\n\n  while (i < multipoly.length) {\n    var poly = multipoly[i];\n\n    if (poly.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n\n    var exteriorRing = poly[0];\n    cleanRing(exteriorRing); // poly is dropped if exteriorRing is degenerate\n\n    if (exteriorRing.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n\n    var j = 1;\n\n    while (j < poly.length) {\n      var interiorRing = poly[j];\n      cleanRing(interiorRing);\n      if (interiorRing.length === 0) poly.splice(j, 1);else j++;\n    }\n\n    i++;\n  }\n};\n/* Clean ring:\n *  - remove duplicate points\n *  - remove colinear points\n *  - remove rings with no area (less than 3 distinct points)\n *  - un-close rings (last point should not repeat first)\n *\n * WARN: input modified directly */\n\nvar cleanRing = function cleanRing(ring) {\n  if (ring.length === 0) return;\n  var firstPt = ring[0];\n  var lastPt = ring[ring.length - 1];\n  if (firstPt.x === lastPt.x && firstPt.y === lastPt.y) ring.pop();\n\n  var isPointUncessary = function isPointUncessary(prevPt, pt, nextPt) {\n    return prevPt.x === pt.x && prevPt.y === pt.y || nextPt.x === pt.x && nextPt.y === pt.y || compareVectorAngles(pt, prevPt, nextPt) === 0;\n  };\n\n  var i = 0;\n  var prevPt, nextPt;\n\n  while (i < ring.length) {\n    prevPt = i === 0 ? ring[ring.length - 1] : ring[i - 1];\n    nextPt = i === ring.length - 1 ? ring[0] : ring[i + 1];\n    if (isPointUncessary(prevPt, ring[i], nextPt)) ring.splice(i, 1);else i++;\n  } // if our ring has less than 3 distinct points now (so is degenerate)\n  // shrink it down to the empty array to communicate to our caller to\n  // drop it\n\n\n  while (ring.length < 3 && ring.length > 0) {\n    ring.pop();\n  }\n};\n\nvar SweepEvent =\n/*#__PURE__*/\nfunction () {\n  _createClass(SweepEvent, null, [{\n    key: \"compare\",\n    // for ordering sweep events in the sweep event queue\n    value: function compare(a, b) {\n      // favor event with a point that the sweep line hits first\n      var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n      if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n      if (a.point !== b.point) a.link(b); // favor right events over left\n\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n      // ordering of this case is the same as for their segments\n\n      return Segment.compare(a.segment, b.segment);\n    } // for ordering points in sweep line order\n\n  }, {\n    key: \"comparePoints\",\n    value: function comparePoints(aPt, bPt) {\n      if (aPt.x < bPt.x) return -1;\n      if (aPt.x > bPt.x) return 1;\n      if (aPt.y < bPt.y) return -1;\n      if (aPt.y > bPt.y) return 1;\n      return 0;\n    } // Warning: 'point' input will be modified and re-used (for performance)\n\n  }]);\n\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n  }\n\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n\n      var otherEvents = other.point.events;\n\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n\n      this.checkForConsuming();\n    }\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      // FIXME: The loops in this method run O(n^2) => no good.\n      //        Maintain little ordered sweep event trees?\n      //        Can we maintaining an ordering that avoids the need\n      //        for the re-sorting with getLeftmostComparator in geom-out?\n      // Compare each pair of events to see if other events also match\n      var numEvents = this.point.events.length;\n\n      for (var i = 0; i < numEvents; i++) {\n        var evt1 = this.point.events[i];\n        if (evt1.segment.consumedBy !== undefined) continue;\n\n        for (var j = i + 1; j < numEvents; j++) {\n          var evt2 = this.point.events[j];\n          if (evt2.consumedBy !== undefined) continue;\n          if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n          evt1.segment.consume(evt2.segment);\n        }\n      }\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n\n      return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n\n      var cache = new Map();\n\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n\n        var _cache$get = cache.get(a),\n            asine = _cache$get.sine,\n            acosine = _cache$get.cosine;\n\n        var _cache$get2 = cache.get(b),\n            bsine = _cache$get2.sine,\n            bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n        if (asine >= 0 && bsine >= 0) {\n          if (acosine < bcosine) return 1;\n          if (acosine > bcosine) return -1;\n          return 0;\n        } // both below x-axis\n\n\n        if (asine < 0 && bsine < 0) {\n          if (acosine < bcosine) return -1;\n          if (acosine > bcosine) return 1;\n          return 0;\n        } // one above x-axis, one below\n\n\n        if (bsine < asine) return -1;\n        if (bsine > asine) return 1;\n        return 0;\n      };\n    }\n  }]);\n\n  return SweepEvent;\n}();\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\n\nvar isInBbox = function isInBbox(bbox, point) {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n/* Greedy comparison with a bbox. A point is defined to 'touch'\n * a bbox if:\n *  - it is inside the bbox\n *  - it 'touches' one of the sides (another greedy comparison) */\n\nvar touchesBbox = function touchesBbox(bbox, point) {\n  return (bbox.ll.x <= point.x || touch(bbox.ll.x, point.x)) && (point.x <= bbox.ur.x || touch(point.x, bbox.ur.x)) && (bbox.ll.y <= point.y || touch(bbox.ll.y, point.y)) && (point.y <= bbox.ur.y || touch(point.y, bbox.ur.y));\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\n\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n// segments and sweep events when all else is identical\n\nvar segmentId = 0;\n\nvar Segment =\n/*#__PURE__*/\nfunction () {\n  _createClass(Segment, null, [{\n    key: \"compare\",\n\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    value: function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var blx = b.leftSE.point.x;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n      if (brx < alx) return 1;\n      if (arx < blx) return -1;\n      var aly = a.leftSE.point.y;\n      var bly = b.leftSE.point.y;\n      var ary = a.rightSE.point.y;\n      var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n      if (alx < blx) {\n        // are the two segments in the same horizontal plane?\n        if (bly < aly && bly < ary) return 1;\n        if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n        var aCmpBLeft = a.comparePoint(b.leftSE.point);\n        if (aCmpBLeft < 0) return 1;\n        if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n        var bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return -1;\n      } // is left endpoint of segment A the right-more?\n\n\n      if (alx > blx) {\n        if (aly < bly && aly < bry) return -1;\n        if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n        var bCmpALeft = b.comparePoint(a.leftSE.point);\n        if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n        var aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight < 0) return 1;\n        if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return 1;\n      } // if we get here, the two left endpoints are in the same\n      // vertical plane, ie alx === blx\n      // consider the lower left-endpoint to come first\n\n\n      if (aly < bly) return -1;\n      if (aly > bly) return 1; // left endpoints are identical\n      // check for colinearity by using the left-more right endpoint\n      // is the A right endpoint more left-more?\n\n      if (arx < brx) {\n        var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n        if (_bCmpARight !== 0) return _bCmpARight; // colinear segments with matching left endpoints,\n        // consider the one with more left-more right endpoint to be first\n\n        return -1;\n      } // is the B right endpoint more left-more?\n\n\n      if (arx > brx) {\n        var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n        if (_aCmpBRight < 0) return 1;\n        if (_aCmpBRight > 0) return -1; // colinear segments with matching left endpoints,\n        // consider the one with more left-more right endpoint to be first\n\n        return 1;\n      } // if we get here, two two right endpoints are in the same\n      // vertical plane, ie arx === brx\n      // consider the lower right-endpoint to come first\n\n\n      if (ary < bry) return -1;\n      if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n      // fall back on creation order as consistent tie-breaker\n\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1; // identical segment, ie a === b\n\n      return 0;\n    }\n    /* Warning: a reference to ringsIn input will be stored,\n     *  and possibly will be later modified */\n\n  }]);\n\n  function Segment(leftSE, rightSE, ringsIn) {\n    _classCallCheck(this, Segment);\n\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.ringsIn = ringsIn;\n    this._cache = {}; // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    value: function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n    /* A vector from the left point to the right */\n\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(pt) {\n      return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n    }\n    /* Compare this segment with a point. Return value indicates:\n     *     1: point lies above or to the left of segment\n     *     0: point is colinear to segment\n     *    -1: point is below or to the right of segment */\n\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var interPt = closestPoint(this.leftSE.point, this.rightSE.point, point);\n      if (point.y < interPt.y) return -1;\n      if (point.y > interPt.y) return 1; // depending on if our segment angles up or down,\n      // the x coord comparison means oppposite things\n\n      if (point.x < interPt.x) {\n        if (this.leftSE.point.y < this.rightSE.point.y) return 1;\n        if (this.leftSE.point.y > this.rightSE.point.y) return -1;\n      }\n\n      if (point.x > interPt.x) {\n        if (this.leftSE.point.y < this.rightSE.point.y) return -1;\n        if (this.leftSE.point.y > this.rightSE.point.y) return 1;\n      } // on the line\n\n\n      return 0;\n    }\n    /* Does the point in question touch the given segment?\n     * Greedy - essentially a 2 * Number.EPSILON comparison.\n     * If it's not possible to add an independent point between the\n     * point and the segment, we say the point 'touches' the segment. */\n\n  }, {\n    key: \"touches\",\n    value: function touches(point) {\n      if (!touchesBbox(this.bbox(), point)) return false; // if the points have been linked already, performance boost use that\n\n      if (point === this.leftSE.point || point === this.rightSE.point) return true; // avoid doing vector math on tiny vectors\n\n      if (touchPoints(this.leftSE.point, point)) return true;\n      if (touchPoints(this.rightSE.point, point)) return true;\n      var cPt1 = closestPoint(this.leftSE.point, this.rightSE.point, point);\n      var avgPt1 = {\n        x: (cPt1.x + point.x) / 2,\n        y: (cPt1.y + point.y) / 2\n      };\n      return touchPoints(avgPt1, cPt1) || touchPoints(avgPt1, point);\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var bboxOverlap = getBboxOverlap(this.bbox(), other.bbox());\n      if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n      // does each endpoint touch the other segment?\n\n      var touchesOtherLSE = this.touches(other.leftSE.point);\n      var touchesThisLSE = other.touches(this.leftSE.point);\n      var touchesOtherRSE = this.touches(other.rightSE.point);\n      var touchesThisRSE = other.touches(this.rightSE.point); // do left endpoints match?\n\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return this.rightSE.point;\n        if (!touchesThisRSE && touchesOtherRSE) return other.rightSE.point; // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n\n        return null;\n      } // does this left endpoint matches (other doesn't)\n\n\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE && touchPoints(this.leftSE.point, other.rightSE.point)) return null; // t-intersection on left endpoint\n\n        return this.leftSE.point;\n      } // does other left endpoint matches (this doesn't)\n\n\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE && touchPoints(this.rightSE.point, other.leftSE.point)) return null; // t-intersection on left endpoint\n\n        return other.leftSE.point;\n      } // trivial intersection on right endpoints\n\n\n      if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n      if (touchesThisRSE) return this.rightSE.point;\n      if (touchesOtherRSE) return other.rightSE.point; // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n\n      var pt = intersection(this.leftSE.point, this.vector(), other.leftSE.point, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n\n      if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n      if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n      return rounder.round(pt.x, pt.y);\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(point) {\n      var newEvents = [];\n      var alreadyLinked = point.events !== undefined;\n      var newLeftSE = new SweepEvent(point, true);\n      var newRightSE = new SweepEvent(point, false);\n      var oldRightSE = this.rightSE;\n      this.replaceRightSE(newRightSE);\n      newEvents.push(newRightSE);\n      newEvents.push(newLeftSE);\n      new Segment(newLeftSE, oldRightSE, this.ringsIn.slice()); // in the point we just used to create new sweep events with was already\n      // linked to other events, we need to check if either of the affected\n      // segments should be consumed\n\n      if (alreadyLinked) {\n        newLeftSE.checkForConsuming();\n        newRightSE.checkForConsuming();\n      }\n\n      return newEvents;\n    }\n    /* Consume another segment. We take their ringsIn under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n\n      while (consumer.consumedBy) {\n        consumer = consumer.consumedBy;\n      }\n\n      while (consumee.consumedBy) {\n        consumee = consumee.consumedBy;\n      }\n\n      var cmp$$1 = Segment.compare(consumer, consumee);\n      if (cmp$$1 === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n\n      if (cmp$$1 > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      } // make sure a segment doesn't consume it's prev\n\n\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n\n      for (var i = 0, iMax = consumee.ringsIn.length; i < iMax; i++) {\n        consumer.ringsIn.push(consumee.ringsIn[i]);\n      }\n\n      consumee.ringsIn = null;\n      consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      var key = 'prevInResult';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_prevInResult\",\n    value: function _prevInResult() {\n      if (!this.prev) return null;\n      if (this.prev.isInResult()) return this.prev;\n      return this.prev.prevInResult();\n    }\n  }, {\n    key: \"ringsBefore\",\n    value: function ringsBefore() {\n      var key = 'ringsBefore';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_ringsBefore\",\n    value: function _ringsBefore() {\n      if (!this.prev) return [];\n      return (this.prev.consumedBy || this.prev).ringsAfter();\n    }\n  }, {\n    key: \"ringsAfter\",\n    value: function ringsAfter() {\n      var key = 'ringsAfter';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_ringsAfter\",\n    value: function _ringsAfter() {\n      var rings = this.ringsBefore().slice(0);\n\n      for (var i = 0, iMax = this.ringsIn.length; i < iMax; i++) {\n        var ring = this.ringsIn[i];\n        var index = rings.indexOf(ring);\n        if (index === -1) rings.push(ring);else rings.splice(index, 1);\n      }\n\n      return rings;\n    }\n  }, {\n    key: \"multiPolysBefore\",\n    value: function multiPolysBefore() {\n      var key = 'multiPolysBefore';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_multiPolysBefore\",\n    value: function _multiPolysBefore() {\n      if (!this.prev) return [];\n      return (this.prev.consumedBy || this.prev).multiPolysAfter();\n    }\n  }, {\n    key: \"multiPolysAfter\",\n    value: function multiPolysAfter() {\n      var key = 'multiPolysAfter';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_multiPolysAfter\",\n    value: function _multiPolysAfter() {\n      // first calcualte our polysAfter\n      var polysAfter = [];\n      var polysExclude = [];\n      var ringsAfter = this.ringsAfter();\n\n      for (var i = 0, iMax = ringsAfter.length; i < iMax; i++) {\n        var ring = ringsAfter[i];\n        var poly = ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n          var index = polysAfter.indexOf(ring.poly);\n          if (index !== -1) polysAfter.splice(index, 1);\n        }\n      } // now calculate our multiPolysAfter\n\n\n      var mps = [];\n\n      for (var _i = 0, _iMax = polysAfter.length; _i < _iMax; _i++) {\n        var mp = polysAfter[_i].multiPoly;\n        if (mps.indexOf(mp) === -1) mps.push(mp);\n      }\n\n      return mps;\n    }\n    /* Is this segment part of the final result? */\n\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      var key = 'isInResult';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_isInResult\",\n    value: function _isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      var mpsBefore = this.multiPolysBefore();\n      var mpsAfter = this.multiPolysAfter();\n\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            return noBefores !== noAfters;\n          }\n\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n\n            return most === operation.numMultiPolys && least < most;\n          }\n\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            return diff % 2 === 1;\n          }\n\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n\n            return isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n          }\n\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n    }\n  }], [{\n    key: \"fromRing\",\n    value: function fromRing(pt1, pt2, ring) {\n      var leftPt, rightPt; // ordering the two points according to sweep line ordering\n\n      var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n      if (cmpPts < 0) {\n        leftPt = pt1;\n        rightPt = pt2;\n      } else if (cmpPts > 0) {\n        leftPt = pt2;\n        rightPt = pt1;\n      } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n      var leftSE = new SweepEvent(leftPt, true);\n      var rightSE = new SweepEvent(rightPt, false);\n      return new Segment(leftSE, rightSE, [ring]);\n    }\n  }]);\n\n  return Segment;\n}();\n\nvar RingIn =\n/*#__PURE__*/\nfunction () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n    var prevPoint = geomRing[0];\n\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      var point = geomRing[i];\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      prevPoint = point;\n    }\n\n    this.segments.push(Segment.fromRing(prevPoint, geomRing[0], this));\n  }\n\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return RingIn;\n}();\nvar PolyIn =\n/*#__PURE__*/\nfunction () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n\n    this.exteriorRing = new RingIn(geomPoly[0], this, true);\n    this.interiorRings = [];\n\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      this.interiorRings.push(new RingIn(geomPoly[i], this, false));\n    }\n\n    this.multiPoly = multiPoly;\n  }\n\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return PolyIn;\n}();\nvar MultiPolyIn =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyIn(geomMultiPoly) {\n    _classCallCheck(this, MultiPolyIn);\n\n    this.polys = [];\n\n    for (var i = 0, iMax = geomMultiPoly.length; i < iMax; i++) {\n      this.polys.push(new PolyIn(geomMultiPoly[i], this));\n    }\n\n    this.isSubject = false;\n  }\n\n  _createClass(MultiPolyIn, [{\n    key: \"markAsSubject\",\n    value: function markAsSubject() {\n      this.isSubject = true;\n    }\n  }, {\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return MultiPolyIn;\n}();\n\nvar RingOut =\n/*#__PURE__*/\nfunction () {\n  _createClass(RingOut, null, [{\n    key: \"factory\",\n\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    value: function factory(allSegments) {\n      var ringsOut = [];\n\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n        /* Walk the chain of linked events to form a closed ring */\n\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n          /* Is the ring complete? */\n\n          if (event.point === startingPoint) break;\n\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n            /* Only one way to go, so cotinue on the path */\n\n\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n            /* We must have an intersection. Check for a completed loop */\n\n\n            var indexLE = null;\n\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n\n\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n\n\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n\n        ringsOut.push(new RingOut(events));\n      }\n\n      return ringsOut;\n    }\n  }]);\n\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n\n    this.events = events;\n\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n\n    this.poly = null;\n  }\n\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      } // ring was all (within rounding error of angle calc) colinear points\n\n\n      if (points.length === 1) return null; // check if the starting point is necessary\n\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n\n      for (var _i = iStart; _i != iEnd; _i += step) {\n        orderedPoints.push([points[_i].x, points[_i].y]);\n      }\n\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n\n      return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n\n        if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        } // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n\n\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }]);\n\n  return RingOut;\n}();\nvar PolyOut =\n/*#__PURE__*/\nfunction () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n      if (geom[0] === null) return null;\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n\n      return geom;\n    }\n  }]);\n\n  return PolyOut;\n}();\nvar MultiPolyOut =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n\n      return polys;\n    }\n  }]);\n\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nvar SweepLine =\n/*#__PURE__*/\nfunction () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n    _classCallCheck(this, SweepLine);\n\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = []; // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n\n      if (event.consumedBy) {\n        if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n        return newEvents;\n      }\n\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined; // skip consumed segments still in tree\n\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      } // skip consumed segments still in tree\n\n\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n\n      if (event.isLeft) {\n        // Check for intersections against the previous segment in the sweep line\n        var prevMySplitter = null;\n\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        } // Check for intersections against the next segment in the sweep line\n\n\n        var nextMySplitter = null;\n\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        } // For simplicity, even if we find more than one intersection we only\n        // spilt on the 'earliest' (sweep-line style) of the intersections.\n        // The other intersection will be handled in a future process().\n\n\n        if (prevMySplitter !== null || nextMySplitter !== null) {\n          var mySplitter = null;\n          if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n            if (cmpSplitters < 0) mySplitter = prevMySplitter;\n            if (cmpSplitters > 0) mySplitter = nextMySplitter; // the two splitters are the exact same point\n\n            mySplitter = prevMySplitter;\n          } // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n\n          var _newEventsFromSplit2 = segment.split(mySplitter);\n\n          for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n            newEvents.push(_newEventsFromSplit2[_i2]);\n          }\n        }\n\n        if (newEvents.length > 0) {\n          // We found some intersections, so re-do the current event to\n          // make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers\n          this.tree.remove(segment);\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n\n        this.tree.remove(segment);\n      }\n\n      return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split(pt);\n      newEvents.push(rightSE); // splitting can trigger consumption\n\n      if (seg.consumedBy === undefined) this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n\n  return SweepLine;\n}();\n\nvar Operation =\n/*#__PURE__*/\nfunction () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      rounder.reset();\n      /* Make a copy of the input geometry with rounded points as objects */\n\n      var geoms = [pointsAsObjects(geom)];\n\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        geoms.push(pointsAsObjects(moreGeoms[i]));\n      }\n      /* Clean inputs */\n\n\n      for (var _i = 0, _iMax = geoms.length; _i < _iMax; _i++) {\n        forceMultiPoly(geoms[_i]);\n        cleanMultiPoly(geoms[_i]);\n      }\n      /* Convert inputs to MultiPoly objects, mark subject */\n\n\n      var multipolys = [];\n\n      for (var _i2 = 0, _iMax2 = geoms.length; _i2 < _iMax2; _i2++) {\n        multipolys.push(new MultiPolyIn(geoms[_i2]));\n      }\n\n      multipolys[0].markAsSubject();\n      operation.numMultiPolys = multipolys.length;\n      /* Put segment endpoints in a priority queue */\n\n      var queue = new SplayTree(SweepEvent.compare);\n\n      for (var _i3 = 0, _iMax3 = multipolys.length; _i3 < _iMax3; _i3++) {\n        var sweepEvents = multipolys[_i3].getSweepEvents();\n\n        for (var j = 0, jMax = sweepEvents.length; j < jMax; j++) {\n          queue.insert(sweepEvents[j]);\n        }\n      }\n      /* Pass the sweep line over those endpoints */\n\n\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n\n      while (node) {\n        var evt = node.key;\n\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error(\"Unable to pop() SweepEvent [\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from \") + \"segment #\".concat(evt.segment.id, \" from queue. Please file a bug report.\"));\n        }\n\n        var newEvents = sweepLine.process(evt);\n\n        for (var _i4 = 0, _iMax4 = newEvents.length; _i4 < _iMax4; _i4++) {\n          var _evt = newEvents[_i4];\n          if (_evt.consumedBy === undefined) queue.insert(_evt);\n        }\n\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      } // free some memory we don't need anymore\n\n\n      rounder.reset();\n      /* Collect and compile segments we're keeping into a multipolygon */\n\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n\n  return Operation;\n}(); // singleton available by import\n\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n\n  return operation.run('union', geom, moreGeoms);\n};\n\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n\n  return operation.run('intersection', geom, moreGeoms);\n};\n\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n\n  return operation.run('xor', geom, moreGeoms);\n};\n\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\n\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\nexport default class SplayTree {\n\n  constructor(compare = DEFAULT_COMPARE, noDuplicates = false) {\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  }\n\n\n  rotateLeft(x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) y.left.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)                this._root = y;\n    else if (x === x.parent.left) x.parent.left = y;\n    else                          x.parent.right = y;\n    if (y) y.left = x;\n    x.parent = y;\n  }\n\n\n  rotateRight(x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) y.right.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)               this._root = y;\n    else if(x === x.parent.left) x.parent.left = y;\n    else                         x.parent.right = y;\n    if (y) y.right = x;\n    x.parent = y;\n  }\n\n\n  _splay(x) {\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) this.rotateRight(p);\n        else              this.rotateLeft(p);\n      } else if (p.left === x && p.parent.left === p) {\n        this.rotateRight(p.parent);\n        this.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this.rotateLeft(p.parent);\n        this.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this.rotateRight(p);\n        this.rotateLeft(p);\n      } else {\n        this.rotateLeft(p);\n        this.rotateRight(p);\n      }\n    }\n  }\n\n\n  splay(x) {\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) ggp.left  = x;\n        else                 ggp.right = x;\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else gp.left = null;\n\n            p.right   = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else gp.right = null;\n\n            x.left    = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else p.left = null;\n\n        x.right  = p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else gp.right = null;\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else gp.left = null;\n\n            x.right   = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else p.right = null;\n\n        x.left   = p;\n        p.parent = x;\n      }\n    }\n  }\n\n\n  replace(u, v) {\n    if (!u.parent) this._root = v;\n    else if (u === u.parent.left) u.parent.left = v;\n    else u.parent.right = v;\n    if (v) v.parent = u.parent;\n  }\n\n\n  minNode(u = this._root) {\n    if (u) while (u.left) u = u.left;\n    return u;\n  }\n\n\n  maxNode(u = this._root) {\n    if (u) while (u.right) u = u.right;\n    return u;\n  }\n\n\n  insert(key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) return;\n        else if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    }\n\n    z = { key, data, left: null, right: null, parent: p };\n\n    if (!p)                          this._root = z;\n    else if (comp(p.key, z.key) < 0) p.right = z;\n    else                             p.left  = z;\n\n    this.splay(z);\n    this._size++;\n    return z;\n  }\n\n\n  find (key) {\n    var z    = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if      (cmp < 0) z = z.right;\n      else if (cmp > 0) z = z.left;\n      else              return z;\n    }\n    return null;\n  }\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param  {Key} key\n   * @return {boolean} true/false\n   */\n  contains (key) {\n    var node       = this._root;\n    var comparator = this._compare;\n    while (node)  {\n      var cmp = comparator(key, node.key);\n      if      (cmp === 0) return true;\n      else if (cmp < 0)   node = node.left;\n      else                node = node.right;\n    }\n\n    return false;\n  }\n\n\n  remove (key) {\n    var z = this.find(key);\n\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  removeNode(z) {\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  erase (key) {\n    var z = this.find(key);\n    if (!z) return;\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) sMax.right = t;\n      else   this._root = t;\n      t.parent = sMax;\n    }\n\n    this._size--;\n  }\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) node = node.left;\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  }\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) successor = successor.left;\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  }\n\n\n  /**\n   * Predecessor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) predecessor = predecessor.right;\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param  {forEachCallback} callback\n   * @return {SplayTree}\n   */\n  forEach(callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range(low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._compare;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load(keys = [], values = [], presort = false) {\n    if (this._size !== 0) throw new Error('bulk-load: tree is not empty');\n    const size = keys.length;\n    if (presort) sort(keys, values, 0, size - 1, this._compare);\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  }\n\n\n  min() {\n    var node = this.minNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n\n  max() {\n    var node = this.maxNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n  isEmpty() { return this._root === null; }\n  get size() { return this._size; }\n\n\n  /**\n   * Create a tree and load it with items\n   * @param  {Array<Key>}          keys\n   * @param  {Array<Value>?}        [values]\n\n   * @param  {Function?}            [comparator]\n   * @param  {Boolean?}             [presort=false] Pre-sort keys and values, using\n   *                                               tree's comparator. Sorting is done\n   *                                               in-place\n   * @param  {Boolean?}             [noDuplicates=false]   Allow duplicates\n   * @return {SplayTree}\n   */\n  static createTree(keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","export const NORMAL               = 0;\nexport const NON_CONTRIBUTING     = 1;\nexport const SAME_TRANSITION      = 2;\nexport const DIFFERENT_TRANSITION = 3;\n","export const INTERSECTION = 0;\nexport const UNION        = 1;\nexport const DIFFERENCE   = 2;\nexport const XOR          = 3;\n","import {\n  NORMAL,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION,\n  NON_CONTRIBUTING\n} from './edge_type';\nimport {\n  INTERSECTION,\n  UNION,\n  DIFFERENCE,\n  XOR\n} from './operation';\n\n/**\n * @param  {SweepEvent} event\n * @param  {SweepEvent} prev\n * @param  {Operation} operation\n */\nexport default function computeFields (event, prev, operation) {\n  // compute inOut and otherInOut fields\n  if (prev === null) {\n    event.inOut      = false;\n    event.otherInOut = true;\n\n  // previous line segment in sweepline belongs to the same polygon\n  } else {\n    if (event.isSubject === prev.isSubject) {\n      event.inOut      = !prev.inOut;\n      event.otherInOut = prev.otherInOut;\n\n    // previous line segment in sweepline belongs to the clipping polygon\n    } else {\n      event.inOut      = !prev.otherInOut;\n      event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n    }\n\n    // compute prevInResult field\n    if (prev) {\n      event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n        ? prev.prevInResult : prev;\n    }\n  }\n\n  // check if the line segment belongs to the Boolean operation\n  event.inResult = inResult(event, operation);\n}\n\n\n/* eslint-disable indent */\nfunction inResult(event, operation) {\n  switch (event.type) {\n    case NORMAL:\n      switch (operation) {\n        case INTERSECTION:\n          return !event.otherInOut;\n        case UNION:\n          return event.otherInOut;\n        case DIFFERENCE:\n          // return (event.isSubject && !event.otherInOut) ||\n          //         (!event.isSubject && event.otherInOut);\n          return (event.isSubject && event.otherInOut) ||\n                  (!event.isSubject && !event.otherInOut);\n        case XOR:\n          return true;\n      }\n      break;\n    case SAME_TRANSITION:\n      return operation === INTERSECTION || operation === UNION;\n    case DIFFERENT_TRANSITION:\n      return operation === DIFFERENCE;\n    case NON_CONTRIBUTING:\n      return false;\n  }\n  return false;\n}\n/* eslint-enable indent */\n","import { NORMAL } from './edge_type';\n\n\nexport default class SweepEvent {\n\n\n  /**\n   * Sweepline event\n   *\n   * @class {SweepEvent}\n   * @param {Array.<Number>}  point\n   * @param {Boolean}         left\n   * @param {SweepEvent=}     otherEvent\n   * @param {Boolean}         isSubject\n   * @param {Number}          edgeType\n   */\n  constructor (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Does event belong to result?\n     * @type {Boolean}\n     */\n    this.inResult = false;\n\n\n    // connection step\n\n    /**\n     * @type {Boolean}\n     */\n    this.resultInOut = false;\n\n    this.isExteriorRing = true;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isBelow (p) {\n    const p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isAbove (p) {\n    return !this.isBelow(p);\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  }\n\n\n  clone () {\n    const copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.inResult       = this.inResult;\n    copy.prevInResult   = this.prevInResult;\n    copy.isExteriorRing = this.isExteriorRing;\n    copy.inOut          = this.inOut;\n    copy.otherInOut     = this.otherInOut;\n\n    return copy;\n  }\n}\n","export default function equals(p1, p2) {\n  if (p1[0] === p2[0]) {\n    if (p1[1] === p2[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\n\n// const EPSILON = 1e-9;\n// const abs = Math.abs;\n// TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n// Precision problem.\n//\n// module.exports = function equals(p1, p2) {\n//   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n// };\n","/**\n * Signed area of the triangle (p0, p1, p2)\n * @param  {Array.<Number>} p0\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Number}\n */\nexport default function signedArea(p0, p1, p2) {\n  return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n}\n","import signedArea from './signed_area';\n\n/**\n * @param  {SweepEvent} e1\n * @param  {SweepEvent} e2\n * @return {Number}\n */\nexport default function compareEvents(e1, e2) {\n  const p1 = e1.point;\n  const p2 = e2.point;\n\n  // Different x-coordinate\n  if (p1[0] > p2[0]) return 1;\n  if (p1[0] < p2[0]) return -1;\n\n  // Different points, but same x-coordinate\n  // Event with lower y-coordinate is processed first\n  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\n  return specialCases(e1, e2, p1, p2);\n}\n\n\n/* eslint-disable no-unused-vars */\nfunction specialCases(e1, e2, p1, p2) {\n  // Same coordinates, but one is a left endpoint and the other is\n  // a right endpoint. The right endpoint is processed first\n  if (e1.left !== e2.left)\n    return e1.left ? 1 : -1;\n\n  // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n  // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n  // Same coordinates, both events\n  // are left endpoints or right endpoints.\n  // not collinear\n  if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n    // the event associate to the bottom segment is processed first\n    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n  }\n\n  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n}\n/* eslint-enable no-unused-vars */\n","import SweepEvent    from './sweep_event';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\n\n/**\n * @param  {SweepEvent} se\n * @param  {Array.<Number>} p\n * @param  {Queue} queue\n * @return {Queue}\n */\nexport default function divideSegment(se, p, queue)  {\n  const r = new SweepEvent(p, false, se,            se.isSubject);\n  const l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n  /* eslint-disable no-console */\n  if (equals(se.point, se.otherEvent.point)) {\n\n    console.warn('what is that, a collapsed segment?', se);\n  }\n  /* eslint-enable no-console */\n\n  r.contourId = l.contourId = se.contourId;\n\n  // avoid a rounding error. The left event would be processed after the right event\n  if (compareEvents(l, se.otherEvent) > 0) {\n    se.otherEvent.left = true;\n    l.left = false;\n  }\n\n  // avoid a rounding error. The left event would be processed after the right event\n  // if (compareEvents(se, r) > 0) {}\n\n  se.otherEvent.otherEvent = l;\n  se.otherEvent = r;\n\n  queue.push(l);\n  queue.push(r);\n\n  return queue;\n}\n","//const EPS = 1e-9;\n\n/**\n * Finds the magnitude of the cross product of two vectors (if we pretend\n * they're in three dimensions)\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The magnitude of the cross product\n */\nfunction crossProduct(a, b) {\n  return (a[0] * b[1]) - (a[1] * b[0]);\n}\n\n/**\n * Finds the dot product of two vectors.\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The dot product\n */\nfunction dotProduct(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]);\n}\n\n/**\n * Finds the intersection (if any) between two line segments a and b, given the\n * line segments' end points a1, a2 and b1, b2.\n *\n * This algorithm is based on Schneider and Eberly.\n * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n * Page 244.\n *\n * @param {Array.<Number>} a1 point of first line\n * @param {Array.<Number>} a2 point of first line\n * @param {Array.<Number>} b1 point of second line\n * @param {Array.<Number>} b2 point of second line\n * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n *                                         (meaning connected segments) as\n *                                         intersections\n * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n * intersection. If they overlap, the two end points of the overlapping segment.\n * Otherwise, null.\n */\nexport default function (a1, a2, b1, b2, noEndpointTouch) {\n  // The algorithm expects our lines in the form P + sd, where P is a point,\n  // s is on the interval [0, 1], and d is a vector.\n  // We are passed two points. P can be the first point of each pair. The\n  // vector, then, could be thought of as the distance (in x and y components)\n  // from the first point to the second point.\n  // So first, let's make our vectors:\n  const va = [a2[0] - a1[0], a2[1] - a1[1]];\n  const vb = [b2[0] - b1[0], b2[1] - b1[1]];\n  // We also define a function to convert back to regular point form:\n\n  /* eslint-disable arrow-body-style */\n\n  function toPoint(p, s, d) {\n    return [\n      p[0] + s * d[0],\n      p[1] + s * d[1]\n    ];\n  }\n\n  /* eslint-enable arrow-body-style */\n\n  // The rest is pretty much a straight port of the algorithm.\n  const e = [b1[0] - a1[0], b1[1] - a1[1]];\n  let kross    = crossProduct(va, vb);\n  let sqrKross = kross * kross;\n  const sqrLenA  = dotProduct(va, va);\n  //const sqrLenB  = dotProduct(vb, vb);\n\n  // Check for line intersection. This works because of the properties of the\n  // cross product -- specifically, two vectors are parallel if and only if the\n  // cross product is the 0 vector. The full calculation involves relative error\n  // to account for possible very small line segments. See Schneider & Eberly\n  // for details.\n  if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n    // If they're not parallel, then (because these are line segments) they\n    // still might not actually intersect. This code checks that the\n    // intersection point of the lines is actually on both line segments.\n    const s = crossProduct(e, vb) / kross;\n    if (s < 0 || s > 1) {\n      // not on line segment a\n      return null;\n    }\n    const t = crossProduct(e, va) / kross;\n    if (t < 0 || t > 1) {\n      // not on line segment b\n      return null;\n    }\n    if (s === 0 || s === 1) {\n      // on an endpoint of line segment a\n      return noEndpointTouch ? null : [toPoint(a1, s, va)];\n    }\n    if (t === 0 || t === 1) {\n      // on an endpoint of line segment b\n      return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n    }\n    return [toPoint(a1, s, va)];\n  }\n\n  // If we've reached this point, then the lines are either parallel or the\n  // same, but the segments could overlap partially or fully, or not at all.\n  // So we need to find the overlap, if any. To do that, we can use e, which is\n  // the (vector) difference between the two initial points. If this is parallel\n  // with the line itself, then the two lines are the same line, and there will\n  // be overlap.\n  //const sqrLenE = dotProduct(e, e);\n  kross = crossProduct(e, va);\n  sqrKross = kross * kross;\n\n  if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n  // Lines are just parallel, not the same. No overlap.\n    return null;\n  }\n\n  const sa = dotProduct(va, e) / sqrLenA;\n  const sb = sa + dotProduct(va, vb) / sqrLenA;\n  const smin = Math.min(sa, sb);\n  const smax = Math.max(sa, sb);\n\n  // this is, essentially, the FindIntersection acting on floats from\n  // Schneider & Eberly, just inlined into this function.\n  if (smin <= 1 && smax >= 0) {\n\n    // overlap on an end point\n    if (smin === 1) {\n      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n    }\n\n    if (smax === 0) {\n      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n    }\n\n    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\n    // There's overlap on a segment -- two points of intersection. Return both.\n    return [\n      toPoint(a1, smin > 0 ? smin : 0, va),\n      toPoint(a1, smax < 1 ? smax : 1, va)\n    ];\n  }\n\n  return null;\n}\n","import divideSegment from './divide_segment';\nimport intersection  from './segment_intersection';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\nimport {\n  NON_CONTRIBUTING,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION\n} from './edge_type';\n\n/**\n * @param  {SweepEvent} se1\n * @param  {SweepEvent} se2\n * @param  {Queue}      queue\n * @return {Number}\n */\nexport default function possibleIntersection (se1, se2, queue) {\n  // that disallows self-intersecting polygons,\n  // did cost us half a day, so I'll leave it\n  // out of respect\n  // if (se1.isSubject === se2.isSubject) return;\n  const inter = intersection(\n    se1.point, se1.otherEvent.point,\n    se2.point, se2.otherEvent.point\n  );\n\n  const nintersections = inter ? inter.length : 0;\n  if (nintersections === 0) return 0; // no intersection\n\n  // the line segments intersect at an endpoint of both line segments\n  if ((nintersections === 1) &&\n      (equals(se1.point, se2.point) ||\n       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n    return 0;\n  }\n\n  if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n    // if(se1.contourId === se2.contourId){\n    // console.warn('Edges of the same polygon overlap',\n    //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n    // }\n    //throw new Error('Edges of the same polygon overlap');\n    return 0;\n  }\n\n  // The line segments associated to se1 and se2 intersect\n  if (nintersections === 1) {\n\n    // if the intersection point is not an endpoint of se1\n    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n      divideSegment(se1, inter[0], queue);\n    }\n\n    // if the intersection point is not an endpoint of se2\n    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n      divideSegment(se2, inter[0], queue);\n    }\n    return 1;\n  }\n\n  // The line segments associated to se1 and se2 overlap\n  const events        = [];\n  let leftCoincide  = false;\n  let rightCoincide = false;\n\n  if (equals(se1.point, se2.point)) {\n    leftCoincide = true; // linked\n  } else if (compareEvents(se1, se2) === 1) {\n    events.push(se2, se1);\n  } else {\n    events.push(se1, se2);\n  }\n\n  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n    rightCoincide = true;\n  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n    events.push(se2.otherEvent, se1.otherEvent);\n  } else {\n    events.push(se1.otherEvent, se2.otherEvent);\n  }\n\n  if ((leftCoincide && rightCoincide) || leftCoincide) {\n    // both line segments are equal or share the left endpoint\n    se2.type = NON_CONTRIBUTING;\n    se1.type = (se2.inOut === se1.inOut)\n      ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n    if (leftCoincide && !rightCoincide) {\n      // honestly no idea, but changing events selection from [2, 1]\n      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n      divideSegment(events[1].otherEvent, events[0].point, queue);\n    }\n    return 2;\n  }\n\n  // the line segments share the right endpoint\n  if (rightCoincide) {\n    divideSegment(events[0], events[1].point, queue);\n    return 3;\n  }\n\n  // no line segment includes totally the other one\n  if (events[0] !== events[3].otherEvent) {\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[1], events[2].point, queue);\n    return 3;\n  }\n\n  // one line segment includes the other one\n  divideSegment(events[0], events[1].point, queue);\n  divideSegment(events[3].otherEvent, events[2].point, queue);\n\n  return 3;\n}\n","import signedArea    from './signed_area';\nimport compareEvents from './compare_events';\nimport equals        from './equals';\n\n\n/**\n * @param  {SweepEvent} le1\n * @param  {SweepEvent} le2\n * @return {Number}\n */\nexport default function compareSegments(le1, le2) {\n  if (le1 === le2) return 0;\n\n  // Segments are not collinear\n  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n    // If they share their left endpoint use the right endpoint to sort\n    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\n    // Different left endpoint: use the left endpoint to sort\n    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\n    // has the line segment associated to e1 been inserted\n    // into S after the line segment associated to e2 ?\n    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\n    // The line segment associated to e2 has been inserted\n    // into S after the line segment associated to e1\n    return le1.isBelow(le2.point) ? -1 : 1;\n  }\n\n  if (le1.isSubject === le2.isSubject) { // same polygon\n    let p1 = le1.point, p2 = le2.point;\n    if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n      p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]) return 0;\n      else return le1.contourId > le2.contourId ? 1 : -1;\n    }\n  } else { // Segments are collinear, but belong to separate polygons\n    return le1.isSubject ? -1 : 1;\n  }\n\n  return compareEvents(le1, le2) === 1 ? 1 : -1;\n}\n","import compareEvents from './compare_events';\nimport { DIFFERENCE } from './operation';\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<SweepEvent>}\n */\nfunction orderEvents(sortedEvents) {\n  let event, i, len, tmp;\n  const resultEvents = [];\n  for (i = 0, len = sortedEvents.length; i < len; i++) {\n    event = sortedEvents[i];\n    if ((event.left && event.inResult) ||\n      (!event.left && event.otherEvent.inResult)) {\n      resultEvents.push(event);\n    }\n  }\n  // Due to overlapping edges the resultEvents array can be not wholly sorted\n  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if ((i + 1) < len &&\n        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n        tmp = resultEvents[i];\n        resultEvents[i] = resultEvents[i + 1];\n        resultEvents[i + 1] = tmp;\n        sorted = false;\n      }\n    }\n  }\n\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    event.pos = i;\n  }\n\n  // imagine, the right event is found in the beginning of the queue,\n  // when his left counterpart is not marked yet\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    if (!event.left) {\n      tmp = event.pos;\n      event.pos = event.otherEvent.pos;\n      event.otherEvent.pos = tmp;\n    }\n  }\n\n  return resultEvents;\n}\n\n\n/**\n * @param  {Number} pos\n * @param  {Array.<SweepEvent>} resultEvents\n * @param  {Object>}    processed\n * @return {Number}\n */\nfunction nextPos(pos, resultEvents, processed, origIndex) {\n  let p, p1;\n  let newPos = pos + 1;\n  const length = resultEvents.length;\n\n  p  = resultEvents[pos].point;\n\n  if (newPos < length)\n    p1 = resultEvents[newPos].point;\n\n\n  // while in range and not the current one by value\n  while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n    if (!processed[newPos]) {\n      return newPos;\n    } else   {\n      newPos++;\n    }\n    p1 = resultEvents[newPos].point;\n  }\n\n  newPos = pos - 1;\n\n  while (processed[newPos] && newPos >= origIndex) {\n    newPos--;\n  }\n  return newPos;\n}\n\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<*>} polygons\n */\nexport default function connectEdges(sortedEvents, operation) {\n  let i, len;\n  const resultEvents = orderEvents(sortedEvents);\n\n  // \"false\"-filled array\n  const processed = {};\n  const result = [];\n  let event;\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    if (processed[i]) continue;\n    const contour = [[]];\n\n    if (!resultEvents[i].isExteriorRing) {\n      if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\n        result.push(contour);\n      } else if (result.length === 0) {\n        result.push([[contour]]);\n      } else {\n        result[result.length - 1].push(contour[0]);\n      }\n    } else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\n      result[result.length - 1].push(contour[0]);\n    } else {\n      result.push(contour);\n    }\n\n    const ringId = result.length - 1;\n    let pos = i;\n\n    const initial = resultEvents[i].point;\n    contour[0].push(initial);\n\n    while (pos >= i) {\n      event = resultEvents[pos];\n      processed[pos] = true;\n\n      if (event.left) {\n        event.resultInOut = false;\n        event.contourId   = ringId;\n      } else {\n        event.otherEvent.resultInOut = true;\n        event.otherEvent.contourId   = ringId;\n      }\n\n      pos = event.pos;\n      processed[pos] = true;\n      contour[0].push(resultEvents[pos].point);\n      pos = nextPos(pos, resultEvents, processed, i);\n    }\n\n    pos = pos === -1 ? i : pos;\n\n    event = resultEvents[pos];\n    processed[pos] = processed[event.pos] = true;\n    event.otherEvent.resultInOut = true;\n    event.otherEvent.contourId   = ringId;\n  }\n\n  // Handle if the result is a polygon (eg not multipoly)\n  // Commented it again, let's see what do we mean by that\n  // if (result.length === 1) result = result[0];\n  return result;\n}\n","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n","import Queue           from 'tinyqueue';\nimport SweepEvent      from './sweep_event';\nimport compareEvents   from './compare_events';\nimport { DIFFERENCE }  from './operation';\n\nconst max = Math.max;\nconst min = Math.min;\n\nlet contourId = 0;\n\n\nfunction processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n  let i, len, s1, s2, e1, e2;\n  for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n    s1 = contourOrHole[i];\n    s2 = contourOrHole[i + 1];\n    e1 = new SweepEvent(s1, false, undefined, isSubject);\n    e2 = new SweepEvent(s2, false, e1,        isSubject);\n    e1.otherEvent = e2;\n\n    if (s1[0] === s2[0] && s1[1] === s2[1]) {\n      continue; // skip collapsed edges, or it breaks\n    }\n\n    e1.contourId = e2.contourId = depth;\n    if (!isExteriorRing) {\n      e1.isExteriorRing = false;\n      e2.isExteriorRing = false;\n    }\n    if (compareEvents(e1, e2) > 0) {\n      e2.left = true;\n    } else {\n      e1.left = true;\n    }\n\n    const x = s1[0], y = s1[1];\n    bbox[0] = min(bbox[0], x);\n    bbox[1] = min(bbox[1], y);\n    bbox[2] = max(bbox[2], x);\n    bbox[3] = max(bbox[3], y);\n\n    // Pushing it so the queue is sorted from left to right,\n    // with object on the left having the highest priority.\n    Q.push(e1);\n    Q.push(e2);\n  }\n}\n\n\nexport default function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n  const eventQueue = new Queue(null, compareEvents);\n  let polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n  for (i = 0, ii = subject.length; i < ii; i++) {\n    polygonSet = subject[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n    }\n  }\n\n  for (i = 0, ii = clipping.length; i < ii; i++) {\n    polygonSet = clipping[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (operation === DIFFERENCE) isExteriorRing = false;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n    }\n  }\n\n  return eventQueue;\n}\n","import subdivideSegments from './subdivide_segments';\nimport connectEdges      from './connect_edges';\nimport fillQueue         from './fill_queue';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n}        from './operation';\n\nconst EMPTY = [];\n\n\nfunction trivialOperation(subject, clipping, operation) {\n  let result = null;\n  if (subject.length * clipping.length === 0) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = (subject.length === 0) ? clipping : subject;\n    }\n  }\n  return result;\n}\n\n\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n  let result = null;\n  if (sbbox[0] > cbbox[2] ||\n      cbbox[0] > sbbox[2] ||\n      sbbox[1] > cbbox[3] ||\n      cbbox[1] > sbbox[3]) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = subject.concat(clipping);\n    }\n  }\n  return result;\n}\n\n\nexport default function boolean(subject, clipping, operation) {\n  if (typeof subject[0][0][0] === 'number') {\n    subject = [subject];\n  }\n  if (typeof clipping[0][0][0] === 'number') {\n    clipping = [clipping];\n  }\n  let trivial = trivialOperation(subject, clipping, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  const sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n  const cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n  //console.time('fill queue');\n  const eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('fill queue');\n\n  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  //console.time('subdivide edges');\n  const sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('subdivide edges');\n\n  //console.time('connect vertices');\n  const result = connectEdges(sortedEvents, operation);\n  //console.timeEnd('connect vertices');\n  return result;\n}\n","import Tree                 from 'splaytree';\nimport computeFields        from './compute_fields';\nimport possibleIntersection from './possible_intersection';\nimport compareSegments      from './compare_segments';\nimport {\n  INTERSECTION,\n  DIFFERENCE\n} from './operation';\n\n\nexport default function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n  const sweepLine = new Tree(compareSegments);\n  const sortedEvents = [];\n\n  const rightbound = Math.min(sbbox[2], cbbox[2]);\n\n  let prev, next, begin;\n\n  while (eventQueue.length !== 0) {\n    let event = eventQueue.pop();\n    sortedEvents.push(event);\n\n    // optimization by bboxes for intersection and difference goes here\n    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n      break;\n    }\n\n    if (event.left) {\n      next  = prev = sweepLine.insert(event);\n      begin = sweepLine.minNode();\n\n      if (prev !== begin) prev = sweepLine.prev(prev);\n      else                prev = null;\n\n      next = sweepLine.next(next);\n\n      const prevEvent = prev ? prev.key : null;\n      let prevprevEvent;\n      computeFields(event, prevEvent, operation);\n      if (next) {\n        if (possibleIntersection(event, next.key, eventQueue) === 2) {\n          computeFields(event, prevEvent, operation);\n          computeFields(event, next.key, operation);\n        }\n      }\n\n      if (prev) {\n        if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n          let prevprev = prev;\n          if (prevprev !== begin) prevprev = sweepLine.prev(prevprev);\n          else                    prevprev = null;\n\n          prevprevEvent = prevprev ? prevprev.key : null;\n          computeFields(prevEvent, prevprevEvent, operation);\n          computeFields(event,     prevEvent,     operation);\n        }\n      }\n    } else {\n      event = event.otherEvent;\n      next = prev = sweepLine.find(event);\n\n      if (prev && next) {\n\n        if (prev !== begin) prev = sweepLine.prev(prev);\n        else                prev = null;\n\n        next = sweepLine.next(next);\n        sweepLine.remove(event);\n\n        if (next && prev) {\n          possibleIntersection(prev.key, next.key, eventQueue);\n        }\n      }\n    }\n  }\n  return sortedEvents;\n}\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","import { GeoJSONReader, GeoJSONWriter, UnionOp } from 'turf-jsts';\n\n/**\n * Takes two or more {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {...Feature<Polygon>} A polygon to combine\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union() {\n    var reader = new GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n\n    for (var i = 1; i < arguments.length; i++) {\n        result = UnionOp.union(result, reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n\n    var writer = new GeoJSONWriter();\n    result = writer.write(result);\n\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n}\n\nexport default union;\n","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\nexport default truncate;\n","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n","import { feature } from '@turf/helpers';\nimport { getCoords, getType } from '@turf/invariant';\n\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    // Backwards compatible with v4.0\n    var mutate = (typeof options === 'object') ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n\n    switch (type) {\n    case 'LineString':\n        newCoords = cleanLine(geojson);\n        break;\n    case 'MultiLineString':\n    case 'Polygon':\n        getCoords(geojson).forEach(function (line) {\n            newCoords.push(cleanLine(line));\n        });\n        break;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (polygons) {\n            var polyPoints = [];\n            polygons.forEach(function (ring) {\n                polyPoints.push(cleanLine(ring));\n            });\n            newCoords.push(polyPoints);\n        });\n        break;\n    case 'Point':\n        return geojson;\n    case 'MultiPoint':\n        var existing = {};\n        getCoords(geojson).forEach(function (coord) {\n            var key = coord.join('-');\n            if (!existing.hasOwnProperty(key)) {\n                newCoords.push(coord);\n                existing[key] = true;\n            }\n        });\n        break;\n    default:\n        throw new Error(type + ' geometry not supported');\n    }\n\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return {type: type, coordinates: newCoords};\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({type: type, coordinates: newCoords}, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\n\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1])) return points;\n\n    var prevPoint, point, nextPoint;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points[i - 1];\n        point = points[i];\n        nextPoint = points[i + 1];\n\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point)) {\n            newPoints.push(point);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n\n    if (cross !== 0) return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\nexport default cleanCoords;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport truncate from '@turf/truncate';\nimport { getGeom } from '@turf/invariant';\nimport { feature } from '@turf/helpers';\nimport cleanCoords from '@turf/clean-coords';\n\n// depend on jsts for now http://bjornharrtell.github.io/jsts/\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {Feature|null} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2) {\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n\n    // Return null if geometry is too narrow in coordinate precision\n    // fixes topology errors with JSTS\n    // https://github.com/Turfjs/turf/issues/463\n    // https://github.com/Turfjs/turf/pull/1004\n    if (cleanCoords(truncate(geom2, {precision: 4})).coordinates[0].length < 4) return null;\n    if (cleanCoords(truncate(geom1, {precision: 4})).coordinates[0].length < 4) return null;\n\n    var reader = new GeoJSONReader();\n    var a = reader.read(truncate(geom1));\n    var b = reader.read(truncate(geom2));\n    var intersection = OverlayOp.intersection(a, b);\n\n    // https://github.com/Turfjs/turf/issues/951\n    if (intersection.isEmpty()) return null;\n\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(intersection);\n    return feature(geom);\n}\n\nexport default intersect;\n","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport area from '@turf/area';\nimport { feature } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = getGeom(polygon1);\n    var geom2 = getGeom(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return feature(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new GeoJSONReader();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = OverlayOp.difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(differenced);\n\n    return feature(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (area(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        flattenEach(geom, function (feature$$1) {\n            if (area(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\nexport default difference;\n","<template>\n  <div id=\"app\">\n    <div id=\"map\">\n      <div class=\"control leaflet-bar\">\n        <h4>Input Data</h4>\n        <select v-on:change=\"setInput\">\n          <option>Asia</option>\n          <option>Almost Parallel Segments</option>\n          <option>Saw & Cheese</option>\n        </select>\n        <br><br>\n        <div v-for=\"operation in operations\">\n          <input type=\"radio\" name=\"some\" :value=\"operation\" v-on:change=\"setOperation\" v-model=\"selectedOperation\"> {{operation}}\n        </div>\n\n        <h4>Performance</h4>\n        <p>\n          polygon-clipping {{performance}} m/s<br>\n          martinez {{martinezPerf}} m/s<br>\n          jsts {{jstsPerf}} m/s<br>\n        </p>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport pc from '../..'\n\n// the martinez packaging is somewhat broken\nimport martinezBool from 'martinez-polygon-clipping'\nvar martinezUnion = (p1, p2) => martinezBool(p1, p2, 1)\nvar martinezIntersection = (p1, p2) => martinezBool(p1, p2, 0)\nvar martinezDifference = (p1, p2) => martinezBool(p1, p2, 2)\nvar martinezXor = (p1, p2) => martinezBool(p1, p2, 3)\n\n// turf v5 runs off of jsts under the hood\nimport jstsUnion from '@turf/union'\nimport jstsIntersection from '@turf/intersect'\nimport jstsDifference from '@turf/difference'\nvar jstsXor = null\n\nvar operation = pc.intersection\nvar martinezOp = martinezUnion\nvar jstsOp = jstsUnion\nvar inData = null\nvar inLayer = null\nvar outLayer = null\nvar map = null\n\nimport asia from '../geojson/asia-with-poly.json'\nimport parallel from '../geojson/parallel.json'\nimport cheese from '../geojson/cheese.json'\n\nexport default {\n  name: 'app',\n  data () {\n    return {\n      operations: ['Intersection', 'Union', 'Difference', 'XOR'],\n      selectedOperation: 'Intersection',\n      performance: '',\n      martinezPerf: '',\n      jstsPerf: ''\n    }\n  },\n  methods: {\n    setInput (e) {\n      inLayer.clearLayers()\n      outLayer.clearLayers()\n      if (e.target.value === 'Asia') inData = asia\n      if (e.target.value === 'Almost Parallel Segments') inData = parallel\n      if (e.target.value === 'Saw & Cheese') inData = cheese\n      inLayer.addData(inData)\n      map.fitBounds(inLayer.getBounds(), {\n        padding: [20, 20]\n      })\n      this.runOperation()\n    },\n    setOperation (e) {\n      this.selectedOperation = e.target.value\n      outLayer.clearLayers()\n\n      if (this.selectedOperation === 'Union') {\n        operation = pc.union\n        martinezOp = martinezUnion\n        jstsOp = jstsUnion\n      }\n      if (this.selectedOperation === 'Intersection') {\n        operation = pc.intersection\n        martinezOp = martinezIntersection\n        jstsOp = jstsIntersection\n      }\n      if (this.selectedOperation === 'XOR') {\n        operation = pc.xor\n        martinezOp = martinezXor\n        jstsOp = jstsXor\n      }\n      if (this.selectedOperation === 'Difference') {\n        operation = pc.difference\n        martinezOp = martinezDifference\n        jstsOp = jstsDifference\n      }\n\n      this.runOperation()\n    },\n    runOperation () {\n      var t0 = performance.now()\n      var outData = operation(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.performance = (performance.now() - t0).toFixed(2)\n\n      outLayer.addData({\n        'type': 'MultiPolygon',\n        'coordinates': outData\n      }).addTo(map)\n\n      var m0 = performance.now()\n      martinezOp(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.martinezPerf = (performance.now() - m0).toFixed(2)\n\n      if (jstsOp !== null) {\n        var j0 = performance.now()\n        jstsOp(inData.features[0], inData.features[1])\n        this.jstsPerf = (performance.now() - j0).toFixed(2)\n      } else {\n        this.jstsPerf = 'N/A'\n      }\n    }\n  },\n  mounted () {\n    inData = asia\n    map = window.map = L.map('map', {\n      minZoom: 1,\n      maxZoom: 20,\n      center: [0, 0],\n      zoom: 2,\n      crs: L.CRS.Simple\n    })\n\n    inLayer = L.geoJson(asia).addTo(map)\n\n    map.fitBounds(inLayer.getBounds(), {\n      padding: [20, 20]\n    })\n    outLayer = L.geoJson({\n      type: 'FeatureCollection',\n      features: []\n    }, {\n      color: 'red'\n    }).addTo(map)\n\n    this.runOperation()\n  }\n}\n</script>\n\n<style>\n    html, body, #app, #map {\n      width: 100%;\n      height: 100%;\n      margin: 0px;\n    }\n\n  .control {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background: white;\n    padding: 10px;\n    z-index: 10000;\n  }\n\n  h4{\n    margin-bottom: 5px\n  }\n  p{\n    margin-top: 5px;\n  }\n</style>\n","import Vue from 'vue'\nimport App from './App.vue'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n"],"names":["Node","key","data","left","right","DEFAULT_COMPARE","a","b","splay","i","t","comparator","l","r","y","N","cmp","insert","tree","node","_size","remove","x","split","v","Tree","_comparator","_root","this","add","current","compare","visitor","ctx","Q","done","push","length","pop","call","low","high","fn","keys","forEach","values","minNode","maxNode","index","d","root","successor","predecessor","head","next","p","toList","presort","size","sort","pivot","j","tmp","loadRecursive","parent","start","end","middle","Math","floor","mergedList","l1","l2","p1","p2","mergeLists","createList","sortedListToBST","list","printNode","n","out","printRow","prefix","isTail","indent","join","newKey","newData","merge","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype","epsilon","Number","EPSILON","undefined","pow","EPSILON_SQ","touch","m","touchPoints","aPt","bPt","mx","my","aYMiss","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","v1","v2","kross","sqrt","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","closestPoint","ptA1","ptA2","ptB","nearPt","farPt","vA","vB","dist","horizontalIntersection","pt","verticalIntersection","PtRounder","reset","value","xRounder","CoordRounder","yRounder","round","SplayTree","coord","prevNode","prev","nextNode","rounder","pointsAsObjects","geom","output","Array","isArray","Error","iMax","jMax","k","kMax","forceMultiPoly","unshift","splice","cleanMultiPoly","multipoly","poly","exteriorRing","cleanRing","interiorRing","ring","firstPt","lastPt","prevPt","nextPt","isPointUncessary","SweepEvent","point","isLeft","events","ptCmp","comparePoints","link","Segment","segment","other","otherEvents","evt","checkForConsuming","numEvents","evt1","consumedBy","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","set","sine","cosine","has","_cache$get","get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","leftSE","rightSE","ringsIn","id","_cache","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","newRightSE","y1","y2","ll","ur","isAnEndpoint","interPt","bbox","touchesBbox","cPt1","avgPt1","bboxOverlap","b1","b2","lowerX","upperX","getBboxOverlap","touchesOtherLSE","touches","touchesThisLSE","touchesOtherRSE","touchesThisRSE","pt1","pt2","ve","d1","d2","intersection","vector","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","slice","consumer","consumee","cmp$$1","_tmp","concat","prevInResult","ringsAfter","rings","ringsBefore","indexOf","multiPolysAfter","polysAfter","polysExclude","isExterior","mps","_i","_iMax","mp","multiPoly","mpsBefore","multiPolysBefore","mpsAfter","operation","type","least","most","numMultiPolys","abs","isJustSubject","isSubject","leftPt","rightPt","cmpPts","RingIn","geomRing","segments","prevPoint","fromRing","sweepEvents","PolyIn","geomPoly","interiorRings","getSweepEvents","ringSweepEvents","MultiPolyIn","geomMultiPoly","polys","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","indexLE","getLeftmostComparator","intersectionLE","ringEvents","reverse","points","_pt","_nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","getGeom","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","arguments","find","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","cmpSplitters","_newEventsFromSplit2","_i2","_iMax2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","seg","Operation","moreGeoms","geoms","multipolys","markAsSubject","sweepLine","prevQueueSize","process","_evt","factory","_len","_key","run","_len2","_key2","_len3","_key3","subjectGeom","_len4","clippingGeoms","_key4","noDuplicates","_compare","_noDuplicates","rotateRight","rotateLeft","gp","ggp","u","z","comp","replace","s","sMax","returnValue","callback","load","NORMAL","NON_CONTRIBUTING","SAME_TRANSITION","DIFFERENT_TRANSITION","INTERSECTION","UNION","DIFFERENCE","XOR","computeFields","inOut","otherInOut","isVertical","inResult","otherEvent","edgeType","resultInOut","p0","isBelow","copy","equals","signedArea","compareEvents","e1","e2","specialCases","divideSegment","se","console","warn","contourId","possibleIntersection","se1","se2","a1","a2","noEndpointTouch","va","vb","toPoint","e","sqrKross","sqrLenA","sa","sb","smin","min","smax","max","nintersections","leftCoincide","rightCoincide","compareSegments","le1","le2","isAbove","nextPos","pos","resultEvents","processed","origIndex","newPos","connectEdges","sortedEvents","len","sorted","orderEvents","result","contour","ringId","initial","TinyQueue","defaultCompare","_down","item","_up","top","peek","halfLength","best","processPolygon","contourOrHole","depth","s1","s2","EMPTY","boolean","subject","clipping","trivial","trivialOperation","sbbox","Infinity","cbbox","eventQueue","polygonSet","ii","jj","Queue","fillQueue","compareBBoxes","begin","rightbound","prevprev","subdivideSegments","arrayLike","relativeStart","parseInt","relativeEnd","isFinite","isInteger","val","parseFloat","isNaN","trunc","ceil","NumberUtil","interfaces_","getClass","equalsWithTolerance","x1","x2","tolerance","IllegalArgumentException","message","name","stack","__proto__","create","constructor","Double","staticAccessors$1","MAX_VALUE","doubleToLongBits","longBitsToDouble","isInfinite","defineProperties","Comparable","Clonable","Comparator","Serializable","Coordinate","NULL_ORDINATE","c","staticAccessors","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","ordinateIndex","equals2D","getOrdinate","equals3D","equalInZ","compareTo","o","clone","toString","distance3D","dx","dy","dz","distance","hashCode","setCoordinate","f","NaN","dimensionsToTest","_dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","CoordinateSequenceFactory","Location","staticAccessors$4","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","locationValue","hasInterface","MathUtil","staticAccessors$5","LOG_10","log10","ln","log","v3","v4","clamp","x$1","min$1","max$1","wrap","v1$1","v2$1","v3$1","average","StringBuffer","str","append","setCharAt","substr","Integer","intValue","Character","isWhitespace","toUpperCase","DD","_hi","_lo","init","dd","parse","hi","lo","staticAccessors$7","PI","TWO_PI","PI_2","E","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","scale","divide","gt","lt","multiply","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","y$1","isZero","selfSubtract","getSpecialNumberString","selfDivide","tc","ty","C","U","yhi","ylo","hc","hy","dump","createNaN","ge","exp","selfMultiply","reciprocal","fhi","flo","rint","setValue","value$1","isNegative","ax","axdd","H","h","S","H$1","T","S$1","f$1","s$1","e$1","zhi","zlo","tx","hx","selfSqr","toStandardNotation","toSciNotation","specialStr","fill","sigDigits","num","charAt","stringOfChar","numZeroes","digits","expStr","trailingDigits","substring","digitsWithDecimal","isPositive","signum","strlen","signCh","numBeforeDec","ch","isDigit","ex","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","CGAlgorithmsDD","staticAccessors$6","DP_SAFE_EPSILON","orientationIndex","q","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","q1","q2","denom1","denom2","denom","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","det","errbound","CoordinateSequence","staticAccessors$8","M","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","env","getY","toCoordinateArray","Exception","NotRepresentableException","Exception$$1","System","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","HCoordinate","w","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","px","py","pw","qx","qy","qw","xInt","yInt","Envelope","_minx","_maxx","_miny","_maxy","staticAccessors$9","getArea","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","expandToInclude","minExtent","translate","transX","transY","setToNull","maxExtent","expandBy","deltaX","deltaY","contains","centre","minq","maxq","minp","maxp","regExes","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","WKTParser","geometryFactory","GeometryFactory","read","wkt","geometry","matches","exec","search","toLowerCase","parse$1","apply","write","extractGeometry","getGeometryType","extract$1","wktType","isEmpty","coordinate","coordinate$1","point$1","_coordinates","multipoint","multipoint$1","array","_geometries","linestring","linestring$1","_points","linearring","linearring$1","multilinestring","multilinestring$1","polygon","polygon$1","_shell","_holes","multipolygon","multipolygon$1","geometrycollection","collection","createPoint","coords","trim","createMultiPoint","components","createLineString","createLinearRing","line","createMultiLineString","lines","createPolygon","shell","holes","createMultiPolygon","polygons","createGeometryCollection","wktArray","WKTWriter","parser","toLineString","RuntimeException","AssertionFailedException","RuntimeException$$1","Assert","shouldNeverReachHere","isTrue","assertion","expectedValue","actualValue","LineIntersector","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","staticAccessors$10","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","catBuf","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","precisionModel","isInteriorIntersection","inputLineIndex","computeEdgeDistance","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","pdx","pdy","nonRobustComputeEdgeDistance","RobustLineIntersector","LineIntersector$$1","isInSegmentEnvelopes","intPt","env0","env1","CGAlgorithms","normalizeToMinimum","n1","n2","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","x3","x4","xabs","checkDD","intPtDD","isIn","println","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","nearestPt","minDist","distancePointLine","RobustDeterminant","sign","swap","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","countSegment","minx","maxx","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","sum","x0","x0$1","sum$1","distanceLineLine","A","B","D","noIntersection","rNumb","isPointInRing","computeLength","pts","y0","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","minDistance","isOnLine","lineIntersector","GeometryComponentFilter","filter","Geometry","_envelope","_factory","_SRID","_userData","getSRID","staticAccessors$11","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","isGeometryCollection","getSortIndex","getFactory","getGeometryN","isRectangle","g$1","equalsTopo","g","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","other$1","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","SRID","setUserData","userData","iterator","hasNext","aElement","bElement","comparison","isGeometryCollectionOrDerived","hasNonEmptyElements","geometries","hasNullElements","CoordinateFilter","BoundaryNodeRule","staticAccessors$12","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","boundaryCount","Collection","IndexOutOfBoundsException","addAll","toArray","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","array_","ensureCapacity","clear","element","oldElement","Iterator_","found","Iterator$$1","arrayList","arrayList_","position_","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coordArrayType","coll","isChanged","coord$2","obj","allowRepeated$2","coord$3","allowRepeated$3","i$2","i$3","coord$4","coord$5","allowRepeated$5","inc","closeRing","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","isRing","ptNotInList","testPts","testPt","scroll","coordinates","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","last","mid","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","Map$1","put","entrySet","SortedMap","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","hashSet_","BLACK","colorOf","color","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","getValue","getKey","oldValue","fixAfterInsertion","getFirstEntry","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","treeSet_","Arrays","asList","Dimension","staticAccessors$14","P","L","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","dimensionValue","toDimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","isDone","isGeometryChanged","GeometryCollection","Geometry$$1","getCoordinates","getNumPoints","childCoordinates","area","isEquivalentClass","otherCollection","getBoundaryDimension","dimension","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","getBoundary","MultiLineString","GeometryCollection$$1","isClosed","nLines","revLines","BoundaryOp","lineStrings","_geom","_geomFact","_bnRule","_endpointMap","bnRule","geom$1","bnRule$1","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createMultiPointFromCoords","LineString","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","valence","count","Counter","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","NEWLINE","SIMPLE_ORDINATE_FORMAT","chars","String","getStackTrace","os","ps","printStackTrace","t$1","stackTrace","lineNumberReader","readLine","separator","separatorlen","tokenList","tmpString","token","res","format","CoordinateSequences","copyCoord","minDim","dim","isEqual","cs1","cs2","cs1Size","extend","fact","newseq","cs","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","line$1","ls","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Puntal","Point","Polygonal","Polygon","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","convexHull","getExteriorRing","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","MultiPoint","isValid","LinearRing","LineString$$1","validateConstruction","MINIMUM_VALID_SIZE","MultiPolygon","allRings","allRingsArray","GeometryEditor","_isUserDataCopied","staticAccessors$16","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","isUserDataCopied","edit","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","hole","GeometryEditorOperation","editCoordinates","CoordinateArraySequence","_dimension","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","instanceObject","readResolve","HashMap","MapInterface","map_","entries","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","staticAccessors$19","maximumPreciseValue","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","getType","description","maxSigDigits","mostPrecise","pm1","pm2","_name","nameToTypeMap","staticAccessors$1$1","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","staticAccessors$2","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","coordinates$1","shell$1","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","geometryTypes","GeoJSONParser","json","JSON","Feature","feature","FeatureCollection","featureCollection","features","sub","linearRing","geoJson","shellGeoJson","holeGeoJson","GeoJSONReader","reducePrecision","GeoJSONWriter","Position","staticAccessors$20","ON","EmptyStackException","Stack","opposite","position","empty","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","de","side","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","pPrev","pNext","orientation","usePrev","findRightmostEdgeAtNode","star","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","dirEdgeList","TopologyException","msg","msgWithCoord","LinkedList","addLast","removeFirst","BufferSubgraph","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","startEdge","isVisited","computeDepths","de$1","copySymDepths","computeDepth","outsideDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","nodeStack","setDepth","symNode","getNodes","getDirectedEdges","TopologyLocation","location","on","gl","on$1","setAllLocations","locValue","setAllLocationsIfNull","isLine","newLoc","getLocations","flip","temp","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","locValue$1","isEqualOnSide","allPositionsEqual","loc","Label","elt","onLoc","lbl","geomIndex","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","getGeometryCount","location$1","toLine","toLineLabel","label","lineLabel","EdgeRing","_startDe","_maxNodeDegree","_edges","_pts","_label","_ring","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","isFirstEdge","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","degree","getOutgoingDegree","edge","edgePts","startIndex","startIndex$1","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","deLabel","deLabel$1","setShell","toPolygon","holeLR","MinimalEdgeRing","EdgeRing$$1","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","im","computeIM","GraphComponent$$1","_coord","edges","isIncidentEdgeInResult","print","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","setNode","setLabelBoundary","NodeMap","nodeMap","nodeFact","addNode","createNode","node$1","getBoundaryNodes","bdyNodes","Quadrant","staticAccessors$21","NE","NW","SW","SE","isNorthern","quad","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","quadrant","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","edge$1","edge$2","p0$1","label$1","compareDirection","getDy","angle","atan2","className","lastDotPos","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","depthVal","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","printEdge","printReverse","setSym","setVisitedEdge","directionFactor","oppositePos","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","NodeFactory","PlanarGraph","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de1","de2","nodes","PolygonBuilder","_shellList","sortShellsAndHoles","edgeRings","shellList","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","getBounds","ItemBoundable","_bounds","_item","bounds","getItem","PriorityQueue","_items","poll","minItem","reorder","child","ItemVisitor","visitItem","SpatialIndex","itemEnv","query","AbstractNode","_childBoundables","_level","level","staticAccessors$22","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","bp","getDistance","getBoundable","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity$1","staticAccessors$23","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","level$1","boundables$1","boundable","searchBounds","getIntersectsOp","searchBounds$1","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","createHigherLevels","getRoot","item$1","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","nearestNeighbour","itemDist","initBndPair","POSITIVE_INFINITY","itemDist$1","bp$1","initBndPair$1","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","centreX","avg","centreY","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","maxSegmentIndex","isInterior","SegmentNodeList","_nodeMap","getSplitCoordinates","addEndpoints","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","edgeList","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","NodedSegmentString","getData","eiNew","getSegmentOctant","checkSplitEdgesCorrectness","splitEdges","pt0","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","setData","NodableSegmentString","addIntersection","_nodeList","_data","safeOctant","intPt$1","addIntersectionNode","li","segmentIndex$1","getNodeList","normalizedSegmentIndex","nextSegIndex","addIntersections","getNodedSubstrings","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","LineSegment","staticAccessors$24","minX","orient0","orient1","geomFactory","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","minY","midPoint","closestPoints","closestPt","close00","close01","close10","close11","factor","maxX","comp0","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","pointAlong","bits0","hash0","bits1","MonotoneChainOverlapAction","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","overlap","mc1","start1","mc2","start2","getLineSegment","MonotoneChain","_start","_end","_context","_id","context","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","getChainStartIndices","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","pts$1","mcList","Noder","computeNodes","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","SinglePassNoder$$1","si","_monoChains","_index","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","segStr","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","MonotoneChainOverlapAction$$1","_si","ss1","ss2","processIntersections","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","quadrantSegments$1","endCapStyle","setEndCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","staticAccessors$25","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","quadSegs","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","alpha","cos","BufferInputLineSimplifier","inputLine","_distanceTol","_isDeleted","_angleOrientation","_inputLine","staticAccessors$26","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","i0","distanceTol","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","simplify","collapseLine","OffsetSegmentString","_ptList","_minimimVertexDistance","staticAccessors$28","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","revere","addPts","startPt","setMinimumVertexDistance","minimimVertexDistance","Angle","staticAccessors$29","PI_TIMES_2","PI_OVER_2","PI_OVER_4","toDegrees","radians","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","diff","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","staticAccessors$27","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","direction","radius","startAngle","endAngle","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","offset","sideSign","totalAngle","nSegs","currAngleInc","currAngle","createCircle","hasNarrowConcaveAngle","OffsetCurveBuilder","getOffsetCurve","inputPts","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","SubgraphDepthLocater","_subgraphs","_seg","_cga","subgraphs","staticAccessors$30","DepthSegment","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","dirEdge","stabbedSegments$1","ds","stabbingRayLeftPt$2","stabbedSegments$2","_leftDepth","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","Triangle","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","numx","numy","perpendicularBisector","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","_inputGeom","_curveBuilder","_curveList","inputGeom","curveBuilder","addPoint","curve","addCurve","addPolygon","offsetSide","shellCoord","isErodedCompletely","addPolygonRing","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","addLineString","getCurves","cwLeftLoc","cwRightLoc","addCollection","ringCoord","envMinDimension","PointOnGeometryLocator","locate","GeometryCollectionIterator","_parent","_atStart","_max","_subcollectionIterator","isAtomic","SimplePointInAreaLocator","containsPointInPolygon","geomi","g2","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","it$1","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","geomi$1","getDegree","insertEdgeEnd","DirectedEdgeStar","EdgeEndStar$$1","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","de0","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","mergeSymLabels","degree$1","findCoveredLineEdges","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","_orientation","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","_ocaMap","edgeColl","findEdgeIndex","findEqualEdge","SegmentIntersector","e0","segIndex0","segIndex1","IntersectionAdder","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","EdgeIntersection","getSegmentIndex","EdgeIntersectionList","Edge","MonotoneChainIndexer","MonotoneChainEdge","env2","mcb","chainIndex","computeIntersectsForChain","chainIndex0","mce","chainIndex1","mce$1","getStartIndexes","computeIntersects","Depth","NULL_VALUE","staticAccessors$31","depthValue","minDepth","newValue","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","newPts","setIsolated","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","BufferBuilder","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","mergeDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","processedGraphs","subgraph","createSubgraphs","createEmptyResultGeometry","getNoder","noder","buffer","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","ss","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","scaleFactor","isIntegerPrecision","noder$1","scaleFactor$1","offsetX","offsetY","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","NodingValidator","_segStrings","staticAccessors$33","checkEndPtVertexIntersections","checkInteriorIntersections","ss0","ss0$1","ss1$1","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","staticAccessors$34","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","staticAccessors$35","HotPixelSnapAction","snap","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","isNodeAdded","MonotoneChainSelectAction$$1","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","snapRound","intersections","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","BufferOp","_argGeom","_resultGeometry","_saveException","staticAccessors$32","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","getResultGeometry","bufferOp","distance$1","bufOp","g$2","distance$2","params","g$3","distance$3","bufOp$2","maxPrecisionDigits","bufEnvMax","minUnitLog10","PointPairDistance","_isNull","setMinimum","ptDist","initialize","setMaximum","DistanceToPointFinder","computeDistance","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","_maxPtDist","staticAccessors$36","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","distFilter","getMaxPointDistance","computeMaxVertexDistance","findDistance","bufferCurve","getDistancePoints","_minPtDist","midPt","PolygonExtracter","comps","_comps","LinearComponentExtracter","_lines","_isForcedToLineString","lines$1","isForcedToLineString","setForceToLineString","getLines","forceToLineString","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","locateInternal","shellLoc","locateInPolygonRing","holeLoc","p$2","updateLocationInfo","computeLocation","ml","mpoly","GeometryLocation","_component","_segIndex","component","INSIDE_AREA","component$1","staticAccessors$38","isInsideArea","getGeometryComponent","PointExtracter","getPoints","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","g0","g1","g0$1","g1$1","terminateDistance","computeContainmentDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","isWithinDistance","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","_g0","_g1","_ptDist","_densifyFrac","staticAccessors$39","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","densifyFrac","compute","computeOrientedDistance","discreteGeom","MaxPointDistanceFilter$1","fracFilter","orientedDistance","_euclideanDist","_numSubSegs","fraction","delx","dely","BufferDistanceValidator","input","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","staticAccessors$37","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","bufCurve","maxDist","haus","distDelta","checkPositiveValid","checkNegativeValid","inputCurve","getPolygonLines","checkMinimumDistance","getErrorIndicator","distOp","getErrorLocation","lineExtracter","getErrorMessage","BufferResultValidator","_errorMsg","staticAccessors$40","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","padding","expectedEnv","bufEnv","report","distValid","inputArea","resultArea","checkName","isValidMsg","validator","BasicSegmentString","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","findAllIntersections","setKeepIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","createAnyIntersectionFinder","createIntersectionCounter","FastNodingValidator","execute","intSegs","computeIntersections","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","mapOp","_mapOp","mapped","op","LineBuilder","_op","_lineEdgesList","_resultLineList","ptLocator","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","buildLines","OverlayOp","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","PointBuilder","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","snapTolerance$1","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","_srcGeom","staticAccessors$41","SNAP_PRECISION_FACTOR","snapGeom","extractTargetCoordinates","SnapTransformer","snapToSelf","cleanResult","snappedGeom","computeSnapTolerance","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","GeometryTransformer$$1","isSelfSnap","_snapPts","_isSelfSnap","snapLine","snapper","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","padStr","toBinaryString","bitStr","getBit","nBits","num1","num2","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","staticAccessors$42","Translater","addCommonBits","trans","removeCommonBits","invCoord","getCommonCoordinate","_commonBitsX","_commonBitsY","xp","yp","SnapOverlayOp","_cbr","selfSnap","remGeom","prepareResult","prepGeom","overlayOp","union","symDifference","SYMDIFFERENCE","difference","SnapIfNeededOverlayOp","isSuccess","savedException","MonotoneChain$2","SweepLineEvent","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","INSERT","staticAccessors$43","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","EdgeSetIntersector","SegmentIntersector$2","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","setIsDoneIfProperInt","isDoneWhenProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","nOverlaps","prepareEvents","processOverlaps","edges0","edges1","si$1","si$2","addEdge","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","_min","NEGATIVE_INFINITY","staticAccessors$45","NodeComparator","getMin","queryMin","queryMax","getMax","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","buildTree","buildLevel","buildRoot","ArrayListVisitor","getItems","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","SegmentVisitor","rcc","_counter","addLine","GeometryGraph","PlanarGraph$$1","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","_resultPrecisionModel","_arg","setComputationPrecision","g0$2","GeometryMapper","MapOp","op$1","mapped$1","gr","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","geom1","resultDimension","dim0","dim1","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","_g","_boundaryDistanceTolerance","_linework","boundaryDistanceTolerance","extractLinework","isWithinToleranceOfBoundary","extracter","PolygonalLineworkExtracter","linework","getLinework","OffsetPointGenerator","_doLeft","_doRight","extractPoints","offsetPts","computeOffsetPoints","setSidesToGenerate","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","staticAccessors$46","reportResult","expectedInterior","addTestPts","overlayOp$1","hasLocation","isValidResult","ptGen","getInvalidLocation","GeometryCombiner","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","elems","elemGeom","combine","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","_inputPolys","staticAccessors$47","STRTREE_NODE_CAPACITY","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","unionOptimized","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","UnionOp","reader","stringify","properties","options","isObject","isNumber","validateBBox","validateId","feat","geomEach","geojson","stopG","geometryMaybeCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","truncate","precision","mutate","coordEach","excludeWrapCoord","wrapShrink","coordIndex","multiFeatureIndex","geometryIndex","geomType","truncateCoords","getCoords","cleanCoords","_typeof","newCoords","cleanLine","polyPoints","existing","hasOwnProperty","nextPoint","newPoints","secondToLast","isPointOnLineSegment","startX","startY","endX","endY","dxl","dyl","intersect","poly1","poly2","geom2","initialValue","previousValue","currentGeometry","geomReduce","calculateArea","polygonArea","RADIUS","ringArea","lowerIndex","middleIndex","upperIndex","coordsLength","rad","_","polygon1","polygon2","removeEmptyPolygon","differenced","feature$$1","script","Vue","el","render","App"],"mappings":"6mBAqCMA,EAEJ,WAAaC,EAAKC,kBACXD,IAASA,OACTC,KAASA,OACTC,KAAS,UACTC,MAAS,MAIlB,SAASC,EAAiBC,EAAGC,UAAYD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,EASlE,SAASC,EAAOC,EAAGC,EAAGC,MACV,OAAND,EAAY,OAAOA,MACnBE,EAAGC,EAAGC,EACJC,EAAI,IAAIf,MACdY,EAAIC,EAAIE,IAEK,KACLC,EAAML,EAAWF,EAAGC,EAAET,QAExBe,EAAM,EAAG,IACI,OAAXN,EAAEP,KAAe,SAEjBQ,EAAWF,EAAGC,EAAEP,KAAKF,KAAO,IAC9Ba,EAAIJ,EAAEP,KACNO,EAAEP,KAAOW,EAAEV,MACXU,EAAEV,MAAQM,EAEK,QADfA,EAAII,GACEX,MAAe,MAEvBU,EAAEV,KAAOO,EACTG,EAAIH,EACJA,EAAIA,EAAEP,SAED,CAAA,KAAIa,EAAM,YACC,OAAZN,EAAEN,MAAgB,SAElBO,EAAWF,EAAGC,EAAEN,MAAMH,KAAO,IAC/Ba,EAAIJ,EAAEN,MACNM,EAAEN,MAAQU,EAAEX,KACZW,EAAEX,KAAOO,EAEO,QADhBA,EAAII,GACEV,OAAgB,MAExBQ,EAAER,MAAQM,EACVE,EAAIF,EACJA,EAAIA,EAAEN,cAMVQ,EAAER,MAAQM,EAAEP,KACZU,EAAEV,KAAOO,EAAEN,MACXM,EAAEP,KAAOY,EAAEX,MACXM,EAAEN,MAAQW,EAAEZ,KACLO,EAWT,SAASO,EAAQR,EAAGP,EAAMQ,EAAGC,EAAYO,OACjCC,EAAO,IAAInB,EAAKS,EAAGP,MAEzBgB,EAAKE,QAEK,OAANV,SACFS,EAAKhB,KAAOgB,EAAKf,MAAQ,KAClBe,MAIHH,EAAML,EAAWF,GADvBC,EAAIF,EAAMC,EAAGC,EAAGC,IACYV,YACxBe,EAAM,GACRG,EAAKhB,KAAOO,EAAEP,KACdgB,EAAKf,MAAQM,EACbA,EAAEP,KAAO,MACAa,GAAO,IAChBG,EAAKf,MAAQM,EAAEN,MACfe,EAAKhB,KAAOO,EACZA,EAAEN,MAAQ,MAELe,EAgDT,SAASE,EAAQZ,EAAGC,EAAGC,EAAYO,OAC7BI,SACM,OAANZ,EAAmB,KAGX,IADFC,EAAWF,GADrBC,EAAIF,EAAMC,EAAGC,EAAGC,IACUV,MAET,OAAXS,EAAEP,KACJmB,EAAIZ,EAAEN,OAENkB,EAAId,EAAMC,EAAGC,EAAEP,KAAMQ,IACnBP,MAAQM,EAAEN,MAEdc,EAAKE,QACEE,GAEFZ,EAIT,SAASa,EAAOtB,EAAKuB,EAAGb,OAClBR,EAAMC,KACA,OAANoB,EACFrB,EAAOC,EAAQ,SACV,KAGCY,EAAML,GAFZa,EAAIhB,EAAMP,EAAKuB,EAAGb,IAEOV,IAAKA,GAClB,IAARe,GACFb,EAAQqB,EAAErB,KACVC,EAAQoB,EAAEpB,OACDY,EAAM,GACfZ,EAAUoB,EAAEpB,MACZoB,EAAEpB,MAAQ,KACVD,EAAUqB,IAEVrB,EAASqB,EAAErB,KACXqB,EAAErB,KAAO,KACTC,EAASoB,SAGN,CAAErB,KAAAA,EAAMC,MAAAA,OAgCIqB,8BAENd,yDAAaN,iBACnBqB,YAAcf,OACdgB,MAAQ,UACRP,MAAQ,2CAUPnB,EAAKC,UACJ0B,KAAKD,MAAQV,EAAOhB,EAAKC,EAAM0B,KAAKD,MAAOC,KAAKF,YAAaE,kCAUjE3B,EAAKC,UACD0B,KAAKD,MAvIhB,SAAclB,EAAGP,EAAMQ,EAAGC,EAAYO,OAC9BC,EAAO,IAAInB,EAAKS,EAAGP,MAEf,OAANQ,SACFS,EAAKhB,KAAOgB,EAAKf,MAAQ,KACzBc,EAAKE,QACED,MAIHH,EAAML,EAAWF,GADvBC,EAAIF,EAAMC,EAAGC,EAAGC,IACYV,YAChB,IAARe,EAAkBN,GAEhBM,EAAM,GACRG,EAAKhB,KAAOO,EAAEP,KACdgB,EAAKf,MAAQM,EACbA,EAAEP,KAAO,MACAa,EAAM,IACfG,EAAKf,MAAQM,EAAEN,MACfe,EAAKhB,KAAOO,EACZA,EAAEN,MAAQ,MAEZc,EAAKE,QACED,GAgHaU,CAAI5B,EAAKC,EAAM0B,KAAKD,MAAOC,KAAKF,YAAaE,qCAQ3D3B,QACD0B,MAAQN,EAAOpB,EAAK2B,KAAKD,MAAOC,KAAKF,YAAaE,wCASnDT,EAAOS,KAAKD,SACZR,EAAM,MACDA,EAAKhB,MAAMgB,EAAOA,EAAKhB,iBACzBwB,MAAQnB,EAAMW,EAAKlB,IAAM2B,KAAKD,MAAOC,KAAKF,kBAC1CC,MAAQN,EAAOF,EAAKlB,IAAK2B,KAAKD,MAAOC,KAAKF,YAAaE,MACrD,CAAE3B,IAAKkB,EAAKlB,IAAKC,KAAMiB,EAAKjB,aAE9B,wCAQGD,WACN6B,EAAYF,KAAKD,MACfI,EAAUH,KAAKF,YACdI,GAAS,KACRd,EAAMe,EAAQ9B,EAAK6B,EAAQ7B,QACrB,IAARe,EAAc,OAAOc,EACPA,EAATd,EAAM,EAAac,EAAQ3B,KACR2B,EAAQ1B,aAE/B,kCAQHH,UACA2B,KAAKD,aACFA,MAAQnB,EAAMP,EAAK2B,KAAKD,MAAOC,KAAKF,aACK,IAA1CE,KAAKF,YAAYzB,EAAK2B,KAAKD,MAAM1B,MAAmB,KAEnD2B,KAAKD,uCAQJ1B,WACJ6B,EAAYF,KAAKD,MACfI,EAAUH,KAAKF,YACdI,GAAS,KACRd,EAAMe,EAAQ9B,EAAK6B,EAAQ7B,QACrB,IAARe,EAAc,OAAO,EACPc,EAATd,EAAM,EAAac,EAAQ3B,KACR2B,EAAQ1B,aAE/B,kCASA4B,EAASC,WACZH,EAAUF,KAAKD,MACbO,EAAI,GACNC,GAAO,GAEHA,GACW,OAAbL,GACFI,EAAEE,KAAKN,GACPA,EAAUA,EAAQ3B,MAED,IAAb+B,EAAEG,QACJP,EAAUI,EAAEI,MACZN,EAAQO,KAAKN,EAAKH,GAElBA,EAAUA,EAAQ1B,OACb+B,GAAO,SAGXP,mCAYFY,EAAKC,EAAMC,EAAIT,WACdC,EAAI,GACJH,EAAUH,KAAKF,YACjBP,EAAOS,KAAKD,MAEI,IAAbO,EAAEG,QAAgBlB,MACnBA,EACFe,EAAEE,KAAKjB,GACPA,EAAOA,EAAKhB,SACP,IAEC4B,GADNZ,EAAOe,EAAEI,OACUrC,IAAKwC,GACd,QAEH,GAAIV,EAAQZ,EAAKlB,IAAKuC,IAAQ,GAC/BE,EAAGH,KAAKN,EAAKd,GAAO,OAAOS,KAEjCT,EAAOA,EAAKf,aAGTwB,wCASDe,EAAO,eACRC,QAAQ,gBAAG3C,IAAAA,WAAU0C,EAAKP,KAAKnC,KAC7B0C,uCASDE,EAAS,eACVD,QAAQ,gBAAG1C,IAAAA,YAAW2C,EAAOT,KAAKlC,KAChC2C,uCAQHjB,KAAKD,MAAcC,KAAKkB,QAAQlB,KAAKD,OAAO1B,IACzC,0CAQH2B,KAAKD,MAAcC,KAAKmB,QAAQnB,KAAKD,OAAO1B,IACzC,2CAODS,yDAAIkB,KAAKD,SACXjB,EAAG,KAAOA,EAAEP,MAAMO,EAAIA,EAAEP,YACrBO,wCAODA,yDAAIkB,KAAKD,SACXjB,EAAG,KAAOA,EAAEN,OAAOM,EAAIA,EAAEN,aACtBM,6BASLsC,WACElB,EAAUF,KAAKD,MAAOQ,GAAO,EAAO1B,EAAI,EACtCyB,EAAI,IAEFC,MACFL,EACFI,EAAEE,KAAKN,GACPA,EAAUA,EAAQ3B,aAEd+B,EAAEG,OAAS,EAAG,IAChBP,EAAUI,EAAEI,MACR7B,IAAMuC,EAAO,OAAOlB,EACxBrB,IACAqB,EAAUA,EAAQ1B,WACb+B,GAAO,SAGX,kCAQHc,OACAC,EAAOtB,KAAKD,MACZwB,EAAY,QAEZF,EAAE7C,MAAO,KACX+C,EAAYF,EAAE7C,MACP+C,EAAUhD,MAAMgD,EAAYA,EAAUhD,YACtCgD,UAGHxC,EAAaiB,KAAKF,YACjBwB,GAAM,KACLlC,EAAML,EAAWsC,EAAEhD,IAAKiD,EAAKjD,QACvB,IAARe,EAAW,MACNA,EAAM,GACbmC,EAAYD,EACZA,EAAOA,EAAK/C,MACP+C,EAAOA,EAAK9C,aAGd+C,+BAQHF,OACAC,EAAOtB,KAAKD,MACZyB,EAAc,QAEH,OAAXH,EAAE9C,KAAe,KACnBiD,EAAcH,EAAE9C,KACTiD,EAAYhD,OAAOgD,EAAcA,EAAYhD,aAC7CgD,UAGHzC,EAAaiB,KAAKF,YACjBwB,GAAM,KACLlC,EAAML,EAAWsC,EAAEhD,IAAKiD,EAAKjD,QACvB,IAARe,EAAW,MACNA,EAAM,EAAGkC,EAAOA,EAAK/C,MAE5BiD,EAAcF,EACdA,EAAOA,EAAK9C,cAGTgD,8CAQFzB,MAAQ,UACRP,MAAQ,EACNQ,6CAwGX,SAAiBsB,OACXpB,EAAUoB,EACVhB,EAAI,GAAIC,GAAO,EAEbkB,EAAO,CAAEC,KAAM,MACjBC,EAAIF,QAEAlB,GACFL,GACFI,EAAEE,KAAKN,GACPA,EAAUA,EAAQ3B,MAEd+B,EAAEG,OAAS,EAEbP,GADAA,EAAUyB,EAAIA,EAAED,KAAOpB,EAAEI,OACPlC,MACb+B,GAAO,SAGlBoB,EAAED,KAAO,KACFD,EAAKC,KAnHHE,CAAO5B,KAAKD,0CAafgB,yDAAO,GAAIE,yDAAS,GAAIY,0DACxBC,EAAOf,EAAKN,OACV1B,EAAaiB,KAAKF,eAGpB+B,GAgJR,SAASE,EAAKhB,EAAME,EAAQ1C,EAAMC,EAAO2B,MACnC5B,GAAQC,EAAO,WAEbwD,EAAQjB,EAAMxC,EAAOC,GAAU,OACjCK,EAAIN,EAAO,MACX0D,EAAIzD,EAAQ,SAEH,IACRK,UAAYsB,EAAQY,EAAKlC,GAAImD,GAAS,MACtCC,UAAY9B,EAAQY,EAAKkB,GAAID,GAAS,MACrCnD,GAAKoD,EAAG,UAERC,EAAMnB,EAAKlC,GACfkC,EAAKlC,GAAKkC,EAAKkB,GACflB,EAAKkB,GAAKC,EAEVA,EAAMjB,EAAOpC,GACboC,EAAOpC,GAAKoC,EAAOgB,GACnBhB,EAAOgB,GAAKC,EAGdH,EAAKhB,EAAME,EAAS1C,EAAU0D,EAAG9B,GACjC4B,EAAKhB,EAAME,EAAQgB,EAAI,EAAGzD,EAAO2B,GAtKlB4B,CAAKhB,EAAME,EAAQ,EAAGa,EAAO,EAAG/C,GAE1B,OAAfiB,KAAKD,WACFA,MAiDX,SAASoC,EAAeC,EAAQrB,EAAME,EAAQoB,EAAOC,OAC7CR,EAAOQ,EAAMD,KACfP,EAAO,EAAG,KACNS,EAASF,EAAQG,KAAKC,MAAMX,EAAO,GACnCzD,EAAS0C,EAAKwB,GACdjE,EAAS2C,EAAOsB,GAChBhD,EAAS,CAAElB,IAAAA,EAAKC,KAAAA,EAAM8D,OAAAA,UAC5B7C,EAAKhB,KAAU4D,EAAc5C,EAAMwB,EAAME,EAAQoB,EAAOE,GACxDhD,EAAKf,MAAU2D,EAAc5C,EAAMwB,EAAME,EAAQsB,EAAS,EAAGD,GACtD/C,SAEF,KA5DU4C,CAAcnC,KAAKD,MAAOgB,EAAME,EAAQ,EAAGa,QACnDtC,MAAQsC,MACR,KACCY,EAiHZ,SAAqBC,EAAIC,OAAIzC,yDAAU,SAACzB,EAAGC,UAAMD,EAAIC,GAC7C8C,EAAO,GACTE,EAAIF,EAEJoB,EAAKF,EACLG,EAAKF,OAEK,OAAPC,GAAsB,OAAPC,GAChB3C,EAAQ0C,EAAGxE,IAAKyE,EAAGzE,KAAO,GAC5BsD,EAAED,KAAOmB,EACTA,EAAKA,EAAGnB,OAERC,EAAED,KAAOoB,EACTA,EAAKA,EAAGpB,MAEVC,EAAIA,EAAED,KAGG,OAAPmB,EAAkBlB,EAAED,KAAOmB,EACf,OAAPC,IAAanB,EAAED,KAAOoB,UAExBrB,EAAKC,KAtIWqB,CAAW/C,KAAK4B,SA6DzC,SAAoBb,EAAME,WAClBQ,EAAO,CAAEC,KAAM,MACjBC,EAAIF,EACC5C,EAAI,EAAGA,EAAIkC,EAAKN,OAAQ5B,IAC/B8C,EAAIA,EAAED,KAAO,CAAErD,IAAK0C,EAAKlC,GAAIP,KAAM2C,EAAOpC,WAE5C8C,EAAED,KAAO,KACFD,EAAKC,KApEqCsB,CAAWjC,EAAME,GAASlC,GACvE+C,EAAO9B,KAAKR,MAAQsC,OACf/B,MA6FX,SAASkD,EAAgBC,EAAMb,EAAOC,OAC9BR,EAAOQ,EAAMD,KACfP,EAAO,EAAG,KACNS,EAASF,EAAQG,KAAKC,MAAMX,EAAO,GACnCvD,EAAO0E,EAAgBC,EAAMb,EAAOE,GAEpCjB,EAAO4B,EAAKzB,YAClBH,EAAK/C,KAAOA,EAEZ2E,EAAKzB,KAAOyB,EAAKzB,KAAKC,KAEtBJ,EAAK9C,MAAQyE,EAAgBC,EAAMX,EAAS,EAAGD,GACxChB,SAEF,KA3GU2B,CAAgB,CAAExB,KAAMiB,GAAc,EAAGZ,UAEjD9B,8CAOyB,OAAfA,KAAKD,6CASdoD,yDAAY,SAACC,UAAMA,EAAE/E,KACvBgF,EAAM,UAnXhB,SAASC,EAAUhC,EAAMiC,EAAQC,EAAQH,EAAKF,MACxC7B,EAAM,CACR+B,YAAQE,UAAWC,EAAS,OAAS,eAAWL,EAAU7B,cACpDmC,EAASF,GAAUC,EAAS,OAAS,QACvClC,EAAK/C,MAAO+E,EAAShC,EAAK/C,KAAOkF,GAAQ,EAAOJ,EAAKF,GACrD7B,EAAK9C,OAAO8E,EAAShC,EAAK9C,MAAOiF,GAAQ,EAAOJ,EAAKF,IA+WzDG,CAAStD,KAAKD,MAAO,IAAI,EAAM,SAACH,UAAMyD,EAAI7C,KAAKZ,IAAIuD,GAC5CE,EAAIK,KAAK,mCAIVrF,EAAKsF,EAAQC,OACb7E,EAAaiB,KAAKF,cACFH,EAAMtB,EAAK2B,KAAKD,MAAOhB,GAAvCR,IAAAA,KAAMC,IAAAA,WACPgB,QACDT,EAAWV,EAAKsF,GAAU,EAC5BnF,EAAQa,EAAOsE,EAAQC,EAASpF,EAAOO,EAAYiB,MAEnDzB,EAAOc,EAAOsE,EAAQC,EAASrF,EAAMQ,EAAYiB,WAE9CD,MApZT,SAAgBxB,EAAMC,EAAOO,UACb,OAAVP,EAAuBD,EACb,OAAVA,EAAuBC,IAE3BA,EAAQI,EAAML,EAAKF,IAAKG,EAAOO,IACzBR,KAAOA,EACNC,GA8YQqF,CAAMtF,EAAMC,EAAOO,iCAI5BV,UACGsB,EAAMtB,EAAK2B,KAAKD,MAAOC,KAAKF,iDA5BhBE,KAAKR,eC5lB5B,SAASsE,EAAgBC,EAAUC,QAC3BD,aAAoBC,SAClB,IAAIC,UAAU,qCAIxB,SAASC,EAAkBC,EAAQC,OAC5B,IAAIvF,EAAI,EAAGA,EAAIuF,EAAM3D,OAAQ5B,IAAK,KACjCwF,EAAaD,EAAMvF,GACvBwF,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeP,EAAQE,EAAWhG,IAAKgG,IAIlD,SAASM,EAAaX,EAAaY,EAAYC,UACzCD,GAAYV,EAAkBF,EAAYc,UAAWF,GACrDC,GAAaX,EAAkBF,EAAaa,GACzCb,EAQT,IAAIe,EAAUC,OAAOC,aAELC,IAAZH,IAAuBA,EAAUvC,KAAK2C,IAAI,GAAI,KAClD,IAAIC,EAAaL,EAAUA,EAGvB3F,EAAM,SAAaV,EAAGC,UAEnBoG,EAAUrG,GAAKA,EAAIqG,IACjBA,EAAUpG,GAAKA,EAAIoG,EACf,GAKNrG,EAAIC,IAAMD,EAAIC,GAAKyG,EAAa1G,EAAIC,EAChC,EAIFD,EAAIC,GAAK,EAAI,GAKlB0G,EAAQ,SAAe3G,EAAGC,OACxB2G,GAAK5G,EAAIC,GAAK,SACG,IAAdS,EAAIkG,EAAG5G,IAA0B,IAAdU,EAAIkG,EAAG3G,IAK/B4G,EAAc,SAAqBC,EAAKC,OAEtCC,GAAMF,EAAI9F,EAAI+F,EAAI/F,GAAK,KACK,IAAnBN,EAAIsG,EAAIF,EAAI9F,IACQ,IAAnBN,EAAIsG,EAAID,EAAI/F,GAAU,OAAO,MACvCiG,GAAMH,EAAItG,EAAIuG,EAAIvG,GAAK,EACvB0G,EAA4B,IAAnBxG,EAAIuG,EAAIH,EAAItG,WACrB0G,GAA6B,IAAnBxG,EAAIuG,EAAIF,EAAIvG,SAGtB0G,IAAUA,KACTA,IAAWA,IAMdC,EAAe,SAAsBnH,EAAGC,UACnCD,EAAEgB,EAAIf,EAAEO,EAAIR,EAAEQ,EAAIP,EAAEe,GAIzBoG,EAAa,SAAoBpH,EAAGC,UAC/BD,EAAEgB,EAAIf,EAAEe,EAAIhB,EAAEQ,EAAIP,EAAEO,GAIzB6G,EAAsB,SAA6BC,EAAQC,EAAQC,OACjEC,EAAK,CACPzG,EAAGuG,EAAOvG,EAAIsG,EAAOtG,EACrBR,EAAG+G,EAAO/G,EAAI8G,EAAO9G,GAEnBkH,EAAK,CACP1G,EAAGwG,EAAOxG,EAAIsG,EAAOtG,EACrBR,EAAGgH,EAAOhH,EAAI8G,EAAO9G,GAEnBmH,EAAQR,EAAaM,EAAIC,UACtBhH,EAAIiH,EAAO,IAEhB5F,EAAS,SAAgBb,UACpB4C,KAAK8D,KAAKR,EAAWlG,EAAGA,KAiB7B2G,EAAgB,SAAuBC,EAASC,EAAOC,OACrDC,EAAQ,CACVjH,EAAG+G,EAAM/G,EAAI8G,EAAQ9G,EACrBR,EAAGuH,EAAMvH,EAAIsH,EAAQtH,GAEnB0H,EAAS,CACXlH,EAAGgH,EAAOhH,EAAI8G,EAAQ9G,EACtBR,EAAGwH,EAAOxH,EAAIsH,EAAQtH,UAEjB4G,EAAWc,EAAQD,GAASlG,EAAOmG,GAAUnG,EAAOkG,IAKzDE,EAAe,SAAsBC,EAAMC,EAAMC,MAC/CF,EAAKpH,IAAMqH,EAAKrH,EAAG,MAAO,CAC5BA,EAAGoH,EAAKpH,EACRR,EAAG8H,EAAI9H,MAGL4H,EAAK5H,IAAM6H,EAAK7H,EAAG,MAAO,CAC5BQ,EAAGsH,EAAItH,EACPR,EAAG4H,EAAK5H,OAINiH,EAAK,CACPzG,EAAGoH,EAAKpH,EAAIsH,EAAItH,EAChBR,EAAG4H,EAAK5H,EAAI8H,EAAI9H,GAEdkH,EAAK,CACP1G,EAAGqH,EAAKrH,EAAIsH,EAAItH,EAChBR,EAAG6H,EAAK7H,EAAI8H,EAAI9H,GAEd+H,EAASH,EACTI,EAAQH,EAERjB,EAAWK,EAAIA,GAAML,EAAWM,EAAIA,KACtCc,EAAQJ,EACRG,EAASF,OAKPI,EAAK,CACPzH,EAAGuH,EAAOvH,EAAIwH,EAAMxH,EACpBR,EAAG+H,EAAO/H,EAAIgI,EAAMhI,GAElBkI,EAAK,CACP1H,EAAGsH,EAAItH,EAAIwH,EAAMxH,EACjBR,EAAG8H,EAAI9H,EAAIgI,EAAMhI,GAEfmI,EAAOvB,EAAWqB,EAAIC,GAAMtB,EAAWqB,EAAIA,SACxC,CACLzH,EAAGwH,EAAMxH,EAAI2H,EAAOF,EAAGzH,EACvBR,EAAGgI,EAAMhI,EAAImI,EAAOF,EAAGjI,IAOvBoI,EAAyB,SAAgCC,EAAI3H,EAAGV,UACtD,IAARU,EAAEV,EAAgB,KACf,CACLQ,EAAG6H,EAAG7H,EAAIE,EAAEF,EAAIE,EAAEV,GAAKA,EAAIqI,EAAGrI,GAC9BA,EAAGA,IAOHsI,EAAuB,SAA8BD,EAAI3H,EAAGF,UAClD,IAARE,EAAEF,EAAgB,KACf,CACLA,EAAGA,EACHR,EAAGqI,EAAGrI,EAAIU,EAAEV,EAAIU,EAAEF,GAAKA,EAAI6H,EAAG7H,KAmD9B+H,EAEJ,oBACWA,IACP3D,EAAgB9D,KAAMyH,QAEjBC,eAGP/C,EAAa8C,EAAW,CAAC,CACvBpJ,IAAK,QACLsJ,MAAO,gBACAC,SAAW,IAAIC,OACfC,SAAW,IAAID,IAErB,CACDxJ,IAAK,QACLsJ,MAAO,SAAejI,EAAGR,SAChB,CACLQ,EAAGM,KAAK4H,SAASG,MAAMrI,GACvBR,EAAGc,KAAK8H,SAASC,MAAM7I,QAKtBuI,EAvBT,GA0BII,EAEJ,oBACWA,IACP/D,EAAgB9D,KAAM6H,QAEjBvI,KAAO,IAAI0I,OAEXD,MAAM,UAUbpD,EAAakD,EAAc,CAAC,CAC1BxJ,IAAK,QACLsJ,MAAO,SAAeM,OAChB1I,EAAOS,KAAKV,KAAKW,IAAIgI,GACrBC,EAAWlI,KAAKV,KAAK6I,KAAK5I,MAEb,OAAb2I,GAAqD,IAAhC9I,EAAIG,EAAKlB,IAAK6J,EAAS7J,iBACzCiB,KAAKG,OAAOwI,GACVC,EAAS7J,QAGd+J,EAAWpI,KAAKV,KAAKoC,KAAKnC,UAEb,OAAb6I,GAAqD,IAAhChJ,EAAIG,EAAKlB,IAAK+J,EAAS/J,WACzCiB,KAAKG,OAAOwI,GACVG,EAAS/J,KAGX4J,MAIJJ,EAtCT,GA0CIQ,EAAU,IAAIZ,EAKda,EAAkB,SAAyBC,OAEzCC,EAAS,OAERC,MAAMC,QAAQH,SACX,IAAII,MAAM,8CAGb,IAAI9J,EAAI,EAAG+J,EAAOL,EAAK9H,OAAQ5B,EAAI+J,EAAM/J,IAAK,KAC5C4J,MAAMC,QAAQH,EAAK1J,KAAyB,GAAlB0J,EAAK1J,GAAG4B,aAC/B,IAAIkI,MAAM,0CAGlBH,EAAOhI,KAAK,QAEP,IAAIyB,EAAI,EAAG4G,EAAON,EAAK1J,GAAG4B,OAAQwB,EAAI4G,EAAM5G,IAAK,KAC/CwG,MAAMC,QAAQH,EAAK1J,GAAGoD,KAA4B,GAArBsG,EAAK1J,GAAGoD,GAAGxB,aACrC,IAAIkI,MAAM,6CAGdF,MAAMC,QAAQH,EAAK1J,GAAGoD,GAAG,IAAK,CAEhCuG,EAAO3J,GAAG2B,KAAK,QAEV,IAAIsI,EAAI,EAAGC,EAAOR,EAAK1J,GAAGoD,GAAGxB,OAAQqI,EAAIC,EAAMD,IAAK,KAClDL,MAAMC,QAAQH,EAAK1J,GAAGoD,GAAG6G,KAAOP,EAAK1J,GAAGoD,GAAG6G,GAAGrI,OAAS,QACpD,IAAIkI,MAAM,6CAGdJ,EAAK1J,GAAGoD,GAAG6G,GAAGrI,OAAS,QACnB,IAAIkI,MAAM,+EAGlBH,EAAO3J,GAAGoD,GAAGzB,KAAK6H,EAAQN,MAAMQ,EAAK1J,GAAGoD,GAAG6G,GAAG,GAAIP,EAAK1J,GAAGoD,GAAG6G,GAAG,UAE7D,IAEDP,EAAK1J,GAAGoD,GAAGxB,OAAS,QAChB,IAAIkI,MAAM,6CAGdJ,EAAK1J,GAAGoD,GAAGxB,OAAS,QAChB,IAAIkI,MAAM,+EAGlBH,EAAO3J,GAAG2B,KAAK6H,EAAQN,MAAMQ,EAAK1J,GAAGoD,GAAG,GAAIsG,EAAK1J,GAAGoD,GAAG,cAKtDuG,GAILQ,EAAiB,SAAwBT,MACvCE,MAAMC,QAAQH,GAAO,IACH,IAAhBA,EAAK9H,OAAc,UAEnBgI,MAAMC,QAAQH,EAAK,IAAK,IACtBE,MAAMC,QAAQH,EAAK,GAAG,KACO,iBAApBA,EAAK,GAAG,GAAG,GAAG7I,GAA6C,iBAApB6I,EAAK,GAAG,GAAG,GAAGrJ,YAMtC,iBAAjBqJ,EAAK,GAAG,GAAG7I,GAA0C,iBAAjB6I,EAAK,GAAG,GAAGrJ,cAExDqJ,EAAKU,QAAQV,EAAKW,OAAO,WAMzB,IAAIP,MAAM,wDAIdQ,EAAiB,SAAwBC,WACvCvK,EAAI,EAEDA,EAAIuK,EAAU3I,QAAQ,KACvB4I,EAAOD,EAAUvK,MAED,IAAhBwK,EAAK5I,YAKL6I,EAAeD,EAAK,MACxBE,EAAUD,GAEkB,IAAxBA,EAAa7I,gBAKbwB,EAAI,EAEDA,EAAIoH,EAAK5I,QAAQ,KAClB+I,EAAeH,EAAKpH,GACxBsH,EAAUC,GACkB,IAAxBA,EAAa/I,OAAc4I,EAAKH,OAAOjH,EAAG,GAAQA,IAGxDpD,SAZEuK,EAAUF,OAAOrK,EAAG,QARpBuK,EAAUF,OAAOrK,EAAG,KA+BtB0K,EAAY,SAAmBE,MACb,IAAhBA,EAAKhJ,YACLiJ,EAAUD,EAAK,GACfE,EAASF,EAAKA,EAAKhJ,OAAS,GAC5BiJ,EAAQhK,IAAMiK,EAAOjK,GAAKgK,EAAQxK,IAAMyK,EAAOzK,GAAGuK,EAAK/I,cAOvDkJ,EAAQC,EALRC,EAAmB,SAA0BF,EAAQrC,EAAIsC,UACpDD,EAAOlK,IAAM6H,EAAG7H,GAAKkK,EAAO1K,IAAMqI,EAAGrI,GAAK2K,EAAOnK,IAAM6H,EAAG7H,GAAKmK,EAAO3K,IAAMqI,EAAGrI,GAAiD,IAA5C6G,EAAoBwB,EAAIqC,EAAQC,IAGzHhL,EAAI,EAGDA,EAAI4K,EAAKhJ,QACdmJ,EAAe,IAAN/K,EAAU4K,EAAKA,EAAKhJ,OAAS,GAAKgJ,EAAK5K,EAAI,GACpDgL,EAAShL,IAAM4K,EAAKhJ,OAAS,EAAIgJ,EAAK,GAAKA,EAAK5K,EAAI,GAChDiL,EAAiBF,EAAQH,EAAK5K,GAAIgL,GAASJ,EAAKP,OAAOrK,EAAG,GAAQA,SAMjE4K,EAAKhJ,OAAS,GAAKgJ,EAAKhJ,OAAS,GACtCgJ,EAAK/I,QAILqJ,EAEJ,oBA6BWA,EAAWC,EAAOC,GACzBnG,EAAgB9D,KAAM+J,QAED7E,IAAjB8E,EAAME,OAAsBF,EAAME,OAAS,CAAClK,MAAWgK,EAAME,OAAO1J,KAAKR,WACxEgK,MAAQA,OACRC,OAASA,SAjChBtF,EAAaoF,EAAY,KAAM,CAAC,CAC9B1L,IAAK,UAELsJ,MAAO,SAAiBjJ,EAAGC,OAErBwL,EAAQJ,EAAWK,cAAc1L,EAAEsL,MAAOrL,EAAEqL,cAClC,IAAVG,EAAoBA,GAEpBzL,EAAEsL,QAAUrL,EAAEqL,OAAOtL,EAAE2L,KAAK1L,GAE5BD,EAAEuL,SAAWtL,EAAEsL,OAAevL,EAAEuL,OAAS,GAAK,EAG3CK,EAAQnK,QAAQzB,EAAE6L,QAAS5L,EAAE4L,YAGrC,CACDlM,IAAK,gBACLsJ,MAAO,SAAuBnC,EAAKC,UAC7BD,EAAI9F,EAAI+F,EAAI/F,GAAW,EACvB8F,EAAI9F,EAAI+F,EAAI/F,EAAU,EACtB8F,EAAItG,EAAIuG,EAAIvG,GAAW,EACvBsG,EAAItG,EAAIuG,EAAIvG,EAAU,EACnB,MAaXyF,EAAaoF,EAAY,CAAC,CACxB1L,IAAK,OACLsJ,MAAO,SAAc6C,MACfA,EAAMR,QAAUhK,KAAKgK,YACjB,IAAIrB,MAAM,+CAGd8B,EAAcD,EAAMR,MAAME,OAErBrL,EAAI,EAAG+J,EAAO6B,EAAYhK,OAAQ5B,EAAI+J,EAAM/J,IAAK,KACpD6L,EAAMD,EAAY5L,QACjBmL,MAAME,OAAO1J,KAAKkK,GACvBA,EAAIV,MAAQhK,KAAKgK,WAGdW,sBAKN,CACDtM,IAAK,oBACLsJ,MAAO,mBAMDiD,EAAY5K,KAAKgK,MAAME,OAAOzJ,OAEzB5B,EAAI,EAAGA,EAAI+L,EAAW/L,IAAK,KAC9BgM,EAAO7K,KAAKgK,MAAME,OAAOrL,WACGqG,IAA5B2F,EAAKN,QAAQO,eAEZ,IAAI7I,EAAIpD,EAAI,EAAGoD,EAAI2I,EAAW3I,IAAK,KAClC8I,EAAO/K,KAAKgK,MAAME,OAAOjI,QACLiD,IAApB6F,EAAKD,aACLD,EAAKG,QAAQhB,MAAME,SAAWa,EAAKC,QAAQhB,MAAME,QACrDW,EAAKN,QAAQU,QAAQF,EAAKR,cAI/B,CACDlM,IAAK,2BACLsJ,MAAO,mBAEDuC,EAAS,GAEJrL,EAAI,EAAG+J,EAAO5I,KAAKgK,MAAME,OAAOzJ,OAAQ5B,EAAI+J,EAAM/J,IAAK,KAC1D6L,EAAM1K,KAAKgK,MAAME,OAAOrL,GAExB6L,IAAQ1K,OAAS0K,EAAIH,QAAQW,SAAWR,EAAIH,QAAQY,cACtDjB,EAAO1J,KAAKkK,UAITR,IAaR,CACD7L,IAAK,wBACLsJ,MAAO,SAA+ByD,OAChCC,EAAQrL,KAERsL,EAAQ,IAAIC,IAEZC,EAAY,SAAmBC,OA5dFjF,EAASC,EAAOC,EACjDC,EAIAC,EAwdM8E,EAAYD,EAAYT,QAC5BM,EAAMK,IAAIF,EAAa,CACrBG,MA/d6BpF,EA+dX6E,EAAMrB,MA/dcvD,EA+dP2E,EAAUpB,MA/dItD,EA+dGgF,EAAU1B,MA9d9DrD,EAAQ,CACVjH,EAAG+G,EAAM/G,EAAI8G,EAAQ9G,EACrBR,EAAGuH,EAAMvH,EAAIsH,EAAQtH,GAEnB0H,EAAS,CACXlH,EAAGgH,EAAOhH,EAAI8G,EAAQ9G,EACtBR,EAAGwH,EAAOxH,EAAIsH,EAAQtH,GAEjB2G,EAAae,EAAQD,GAASlG,EAAOmG,GAAUnG,EAAOkG,IAudrDkF,OAAQtF,EAAc8E,EAAMrB,MAAOoB,EAAUpB,MAAO0B,EAAU1B,iBAI3D,SAAUtL,EAAGC,GACb2M,EAAMQ,IAAIpN,IAAI8M,EAAU9M,GACxB4M,EAAMQ,IAAInN,IAAI6M,EAAU7M,OAEzBoN,EAAaT,EAAMU,IAAItN,GACvBuN,EAAQF,EAAWH,KACnBM,EAAUH,EAAWF,OAErBM,EAAcb,EAAMU,IAAIrN,GACxByN,EAAQD,EAAYP,KACpBS,EAAUF,EAAYN,cAGtBI,GAAS,GAAKG,GAAS,EACrBF,EAAUG,EAAgB,EAC1BH,EAAUG,GAAiB,EACxB,EAILJ,EAAQ,GAAKG,EAAQ,EACnBF,EAAUG,GAAiB,EAC3BH,EAAUG,EAAgB,EACvB,EAILD,EAAQH,GAAe,EACvBG,EAAQH,EAAc,EACnB,OAKNlC,EA3JT,GA4MIuC,EAAY,EAEZhC,EAEJ,oBA2GWA,EAAQiC,EAAQC,EAASC,GAChC3I,EAAgB9D,KAAMsK,QAEjBoC,KAAOJ,OACPC,OAASA,EACdA,EAAOhC,QAAUvK,KACjBuM,EAAOvB,QAAUwB,OACZA,QAAUA,EACfA,EAAQjC,QAAUvK,KAClBwM,EAAQxB,QAAUuB,OACbE,QAAUA,OACVE,OAAS,UArHhBhI,EAAa2F,EAAS,KAAM,CAAC,CAC3BjM,IAAK,UAeLsJ,MAAO,SAAiBjJ,EAAGC,OACrBiO,EAAMlO,EAAE6N,OAAOvC,MAAMtK,EACrBmN,EAAMlO,EAAE4N,OAAOvC,MAAMtK,EACrBoN,EAAMpO,EAAE8N,QAAQxC,MAAMtK,EACtBqN,EAAMpO,EAAE6N,QAAQxC,MAAMtK,KAEtBqN,EAAMH,EAAK,OAAO,KAClBE,EAAMD,EAAK,OAAQ,MACnBG,EAAMtO,EAAE6N,OAAOvC,MAAM9K,EACrB+N,EAAMtO,EAAE4N,OAAOvC,MAAM9K,EACrBgO,EAAMxO,EAAE8N,QAAQxC,MAAM9K,EACtBiO,EAAMxO,EAAE6N,QAAQxC,MAAM9K,KAEtB0N,EAAMC,EAAK,IAETI,EAAMD,GAAOC,EAAMC,EAAK,OAAO,KAC/BD,EAAMD,GAAOC,EAAMC,EAAK,OAAQ,MAEhCE,EAAY1O,EAAE2O,aAAa1O,EAAE4N,OAAOvC,UACpCoD,EAAY,EAAG,OAAO,KACtBA,EAAY,EAAG,OAAQ,MAEvBE,EAAa3O,EAAE0O,aAAa3O,EAAE8N,QAAQxC,cACvB,IAAfsD,EAAyBA,GAGrB,KAINV,EAAMC,EAAK,IACTG,EAAMC,GAAOD,EAAMG,EAAK,OAAQ,KAChCH,EAAMC,GAAOD,EAAMG,EAAK,OAAO,MAE/BI,EAAY5O,EAAE0O,aAAa3O,EAAE6N,OAAOvC,UACtB,IAAduD,EAAiB,OAAOA,MAExBC,EAAa9O,EAAE2O,aAAa1O,EAAE6N,QAAQxC,cACtCwD,EAAa,EAAU,EACvBA,EAAa,GAAW,EAGrB,KAMLR,EAAMC,EAAK,OAAQ,KACnBD,EAAMC,EAAK,OAAO,KAIlBH,EAAMC,EAAK,KACTU,EAAc9O,EAAE0O,aAAa3O,EAAE8N,QAAQxC,cAEvB,IAAhByD,EAA0BA,GAGtB,KAINX,EAAMC,EAAK,KACTW,EAAchP,EAAE2O,aAAa1O,EAAE6N,QAAQxC,cAEvC0D,EAAc,EAAU,EACxBA,EAAc,GAAW,EAGtB,SAMLR,EAAMC,GAAa,EACnBD,EAAMC,EAAY,EAGlBzO,EAAEgO,GAAK/N,EAAE+N,IAAY,EACrBhO,EAAEgO,GAAK/N,EAAE+N,GAAW,EAEjB,MAsBX/H,EAAa2F,EAAS,CAAC,CACrBjM,IAAK,iBAGLsJ,MAAO,SAAwBgG,QACxBnB,QAAUmB,OACVnB,QAAQjC,QAAUvK,UAClBwM,QAAQxB,QAAUhL,KAAKuM,YACvBA,OAAOvB,QAAUhL,KAAKwM,UAE5B,CACDnO,IAAK,OACLsJ,MAAO,eACDiG,EAAK5N,KAAKuM,OAAOvC,MAAM9K,EACvB2O,EAAK7N,KAAKwM,QAAQxC,MAAM9K,QACrB,CACL4O,GAAI,CACFpO,EAAGM,KAAKuM,OAAOvC,MAAMtK,EACrBR,EAAG0O,EAAKC,EAAKD,EAAKC,GAEpBE,GAAI,CACFrO,EAAGM,KAAKwM,QAAQxC,MAAMtK,EACtBR,EAAG0O,EAAKC,EAAKD,EAAKC,MAMvB,CACDxP,IAAK,SACLsJ,MAAO,iBACE,CACLjI,EAAGM,KAAKwM,QAAQxC,MAAMtK,EAAIM,KAAKuM,OAAOvC,MAAMtK,EAC5CR,EAAGc,KAAKwM,QAAQxC,MAAM9K,EAAIc,KAAKuM,OAAOvC,MAAM9K,KAG/C,CACDb,IAAK,eACLsJ,MAAO,SAAsBJ,UACpBA,EAAG7H,IAAMM,KAAKuM,OAAOvC,MAAMtK,GAAK6H,EAAGrI,IAAMc,KAAKuM,OAAOvC,MAAM9K,GAAKqI,EAAG7H,IAAMM,KAAKwM,QAAQxC,MAAMtK,GAAK6H,EAAGrI,IAAMc,KAAKwM,QAAQxC,MAAM9K,IAOrI,CACDb,IAAK,eACLsJ,MAAO,SAAsBqC,MACvBhK,KAAKgO,aAAahE,GAAQ,OAAO,MACjCiE,EAAUpH,EAAa7G,KAAKuM,OAAOvC,MAAOhK,KAAKwM,QAAQxC,MAAOA,MAC9DA,EAAM9K,EAAI+O,EAAQ/O,EAAG,OAAQ,KAC7B8K,EAAM9K,EAAI+O,EAAQ/O,EAAG,OAAO,KAG5B8K,EAAMtK,EAAIuO,EAAQvO,EAAG,IACnBM,KAAKuM,OAAOvC,MAAM9K,EAAIc,KAAKwM,QAAQxC,MAAM9K,EAAG,OAAO,KACnDc,KAAKuM,OAAOvC,MAAM9K,EAAIc,KAAKwM,QAAQxC,MAAM9K,EAAG,OAAQ,KAGtD8K,EAAMtK,EAAIuO,EAAQvO,EAAG,IACnBM,KAAKuM,OAAOvC,MAAM9K,EAAIc,KAAKwM,QAAQxC,MAAM9K,EAAG,OAAQ,KACpDc,KAAKuM,OAAOvC,MAAM9K,EAAIc,KAAKwM,QAAQxC,MAAM9K,EAAG,OAAO,SAIlD,IAOR,CACDb,IAAK,UACLsJ,MAAO,SAAiBqC,OAxOV,SAAqBkE,EAAMlE,UACnCkE,EAAKJ,GAAGpO,GAAKsK,EAAMtK,GAAK2F,EAAM6I,EAAKJ,GAAGpO,EAAGsK,EAAMtK,MAAQsK,EAAMtK,GAAKwO,EAAKH,GAAGrO,GAAK2F,EAAM2E,EAAMtK,EAAGwO,EAAKH,GAAGrO,MAAQwO,EAAKJ,GAAG5O,GAAK8K,EAAM9K,GAAKmG,EAAM6I,EAAKJ,GAAG5O,EAAG8K,EAAM9K,MAAQ8K,EAAM9K,GAAKgP,EAAKH,GAAG7O,GAAKmG,EAAM2E,EAAM9K,EAAGgP,EAAKH,GAAG7O,IAwOnNiP,CAAYnO,KAAKkO,OAAQlE,GAAQ,OAAO,KAEzCA,IAAUhK,KAAKuM,OAAOvC,OAASA,IAAUhK,KAAKwM,QAAQxC,MAAO,OAAO,KAEpEzE,EAAYvF,KAAKuM,OAAOvC,MAAOA,GAAQ,OAAO,KAC9CzE,EAAYvF,KAAKwM,QAAQxC,MAAOA,GAAQ,OAAO,MAC/CoE,EAAOvH,EAAa7G,KAAKuM,OAAOvC,MAAOhK,KAAKwM,QAAQxC,MAAOA,GAC3DqE,EAAS,CACX3O,GAAI0O,EAAK1O,EAAIsK,EAAMtK,GAAK,EACxBR,GAAIkP,EAAKlP,EAAI8K,EAAM9K,GAAK,UAEnBqG,EAAY8I,EAAQD,IAAS7I,EAAY8I,EAAQrE,KAkBzD,CACD3L,IAAK,kBACLsJ,MAAO,SAAyB6C,OAE1B8D,EAnQW,SAAwBC,EAAIC,MAE3CA,EAAGT,GAAGrO,EAAI6O,EAAGT,GAAGpO,GAAK6O,EAAGR,GAAGrO,EAAI8O,EAAGV,GAAGpO,GAAK8O,EAAGT,GAAG7O,EAAIqP,EAAGT,GAAG5O,GAAKqP,EAAGR,GAAG7O,EAAIsP,EAAGV,GAAG5O,EAAG,OAAO,SAEzFuP,EAASF,EAAGT,GAAGpO,EAAI8O,EAAGV,GAAGpO,EAAI8O,EAAGV,GAAGpO,EAAI6O,EAAGT,GAAGpO,EAC7CgP,EAASH,EAAGR,GAAGrO,EAAI8O,EAAGT,GAAGrO,EAAI6O,EAAGR,GAAGrO,EAAI8O,EAAGT,GAAGrO,QAK1C,CACLoO,GAAI,CACFpO,EAAG+O,EACHvP,EANSqP,EAAGT,GAAG5O,EAAIsP,EAAGV,GAAG5O,EAAIsP,EAAGV,GAAG5O,EAAIqP,EAAGT,GAAG5O,GAQ/C6O,GAAI,CACFrO,EAAGgP,EACHxP,EATSqP,EAAGR,GAAG7O,EAAIsP,EAAGT,GAAG7O,EAAIqP,EAAGR,GAAG7O,EAAIsP,EAAGT,GAAG7O,IA2P3ByP,CAAe3O,KAAKkO,OAAQ1D,EAAM0D,WAChC,OAAhBI,EAAsB,OAAO,SAK7BM,EAAkB5O,KAAK6O,QAAQrE,EAAM+B,OAAOvC,OAC5C8E,EAAiBtE,EAAMqE,QAAQ7O,KAAKuM,OAAOvC,OAC3C+E,EAAkB/O,KAAK6O,QAAQrE,EAAMgC,QAAQxC,OAC7CgF,EAAiBxE,EAAMqE,QAAQ7O,KAAKwM,QAAQxC,UAE5C8E,GAAkBF,SAGhBI,IAAmBD,EAAwB/O,KAAKwM,QAAQxC,OACvDgF,GAAkBD,EAAwBvE,EAAMgC,QAAQxC,MAGtD,QAIL8E,SAEEC,GAAmBxJ,EAAYvF,KAAKuM,OAAOvC,MAAOQ,EAAMgC,QAAQxC,OAAe,KAE5EhK,KAAKuM,OAAOvC,SAIjB4E,SAEEI,GAAkBzJ,EAAYvF,KAAKwM,QAAQxC,MAAOQ,EAAM+B,OAAOvC,OAAe,KAE3EQ,EAAM+B,OAAOvC,SAIlBgF,GAAkBD,EAAiB,OAAO,QAE1CC,EAAgB,OAAOhP,KAAKwM,QAAQxC,SACpC+E,EAAiB,OAAOvE,EAAMgC,QAAQxC,UA3TfkE,EAAMlE,EA8T7BzC,EA9uBS,SAAsB0H,EAAK9I,EAAI+I,EAAK9I,MAIxC,IAATD,EAAGzG,EAAS,OAAO8H,EAAqB0H,EAAK9I,EAAI6I,EAAIvP,MAC5C,IAAT0G,EAAG1G,EAAS,OAAO8H,EAAqByH,EAAK9I,EAAI+I,EAAIxP,MAC5C,IAATyG,EAAGjH,EAAS,OAAOoI,EAAuB4H,EAAK9I,EAAI6I,EAAI/P,MAC9C,IAATkH,EAAGlH,EAAS,OAAOoI,EAAuB2H,EAAK9I,EAAI+I,EAAIhQ,OAIvDmH,EAAQR,EAAaM,EAAIC,MAChB,GAATC,EAAY,OAAO,SACnB8I,EAAK,CACPzP,EAAGwP,EAAIxP,EAAIuP,EAAIvP,EACfR,EAAGgQ,EAAIhQ,EAAI+P,EAAI/P,GAEbkQ,EAAKvJ,EAAasJ,EAAIhJ,GAAME,EAC5BgJ,EAAKxJ,EAAasJ,EAAI/I,GAAMC,QAQzB,CACL3G,GAPOuP,EAAIvP,EAAI2P,EAAKlJ,EAAGzG,GAChBwP,EAAIxP,EAAI0P,EAAKhJ,EAAG1G,IAGL,EAIlBR,GANO+P,EAAI/P,EAAImQ,EAAKlJ,EAAGjH,GAChBgQ,EAAIhQ,EAAIkQ,EAAKhJ,EAAGlH,IAEL,GAqtBPoQ,CAAatP,KAAKuM,OAAOvC,MAAOhK,KAAKuP,SAAU/E,EAAM+B,OAAOvC,MAAOQ,EAAM+E,iBAGvE,OAAPhI,EAAoB,MAjUSyC,EAmUNzC,GAnUA2G,EAmUbI,GAlUNR,GAAGpO,GAAKsK,EAAMtK,GAAKsK,EAAMtK,GAAKwO,EAAKH,GAAGrO,GAAKwO,EAAKJ,GAAG5O,GAAK8K,EAAM9K,GAAK8K,EAAM9K,GAAKgP,EAAKH,GAAG7O,EAoUvFmJ,EAAQN,MAAMR,EAAG7H,EAAG6H,EAAGrI,GAFS,QAiBxC,CACDb,IAAK,QACLsJ,MAAO,SAAeqC,OAChBwF,EAAY,GACZC,OAAiCvK,IAAjB8E,EAAME,OACtBwF,EAAY,IAAI3F,EAAWC,GAAO,GAClC2D,EAAa,IAAI5D,EAAWC,GAAO,GACnC2F,EAAa3P,KAAKwM,oBACjBoD,eAAejC,GACpB6B,EAAUhP,KAAKmN,GACf6B,EAAUhP,KAAKkP,OACXpF,EAAQoF,EAAWC,EAAY3P,KAAKyM,QAAQoD,SAI5CJ,IACFC,EAAU/E,oBACVgD,EAAWhD,qBAGN6E,IAKR,CACDnR,IAAK,UACLsJ,MAAO,SAAiB6C,WAClBsF,EAAW9P,KACX+P,EAAWvF,EAERsF,EAAShF,YACdgF,EAAWA,EAAShF,gBAGfiF,EAASjF,YACdiF,EAAWA,EAASjF,eAGlBkF,EAAS1F,EAAQnK,QAAQ2P,EAAUC,MACxB,IAAXC,MAIAA,EAAS,EAAG,KACV9N,EAAM4N,EACVA,EAAWC,EACXA,EAAW7N,KAIT4N,EAAS3H,OAAS4H,EAAU,KAC1BE,EAAOH,EACXA,EAAWC,EACXA,EAAWE,MAGR,IAAIpR,EAAI,EAAG+J,EAAOmH,EAAStD,QAAQhM,OAAQ5B,EAAI+J,EAAM/J,IACxDiR,EAASrD,QAAQjM,KAAKuP,EAAStD,QAAQ5N,IAGzCkR,EAAStD,QAAU,KACnBsD,EAASjF,WAAagF,EAEtBC,EAASxD,OAAOzB,WAAagF,EAASvD,OACtCwD,EAASvD,QAAQ1B,WAAagF,EAAStD,WAIxC,CACDnO,IAAK,eACLsJ,MAAO,eACDtJ,EAAM,2BACe6G,IAArBlF,KAAK2M,OAAOtO,KAAoB2B,KAAK2M,OAAOtO,GAAO2B,KAAK,IAAIkQ,OAAO7R,OAChE2B,KAAK2M,OAAOtO,KAEpB,CACDA,IAAK,gBACLsJ,MAAO,kBACA3H,KAAKmI,KACNnI,KAAKmI,KAAKgD,aAAqBnL,KAAKmI,KACjCnI,KAAKmI,KAAKgI,eAFM,OAIxB,CACD9R,IAAK,cACLsJ,MAAO,eACDtJ,EAAM,0BACe6G,IAArBlF,KAAK2M,OAAOtO,KAAoB2B,KAAK2M,OAAOtO,GAAO2B,KAAK,IAAIkQ,OAAO7R,OAChE2B,KAAK2M,OAAOtO,KAEpB,CACDA,IAAK,eACLsJ,MAAO,kBACA3H,KAAKmI,MACFnI,KAAKmI,KAAK2C,YAAc9K,KAAKmI,MAAMiI,aADpB,KAGxB,CACD/R,IAAK,aACLsJ,MAAO,eACDtJ,EAAM,yBACe6G,IAArBlF,KAAK2M,OAAOtO,KAAoB2B,KAAK2M,OAAOtO,GAAO2B,KAAK,IAAIkQ,OAAO7R,OAChE2B,KAAK2M,OAAOtO,KAEpB,CACDA,IAAK,cACLsJ,MAAO,mBACD0I,EAAQrQ,KAAKsQ,cAAcT,MAAM,GAE5BhR,EAAI,EAAG+J,EAAO5I,KAAKyM,QAAQhM,OAAQ5B,EAAI+J,EAAM/J,IAAK,KACrD4K,EAAOzJ,KAAKyM,QAAQ5N,GACpBuC,EAAQiP,EAAME,QAAQ9G,IACX,IAAXrI,EAAciP,EAAM7P,KAAKiJ,GAAW4G,EAAMnH,OAAO9H,EAAO,UAGvDiP,IAER,CACDhS,IAAK,mBACLsJ,MAAO,eACDtJ,EAAM,+BACe6G,IAArBlF,KAAK2M,OAAOtO,KAAoB2B,KAAK2M,OAAOtO,GAAO2B,KAAK,IAAIkQ,OAAO7R,OAChE2B,KAAK2M,OAAOtO,KAEpB,CACDA,IAAK,oBACLsJ,MAAO,kBACA3H,KAAKmI,MACFnI,KAAKmI,KAAK2C,YAAc9K,KAAKmI,MAAMqI,kBADpB,KAGxB,CACDnS,IAAK,kBACLsJ,MAAO,eACDtJ,EAAM,8BACe6G,IAArBlF,KAAK2M,OAAOtO,KAAoB2B,KAAK2M,OAAOtO,GAAO2B,KAAK,IAAIkQ,OAAO7R,OAChE2B,KAAK2M,OAAOtO,KAEpB,CACDA,IAAK,mBACLsJ,MAAO,mBAED8I,EAAa,GACbC,EAAe,GACfN,EAAapQ,KAAKoQ,aAEbvR,EAAI,EAAG+J,EAAOwH,EAAW3P,OAAQ5B,EAAI+J,EAAM/J,IAAK,KACnD4K,EAAO2G,EAAWvR,GAClBwK,EAAOI,EAAKJ,SACoB,IAAhCqH,EAAaH,QAAQlH,MACrBI,EAAKkH,WAAYF,EAAWjQ,KAAK6I,OAAW,EACV,IAAhCqH,EAAaH,QAAQlH,IAAcqH,EAAalQ,KAAK6I,OACrDjI,EAAQqP,EAAWF,QAAQ9G,EAAKJ,OACrB,IAAXjI,GAAcqP,EAAWvH,OAAO9H,EAAO,YAK3CwP,EAAM,GAEDC,EAAK,EAAGC,EAAQL,EAAWhQ,OAAQoQ,EAAKC,EAAOD,IAAM,KACxDE,EAAKN,EAAWI,GAAIG,WACC,IAArBJ,EAAIL,QAAQQ,IAAYH,EAAIpQ,KAAKuQ,UAGhCH,IAIR,CACDvS,IAAK,aACLsJ,MAAO,eACDtJ,EAAM,yBACe6G,IAArBlF,KAAK2M,OAAOtO,KAAoB2B,KAAK2M,OAAOtO,GAAO2B,KAAK,IAAIkQ,OAAO7R,OAChE2B,KAAK2M,OAAOtO,KAEpB,CACDA,IAAK,cACLsJ,MAAO,cAED3H,KAAK8K,WAAY,OAAO,MACxBmG,EAAYjR,KAAKkR,mBACjBC,EAAWnR,KAAKwQ,yBAEZY,EAAUC,UACX,eAKoC,IAArBJ,EAAUxQ,UACS,IAApB0Q,EAAS1Q,YAIvB,mBAMG6Q,EACAC,SAEAN,EAAUxQ,OAAS0Q,EAAS1Q,QAC9B6Q,EAAQL,EAAUxQ,OAClB8Q,EAAOJ,EAAS1Q,SAEhB6Q,EAAQH,EAAS1Q,OACjB8Q,EAAON,EAAUxQ,QAGZ8Q,IAASH,EAAUI,eAAiBF,EAAQC,MAGlD,aAKU/O,KAAKiP,IAAIR,EAAUxQ,OAAS0Q,EAAS1Q,QAClC,GAAM,MAGnB,iBAIGiR,EAAgB,SAAuBd,UACnB,IAAfA,EAAInQ,QAAgBmQ,EAAI,GAAGe,kBAG7BD,EAAcT,KAAeS,EAAcP,iBAI9C,IAAIxI,MAAM,qCAAqCuH,OAAOkB,EAAUC,WAG1E,CAAC,CACHhT,IAAK,WACLsJ,MAAO,SAAkBsH,EAAKC,EAAKzF,OAC7BmI,EAAQC,EAERC,EAAS/H,EAAWK,cAAc6E,EAAKC,MAEvC4C,EAAS,EACXF,EAAS3C,EACT4C,EAAU3C,MACL,CAAA,KAAI4C,EAAS,GAGb,MAAM,IAAInJ,MAAM,0CAA0CuH,OAAOjB,EAAIvP,EAAG,MAAMwQ,OAAOjB,EAAI/P,EAAG,MAFjG0S,EAAS1C,EACT2C,EAAU5C,SAKL,IAAI3E,EAFE,IAAIP,EAAW6H,GAAQ,GACtB,IAAI7H,EAAW8H,GAAS,GACF,CAACpI,QAIlCa,EA3iBT,GA8iBIyH,EAEJ,oBACWA,EAAOC,EAAU3I,EAAMsH,GAC9B7M,EAAgB9D,KAAM+R,QAEjB1I,KAAOA,OACPsH,WAAaA,OACbsB,SAAW,WACZC,EAAYF,EAAS,GAEhBnT,EAAI,EAAG+J,EAAOoJ,EAASvR,OAAQ5B,EAAI+J,EAAM/J,IAAK,KACjDmL,EAAQgI,EAASnT,QAChBoT,SAASzR,KAAK8J,EAAQ6H,SAASD,EAAWlI,EAAOhK,OACtDkS,EAAYlI,OAGTiI,SAASzR,KAAK8J,EAAQ6H,SAASD,EAAWF,EAAS,GAAIhS,cAG9D2E,EAAaoN,EAAQ,CAAC,CACpB1T,IAAK,iBACLsJ,MAAO,mBACDyK,EAAc,GAETvT,EAAI,EAAG+J,EAAO5I,KAAKiS,SAASxR,OAAQ5B,EAAI+J,EAAM/J,IAAK,KACtD0L,EAAUvK,KAAKiS,SAASpT,GAC5BuT,EAAY5R,KAAK+J,EAAQgC,QACzB6F,EAAY5R,KAAK+J,EAAQiC,gBAGpB4F,MAIJL,EAjCT,GAmCIM,EAEJ,oBACWA,EAAOC,EAAUtB,GACxBlN,EAAgB9D,KAAMqS,QAEjB/I,aAAe,IAAIyI,EAAOO,EAAS,GAAItS,MAAM,QAC7CuS,cAAgB,OAEhB,IAAI1T,EAAI,EAAG+J,EAAO0J,EAAS7R,OAAQ5B,EAAI+J,EAAM/J,SAC3C0T,cAAc/R,KAAK,IAAIuR,EAAOO,EAASzT,GAAImB,MAAM,SAGnDgR,UAAYA,SAGnBrM,EAAa0N,EAAQ,CAAC,CACpBhU,IAAK,iBACLsJ,MAAO,mBACDyK,EAAcpS,KAAKsJ,aAAakJ,iBAE3B3T,EAAI,EAAG+J,EAAO5I,KAAKuS,cAAc9R,OAAQ5B,EAAI+J,EAAM/J,YACtD4T,EAAkBzS,KAAKuS,cAAc1T,GAAG2T,iBAEnCvQ,EAAI,EAAG4G,EAAO4J,EAAgBhS,OAAQwB,EAAI4G,EAAM5G,IACvDmQ,EAAY5R,KAAKiS,EAAgBxQ,WAI9BmQ,MAIJC,EA/BT,GAiCIK,EAEJ,oBACWA,EAAYC,GACnB7O,EAAgB9D,KAAM0S,QAEjBE,MAAQ,OAER,IAAI/T,EAAI,EAAG+J,EAAO+J,EAAclS,OAAQ5B,EAAI+J,EAAM/J,SAChD+T,MAAMpS,KAAK,IAAI6R,EAAOM,EAAc9T,GAAImB,YAG1C2R,WAAY,SAGnBhN,EAAa+N,EAAa,CAAC,CACzBrU,IAAK,gBACLsJ,MAAO,gBACAgK,WAAY,IAElB,CACDtT,IAAK,iBACLsJ,MAAO,mBACDyK,EAAc,GAETvT,EAAI,EAAG+J,EAAO5I,KAAK4S,MAAMnS,OAAQ5B,EAAI+J,EAAM/J,YAC9CgU,EAAkB7S,KAAK4S,MAAM/T,GAAG2T,iBAE3BvQ,EAAI,EAAG4G,EAAOgK,EAAgBpS,OAAQwB,EAAI4G,EAAM5G,IACvDmQ,EAAY5R,KAAKqS,EAAgB5Q,WAI9BmQ,MAIJM,EAnCT,GAsCII,EAEJ,oBAwFWA,EAAQ5I,GACfpG,EAAgB9D,KAAM8S,QAEjB5I,OAASA,MAET,IAAIrL,EAAI,EAAG+J,EAAOsB,EAAOzJ,OAAQ5B,EAAI+J,EAAM/J,IAC9CqL,EAAOrL,GAAG0L,QAAQW,QAAUlL,UAGzBqJ,KAAO,YAhGd1E,EAAamO,EAAS,KAAM,CAAC,CAC3BzU,IAAK,UAILsJ,MAAO,SAAiBoL,WAClBC,EAAW,GAENnU,EAAI,EAAG+J,EAAOmK,EAAYtS,OAAQ5B,EAAI+J,EAAM/J,IAAK,KACpD0L,EAAUwI,EAAYlU,MACrB0L,EAAQY,eAAgBZ,EAAQW,iBACjC+H,EAAY,KACZC,EAAQ3I,EAAQgC,OAChBb,EAAYnB,EAAQiC,QACpBtC,EAAS,CAACgJ,GACVC,EAAgBD,EAAMlJ,MACtBoJ,EAAkB,GAIpBH,EAAYC,EACZA,EAAQxH,EACRxB,EAAO1J,KAAK0S,GAGRA,EAAMlJ,QAAUmJ,UAEP,KACPE,EAAeH,EAAMI,8BAIG,IAAxBD,EAAa5S,OAAc,KACzBiJ,EAAUQ,EAAO,GAAGF,MACpBL,EAASO,EAAOA,EAAOzJ,OAAS,GAAGuJ,YACjC,IAAIrB,MAAM,+CAA+CuH,OAAOxG,EAAQhK,EAAG,KAAO,IAAIwQ,OAAOxG,EAAQxK,EAAG,0CAA4C,KAAKgR,OAAOvG,EAAOjK,EAAG,MAAMwQ,OAAOvG,EAAOzK,EAAG,UAK7K,IAAxBmU,EAAa5S,OAAc,CAC7BiL,EAAY2H,EAAa,GAAGrI,sBAM1BuI,EAAU,KAELtR,EAAI,EAAG4G,EAAOuK,EAAgB3S,OAAQwB,EAAI4G,EAAM5G,OACnDmR,EAAgBnR,GAAG+H,QAAUkJ,EAAMlJ,MAAO,CAC5CuJ,EAAUtR,WAOE,OAAZsR,GAUJH,EAAgB5S,KAAK,CACnBY,MAAO8I,EAAOzJ,OACduJ,MAAOkJ,EAAMlJ,YAIXjL,EAAamU,EAAMM,sBAAsBP,GAC7CvH,EAAY2H,EAAatR,KAAKhD,GAAY,GAAGiM,kBAhBvCyI,EAAiBL,EAAgBlK,OAAOqK,GAAS,GACjDG,EAAaxJ,EAAOhB,OAAOuK,EAAerS,OAC9CsS,EAAWzK,QAAQyK,EAAW,GAAG1I,SACjCgI,EAASxS,KAAK,IAAIsS,EAAQY,EAAWC,YAkB3CX,EAASxS,KAAK,IAAIsS,EAAQ5I,YAGrB8I,MAgBXrO,EAAamO,EAAS,CAAC,CACrBzU,IAAK,UACLsJ,MAAO,mBAEDiC,EAAS5J,KAAKkK,OAAO,GAAGF,MACxB4J,EAAS,CAAChK,GAEL/K,EAAI,EAAG+J,EAAO5I,KAAKkK,OAAOzJ,OAAS,EAAG5B,EAAI+J,EAAM/J,IAAK,KACxDgV,EAAM7T,KAAKkK,OAAOrL,GAAGmL,MACrB8J,EAAU9T,KAAKkK,OAAOrL,EAAI,GAAGmL,MACiB,IAA9CjE,EAAoB8N,EAAKjK,EAAQkK,KACrCF,EAAOpT,KAAKqT,GACZjK,EAASiK,MAIW,IAAlBD,EAAOnT,OAAc,OAAO,SAE5B8G,EAAKqM,EAAO,GACZ/J,EAAS+J,EAAO,GAC4B,IAA5C7N,EAAoBwB,EAAIqC,EAAQC,IAAe+J,EAAOG,QAC1DH,EAAOpT,KAAKoT,EAAO,YACfI,EAAOhU,KAAKiU,iBAAmB,GAAK,EACpCC,EAASlU,KAAKiU,iBAAmB,EAAIL,EAAOnT,OAAS,EACrD0T,EAAOnU,KAAKiU,iBAAmBL,EAAOnT,QAAU,EAChD2T,EAAgB,GAEXvD,EAAKqD,EAAQrD,GAAMsD,EAAMtD,GAAMmD,EACtCI,EAAc5T,KAAK,CAACoT,EAAO/C,GAAInR,EAAGkU,EAAO/C,GAAI3R,WAGxCkV,IAER,CACD/V,IAAK,iBACLsJ,MAAO,mBACwBzC,IAAzBlF,KAAKqU,gBAA+B,KAClCC,EAAYtU,KAAKuU,qBAChBF,iBAAkBC,IAAaA,EAAUL,wBAGzCjU,KAAKqU,kBAEb,CACDhW,IAAK,gBACLsJ,MAAO,uBACuBzC,IAAxBlF,KAAKwU,sBACFA,eAAiBxU,KAAKyU,sBAGtBzU,KAAKwU,iBAIb,CACDnW,IAAK,qBACLsJ,MAAO,mBAGD+M,EAAc1U,KAAKkK,OAAO,GAErBrL,EAAI,EAAG+J,EAAO5I,KAAKkK,OAAOzJ,OAAQ5B,EAAI+J,EAAM/J,IAAK,KACpD6L,EAAM1K,KAAKkK,OAAOrL,GAClBkL,EAAW5J,QAAQuU,EAAahK,GAAO,IAAGgK,EAAchK,WAG1DiK,EAAUD,EAAYnK,QAAQ4F,eAC9ByE,EAAcD,EAAUA,EAAQxE,eAAiB,OAExC,KAENwE,EAAS,OAAO,SAGhBC,EAAa,OAAOD,EAAQzJ,WAI7B0J,EAAY1J,UAAYyJ,EAAQzJ,eAC9B0J,EAAY1J,QAAQqJ,kBAAoBI,EAAQzJ,QAC3CyJ,EAAQzJ,QACHyJ,EAAQzJ,QAAQqJ,gBAKhCI,EAAUC,EAAYzE,eACtByE,EAAcD,EAAUA,EAAQxE,eAAiB,UAKhD2C,EAhMT,GAkMI+B,EAEJ,oBACWA,EAAQvL,GACfxF,EAAgB9D,KAAM6U,QAEjBvL,aAAeA,EACpBA,EAAaD,KAAOrJ,UACfuS,cAAgB,UAGvB5N,EAAakQ,EAAS,CAAC,CACrBxW,IAAK,cACLsJ,MAAO,SAAqB8B,QACrB8I,cAAc/R,KAAKiJ,GACxBA,EAAKJ,KAAOrJ,OAEb,CACD3B,IAAK,UACLsJ,MAAO,eACDY,EAAO,CAACvI,KAAKsJ,aAAawL,cAEd,OAAZvM,EAAK,GAAa,OAAO,SAExB,IAAI1J,EAAI,EAAG+J,EAAO5I,KAAKuS,cAAc9R,OAAQ5B,EAAI+J,EAAM/J,IAAK,KAC3DkW,EAAW/U,KAAKuS,cAAc1T,GAAGiW,UAEpB,OAAbC,GACJxM,EAAK/H,KAAKuU,UAGLxM,MAIJsM,EAjCT,GAmCIG,EAEJ,oBACWA,EAAa3E,GACpBvM,EAAgB9D,KAAMgV,QAEjB3E,MAAQA,OACRuC,MAAQ5S,KAAKiV,cAAc5E,UAGlC1L,EAAaqQ,EAAc,CAAC,CAC1B3W,IAAK,UACLsJ,MAAO,mBACDY,EAAO,GAEF1J,EAAI,EAAG+J,EAAO5I,KAAK4S,MAAMnS,OAAQ5B,EAAI+J,EAAM/J,IAAK,KACnDqW,EAAWlV,KAAK4S,MAAM/T,GAAGiW,UAEZ,OAAbI,GACJ3M,EAAK/H,KAAK0U,UAGL3M,IAER,CACDlK,IAAK,gBACLsJ,MAAO,SAAuB0I,WACxBuC,EAAQ,GAEH/T,EAAI,EAAG+J,EAAOyH,EAAM5P,OAAQ5B,EAAI+J,EAAM/J,IAAK,KAC9C4K,EAAO4G,EAAMxR,OACb4K,EAAKJ,QACLI,EAAKwK,iBAAkBrB,EAAMpS,KAAK,IAAIqU,EAAQpL,QAAY,KACxD8K,EAAgB9K,EAAK8K,gBACpBA,EAAclL,MAAMuJ,EAAMpS,KAAK,IAAIqU,EAAQN,IAChDA,EAAclL,KAAK8L,YAAY1L,WAI5BmJ,MAIJoC,EAzCT,GAuDII,EAEJ,oBACWA,EAAUC,OACbtW,EAAauW,UAAU7U,OAAS,QAAsByE,IAAjBoQ,UAAU,GAAmBA,UAAU,GAAKhL,EAAQnK,QAE7F2D,EAAgB9D,KAAMoV,QAEjBC,MAAQA,OACR/V,KAAO,IAAI0I,EAAUjJ,QACrBkT,SAAW,UAGlBtN,EAAayQ,EAAW,CAAC,CACvB/W,IAAK,UACLsJ,MAAO,SAAiBuL,OAClB3I,EAAU2I,EAAM3I,QAChBiF,EAAY,MAGZ0D,EAAMpI,kBACJoI,EAAMjJ,OAAQjK,KAAKqV,MAAM5V,OAAOyT,EAAMlI,SAAchL,KAAKV,KAAKG,OAAO8K,GAClEiF,MAGLjQ,EAAO2T,EAAMjJ,OAASjK,KAAKV,KAAKD,OAAOkL,GAAWvK,KAAKV,KAAKiW,KAAKhL,OAChEhL,EAAM,MAAM,IAAIoJ,MAAM,2BAA2BuH,OAAO3F,EAAQmC,GAAI,KAAO,IAAIwD,OAAO3F,EAAQgC,OAAOvC,MAAMtK,EAAG,MAAMwQ,OAAO3F,EAAQgC,OAAOvC,MAAM9K,EAAG,SAAW,IAAIgR,OAAO3F,EAAQiC,QAAQxC,MAAMtK,EAAG,MAAMwQ,OAAO3F,EAAQiC,QAAQxC,MAAM9K,EAAG,MAAQ,0DACjPgJ,EAAW3I,EACX6I,EAAW7I,EACXoV,OAAUzP,EACVsQ,OAAUtQ,OAEKA,IAAZyP,GAEY,QADjBzM,EAAWlI,KAAKV,KAAK6I,KAAKD,IACHyM,EAAU,UAA0CzP,IAA5BgD,EAAS7J,IAAIyM,aAA0B6J,EAAUzM,EAAS7J,eAIxF6G,IAAZsQ,GAEY,QADjBpN,EAAWpI,KAAKV,KAAKoC,KAAK0G,IACHoN,EAAU,UAA0CtQ,IAA5BkD,EAAS/J,IAAIyM,aAA0B0K,EAAUpN,EAAS/J,QAGvG6U,EAAMjJ,OAAQ,KAEZwL,EAAiB,QAEjBd,EAAS,KACPe,EAAYf,EAAQgB,gBAAgBpL,MAEtB,OAAdmL,IACGnL,EAAQyD,aAAa0H,KAAYD,EAAiBC,IAElDf,EAAQ3G,aAAa0H,YACpBE,EAAqB5V,KAAK6V,aAAalB,EAASe,GAE3C7W,EAAI,EAAG+J,EAAOgN,EAAmBnV,OAAQ5B,EAAI+J,EAAM/J,IAC1D2Q,EAAUhP,KAAKoV,EAAmB/W,QAOtCiX,EAAiB,QAEjBN,EAAS,KACPO,EAAYP,EAAQG,gBAAgBpL,MAEtB,OAAdwL,IACGxL,EAAQyD,aAAa+H,KAAYD,EAAiBC,IAElDP,EAAQxH,aAAa+H,YACpBC,EAAsBhW,KAAK6V,aAAaL,EAASO,GAE5ClF,EAAK,EAAGC,EAAQkF,EAAoBvV,OAAQoQ,EAAKC,EAAOD,IAC/DrB,EAAUhP,KAAKwV,EAAoBnF,OASpB,OAAnB4E,GAA8C,OAAnBK,EAAyB,KAClDG,EAAa,QACM,OAAnBR,EAAyBQ,EAAaH,OAAoB,GAAuB,OAAnBA,EAAyBG,EAAaR,MAAoB,KACtHS,EAAenM,EAAWK,cAAcqL,EAAgBK,GACxDI,EAAe,IAAGD,EAAaR,GAC/BS,EAAe,IAAGD,EAAaH,GAEnCG,EAAaR,OAIVJ,MAAM5V,OAAO8K,EAAQiC,SAC1BgD,EAAUhP,KAAK+J,EAAQiC,iBAEnB2J,EAAuB5L,EAAQ5K,MAAMsW,GAEhCG,EAAM,EAAGC,EAASF,EAAqB1V,OAAQ2V,EAAMC,EAAQD,IACpE5G,EAAUhP,KAAK2V,EAAqBC,IAIpC5G,EAAU/O,OAAS,QAIhBnB,KAAKG,OAAO8K,GACjBiF,EAAUhP,KAAK0S,UAGVjB,SAASzR,KAAK+J,GACnBA,EAAQpC,KAAOwM,OAEZ,IAIDA,GAAWa,EAAS,KAClBc,EAAQ3B,EAAQgB,gBAAgBH,MAEtB,OAAVc,EAAgB,KACb3B,EAAQ3G,aAAasI,WACpBC,EAAuBvW,KAAK6V,aAAalB,EAAS2B,GAE7CE,EAAM,EAAGC,EAASF,EAAqB9V,OAAQ+V,EAAMC,EAAQD,IACpEhH,EAAUhP,KAAK+V,EAAqBC,QAInChB,EAAQxH,aAAasI,WACpBI,EAAuB1W,KAAK6V,aAAaL,EAASc,GAE7CK,EAAM,EAAGC,EAASF,EAAqBjW,OAAQkW,EAAMC,EAAQD,IACpEnH,EAAUhP,KAAKkW,EAAqBC,UAMvCrX,KAAKG,OAAO8K,UAGZiF,IAKR,CACDnR,IAAK,eACLsJ,MAAO,SAAsBkP,EAAKtP,QAK3BjI,KAAKG,OAAOoX,OACbrK,EAAUqK,EAAIrK,aACb6I,MAAM5V,OAAO+M,OACdgD,EAAYqH,EAAIlX,MAAM4H,UAC1BiI,EAAUhP,KAAKgM,QAEQtH,IAAnB2R,EAAI/L,YAA0B9K,KAAKV,KAAKD,OAAOwX,GAC5CrH,MAIJ4F,EAvKT,GAiQIhE,EAAY,IArFhB,oBACW0F,IACPhT,EAAgB9D,KAAM8W,UAGxBnS,EAAamS,EAAW,CAAC,CACvBzY,IAAK,MACLsJ,MAAO,SAAa0J,EAAM9I,EAAMwO,GAC9B3F,EAAUC,KAAOA,EACjBhJ,EAAQX,gBAGJsP,EAAQ,CAAC1O,EAAgBC,IAEpB1J,EAAI,EAAG+J,EAAOmO,EAAUtW,OAAQ5B,EAAI+J,EAAM/J,IACjDmY,EAAMxW,KAAK8H,EAAgByO,EAAUlY,SAKlC,IAAIgS,EAAK,EAAGC,EAAQkG,EAAMvW,OAAQoQ,EAAKC,EAAOD,IACjD7H,EAAegO,EAAMnG,IACrB1H,EAAe6N,EAAMnG,YAKnBoG,EAAa,GAERb,EAAM,EAAGC,EAASW,EAAMvW,OAAQ2V,EAAMC,EAAQD,IACrDa,EAAWzW,KAAK,IAAIkS,EAAYsE,EAAMZ,KAGxCa,EAAW,GAAGC,gBACd9F,EAAUI,cAAgByF,EAAWxW,eAGjC4U,EAAQ,IAAIrN,EAAU+B,EAAW5J,SAE5BqW,EAAM,EAAGC,EAASQ,EAAWxW,OAAQ+V,EAAMC,EAAQD,YACtDpE,EAAc6E,EAAWT,GAAKhE,iBAEzBvQ,EAAI,EAAG4G,EAAOuJ,EAAY3R,OAAQwB,EAAI4G,EAAM5G,IACnDoT,EAAMhW,OAAO+S,EAAYnQ,YAMzBkV,EAAY,IAAI/B,EAAUC,GAC1B+B,EAAgB/B,EAAMvT,KACtBvC,EAAO8V,EAAM3U,MAEVnB,GAAM,KACPmL,EAAMnL,EAAKlB,OAEXgX,EAAMvT,OAASsV,QAEX,IAAIzO,MAAM,+BAA+BuH,OAAOxF,EAAIV,MAAMtK,EAAG,MAAMwQ,OAAOxF,EAAIV,MAAM9K,EAAG,WAAa,YAAYgR,OAAOxF,EAAIH,QAAQmC,GAAI,mDAG3I8C,EAAY2H,EAAUE,QAAQ3M,GAEzBiM,EAAM,EAAGC,EAASpH,EAAU/O,OAAQkW,EAAMC,EAAQD,IAAO,KAC5DW,EAAO9H,EAAUmH,QACGzR,IAApBoS,EAAKxM,YAA0BuK,EAAMhW,OAAOiY,GAGlDF,EAAgB/B,EAAMvT,KACtBvC,EAAO8V,EAAM3U,MAIf2H,EAAQX,YAGJsL,EAAWF,EAAQyE,QAAQJ,EAAUlF,iBAC5B,IAAI+C,EAAahC,GAChB8B,cAIXgC,EAlFT,IAuHI1V,EAhCQ,SAAemH,OACpB,IAAIiP,EAAOlC,UAAU7U,OAAQsW,EAAY,IAAItO,MAAM+O,EAAO,EAAIA,EAAO,EAAI,GAAIC,EAAO,EAAGA,EAAOD,EAAMC,IACvGV,EAAUU,EAAO,GAAKnC,UAAUmC,UAG3BrG,EAAUsG,IAAI,QAASnP,EAAMwO,IA2BlC3V,EAxBiB,SAAsBmH,OACpC,IAAIoP,EAAQrC,UAAU7U,OAAQsW,EAAY,IAAItO,MAAMkP,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7Gb,EAAUa,EAAQ,GAAKtC,UAAUsC,UAG5BxG,EAAUsG,IAAI,eAAgBnP,EAAMwO,IAmBzC3V,EAhBM,SAAamH,OAChB,IAAIsP,EAAQvC,UAAU7U,OAAQsW,EAAY,IAAItO,MAAMoP,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7Gf,EAAUe,EAAQ,GAAKxC,UAAUwC,UAG5B1G,EAAUsG,IAAI,MAAOnP,EAAMwO,IAWhC3V,EARa,SAAoB2W,OAC9B,IAAIC,EAAQ1C,UAAU7U,OAAQwX,EAAgB,IAAIxP,MAAMuP,EAAQ,EAAIA,EAAQ,EAAI,GAAIE,EAAQ,EAAGA,EAAQF,EAAOE,IACjHD,EAAcC,EAAQ,GAAK5C,UAAU4C,UAGhC9G,EAAUsG,IAAI,aAAcK,EAAaE,ICt4DlD,SAASxZ,EAAiBC,EAAGC,UAAYD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,MAE7CqJ,8BAEP7H,yDAAU1B,EAAiB0Z,yEAChCC,SAAWjY,OACXJ,MAAQ,UACRP,MAAQ,OACR6Y,gBAAkBF,+CAIdzY,OACLR,EAAIQ,EAAElB,MACNU,IACFQ,EAAElB,MAAQU,EAAEX,KACRW,EAAEX,OAAMW,EAAEX,KAAK6D,OAAS1C,GAC5BR,EAAEkD,OAAS1C,EAAE0C,QAGV1C,EAAE0C,OACE1C,IAAMA,EAAE0C,OAAO7D,KAAMmB,EAAE0C,OAAO7D,KAAOW,EAChBQ,EAAE0C,OAAO5D,MAAQU,EAFjBc,KAAKD,MAAQb,EAGvCA,IAAGA,EAAEX,KAAOmB,GAChBA,EAAE0C,OAASlD,sCAIDQ,OACNR,EAAIQ,EAAEnB,KACNW,IACFQ,EAAEnB,KAAOW,EAAEV,MACPU,EAAEV,QAAOU,EAAEV,MAAM4D,OAAS1C,GAC9BR,EAAEkD,OAAS1C,EAAE0C,QAGV1C,EAAE0C,OACC1C,IAAMA,EAAE0C,OAAO7D,KAAMmB,EAAE0C,OAAO7D,KAAOW,EAChBQ,EAAE0C,OAAO5D,MAAQU,EAFjBc,KAAKD,MAAQb,EAGtCA,IAAGA,EAAEV,MAAQkB,GACjBA,EAAE0C,OAASlD,iCAINQ,QACEA,EAAE0C,QAAQ,KACXT,EAAIjC,EAAE0C,OACLT,EAAES,OAGIT,EAAEpD,OAASmB,GAAKiC,EAAES,OAAO7D,OAASoD,QACtC2W,YAAY3W,EAAES,aACdkW,YAAY3W,IACRA,EAAEnD,QAAUkB,GAAKiC,EAAES,OAAO5D,QAAUmD,QACxC4W,WAAW5W,EAAES,aACbmW,WAAW5W,IACPA,EAAEpD,OAASmB,GAAKiC,EAAES,OAAO5D,QAAUmD,QACvC2W,YAAY3W,QACZ4W,WAAW5W,UAEX4W,WAAW5W,QACX2W,YAAY3W,IAbbA,EAAEpD,OAASmB,EAAGM,KAAKsY,YAAY3W,GACjB3B,KAAKuY,WAAW5W,kCAkBlCjC,WACAiC,EAAG6W,EAAIC,EAAKzZ,EAAGC,EAEZS,EAAE0C,SAEPoW,GADA7W,EAAIjC,EAAE0C,QACCA,SAEGoW,EAAGpW,SACXqW,EAAMD,EAAGpW,QACD7D,OAASia,EAAIC,EAAIla,KAAQmB,EACZ+Y,EAAIja,MAAQkB,EACjCA,EAAE0C,OAASqW,IAEX/Y,EAAE0C,OAAS,UACNrC,MAAQL,GAGfV,EAAIU,EAAEnB,KAAMU,EAAIS,EAAElB,MAEdkB,IAAMiC,EAAEpD,MACNia,IACEA,EAAGja,OAASoD,GAEVA,EAAEnD,OACJga,EAAGja,KAAOoD,EAAEnD,MACZga,EAAGja,KAAK6D,OAASoW,GACZA,EAAGja,KAAO,KAEjBoD,EAAEnD,MAAUga,EACZA,EAAGpW,OAAST,IAGR3C,GACFwZ,EAAGha,MAAQQ,EACXA,EAAEoD,OAASoW,GACNA,EAAGha,MAAQ,KAElBkB,EAAEnB,KAAUia,EACZA,EAAGpW,OAAS1C,IAGZT,GACF0C,EAAEpD,KAAOU,EACTA,EAAEmD,OAAST,GACNA,EAAEpD,KAAO,KAEhBmB,EAAElB,MAASmD,EACXA,EAAES,OAAS1C,IAEP8Y,IACEA,EAAGha,QAAUmD,GAEXA,EAAEpD,MACJia,EAAGha,MAAQmD,EAAEpD,KACbia,EAAGha,MAAM4D,OAASoW,GACbA,EAAGha,MAAQ,KAElBmD,EAAEpD,KAAOia,EACTA,EAAGpW,OAAST,IAGR1C,GACFuZ,EAAGja,KAAOU,EACVA,EAAEmD,OAASoW,GACNA,EAAGja,KAAO,KAEjBmB,EAAElB,MAAUga,EACZA,EAAGpW,OAAS1C,IAGZV,GACF2C,EAAEnD,MAAQQ,EACVA,EAAEoD,OAAST,GACNA,EAAEnD,MAAQ,KAEjBkB,EAAEnB,KAASoD,EACXA,EAAES,OAAS1C,mCAMTgZ,EAAG9Y,GACJ8Y,EAAEtW,OACEsW,IAAMA,EAAEtW,OAAO7D,KAAMma,EAAEtW,OAAO7D,KAAOqB,EACzC8Y,EAAEtW,OAAO5D,MAAQoB,EAFPI,KAAKD,MAAQH,EAGxBA,IAAGA,EAAEwC,OAASsW,EAAEtW,8CAIdsW,yDAAI1Y,KAAKD,SACX2Y,EAAG,KAAOA,EAAEna,MAAMma,EAAIA,EAAEna,YACrBma,wCAIDA,yDAAI1Y,KAAKD,SACX2Y,EAAG,KAAOA,EAAEla,OAAOka,EAAIA,EAAEla,aACtBka,iCAIFra,EAAKC,OACNqa,EAAI3Y,KAAKD,MACT4B,EAAI,KACJiX,EAAO5Y,KAAKoY,YAGZpY,KAAKqY,mBACAM,GAAG,IACRhX,EAAIgX,EAEQ,IADNC,EAAKD,EAAEta,IAAKA,GACH,OACgBsa,EAAtBC,EAAKD,EAAEta,IAAKA,GAAO,EAAOsa,EAAEna,MAC5Bma,EAAEpa,eAGNoa,GACLhX,EAAIgX,EACsBA,EAAtBC,EAAKD,EAAEta,IAAKA,GAAO,EAAOsa,EAAEna,MACvBma,EAAEpa,YAIfoa,EAAI,CAAEta,IAAAA,EAAKC,KAAAA,EAAMC,KAAM,KAAMC,MAAO,KAAM4D,OAAQT,GAE7CA,EACIiX,EAAKjX,EAAEtD,IAAKsa,EAAEta,KAAO,EAAGsD,EAAEnD,MAAQma,EACVhX,EAAEpD,KAAQoa,EAFV3Y,KAAKD,MAAQ4Y,OAIzC/Z,MAAM+Z,QACNnZ,QACEmZ,+BAIHta,WACAsa,EAAO3Y,KAAKD,MACZ6Y,EAAO5Y,KAAKoY,SACTO,GAAG,KACJvZ,EAAMwZ,EAAKD,EAAEta,IAAKA,MACbe,EAAM,EAAGuZ,EAAIA,EAAEna,UACnB,CAAA,KAAIY,EAAM,GACG,OAAOuZ,EADPA,EAAIA,EAAEpa,aAGnB,sCAQCF,WACJkB,EAAaS,KAAKD,MAClBhB,EAAaiB,KAAKoY,SACf7Y,GAAO,KACRH,EAAML,EAAWV,EAAKkB,EAAKlB,QACd,IAARe,EAAW,OAAO,EACPG,EAAXH,EAAM,EAAYG,EAAKhB,KACLgB,EAAKf,aAG3B,iCAIDH,OACFsa,EAAI3Y,KAAKuV,KAAKlX,OAEbsa,EAAG,OAAO,UAEV/Z,MAAM+Z,GAENA,EAAEpa,KACF,GAAKoa,EAAEna,MACP,KACCU,EAAIc,KAAKkB,QAAQyX,EAAEna,OACnBU,EAAEkD,SAAWuW,SACVE,QAAQ3Z,EAAGA,EAAEV,OAClBU,EAAEV,MAAQma,EAAEna,MACZU,EAAEV,MAAM4D,OAASlD,QAEd2Z,QAAQF,EAAGzZ,GAChBA,EAAEX,KAAOoa,EAAEpa,KACXW,EAAEX,KAAK6D,OAASlD,OAVCc,KAAK6Y,QAAQF,EAAGA,EAAEpa,WADxByB,KAAK6Y,QAAQF,EAAGA,EAAEna,mBAc1BgB,SACE,qCAIEmZ,OACJA,EAAG,OAAO,UAEV/Z,MAAM+Z,GAENA,EAAEpa,KACF,GAAKoa,EAAEna,MACP,KACCU,EAAIc,KAAKkB,QAAQyX,EAAEna,OACnBU,EAAEkD,SAAWuW,SACVE,QAAQ3Z,EAAGA,EAAEV,OAClBU,EAAEV,MAAQma,EAAEna,MACZU,EAAEV,MAAM4D,OAASlD,QAEd2Z,QAAQF,EAAGzZ,GAChBA,EAAEX,KAAOoa,EAAEpa,KACXW,EAAEX,KAAK6D,OAASlD,OAVCc,KAAK6Y,QAAQF,EAAGA,EAAEpa,WADxByB,KAAK6Y,QAAQF,EAAGA,EAAEna,mBAc1BgB,SACE,gCAIFnB,OACDsa,EAAI3Y,KAAKuV,KAAKlX,MACbsa,QAEA/Z,MAAM+Z,OAEPG,EAAIH,EAAEpa,KACNO,EAAI6Z,EAAEna,MAENua,EAAO,KACPD,IACFA,EAAE1W,OAAS,KACX2W,EAAO/Y,KAAKmB,QAAQ2X,QACfla,MAAMma,QACNhZ,MAAQgZ,GAEXja,IACEga,EAAGC,EAAKva,MAAQM,EACbkB,KAAKD,MAAQjB,EACpBA,EAAEsD,OAAS2W,QAGRvZ,2CAQDD,EAAOS,KAAKD,MAAOiZ,EAAc,QACjCzZ,EAAM,MACDA,EAAKhB,MAAMgB,EAAOA,EAAKhB,KAC9Bya,EAAc,CAAE3a,IAAKkB,EAAKlB,IAAKC,KAAMiB,EAAKjB,WACrCmB,OAAOF,EAAKlB,YAEZ2a,+BAWHzZ,OACAgC,EAAYhC,KACZgC,KACEA,EAAU/C,UACZ+C,EAAYA,EAAU/C,MACf+C,GAAaA,EAAUhD,MAAMgD,EAAYA,EAAUhD,cAE1DgD,EAAYhC,EAAK6C,OACVb,GAAaA,EAAU/C,QAAUe,GACtCA,EAAOgC,EAAWA,EAAYA,EAAUa,cAIvCb,+BASHhC,OACAiC,EAAcjC,KACdiC,KACEA,EAAYjD,SACdiD,EAAcA,EAAYjD,KACnBiD,GAAeA,EAAYhD,OAAOgD,EAAcA,EAAYhD,eAEnEgD,EAAcjC,EAAK6C,OACZZ,GAAeA,EAAYjD,OAASgB,GACzCA,EAAOiC,EACPA,EAAcA,EAAYY,cAIzBZ,kCASDyX,WACF/Y,EAAUF,KAAKD,MACf+Y,EAAI,GAAIvY,GAAO,EAAO1B,EAAI,GAEtB0B,GAEFL,GAGF4Y,EAAEtY,KAAKN,GACPA,EAAUA,EAAQ3B,MAKdua,EAAErY,OAAS,GAEbwY,EADA/Y,EAAU4Y,EAAEpY,MACM7B,KAIlBqB,EAAUA,EAAQ1B,OACb+B,GAAO,SAGXP,mCAYHY,EAAKC,EAAMC,EAAIT,WACbC,EAAI,GACJH,EAAUH,KAAKoY,SACjB7Y,EAAOS,KAAKD,MAEI,IAAbO,EAAEG,QAAgBlB,MACnBA,EACFe,EAAEE,KAAKjB,GACPA,EAAOA,EAAKhB,SACP,IAEC4B,GADNZ,EAAOe,EAAEI,OACUrC,IAAKwC,GACd,QAEH,GAAIV,EAAQZ,EAAKlB,IAAKuC,IAAQ,GAC/BE,EAAGH,KAAKN,EAAKd,GAAO,OAAOS,KAEjCT,EAAOA,EAAKf,aAGTwB,4CAQHE,EAAUF,KAAKD,MACf+Y,EAAI,GAAI7Z,EAAI,GAAIsB,GAAO,GAEnBA,GACFL,GACF4Y,EAAEtY,KAAKN,GACPA,EAAUA,EAAQ3B,MAEdua,EAAErY,OAAS,GACbP,EAAU4Y,EAAEpY,MACZzB,EAAEuB,KAAKN,EAAQ7B,KACf6B,EAAUA,EAAQ1B,OACb+B,GAAO,SAGXtB,2CASHiB,EAAUF,KAAKD,MACf+Y,EAAI,GAAI7Z,EAAI,GAAIsB,GAAO,GAEnBA,GACFL,GACF4Y,EAAEtY,KAAKN,GACPA,EAAUA,EAAQ3B,MAEdua,EAAErY,OAAS,GACbP,EAAU4Y,EAAEpY,MACZzB,EAAEuB,KAAKN,EAAQ5B,MACf4B,EAAUA,EAAQ1B,OACb+B,GAAO,SAGXtB,6BASLmC,WAKElB,EAAUF,KAAKD,MACf+Y,EAAI,GAAIvY,GAAO,EAAO1B,EAAI,GAEtB0B,MACFL,EACF4Y,EAAEtY,KAAKN,GACPA,EAAUA,EAAQ3B,aAEdua,EAAErY,OAAS,EAAG,IAChBP,EAAU4Y,EAAEpY,MACR7B,IAAMuC,EAAO,OAAOlB,EACxBrB,IACAqB,EAAUA,EAAQ1B,WACb+B,GAAO,SAGX,wCAYJQ,yDAAO,GAAIE,yDAAS,GAAIY,6DACR,IAAf7B,KAAKR,MAAa,MAAM,IAAImJ,MAAM,oCAChC7G,EAAOf,EAAKN,cACdoB,GAyDR,SAASE,EAAKhB,EAAME,EAAQ1C,EAAMC,EAAO2B,MACnC5B,GAAQC,EAAO,WAEbwD,EAAQjB,EAAMxC,EAAOC,GAAU,OACjCK,EAAIN,EAAO,MACX0D,EAAIzD,EAAQ,SAEH,IACRK,UAAYsB,EAAQY,EAAKlC,GAAImD,GAAS,MACtCC,UAAY9B,EAAQY,EAAKkB,GAAID,GAAS,MACrCnD,GAAKoD,EAAG,UAERC,EAAMnB,EAAKlC,GACfkC,EAAKlC,GAAKkC,EAAKkB,GACflB,EAAKkB,GAAKC,EAEVA,EAAMjB,EAAOpC,GACboC,EAAOpC,GAAKoC,EAAOgB,GACnBhB,EAAOgB,GAAKC,EAGdH,EAAKhB,EAAME,EAAS1C,EAAU0D,EAAG9B,GACjC4B,EAAKhB,EAAME,EAAQgB,EAAI,EAAGzD,EAAO2B,GA/ElB4B,CAAKhB,EAAME,EAAQ,EAAGa,EAAO,EAAG9B,KAAKoY,eAC7CrY,MAyCT,SAASoC,EAAeC,EAAQrB,EAAME,EAAQoB,EAAOC,OAC7CR,EAAOQ,EAAMD,KACfP,EAAO,EAAG,KACNS,EAASF,EAAQG,KAAKC,MAAMX,EAAO,GACnCzD,EAAS0C,EAAKwB,GACdjE,EAAS2C,EAAOsB,GAChBhD,EAAS,CAAElB,IAAAA,EAAKC,KAAAA,EAAM8D,OAAAA,UAC5B7C,EAAKhB,KAAU4D,EAAc5C,EAAMwB,EAAME,EAAQoB,EAAOE,GACxDhD,EAAKf,MAAU2D,EAAc5C,EAAMwB,EAAME,EAAQsB,EAAS,EAAGD,GACtD/C,SAEF,KApDQ4C,CAAc,KAAMpB,EAAME,EAAQ,EAAGa,QAC7CtC,MAAQsC,EACN9B,uCAKHT,EAAOS,KAAKkB,QAAQlB,KAAKD,cACzBR,EAAaA,EAAKlB,IACL,uCAKbkB,EAAOS,KAAKmB,QAAQnB,KAAKD,cACzBR,EAAaA,EAAKlB,IACL,8CAGe,OAAf2B,KAAKD,0CACJC,KAAKR,2CAePuB,EAAME,EAAQlC,EAAY8C,EAASsW,UAC5C,IAAInQ,EAAUjJ,EAAYoZ,GAAce,KAAKnY,EAAME,EAAQY,YCljB/D,IAAMsX,EAAuB,EACvBC,GAAuB,EACvBC,GAAuB,EACvBC,GAAuB,ECHvBC,GAAe,EACfC,GAAe,EACfC,GAAe,EACfC,GAAe,ECeb,SAASC,GAAezG,EAAO/K,EAAMiJ,GAErC,OAATjJ,GACF+K,EAAM0G,OAAa,EACnB1G,EAAM2G,YAAa,IAIf3G,EAAMvB,YAAcxJ,EAAKwJ,WAC3BuB,EAAM0G,OAAczR,EAAKyR,MACzB1G,EAAM2G,WAAa1R,EAAK0R,aAIxB3G,EAAM0G,OAAczR,EAAK0R,WACzB3G,EAAM2G,WAAa1R,EAAK2R,cAAgB3R,EAAKyR,MAAQzR,EAAKyR,OAIxDzR,IACF+K,EAAM/C,cAAiB4J,GAAS5R,EAAMiJ,IAAcjJ,EAAK2R,aACrD3R,EAAKgI,aAAehI,IAK5B+K,EAAM6G,SAAWA,GAAS7G,EAAO9B,GAKnC,SAAS2I,GAAS7G,EAAO9B,UACf8B,EAAM7B,WACP8H,SACK/H,QACDmI,UACKrG,EAAM2G,gBACXL,UACItG,EAAM2G,gBACVJ,UAGKvG,EAAMvB,WAAauB,EAAM2G,aACvB3G,EAAMvB,YAAcuB,EAAM2G,gBACjCH,UACI,aAGRL,UACIjI,IAAcmI,IAAgBnI,IAAcoI,QAChDF,UACIlI,IAAcqI,QAClBL,UACI,SAEJ,MCtEYrP,yBAaNC,EAAOzL,EAAMyb,EAAYrI,EAAWsI,kBAM1C1b,KAAOA,OAKPyL,MAAQA,OAMRgQ,WAAaA,OAMbrI,UAAYA,OAMZN,KAAO4I,GAAYd,OAOnBS,OAAQ,OAMRC,YAAa,OAMb1J,aAAe,UAMf4J,UAAW,OAQXG,aAAc,OAEdjG,gBAAiB,4CAQftS,OACDwY,EAAKna,KAAKgK,MAAOnH,EAAK7C,KAAKga,WAAWhQ,aACrChK,KAAKzB,MACP4b,EAAG,GAAKxY,EAAE,KAAOkB,EAAG,GAAKlB,EAAE,KAAOkB,EAAG,GAAKlB,EAAE,KAAOwY,EAAG,GAAKxY,EAAE,IAAM,GAEnEkB,EAAG,GAAKlB,EAAE,KAAOwY,EAAG,GAAKxY,EAAE,KAAOwY,EAAG,GAAKxY,EAAE,KAAOkB,EAAG,GAAKlB,EAAE,IAAM,kCASjEA,UACC3B,KAAKoa,QAAQzY,+CAQd3B,KAAKgK,MAAM,KAAOhK,KAAKga,WAAWhQ,MAAM,uCAKzCqQ,EAAO,IAAItQ,EACf/J,KAAKgK,MAAOhK,KAAKzB,KAAMyB,KAAKga,WAAYha,KAAK2R,UAAW3R,KAAKqR,aAE/DgJ,EAAKN,SAAiB/Z,KAAK+Z,SAC3BM,EAAKlK,aAAiBnQ,KAAKmQ,aAC3BkK,EAAKpG,eAAiBjU,KAAKiU,eAC3BoG,EAAKT,MAAiB5Z,KAAK4Z,MAC3BS,EAAKR,WAAiB7Z,KAAK6Z,WAEpBQ,WC7HI,SAASC,GAAOzX,EAAIC,UAC7BD,EAAG,KAAOC,EAAG,IACXD,EAAG,KAAOC,EAAG,GCKN,SAASyX,GAAWJ,EAAItX,EAAIC,UACjCqX,EAAG,GAAKrX,EAAG,KAAOD,EAAG,GAAKC,EAAG,KAAOD,EAAG,GAAKC,EAAG,KAAOqX,EAAG,GAAKrX,EAAG,ICD5D,SAAS0X,GAAcC,EAAIC,OAClC7X,EAAK4X,EAAGzQ,MACRlH,EAAK4X,EAAG1Q,aAGVnH,EAAG,GAAKC,EAAG,GAAW,EACtBD,EAAG,GAAKC,EAAG,IAAY,EAIvBD,EAAG,KAAOC,EAAG,GAAWD,EAAG,GAAKC,EAAG,GAAK,GAAK,EAOnD,SAAsB2X,EAAIC,EAAI7X,EAAIC,MAG5B2X,EAAGlc,OAASmc,EAAGnc,KACjB,OAAOkc,EAAGlc,KAAO,GAAK,KAOyC,IAA7Dgc,GAAW1X,EAAI4X,EAAGT,WAAWhQ,MAAO0Q,EAAGV,WAAWhQ,cAE3CyQ,EAAGL,QAAQM,EAAGV,WAAWhQ,QAAe,EAAL,SAGrCyQ,EAAG9I,WAAa+I,EAAG/I,UAAa,GAAK,EArBvCgJ,CAAaF,EAAIC,EAAI7X,GCTf,SAAS+X,GAAcC,EAAIlZ,EAAG0T,OACrCpW,EAAI,IAAI8K,GAAWpI,GAAG,EAAOkZ,EAAeA,EAAGlJ,WAC/C3S,EAAI,IAAI+K,GAAWpI,GAAG,EAAOkZ,EAAGb,WAAYa,EAAGlJ,kBAGjD2I,GAAOO,EAAG7Q,MAAO6Q,EAAGb,WAAWhQ,QAEjC8Q,QAAQC,KAAK,qCAAsCF,GAIrD5b,EAAE+b,UAAYhc,EAAEgc,UAAYH,EAAGG,UAG3BR,GAAcxb,EAAG6b,EAAGb,YAAc,IACpCa,EAAGb,WAAWzb,MAAO,EACrBS,EAAET,MAAO,GAMXsc,EAAGb,WAAWA,WAAahb,EAC3B6b,EAAGb,WAAa/a,EAEhBoW,EAAM7U,KAAKxB,GACXqW,EAAM7U,KAAKvB,GAEJoW,EC3BT,SAASxP,GAAanH,EAAGC,UACfD,EAAE,GAAKC,EAAE,GAAOD,EAAE,GAAKC,EAAE,GAWnC,SAASmH,GAAWpH,EAAGC,UACbD,EAAE,GAAKC,EAAE,GAAOD,EAAE,GAAKC,EAAE,GCRpB,SAASsc,GAAsBC,EAAKC,EAAK9F,OAKhDiB,EDyBO,SAAU8E,EAAIC,EAAI9M,EAAIC,EAAI8M,OAOjCC,EAAK,CAACF,EAAG,GAAKD,EAAG,GAAIC,EAAG,GAAKD,EAAG,IAChCI,EAAK,CAAChN,EAAG,GAAKD,EAAG,GAAIC,EAAG,GAAKD,EAAG,aAK7BkN,EAAQ9Z,EAAGmX,EAAGzX,SACd,CACLM,EAAE,GAAKmX,EAAIzX,EAAE,GACbM,EAAE,GAAKmX,EAAIzX,EAAE,QAOXqa,EAAI,CAACnN,EAAG,GAAK6M,EAAG,GAAI7M,EAAG,GAAK6M,EAAG,IACjC/U,EAAWR,GAAa0V,EAAIC,GAC5BG,EAAWtV,EAAQA,EACjBuV,EAAW9V,GAAWyV,EAAIA,MAQ5BI,EAAW,EAA+B,KAItC7C,EAAIjT,GAAa6V,EAAGF,GAAMnV,KAC5ByS,EAAI,GAAKA,EAAI,SAER,SAEHha,EAAI+G,GAAa6V,EAAGH,GAAMlV,SAC5BvH,EAAI,GAAKA,EAAI,EAER,KAEC,IAANga,GAAiB,IAANA,EAENwC,EAAkB,KAAO,CAACG,EAAQL,EAAItC,EAAGyC,IAExC,IAANzc,GAAiB,IAANA,EAENwc,EAAkB,KAAO,CAACG,EAAQlN,EAAIzP,EAAG0c,IAE3C,CAACC,EAAQL,EAAItC,EAAGyC,QAWzBI,GADAtV,EAAQR,GAAa6V,EAAGH,IACLlV,GAEJ,SAEN,SAGHwV,EAAK/V,GAAWyV,EAAIG,GAAKE,EACzBE,EAAKD,EAAK/V,GAAWyV,EAAIC,GAAMI,EAC/BG,EAAOvZ,KAAKwZ,IAAIH,EAAIC,GACpBG,EAAOzZ,KAAK0Z,IAAIL,EAAIC,UAItBC,GAAQ,GAAKE,GAAQ,EAGV,IAATF,EACKT,EAAkB,KAAO,CAACG,EAAQL,EAAIW,EAAO,EAAIA,EAAO,EAAGR,IAGvD,IAATU,EACKX,EAAkB,KAAO,CAACG,EAAQL,EAAIa,EAAO,EAAIA,EAAO,EAAGV,IAGhED,GAA4B,IAATS,GAAuB,IAATE,EAAmB,KAGjD,CACLR,EAAQL,EAAIW,EAAO,EAAIA,EAAO,EAAGR,GACjCE,EAAQL,EAAIa,EAAO,EAAIA,EAAO,EAAGV,IAI9B,KC9HOjM,CACZ4L,EAAIlR,MAAOkR,EAAIlB,WAAWhQ,MAC1BmR,EAAInR,MAAOmR,EAAInB,WAAWhQ,OAGtBmS,EAAiB7F,EAAQA,EAAM7V,OAAS,KACvB,IAAnB0b,EAAsB,OAAO,KAGT,IAAnBA,IACA7B,GAAOY,EAAIlR,MAAOmR,EAAInR,QACtBsQ,GAAOY,EAAIlB,WAAWhQ,MAAOmR,EAAInB,WAAWhQ,eACxC,KAGc,IAAnBmS,GAAwBjB,EAAIvJ,YAAcwJ,EAAIxJ,iBAMzC,KAIc,IAAnBwK,SAGG7B,GAAOY,EAAIlR,MAAOsM,EAAM,KAAQgE,GAAOY,EAAIlB,WAAWhQ,MAAOsM,EAAM,KACtEsE,GAAcM,EAAK5E,EAAM,GAAIjB,GAI1BiF,GAAOa,EAAInR,MAAOsM,EAAM,KAAQgE,GAAOa,EAAInB,WAAWhQ,MAAOsM,EAAM,KACtEsE,GAAcO,EAAK7E,EAAM,GAAIjB,GAExB,MAIHnL,EAAgB,GAClBkS,GAAgB,EAChBC,GAAgB,SAEhB/B,GAAOY,EAAIlR,MAAOmR,EAAInR,OACxBoS,GAAe,EACsB,IAA5B5B,GAAcU,EAAKC,GAC5BjR,EAAO1J,KAAK2a,EAAKD,GAEjBhR,EAAO1J,KAAK0a,EAAKC,GAGfb,GAAOY,EAAIlB,WAAWhQ,MAAOmR,EAAInB,WAAWhQ,OAC9CqS,GAAgB,EAC2C,IAAlD7B,GAAcU,EAAIlB,WAAYmB,EAAInB,YAC3C9P,EAAO1J,KAAK2a,EAAInB,WAAYkB,EAAIlB,YAEhC9P,EAAO1J,KAAK0a,EAAIlB,WAAYmB,EAAInB,YAG7BoC,GAAgBC,GAAkBD,GAErCjB,EAAI9J,KAAO+H,GACX8B,EAAI7J,KAAQ8J,EAAIvB,QAAUsB,EAAItB,MAC1BP,GAAkBC,GAElB8C,IAAiBC,GAGnBzB,GAAc1Q,EAAO,GAAG8P,WAAY9P,EAAO,GAAGF,MAAOqL,GAEhD,GAILgH,GACFzB,GAAc1Q,EAAO,GAAIA,EAAO,GAAGF,MAAOqL,GACnC,GAILnL,EAAO,KAAOA,EAAO,GAAG8P,YAC1BY,GAAc1Q,EAAO,GAAIA,EAAO,GAAGF,MAAOqL,GAC1CuF,GAAc1Q,EAAO,GAAIA,EAAO,GAAGF,MAAOqL,GACnC,IAITuF,GAAc1Q,EAAO,GAAIA,EAAO,GAAGF,MAAOqL,GAC1CuF,GAAc1Q,EAAO,GAAG8P,WAAY9P,EAAO,GAAGF,MAAOqL,GAE9C,GCtGM,SAASiH,GAAgBC,EAAKC,MACvCD,IAAQC,EAAK,OAAO,KAGuC,IAA3DjC,GAAWgC,EAAIvS,MAAOuS,EAAIvC,WAAWhQ,MAAOwS,EAAIxS,QACoB,IAAtEuQ,GAAWgC,EAAIvS,MAAOuS,EAAIvC,WAAWhQ,MAAOwS,EAAIxC,WAAWhQ,cAGvDsQ,GAAOiC,EAAIvS,MAAOwS,EAAIxS,OAAeuS,EAAInC,QAAQoC,EAAIxC,WAAWhQ,QAAU,EAAI,EAG9EuS,EAAIvS,MAAM,KAAOwS,EAAIxS,MAAM,GAAWuS,EAAIvS,MAAM,GAAKwS,EAAIxS,MAAM,IAAM,EAAI,EAI7C,IAA5BwQ,GAAc+B,EAAKC,GAAmBA,EAAIC,QAAQF,EAAIvS,QAAU,EAAI,EAIjEuS,EAAInC,QAAQoC,EAAIxS,QAAU,EAAI,KAGnCuS,EAAI5K,YAAc6K,EAAI7K,iBAQjB4K,EAAI5K,WAAa,EAAI,MAPxB9O,EAAK0Z,EAAIvS,MAAOlH,EAAK0Z,EAAIxS,aACzBnH,EAAG,KAAOC,EAAG,IAAMD,EAAG,KAAOC,EAAG,IAClCD,EAAK0Z,EAAIvC,WAAWhQ,MAAOlH,EAAK0Z,EAAIxC,WAAWhQ,MAC3CnH,EAAG,KAAOC,EAAG,IAAMD,EAAG,KAAOC,EAAG,GAAW,EACnCyZ,EAAIvB,UAAYwB,EAAIxB,UAAY,GAAK,GAMlB,IAA5BR,GAAc+B,EAAKC,GAAa,GAAK,ECgB9C,SAASE,GAAQC,EAAKC,EAAcC,EAAWC,OACzCnb,EAAGkB,EACHka,EAASJ,EAAM,EACblc,EAASmc,EAAanc,WAE5BkB,EAAKib,EAAaD,GAAK3S,MAEnB+S,EAAStc,IACXoC,EAAK+Z,EAAaG,GAAQ/S,OAIrB+S,EAAStc,GAAUoC,EAAG,KAAOlB,EAAE,IAAMkB,EAAG,KAAOlB,EAAE,IAAI,KACrDkb,EAAUE,UACNA,EAITla,EAAK+Z,IAFHG,GAEwB/S,UAG5B+S,EAASJ,EAAM,EAERE,EAAUE,IAAWA,GAAUD,GACpCC,WAEKA,EAQM,SAASC,GAAaC,EAAc7L,OAC7CvS,EAAGqe,EAMHhK,EALE0J,EAxFR,SAAqBK,OACf/J,EAAOrU,EAAGqe,EAAKhb,EACb0a,EAAe,OAChB/d,EAAI,EAAGqe,EAAMD,EAAaxc,OAAQ5B,EAAIqe,EAAKre,MAC9CqU,EAAQ+J,EAAape,IACVN,MAAQ2U,EAAM6G,WACrB7G,EAAM3U,MAAQ2U,EAAM8G,WAAWD,WACjC6C,EAAapc,KAAK0S,WAIlBiK,GAAS,GACLA,OACNA,GAAS,EACJte,EAAI,EAAGqe,EAAMN,EAAanc,OAAQ5B,EAAIqe,EAAKre,IACzCA,EAAI,EAAKqe,GAC4C,IAAxD1C,GAAcoC,EAAa/d,GAAI+d,EAAa/d,EAAI,MAChDqD,EAAM0a,EAAa/d,GACnB+d,EAAa/d,GAAK+d,EAAa/d,EAAI,GACnC+d,EAAa/d,EAAI,GAAKqD,EACtBib,GAAS,OAMVte,EAAI,EAAGqe,EAAMN,EAAanc,OAAQ5B,EAAIqe,EAAKre,KAC9CqU,EAAQ0J,EAAa/d,IACf8d,IAAM9d,MAKTA,EAAI,EAAGqe,EAAMN,EAAanc,OAAQ5B,EAAIqe,EAAKre,KAC9CqU,EAAQ0J,EAAa/d,IACVN,OACT2D,EAAMgR,EAAMyJ,IACZzJ,EAAMyJ,IAAMzJ,EAAM8G,WAAW2C,IAC7BzJ,EAAM8G,WAAW2C,IAAMza,UAIpB0a,EA8CcQ,CAAYH,GAG3BJ,EAAY,GACZQ,EAAS,OAGVxe,EAAI,EAAGqe,EAAMN,EAAanc,OAAQ5B,EAAIqe,EAAKre,QAC1Cge,EAAUhe,QACRye,EAAU,CAAC,IAEZV,EAAa/d,GAAGoV,eAQV7C,IAAcqI,KAAemD,EAAa/d,GAAG8S,WAAa0L,EAAO5c,OAAS,EACnF4c,EAAOA,EAAO5c,OAAS,GAAGD,KAAK8c,EAAQ,IAEvCD,EAAO7c,KAAK8c,GAVRlM,IAAcqI,IAAemD,EAAa/d,GAAG8S,WAA+B,IAAlB0L,EAAO5c,OAExC,IAAlB4c,EAAO5c,OAChB4c,EAAO7c,KAAK,CAAC,CAAC8c,KAEdD,EAAOA,EAAO5c,OAAS,GAAGD,KAAK8c,EAAQ,IAJvCD,EAAO7c,KAAK8c,OAYVC,EAASF,EAAO5c,OAAS,EAC3Bkc,EAAM9d,EAEJ2e,EAAUZ,EAAa/d,GAAGmL,UAChCsT,EAAQ,GAAG9c,KAAKgd,GAETb,GAAO9d,GACZqU,EAAQ0J,EAAaD,GACrBE,EAAUF,IAAO,EAEbzJ,EAAM3U,MACR2U,EAAMgH,aAAc,EACpBhH,EAAM8H,UAAcuC,IAEpBrK,EAAM8G,WAAWE,aAAc,EAC/BhH,EAAM8G,WAAWgB,UAAcuC,GAIjCV,EADAF,EAAMzJ,EAAMyJ,MACK,EACjBW,EAAQ,GAAG9c,KAAKoc,EAAaD,GAAK3S,OAClC2S,EAAMD,GAAQC,EAAKC,EAAcC,EAAWhe,GAK9CqU,EAAQ0J,EAFRD,GAAe,IAATA,EAAa9d,EAAI8d,GAGvBE,EAAUF,GAAOE,EAAU3J,EAAMyJ,MAAO,EACxCzJ,EAAM8G,WAAWE,aAAc,EAC/BhH,EAAM8G,WAAWgB,UAAcuC,SAM1BF,ECzJT,OAAiBI,MACQA,GAEzB,SAASA,GAAUnf,EAAM6B,QACfH,gBAAgByd,IAAY,OAAO,IAAIA,GAAUnf,EAAM6B,WAExD7B,KAAOA,GAAQ,QACfmC,OAAST,KAAK1B,KAAKmC,YACnBN,QAAUA,GAAWud,GAEtB1d,KAAKS,OAAS,MACT,IAAI5B,GAAKmB,KAAKS,QAAU,GAAK,EAAG5B,GAAK,EAAGA,SAAU8e,MAAM9e,GAIrE,SAAS6e,GAAehf,EAAGC,UAChBD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,EAGpC8e,GAAU3Y,UAAY,CAElBtE,KAAM,SAAUod,QACPtf,KAAKkC,KAAKod,QACVnd,cACAod,IAAI7d,KAAKS,OAAS,IAG3BC,IAAK,cACmB,IAAhBV,KAAKS,YAELqd,EAAM9d,KAAK1B,KAAK,eACfmC,SAEDT,KAAKS,OAAS,SACTnC,KAAK,GAAK0B,KAAK1B,KAAK0B,KAAKS,aACzBkd,MAAM,SAEVrf,KAAKoC,MAEHod,IAGXC,KAAM,kBACK/d,KAAK1B,KAAK,IAGrBuf,IAAK,SAAUlB,WACPre,EAAO0B,KAAK1B,KACZ6B,EAAUH,KAAKG,QACfyd,EAAOtf,EAAKqe,GAETA,EAAM,GAAG,KACRva,EAAUua,EAAM,GAAM,EACtBzc,EAAU5B,EAAK8D,MACfjC,EAAQyd,EAAM1d,IAAY,EAAG,MACjC5B,EAAKqe,GAAOzc,EACZyc,EAAMva,EAGV9D,EAAKqe,GAAOiB,GAGhBD,MAAO,SAAUhB,WACTre,EAAO0B,KAAK1B,KACZ6B,EAAUH,KAAKG,QACf6d,EAAahe,KAAKS,QAAU,EAC5Bmd,EAAOtf,EAAKqe,GAETA,EAAMqB,GAAY,KACjBzf,EAAoB,GAAZoe,GAAO,GACfne,EAAQD,EAAO,EACf0f,EAAO3f,EAAKC,MAEZC,EAAQwB,KAAKS,QAAUN,EAAQ7B,EAAKE,GAAQyf,GAAQ,IACpD1f,EAAOC,EACPyf,EAAO3f,EAAKE,IAEZ2B,EAAQ8d,EAAML,IAAS,EAAG,MAE9Btf,EAAKqe,GAAOsB,EACZtB,EAAMpe,EAGVD,EAAKqe,GAAOiB,kBChFpB,IAAM1B,GAAM1Z,KAAK0Z,IACXF,GAAMxZ,KAAKwZ,IAEbhB,GAAY,EAGhB,SAASkD,GAAeC,EAAexM,EAAWyM,EAAO9d,EAAG4N,EAAM+F,OAC5DpV,EAAGqe,EAAKmB,EAAIC,EAAI7D,EAAIC,MACnB7b,EAAI,EAAGqe,EAAMiB,EAAc1d,OAAS,EAAG5B,EAAIqe,EAAKre,OACnDwf,EAAKF,EAActf,GACnByf,EAAKH,EAActf,EAAI,GACvB4b,EAAK,IAAI1Q,GAAWsU,GAAI,OAAOnZ,EAAWyM,GAC1C+I,EAAK,IAAI3Q,GAAWuU,GAAI,EAAO7D,EAAW9I,GAC1C8I,EAAGT,WAAaU,EAEZ2D,EAAG,KAAOC,EAAG,IAAMD,EAAG,KAAOC,EAAG,IAIpC7D,EAAGO,UAAYN,EAAGM,UAAYoD,EACzBnK,IACHwG,EAAGxG,gBAAiB,EACpByG,EAAGzG,gBAAiB,GAElBuG,GAAcC,EAAIC,GAAM,EAC1BA,EAAGnc,MAAO,EAEVkc,EAAGlc,MAAO,MAGNmB,EAAI2e,EAAG,GAAInf,EAAImf,EAAG,GACxBnQ,EAAK,GAAK8N,GAAI9N,EAAK,GAAIxO,GACvBwO,EAAK,GAAK8N,GAAI9N,EAAK,GAAIhP,GACvBgP,EAAK,GAAKgO,GAAIhO,EAAK,GAAIxO,GACvBwO,EAAK,GAAKgO,GAAIhO,EAAK,GAAIhP,GAIvBoB,EAAEE,KAAKia,GACPna,EAAEE,KAAKka,IClCX,IAAM6D,GAAQ,GAsCC,SAASC,GAAQC,EAASC,EAAUtN,GACjB,iBAArBqN,EAAQ,GAAG,GAAG,KACvBA,EAAU,CAACA,IAEoB,iBAAtBC,EAAS,GAAG,GAAG,KACxBA,EAAW,CAACA,QAEVC,EA1CN,SAA0BF,EAASC,EAAUtN,OACvCiM,EAAS,YACToB,EAAQhe,OAASie,EAASje,QAAW,IAC5B2Q,IAAcmI,GACvB8D,EAASkB,GACAnN,IAAcqI,GACvB4D,EAASoB,EACArN,IAAcoI,IACdpI,IAAcsI,KACvB2D,EAA6B,IAAnBoB,EAAQhe,OAAgBie,EAAWD,IAG1CpB,EA8BOuB,CAAiBH,EAASC,EAAUtN,MAC9CuN,SACKA,IAAYJ,GAAQ,KAAOI,MAE9BE,EAAQ,CAACC,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,GACzCC,EAAQ,CAACD,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,GAGzCE,EDdO,SAAmBP,EAASC,EAAUG,EAAOE,EAAO3N,OAE7D6N,EAAYhL,EAAgBpV,EAAGqgB,EAAIjd,EAAGkd,EADpCH,EAAa,IAAII,GAAM,KAAM5E,QAG9B3b,EAAI,EAAGqgB,EAAKT,EAAQhe,OAAQ5B,EAAIqgB,EAAIrgB,QAElCoD,EAAI,EAAGkd,GADZF,EAAaR,EAAQ5f,IACO4B,OAAQwB,EAAIkd,EAAIld,KAC1CgS,EAAuB,IAANhS,IACG+Y,KACpBkD,GAAee,EAAWhd,IAAI,EAAM+Y,GAAWgE,EAAYH,EAAO5K,OAIjEpV,EAAI,EAAGqgB,EAAKR,EAASje,OAAQ5B,EAAIqgB,EAAIrgB,QAEnCoD,EAAI,EAAGkd,GADZF,EAAaP,EAAS7f,IACM4B,OAAQwB,EAAIkd,EAAIld,IAC1CgS,EAAuB,IAANhS,EACbmP,IAAcqI,KAAYxF,GAAiB,GAC3CA,GAAgB+G,KACpBkD,GAAee,EAAWhd,IAAI,EAAO+Y,GAAWgE,EAAYD,EAAO9K,UAIhE+K,ECTYK,CAAUZ,EAASC,EAAUG,EAAOE,EAAO3N,UAG9DuN,EArCF,SAAuBF,EAASC,EAAUG,EAAOE,EAAO3N,OAClDiM,EAAS,YACTwB,EAAM,GAAKE,EAAM,IACjBA,EAAM,GAAKF,EAAM,IACjBA,EAAM,GAAKE,EAAM,IACjBA,EAAM,GAAKF,EAAM,MACRzN,IAAcmI,GACvB8D,EAASkB,GACAnN,IAAcqI,GACvB4D,EAASoB,EACArN,IAAcoI,IACdpI,IAAcsI,KACvB2D,EAASoB,EAAQvO,OAAOwO,KAGrBrB,EAsBGiC,CAAcb,EAASC,EAAUG,EAAOE,EAAO3N,IAEhDuN,IAAYJ,GAAQ,KAAOI,EAOrB3B,GCjEF,SAAmBgC,EAAYP,EAASC,EAAUG,EAAOE,EAAO3N,WAMzEjJ,EAAMzG,EAAM6d,EALVpI,EAAY,IAAItX,EAAKyc,IACrBW,EAAe,GAEfuC,EAAahd,KAAKwZ,IAAI6C,EAAM,GAAIE,EAAM,IAIf,IAAtBC,EAAWve,QAAc,KAC1ByS,EAAQ8L,EAAWte,SACvBuc,EAAazc,KAAK0S,GAGb9B,IAAcmI,IAAgBrG,EAAMlJ,MAAM,GAAKwV,GAC/CpO,IAAcqI,IAAgBvG,EAAMlJ,MAAM,GAAK6U,EAAM,YAItD3L,EAAM3U,KAAM,CACdmD,EAAQyG,EAAOgP,EAAU9X,OAAO6T,GAGZ/K,EAAhBA,KAFJoX,EAAQpI,EAAUjW,WAESiW,EAAUhP,KAAKA,GACf,KAE3BzG,EAAOyV,EAAUzV,KAAKA,OAEhBuR,EAAY9K,EAAOA,EAAK9J,IAAM,QAEpCsb,GAAczG,EAAOD,EAAW7B,GAC5B1P,GACwD,IAAtDuZ,GAAqB/H,EAAOxR,EAAKrD,IAAK2gB,KACxCrF,GAAczG,EAAOD,EAAW7B,GAChCuI,GAAczG,EAAOxR,EAAKrD,IAAK+S,IAI/BjJ,GACwD,IAAtD8S,GAAqB9S,EAAK9J,IAAK6U,EAAO8L,GAAmB,KACvDS,EAAWtX,EAKfwR,GAAc1G,GAJUwM,EAApBA,IAAaF,EAAkBpI,EAAUhP,KAAKsX,GACf,MAERA,EAASphB,IAAM,KACF+S,GACxCuI,GAAczG,EAAWD,EAAe7B,SAI5C8B,EAAQA,EAAM8G,WACdtY,EAAOyG,EAAOgP,EAAU5B,KAAKrC,GAEzB/K,GAAQzG,IAEUyG,EAAhBA,IAASoX,EAAcpI,EAAUhP,KAAKA,GACf,KAE3BzG,EAAOyV,EAAUzV,KAAKA,GACtByV,EAAU1X,OAAOyT,GAEbxR,GAAQyG,GACV8S,GAAqB9S,EAAK9J,IAAKqD,EAAKrD,IAAK2gB,WAK1C/B,EDLcyC,CAAkBV,EAAYP,EAASC,EAAUG,EAAOE,EAAO3N,GAI1CA,GEtEtC,SAAU3I,MAAM3D,WACpBL,OAAOC,eAAe+D,MAAM3D,UAAW,OAAQ,CAC7CP,cAAc,EACdoD,MAAO,SAAeA,GACpB,GAAI3H,MAAAA,KACF,MAAM,IAAIiE,UAAUjE,KAAO,qBAG7B,IAAI2f,EAAYlb,OAAOzE,MAEnBS,EAAS+B,KAAK0Z,IAAI1Z,KAAKwZ,IAAI2D,EAAUlf,OAAQ,kBAAmB,IAAM,EAEtEmf,EAAgB,KAAKtK,WAAYuK,SAAS7a,OAAOsQ,UAAU,IAAK,KAAW,EAE/EsK,EAAgBA,EAAgB,EAAIpd,KAAK0Z,IAAIzb,EAASmf,EAAe,GAAKpd,KAAKwZ,IAAI4D,EAAenf,GAElG,IAAIqf,EAAc,KAAKxK,gBAA8BpQ,IAAjBoQ,UAAU,GAAmBuK,SAAS7a,OAAOsQ,UAAU,IAAK,KAAO,EAAI7U,EAI3G,IAFAqf,EAAcA,EAAc,EAAItd,KAAK0Z,IAAIzb,EAAS6U,UAAU,GAAI,GAAK9S,KAAKwZ,IAAI8D,EAAarf,GAEpFmf,EAAgBE,GACrBH,EAAUC,GAAiBjY,IAEzBiY,EAGJ,OAAOD,GAETnb,UAAU,IAOdQ,OAAO+a,SAAW/a,OAAO+a,UAAY,SAAUpY,GAC7C,MAAwB,iBAAVA,GAAsBoY,SAASpY,IAG/C3C,OAAOgb,UAAYhb,OAAOgb,WAAa,SAAUC,GAC/C,MAAsB,iBAARA,GACdF,SAASE,IACTzd,KAAKC,MAAMwd,KAASA,GAGtBjb,OAAOkb,WAAalb,OAAOkb,YAAcA,WAEzClb,OAAOmb,MAAQnb,OAAOmb,OAAS,SAAUxY,GACvC,OAAOA,GAAUA,GAMnBnF,KAAK4d,MAAQ5d,KAAK4d,OAAS,SAAU1gB,GACnC,OAAOA,EAAI,EAAI8C,KAAK6d,KAAK3gB,GAAK8C,KAAKC,MAAM/C,IAG3C,IAAI4gB,GAAa,aAEjBA,GAAWxb,UAAUyb,YAAc,WACjC,MAAO,IAETD,GAAWxb,UAAU0b,SAAW,WAC9B,OAAOF,IAETA,GAAWxb,UAAU2b,oBAAsB,SAA8BC,EAAIC,EAAIC,GAC/E,OAAOpe,KAAKiP,IAAIiP,EAAKC,IAAOC,GAG9B,IAAIC,GAA4B,SAAUlY,GACzC,SAASkY,EAA0BC,GAClCnY,EAAMhI,KAAKX,KAAM8gB,GACjB9gB,KAAK+gB,KAAO,2BACZ/gB,KAAK8gB,QAAUA,EACf9gB,KAAKghB,OAAQ,IAAKrY,GAASqY,MAO5B,OAJKrY,IAAQkY,EAAyBI,UAAYtY,GAClDkY,EAAyB/b,UAAYL,OAAOyc,OAAQvY,GAASA,EAAM7D,WACnE+b,EAAyB/b,UAAUqc,YAAcN,EAE1CA,GACNlY,OAEEyY,GAAS,aAETC,GAAoB,CAAEC,UAAW,CAAE/c,cAAc,IAErD6c,GAAOjB,MAAQ,SAAgB/c,GAAK,OAAO4B,OAAOmb,MAAM/c,IACxDge,GAAOG,iBAAmB,SAA2Bne,GAAK,OAAOA,GACjEge,GAAOI,iBAAmB,SAA2Bpe,GAAK,OAAOA,GACjEge,GAAOK,WAAa,SAAqBre,GAAK,OAAQ4B,OAAO+a,SAAS3c,IACtEie,GAAkBC,UAAUtV,IAAM,WAAc,OAAOhH,OAAOsc,WAE9D7c,OAAOid,iBAAkBN,GAAQC,IAEjC,IAAIM,GAAa,aAEbC,GAAW,aAEXC,GAAa,aAEjB,SAASC,MAIT,IAAIC,GAAa,SAASA,IAIxB,GAHA/hB,KAAKN,EAAI,KACTM,KAAKd,EAAI,KACTc,KAAK2Y,EAAI,KACgB,IAArBrD,UAAU7U,OACZT,KAAKN,EAAI,EACTM,KAAKd,EAAI,EACTc,KAAK2Y,EAAIoJ,EAAWC,mBACf,GAAyB,IAArB1M,UAAU7U,OAAc,CACjC,IAAIwhB,EAAI3M,UAAU,GAClBtV,KAAKN,EAAIuiB,EAAEviB,EACXM,KAAKd,EAAI+iB,EAAE/iB,EACXc,KAAK2Y,EAAIsJ,EAAEtJ,OACmB,IAArBrD,UAAU7U,QACnBT,KAAKN,EAAI4V,UAAU,GACnBtV,KAAKd,EAAIoW,UAAU,GACnBtV,KAAK2Y,EAAIoJ,EAAWC,eACU,IAArB1M,UAAU7U,SACnBT,KAAKN,EAAI4V,UAAU,GACnBtV,KAAKd,EAAIoW,UAAU,GACnBtV,KAAK2Y,EAAIrD,UAAU,KAInB4M,GAAkB,CAAEC,sBAAuB,CAAE5d,cAAc,GAAO6d,iBAAkB,CAAE7d,cAAc,GAAOyd,cAAe,CAAEzd,cAAc,GAAO8d,EAAG,CAAE9d,cAAc,GAAO+d,EAAG,CAAE/d,cAAc,GAAOge,EAAG,CAAEhe,cAAc,IAC5Nwd,GAAWjd,UAAU0d,YAAc,SAAsBC,EAAe9a,GACtE,OAAQ8a,GACN,KAAKV,GAAWM,EACdriB,KAAKN,EAAIiI,EACT,MACF,KAAKoa,GAAWO,EACdtiB,KAAKd,EAAIyI,EACT,MACF,KAAKoa,GAAWQ,EACdviB,KAAK2Y,EAAIhR,EACT,MACF,QACE,MAAM,IAAIkZ,GAAyB,2BAA6B4B,KAGtEV,GAAWjd,UAAU4d,SAAW,WAC9B,GAAyB,IAArBpN,UAAU7U,OAAc,CAC1B,IAAI+J,EAAQ8K,UAAU,GACtB,OAAItV,KAAKN,IAAM8K,EAAM9K,GAGjBM,KAAKd,IAAMsL,EAAMtL,EAIhB,GAAyB,IAArBoW,UAAU7U,OAAc,CACjC,IAAIwhB,EAAI3M,UAAU,GACdsL,EAAYtL,UAAU,GAC1B,QAAKgL,GAAWG,oBAAoBzgB,KAAKN,EAAGuiB,EAAEviB,EAAGkhB,MAG5CN,GAAWG,oBAAoBzgB,KAAKd,EAAG+iB,EAAE/iB,EAAG0hB,KAMrDmB,GAAWjd,UAAU6d,YAAc,SAAsBF,GACvD,OAAQA,GACN,KAAKV,GAAWM,EACd,OAAOriB,KAAKN,EACd,KAAKqiB,GAAWO,EACd,OAAOtiB,KAAKd,EACd,KAAK6iB,GAAWQ,EACd,OAAOviB,KAAK2Y,EAGhB,MAAM,IAAIkI,GAAyB,2BAA6B4B,IAElEV,GAAWjd,UAAU8d,SAAW,SAAmBpY,GACjD,OAAOxK,KAAKN,IAAM8K,EAAM9K,GACjBM,KAAKd,IAAMsL,EAAMtL,IACfc,KAAK2Y,IAAMnO,EAAMmO,GAAKyI,GAAOjB,MAAMngB,KAAK2Y,KAC1CyI,GAAOjB,MAAM3V,EAAMmO,IAE5BoJ,GAAWjd,UAAUwV,OAAS,SAAiB9P,GAC7C,OAAMA,aAAiBuX,IAGhB/hB,KAAK0iB,SAASlY,IAEvBuX,GAAWjd,UAAU+d,SAAW,SAAmBZ,EAAGrB,GACpD,OAAON,GAAWG,oBAAoBzgB,KAAK2Y,EAAGsJ,EAAEtJ,EAAGiI,IAErDmB,GAAWjd,UAAUge,UAAY,SAAoBC,GACnD,IAAIvY,EAAQuY,EACZ,OAAI/iB,KAAKN,EAAI8K,EAAM9K,GAAa,EAC5BM,KAAKN,EAAI8K,EAAM9K,EAAY,EAC3BM,KAAKd,EAAIsL,EAAMtL,GAAa,EAC5Bc,KAAKd,EAAIsL,EAAMtL,EAAY,EACxB,GAET6iB,GAAWjd,UAAUke,MAAQ,aAW7BjB,GAAWjd,UAAUuV,KAAO,WAC1B,OAAO,IAAI0H,GAAW/hB,OAExB+hB,GAAWjd,UAAUme,SAAW,WAC9B,MAAO,IAAMjjB,KAAKN,EAAI,KAAOM,KAAKd,EAAI,KAAOc,KAAK2Y,EAAI,KAExDoJ,GAAWjd,UAAUoe,WAAa,SAAqBjB,GACrD,IAAIkB,EAAKnjB,KAAKN,EAAIuiB,EAAEviB,EAChB0jB,EAAKpjB,KAAKd,EAAI+iB,EAAE/iB,EAChBmkB,EAAKrjB,KAAK2Y,EAAIsJ,EAAEtJ,EACpB,OAAOnW,KAAK8D,KAAK6c,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,IAE5CtB,GAAWjd,UAAUwe,SAAW,SAAmBrB,GACjD,IAAIkB,EAAKnjB,KAAKN,EAAIuiB,EAAEviB,EAChB0jB,EAAKpjB,KAAKd,EAAI+iB,EAAE/iB,EACpB,OAAOsD,KAAK8D,KAAK6c,EAAKA,EAAKC,EAAKA,IAElCrB,GAAWjd,UAAUye,SAAW,WAC9B,IAAIlG,EAAS,GAGb,OADAA,EAAS,IADTA,EAAS,GAAKA,EAAS0E,GAAWwB,SAASvjB,KAAKN,IACzBqiB,GAAWwB,SAASvjB,KAAKd,IAGlD6iB,GAAWjd,UAAU0e,cAAgB,SAAwBhZ,GAC3DxK,KAAKN,EAAI8K,EAAM9K,EACfM,KAAKd,EAAIsL,EAAMtL,EACfc,KAAK2Y,EAAInO,EAAMmO,GAEjBoJ,GAAWjd,UAAUyb,YAAc,WACjC,MAAO,CAACoB,GAAYC,GAAUE,KAEhCC,GAAWjd,UAAU0b,SAAW,WAC9B,OAAOuB,IAETA,GAAWwB,SAAW,WACpB,GAAyB,IAArBjO,UAAU7U,OAAc,CAC1B,IAAIf,EAAI4V,UAAU,GACdmO,EAAIrC,GAAOG,iBAAiB7hB,GAChC,OAAO8C,KAAK4d,OAAOqD,EAAIA,KAAO,MAGlCvB,GAAgBC,sBAAsBnW,IAAM,WAAc,OAAOmW,IACjED,GAAgBE,iBAAiBpW,IAAM,WAAc,OAAO,oBAC5DkW,GAAgBF,cAAchW,IAAM,WAAc,OAAOoV,GAAOsC,KAChExB,GAAgBG,EAAErW,IAAM,WAAc,OAAO,GAC7CkW,GAAgBI,EAAEtW,IAAM,WAAc,OAAO,GAC7CkW,GAAgBK,EAAEvW,IAAM,WAAc,OAAO,GAE7CvH,OAAOid,iBAAkBK,GAAYG,IAErC,IAAIC,GAAwB,SAAgCwB,GAE1D,GADA3jB,KAAK4jB,kBAAoB,EACA,IAArBtO,UAAU7U,aAAsB,GAAyB,IAArB6U,UAAU7U,OAAc,CAC9D,IAAIojB,EAAqBvO,UAAU,GACnC,GAA2B,IAAvBuO,GAAmD,IAAvBA,EAA4B,MAAM,IAAIhD,GAAyB,2CAC/F7gB,KAAK4jB,kBAAoBC,IAG7B1B,GAAsBrd,UAAU3E,QAAU,SAAkB2jB,EAAIC,GAC9D,IAAIC,EAAKF,EACLG,EAAKF,EACLG,EAAQ/B,GAAsBhiB,QAAQ6jB,EAAGtkB,EAAGukB,EAAGvkB,GACnD,GAAc,IAAVwkB,EAAe,OAAOA,EAC1B,IAAIC,EAAQhC,GAAsBhiB,QAAQ6jB,EAAG9kB,EAAG+kB,EAAG/kB,GACnD,OAAc,IAAVilB,EAAsBA,EACtBnkB,KAAK4jB,mBAAqB,EAAY,EAC9BzB,GAAsBhiB,QAAQ6jB,EAAGrL,EAAGsL,EAAGtL,IAGrDwJ,GAAsBrd,UAAUyb,YAAc,WAC5C,MAAO,CAACsB,KAEVM,GAAsBrd,UAAU0b,SAAW,WACzC,OAAO2B,IAETA,GAAsBhiB,QAAU,SAAkBzB,EAAGC,GACnD,OAAID,EAAIC,GAAa,EACjBD,EAAIC,EAAY,EAChByiB,GAAOjB,MAAMzhB,GACX0iB,GAAOjB,MAAMxhB,GAAa,GACtB,EAENyiB,GAAOjB,MAAMxhB,GAAa,EACvB,GAMT,IAAIylB,GAA4B,aAEhCA,GAA0Btf,UAAUoc,OAAS,aAY7CkD,GAA0Btf,UAAUyb,YAAc,WAChD,MAAO,IAET6D,GAA0Btf,UAAU0b,SAAW,WAC7C,OAAO4D,IAGT,IAAIC,GAAW,aAEXC,GAAoB,CAAEC,SAAU,CAAEhgB,cAAc,GAAOigB,SAAU,CAAEjgB,cAAc,GAAOkgB,SAAU,CAAElgB,cAAc,GAAOmgB,KAAM,CAAEngB,cAAc,IAEnJ8f,GAASvf,UAAUyb,YAAc,WAC/B,MAAO,IAET8D,GAASvf,UAAU0b,SAAW,WAC5B,OAAO6D,IAETA,GAASM,iBAAmB,SAA2BC,GACrD,OAAQA,GACN,KAAKP,GAASI,SACZ,MAAO,IACT,KAAKJ,GAASG,SACZ,MAAO,IACT,KAAKH,GAASE,SACZ,MAAO,IACT,KAAKF,GAASK,KACZ,MAAO,IAGX,MAAM,IAAI7D,GAAyB,2BAA6B+D,IAElEN,GAAkBC,SAASvY,IAAM,WAAc,OAAO,GACtDsY,GAAkBE,SAASxY,IAAM,WAAc,OAAO,GACtDsY,GAAkBG,SAASzY,IAAM,WAAc,OAAO,GACtDsY,GAAkBI,KAAK1Y,IAAM,WAAc,OAAQ,GAEnDvH,OAAOid,iBAAkB2C,GAAUC,IAEnC,IAAIO,GAAe,SAAU9B,EAAGlkB,GAC9B,OAAOkkB,EAAExC,aAAewC,EAAExC,cAAchQ,QAAQ1R,IAAM,GAGpDimB,GAAW,aAEXC,GAAoB,CAAEC,OAAQ,CAAEzgB,cAAc,IAElDugB,GAAShgB,UAAUyb,YAAc,WAC/B,MAAO,IAETuE,GAAShgB,UAAU0b,SAAW,WAC5B,OAAOsE,IAETA,GAASG,MAAQ,SAAgBvlB,GAC/B,IAAIwlB,EAAK1iB,KAAK2iB,IAAIzlB,GAClB,OAAI0hB,GAAOK,WAAWyD,GAAcA,EAChC9D,GAAOjB,MAAM+E,GAAcA,EACxBA,EAAKJ,GAASE,QAEvBF,GAAS9I,IAAM,SAAc7V,EAAIC,EAAIgf,EAAIC,GACvC,IAAIrJ,EAAM7V,EAIV,OAHIC,EAAK4V,IAAOA,EAAM5V,GAClBgf,EAAKpJ,IAAOA,EAAMoJ,GAClBC,EAAKrJ,IAAOA,EAAMqJ,GACfrJ,GAET8I,GAASQ,MAAQ,WACf,GAA4B,iBAAjBhQ,UAAU,IAA4C,iBAAjBA,UAAU,IAA2C,iBAAjBA,UAAU,GAAkB,CAC9G,IAAI5V,EAAI4V,UAAU,GACd0G,EAAM1G,UAAU,GAChB4G,EAAM5G,UAAU,GACpB,OAAI5V,EAAIsc,EAAcA,EAClBtc,EAAIwc,EAAcA,EACfxc,EACF,GAAIsF,OAAOgb,UAAU1K,UAAU,KAAQtQ,OAAOgb,UAAU1K,UAAU,KAAOtQ,OAAOgb,UAAU1K,UAAU,IAAM,CAC/G,IAAIiQ,EAAMjQ,UAAU,GAChBkQ,EAAQlQ,UAAU,GAClBmQ,EAAQnQ,UAAU,GACtB,OAAIiQ,EAAMC,EAAgBA,EACtBD,EAAME,EAAgBA,EACnBF,IAGXT,GAASY,KAAO,SAAetkB,EAAO8a,GACpC,OAAI9a,EAAQ,EACH8a,IAAO9a,EAAQ8a,EAEjB9a,EAAQ8a,GAEjB4I,GAAS5I,IAAM,WACb,GAAyB,IAArB5G,UAAU7U,OAAc,CAC1B,IAAI0F,EAAKmP,UAAU,GACflP,EAAKkP,UAAU,GACf8P,EAAK9P,UAAU,GACf4G,EAAM/V,EAGV,OAFIC,EAAK8V,IAAOA,EAAM9V,GAClBgf,EAAKlJ,IAAOA,EAAMkJ,GACflJ,EACF,GAAyB,IAArB5G,UAAU7U,OAAc,CACjC,IAAIklB,EAAOrQ,UAAU,GACjBsQ,EAAOtQ,UAAU,GACjBuQ,EAAOvQ,UAAU,GACjB+P,EAAK/P,UAAU,GACfmQ,EAAQE,EAIZ,OAHIC,EAAOH,IAASA,EAAQG,GACxBC,EAAOJ,IAASA,EAAQI,GACxBR,EAAKI,IAASA,EAAQJ,GACnBI,IAGXX,GAASgB,QAAU,SAAkBpF,EAAIC,GACvC,OAAQD,EAAKC,GAAM,GAErBoE,GAAkBC,OAAOhZ,IAAM,WAAc,OAAOxJ,KAAK2iB,IAAI,KAE7D1gB,OAAOid,iBAAkBoD,GAAUC,IAEnC,IAAIgB,GAAe,SAAuBC,GACxChmB,KAAKgmB,IAAMA,GAEbD,GAAajhB,UAAUmhB,OAAS,SAAiBvK,GAC/C1b,KAAKgmB,KAAOtK,GAGdqK,GAAajhB,UAAUohB,UAAY,SAAoBrnB,EAAGojB,GACxDjiB,KAAKgmB,IAAMhmB,KAAKgmB,IAAIG,OAAO,EAAGtnB,GAAKojB,EAAIjiB,KAAKgmB,IAAIG,OAAOtnB,EAAI,IAG7DknB,GAAajhB,UAAUme,SAAW,SAAmBvH,GACnD,OAAO1b,KAAKgmB,KAGd,IAAII,GAAU,SAAkBze,GAC9B3H,KAAK2H,MAAQA,GAEfye,GAAQthB,UAAUuhB,SAAW,WAC3B,OAAOrmB,KAAK2H,OAEdye,GAAQthB,UAAUge,UAAY,SAAoBC,GAChD,OAAI/iB,KAAK2H,MAAQob,GAAa,EAC1B/iB,KAAK2H,MAAQob,EAAY,EACtB,GAETqD,GAAQjG,MAAQ,SAAgB/c,GAAK,OAAO4B,OAAOmb,MAAM/c,IAEzD,IAAIkjB,GAAY,aAEhBA,GAAUC,aAAe,SAAuBtE,GAAK,OAASA,GAAK,IAAMA,GAAK,GAAY,MAANA,GACpFqE,GAAUE,YAAc,SAAsBvE,GAAK,OAAOA,EAAEuE,eAE5D,IAAIC,GAAK,SAASA,IAGhB,GAFAzmB,KAAK0mB,IAAM,EACX1mB,KAAK2mB,IAAM,EACc,IAArBrR,UAAU7U,OACZT,KAAK4mB,KAAK,QACL,GAAyB,IAArBtR,UAAU7U,QACnB,GAA4B,iBAAjB6U,UAAU,GAAiB,CACpC,IAAI5V,EAAI4V,UAAU,GAClBtV,KAAK4mB,KAAKlnB,QACL,GAAI4V,UAAU,aAAcmR,EAAI,CACrC,IAAII,EAAKvR,UAAU,GACnBtV,KAAK4mB,KAAKC,QACL,GAA4B,iBAAjBvR,UAAU,GAAiB,CAC3C,IAAI0Q,EAAM1Q,UAAU,GACpBmR,EAAG9lB,KAAKX,KAAMymB,EAAGK,MAAMd,UAEpB,GAAyB,IAArB1Q,UAAU7U,OAAc,CACjC,IAAIsmB,EAAKzR,UAAU,GACf0R,EAAK1R,UAAU,GACnBtV,KAAK4mB,KAAKG,EAAIC,KAIdC,GAAoB,CAAEC,GAAI,CAAE3iB,cAAc,GAAO4iB,OAAQ,CAAE5iB,cAAc,GAAO6iB,KAAM,CAAE7iB,cAAc,GAAO8iB,EAAG,CAAE9iB,cAAc,GAAOmf,IAAK,CAAEnf,cAAc,GAAO+iB,IAAK,CAAE/iB,cAAc,GAAOgjB,MAAO,CAAEhjB,cAAc,GAAOijB,iBAAkB,CAAEjjB,cAAc,GAAOkjB,IAAK,CAAEljB,cAAc,GAAOmjB,IAAK,CAAEnjB,cAAc,GAAOojB,sBAAuB,CAAEpjB,cAAc,GAAOqjB,aAAc,CAAErjB,cAAc,IAC9YkiB,GAAG3hB,UAAU+iB,GAAK,SAAa3oB,GAC7B,OAAQc,KAAK0mB,IAAMxnB,EAAEwnB,KAAO1mB,KAAK0mB,MAAQxnB,EAAEwnB,MAAQ1mB,KAAK2mB,KAAOznB,EAAEynB,KAEnEF,GAAG3hB,UAAUgjB,yBAA2B,SAAmCC,EAAoBC,GAC7F,IAAI9oB,EAAIc,KAAKyR,MACTwW,EAAMxB,GAAGuB,UAAU9oB,EAAEwnB,KACrBwB,EAAQzB,GAAGgB,IAAItiB,IAAI8iB,IACvB/oB,EAAIA,EAAEipB,OAAOD,IACPE,GAAG3B,GAAGgB,MACVvoB,EAAIA,EAAEipB,OAAO1B,GAAGgB,KAChBQ,GAAO,GACE/oB,EAAEmpB,GAAG5B,GAAGiB,OACjBxoB,EAAIA,EAAEopB,SAAS7B,GAAGgB,KAClBQ,GAAO,GAKT,IAHA,IAAIM,EAAkBN,EAAM,EACxBO,EAAM,IAAIzC,GACV0C,EAAYhC,GAAGe,iBAAmB,EAC7B3oB,EAAI,EAAGA,GAAK4pB,EAAW5pB,IAAK,CAC/BkpB,GAAsBlpB,IAAM0pB,GAC9BC,EAAIvC,OAAO,KAEb,IAAIyC,EAAQlmB,KAAK4d,MAAMlhB,EAAEwnB,KACzB,GAAIgC,EAAQ,EACV,MAEF,IAAIC,GAAa,EACbC,EAAY,EACZF,EAAQ,GACVC,GAAa,EACbC,EAAY,KAEZA,EAAY,IAAMF,EAEpBF,EAAIvC,OAAO2C,GACX1pB,EAAIA,EAAE2pB,SAASpC,GAAGqC,QAAQJ,IAAQJ,SAAS7B,GAAGgB,KAC1CkB,GAAczpB,EAAE6pB,QAAQtC,GAAGgB,KAC/B,IAAIuB,GAA2B,EAC3BC,EAASxC,GAAGuB,UAAU9oB,EAAEwnB,KAE5B,GADIuC,EAAS,GAAKzmB,KAAKiP,IAAIwX,IAAWR,EAAY5pB,IAAKmqB,GAA2B,IAC7EA,EAA4B,MAGnC,OADAhB,EAAU,GAAKC,EACRO,EAAIvF,YAEbwD,GAAG3hB,UAAUokB,IAAM,WACjB,OAAOlpB,KAAKsoB,SAAStoB,OAEvBymB,GAAG3hB,UAAUqkB,YAAc,WACzB,OAAOnpB,KAAK0mB,IAAM1mB,KAAK2mB,KAEzBF,GAAG3hB,UAAU+jB,SAAW,WACtB,GAAIvT,UAAU,aAAcmR,GAAI,CAC9B,IAAIvnB,EAAIoW,UAAU,GAClB,OAAOtV,KAAKC,IAAIf,EAAEkqB,UACb,GAA4B,iBAAjB9T,UAAU,GAAiB,CAC3C,IAAI+T,EAAM/T,UAAU,GACpB,OAAOtV,KAAKC,KAAKopB,KAGrB5C,GAAG3hB,UAAUwV,OAAS,WACpB,GAAyB,IAArBhF,UAAU7U,OAAc,CAC1B,IAAIvB,EAAIoW,UAAU,GAClB,OAAOtV,KAAK0mB,MAAQxnB,EAAEwnB,KAAO1mB,KAAK2mB,MAAQznB,EAAEynB,MAGhDF,GAAG3hB,UAAUwkB,OAAS,WACpB,OAAoB,IAAbtpB,KAAK0mB,KAA4B,IAAb1mB,KAAK2mB,KAElCF,GAAG3hB,UAAUykB,aAAe,WAC1B,GAAIjU,UAAU,aAAcmR,GAAI,CAC9B,IAAIvnB,EAAIoW,UAAU,GAClB,OAAItV,KAAKmgB,QAAkBngB,KACpBA,KAAK+oB,SAAS7pB,EAAEwnB,KAAMxnB,EAAEynB,KAC1B,GAA4B,iBAAjBrR,UAAU,GAAiB,CAC3C,IAAI+T,EAAM/T,UAAU,GACpB,OAAItV,KAAKmgB,QAAkBngB,KACpBA,KAAK+oB,SAASM,EAAK,KAG9B5C,GAAG3hB,UAAU0kB,uBAAyB,WACpC,OAAIxpB,KAAKspB,SAAmB,MACxBtpB,KAAKmgB,QAAkB,OACpB,MAETsG,GAAG3hB,UAAUkX,IAAM,SAActc,GAC/B,OAAIM,KAAK6nB,GAAGnoB,GACHM,KAEAN,GAGX+mB,GAAG3hB,UAAU2kB,WAAa,WACxB,GAAyB,IAArBnU,UAAU7U,OAAc,CAC1B,GAAI6U,UAAU,aAAcmR,GAAI,CAC9B,IAAIvnB,EAAIoW,UAAU,GAClB,OAAOtV,KAAKypB,WAAWvqB,EAAEwnB,IAAKxnB,EAAEynB,KAC3B,GAA4B,iBAAjBrR,UAAU,GAAiB,CAC3C,IAAI+T,EAAM/T,UAAU,GACpB,OAAOtV,KAAKypB,WAAWJ,EAAK,SAEzB,GAAyB,IAArB/T,UAAU7U,OAAc,CACjC,IAGIipB,EAEAC,EACAC,EAEAC,EARAC,EAAMxU,UAAU,GAChByU,EAAMzU,UAAU,GAChB0U,EAAK,KAELC,EAAK,KAGLhI,EAAI,KAEJvJ,EAAI,KAgBR,OAfAkR,EAAI5pB,KAAK0mB,IAAMoD,EAUfpR,GANAsR,GAHA/H,EAAIwE,GAAGc,MAAQqC,IACfI,EAAK/H,EAAI2H,KAMTK,GALAvR,EAAI+N,GAAGc,MAAQuC,IAGfG,EAAKvR,EAAIoR,KACTD,EAAID,EAAIE,GAGUE,GADlBL,EAAKG,EAAMG,IAJXP,EAAKE,EAAII,GAKwBC,EAAKP,EAAKC,EAE3CjR,EAAIkR,GADJ3H,GAAKjiB,KAAK0mB,IAAMmD,EAAInR,EAAI1Y,KAAK2mB,IAAMiD,EAAIG,GAAOD,GAE9C9pB,KAAK0mB,IAAMhO,EACX1Y,KAAK2mB,IAAMiD,EAAIlR,EAAIuJ,EACZjiB,OAGXymB,GAAG3hB,UAAUolB,KAAO,WAClB,MAAO,MAAQlqB,KAAK0mB,IAAM,KAAO1mB,KAAK2mB,IAAM,KAE9CF,GAAG3hB,UAAUqjB,OAAS,WACpB,GAAI7S,UAAU,aAAcmR,GAAI,CAC9B,IAEIiD,EAEAC,EACAC,EAEAC,EAPA3qB,EAAIoW,UAAU,GACd0U,EAAK,KAELC,EAAK,KAGLhI,EAAI,KAEJvJ,EAAI,KAgBR,OAVAgR,GALAE,EAAI5pB,KAAK0mB,IAAMxnB,EAAEwnB,MAIjBsD,GAHA/H,EAAIwE,GAAGc,MAAQqC,IACfI,EAAK/H,EAAI2H,IAQTlR,EAAIsR,GAFJC,GALAvR,EAAI+N,GAAGc,MAAQroB,EAAEwnB,MAGjBuD,EAAKvR,EAAIxZ,EAAEwnB,OACXmD,EAAID,EAAI1qB,EAAEwnB,KAGQsD,GADlBL,EAAKzqB,EAAEwnB,IAAMuD,GACeP,EAAKO,EAAKP,EAAKC,EAC3C1H,GAAKjiB,KAAK0mB,IAAMmD,EAAInR,EAAI1Y,KAAK2mB,IAAMiD,EAAI1qB,EAAEynB,KAAOznB,EAAEwnB,IAI3C,IAAID,GAHX/N,EAAIkR,EAAI3H,EAEE2H,EAAIlR,EAAIuJ,GAEb,GAA4B,iBAAjB3M,UAAU,GAAiB,CAC3C,IAAI+T,EAAM/T,UAAU,GACpB,OAAI8L,GAAOjB,MAAMkJ,GAAe5C,GAAG0D,YAC5B1D,GAAGpM,KAAKra,MAAMypB,WAAWJ,EAAK,KAGzC5C,GAAG3hB,UAAUslB,GAAK,SAAalrB,GAC7B,OAAQc,KAAK0mB,IAAMxnB,EAAEwnB,KAAO1mB,KAAK0mB,MAAQxnB,EAAEwnB,MAAQ1mB,KAAK2mB,KAAOznB,EAAEynB,KAEnEF,GAAG3hB,UAAUK,IAAM,SAAcklB,GAC/B,GAAY,IAARA,EAAe,OAAO5D,GAAGqC,QAAQ,GACrC,IAAI7pB,EAAI,IAAIwnB,GAAGzmB,MACX8Y,EAAI2N,GAAGqC,QAAQ,GACf1lB,EAAIZ,KAAKiP,IAAI4Y,GACjB,GAAIjnB,EAAI,EACN,KAAOA,EAAI,GACLA,EAAI,GAAM,GACZ0V,EAAEwR,aAAarrB,IAEjBmE,GAAK,GACG,IAAKnE,EAAIA,EAAEiqB,YAGrBpQ,EAAI7Z,EAEN,OAAIorB,EAAM,EAAYvR,EAAEyR,aACjBzR,GAET2N,GAAG3hB,UAAUub,KAAO,WAClB,GAAIrgB,KAAKmgB,QAAW,OAAOsG,GAAG/C,IAC9B,IAAI8G,EAAMhoB,KAAK6d,KAAKrgB,KAAK0mB,KACrB+D,EAAM,EAIV,OAHID,IAAQxqB,KAAK0mB,MACf+D,EAAMjoB,KAAK6d,KAAKrgB,KAAK2mB,MAEhB,IAAIF,GAAG+D,EAAKC,IAErBhE,GAAG3hB,UAAUge,UAAY,SAAoBC,GAC3C,IAAIvY,EAAQuY,EACZ,OAAI/iB,KAAK0mB,IAAMlc,EAAMkc,KAAe,EAChC1mB,KAAK0mB,IAAMlc,EAAMkc,IAAc,EAC/B1mB,KAAK2mB,IAAMnc,EAAMmc,KAAe,EAChC3mB,KAAK2mB,IAAMnc,EAAMmc,IAAc,EAC5B,GAETF,GAAG3hB,UAAU4lB,KAAO,WAClB,OAAI1qB,KAAKmgB,QAAkBngB,KACfA,KAAKC,IAAI,IACRwC,SAEfgkB,GAAG3hB,UAAU6lB,SAAW,WACtB,GAAIrV,UAAU,aAAcmR,GAAI,CAC9B,IAAI9e,EAAQ2N,UAAU,GAEtB,OADAtV,KAAK4mB,KAAKjf,GACH3H,KACF,GAA4B,iBAAjBsV,UAAU,GAAiB,CAC3C,IAAIsV,EAAUtV,UAAU,GAExB,OADAtV,KAAK4mB,KAAKgE,GACH5qB,OAGXymB,GAAG3hB,UAAUoX,IAAM,SAAcxc,GAC/B,OAAIM,KAAKoqB,GAAG1qB,GACHM,KAEAN,GAGX+mB,GAAG3hB,UAAUwB,KAAO,WAClB,GAAItG,KAAKspB,SAAY,OAAO7C,GAAGqC,QAAQ,GACvC,GAAI9oB,KAAK6qB,aACP,OAAOpE,GAAG/C,IAEZ,IAAIhkB,EAAI,EAAM8C,KAAK8D,KAAKtG,KAAK0mB,KACzBoE,EAAK9qB,KAAK0mB,IAAMhnB,EAChBqrB,EAAOtE,GAAGqC,QAAQgC,GAElBzb,EADSrP,KAAK6oB,SAASkC,EAAK7B,OAChBxC,KAAW,GAAJhnB,GACvB,OAAOqrB,EAAK9qB,IAAIoP,IAElBoX,GAAG3hB,UAAUikB,QAAU,WACrB,GAAyB,IAArBzT,UAAU7U,OAAc,CAC1B,GAAI6U,UAAU,aAAcmR,GAAI,CAC9B,IAAIvnB,EAAIoW,UAAU,GAClB,OAAOtV,KAAK+oB,QAAQ7pB,EAAEwnB,IAAKxnB,EAAEynB,KACxB,GAA4B,iBAAjBrR,UAAU,GAAiB,CAC3C,IACI0V,EACAC,EACAC,EAEAxP,EACA+H,EANA4F,EAAM/T,UAAU,GAIhBwD,EAAI,KAYR,OAPAA,GAFAoS,EAAIlrB,KAAK0mB,IAAM2C,IACf3N,EAAIwP,EAAIlrB,KAAK0mB,KAKbuE,GAFAxH,GADA3K,EAAIuQ,EAAM3N,GAAK1b,KAAK0mB,IAAM5N,IAClB9Y,KAAK2mB,MAEJuE,GADTF,EAAIE,EAAIzH,IAERzjB,KAAK0mB,IAAMsE,EAAIC,EACfjrB,KAAK2mB,IAAMsE,GAAKD,EAAIhrB,KAAK0mB,KAClB1mB,WAEJ,GAAyB,IAArBsV,UAAU7U,OAAc,CACjC,IAEI0qB,EAEAC,EAEAC,EAGAC,EATAxB,EAAMxU,UAAU,GAChByU,EAAMzU,UAAU,GAIhBxW,EAAI,KAEJysB,EAAM,KACNC,EAAM,KAEVH,EAAMrrB,KAAK0mB,IAAMoD,EACjBsB,EAAIprB,KAAK2mB,IAAMoD,EAGfwB,EAAMF,GAFNG,EAAMH,EAAMrrB,KAAK0mB,KAGjB5nB,EAAIssB,GAFJE,EAAMF,EAAIprB,KAAK2mB,KASf,IAAI8E,GAHJN,EAAME,GADNG,GAFAD,EAAMzB,EAAM0B,GAAOxrB,KAAK0mB,IAAM6E,IAElBH,KAGZI,GAJA1sB,EAAIirB,EAAMuB,GAAOtrB,KAAK2mB,IAAM7nB,KAGtB0sB,GAAOH,EAAMF,KAGfO,EAAMF,GAAOL,EAAMM,GAGvB,OAFAzrB,KAAK0mB,IAAM+E,EACXzrB,KAAK2mB,IAAM+E,EACJ1rB,OAGXymB,GAAG3hB,UAAUwlB,aAAe,WAC1B,GAAyB,IAArBhV,UAAU7U,OAAc,CAC1B,GAAI6U,UAAU,aAAcmR,GAAI,CAC9B,IAAIvnB,EAAIoW,UAAU,GAClB,OAAOtV,KAAKsqB,aAAaprB,EAAEwnB,IAAKxnB,EAAEynB,KAC7B,GAA4B,iBAAjBrR,UAAU,GAAiB,CAC3C,IAAI+T,EAAM/T,UAAU,GACpB,OAAOtV,KAAKsqB,aAAajB,EAAK,SAE3B,GAAyB,IAArB/T,UAAU7U,OAAc,CACjC,IAGIkrB,EAEAhC,EALAG,EAAMxU,UAAU,GAChByU,EAAMzU,UAAU,GAChBsW,EAAK,KAEL3B,EAAK,KAELL,EAAI,KACJ3H,EAAI,KAER2J,GADAhC,EAAInD,GAAGc,MAAQvnB,KAAK0mB,KACX1mB,KAAK0mB,IACdzE,EAAIwE,GAAGc,MAAQuC,EACf8B,EAAKhC,EAAIgC,EACTD,EAAK3rB,KAAK0mB,IAAMkF,EAChB3B,EAAKhI,EAAI6H,EAKT,IAAI2B,GAJJ7B,EAAI5pB,KAAK0mB,IAAMoD,IAGf7H,EAAI2J,GAFJ3B,EAAKhI,EAAIgI,GAEKL,EAAIgC,GADlBjC,EAAKG,EAAMG,GACiB0B,EAAK1B,EAAK0B,EAAKhC,GAAM3pB,KAAK0mB,IAAMqD,EAAM/pB,KAAK2mB,IAAMmD,IAGzE4B,EAAMzJ,GADV2J,EAAKhC,EAAI6B,GAIT,OAFAzrB,KAAK0mB,IAAM+E,EACXzrB,KAAK2mB,IAAM+E,EACJ1rB,OAGXymB,GAAG3hB,UAAU+mB,QAAU,WACrB,OAAO7rB,KAAKsqB,aAAatqB,OAE3BymB,GAAG3hB,UAAUrC,MAAQ,WACnB,GAAIzC,KAAKmgB,QAAW,OAAOsG,GAAG/C,IAC9B,IAAI8G,EAAMhoB,KAAKC,MAAMzC,KAAK0mB,KACtB+D,EAAM,EAIV,OAHID,IAAQxqB,KAAK0mB,MACf+D,EAAMjoB,KAAKC,MAAMzC,KAAK2mB,MAEjB,IAAIF,GAAG+D,EAAKC,IAErBhE,GAAG3hB,UAAUskB,OAAS,WACpB,OAAIppB,KAAKmgB,QAAkBngB,KACpB,IAAIymB,IAAIzmB,KAAK0mB,KAAM1mB,KAAK2mB,MAEjCF,GAAG3hB,UAAUke,MAAQ,aASrByD,GAAG3hB,UAAUwjB,SAAW,WACtB,GAAIhT,UAAU,aAAcmR,GAAI,CAC9B,IAAIvnB,EAAIoW,UAAU,GAClB,OAAIpW,EAAEihB,QAAkBsG,GAAG0D,YACpB1D,GAAGpM,KAAKra,MAAMsqB,aAAaprB,GAC7B,GAA4B,iBAAjBoW,UAAU,GAAiB,CAC3C,IAAI+T,EAAM/T,UAAU,GACpB,OAAI8L,GAAOjB,MAAMkJ,GAAe5C,GAAG0D,YAC5B1D,GAAGpM,KAAKra,MAAMsqB,aAAajB,EAAK,KAG3C5C,GAAG3hB,UAAUqb,MAAQ,WACnB,OAAOiB,GAAOjB,MAAMngB,KAAK0mB,MAE3BD,GAAG3hB,UAAUuhB,SAAW,WACtB,OAAO7jB,KAAK4d,MAAMpgB,KAAK0mB,MAEzBD,GAAG3hB,UAAUme,SAAW,WACtB,IAAIgF,EAAMxB,GAAGuB,UAAUhoB,KAAK0mB,KAC5B,OAAIuB,IAAQ,GAAKA,GAAO,GAAajoB,KAAK8rB,qBACnC9rB,KAAK+rB,iBAEdtF,GAAG3hB,UAAUgnB,mBAAqB,WAChC,IAAIE,EAAahsB,KAAKwpB,yBACtB,GAAmB,OAAfwC,EAAuB,OAAOA,EAClC,IAAIhE,EAAY,IAAIvf,MAAM,GAAGwjB,KAAK,MAC9BC,EAAYlsB,KAAK8nB,0BAAyB,EAAME,GAChDO,EAAkBP,EAAU,GAAK,EACjCmE,EAAMD,EACV,GAA4B,MAAxBA,EAAUE,OAAO,GACnBD,EAAM,IAAMD,OACP,GAAI3D,EAAkB,EAC3B4D,EAAM,KAAO1F,GAAG4F,aAAa,KAAM9D,GAAmB2D,OACjD,IAAgC,IAA5BA,EAAU3b,QAAQ,KAAa,CACxC,IAAI+b,EAAY/D,EAAkB2D,EAAUzrB,OAE5C0rB,EAAMD,EADOzF,GAAG4F,aAAa,IAAKC,GACP,KAE7B,OAAItsB,KAAK6qB,aAAuB,IAAMsB,EAC/BA,GAET1F,GAAG3hB,UAAUylB,WAAa,WACxB,IACIb,EAEAC,EACAC,EAEAC,EANAG,EAAK,KAELC,EAAK,KAGLhI,EAAI,KAEJvJ,EAAI,KAMRgR,GALAE,EAAI,EAAM5pB,KAAK0mB,MAIfsD,GAHA/H,EAAIwE,GAAGc,MAAQqC,IACfI,EAAK/H,EAAI2H,IAITK,GAHAvR,EAAI+N,GAAGc,MAAQvnB,KAAK0mB,KAGX1mB,KAAK0mB,IAMd,IAAI+E,EAAM7B,GADV3H,GAAK,GAJL4H,EAAID,EAAI5pB,KAAK0mB,MAGbhO,EAAIsR,GAFJC,EAAKvR,EAAIuR,GAEKJ,EAAIG,GADlBL,EAAK3pB,KAAK0mB,IAAMuD,GACYP,EAAKO,EAAKP,EAAKC,GACxBC,EAAI5pB,KAAK2mB,KAAO3mB,KAAK0mB,KAGxC,OAAO,IAAID,GAAGgF,EADJ7B,EAAI6B,EAAMxJ,IAGtBwE,GAAG3hB,UAAUinB,cAAgB,WAC3B,GAAI/rB,KAAKspB,SAAY,OAAO7C,GAAGmB,aAC/B,IAAIoE,EAAahsB,KAAKwpB,yBACtB,GAAmB,OAAfwC,EAAuB,OAAOA,EAClC,IAAIhE,EAAY,IAAIvf,MAAM,GAAGwjB,KAAK,MAC9BM,EAASvsB,KAAK8nB,0BAAyB,EAAOE,GAC9CwE,EAAS/F,GAAGkB,sBAAwBK,EAAU,GAClD,GAAyB,MAArBuE,EAAOH,OAAO,GAChB,MAAM,IAAIzjB,MAAM,uBAAyB4jB,GAE3C,IAAIE,EAAiB,GACjBF,EAAO9rB,OAAS,IAAKgsB,EAAiBF,EAAOG,UAAU,IAC3D,IAAIC,EAAoBJ,EAAOH,OAAO,GAAK,IAAMK,EACjD,OAAIzsB,KAAK6qB,aAAuB,IAAM8B,EAAoBH,EACnDG,EAAoBH,GAE7B/F,GAAG3hB,UAAU2M,IAAM,WACjB,OAAIzR,KAAKmgB,QAAkBsG,GAAG/C,IAC1B1jB,KAAK6qB,aAAuB7qB,KAAKopB,SAC9B,IAAI3C,GAAGzmB,OAEhBymB,GAAG3hB,UAAU8nB,WAAa,WACxB,OAAQ5sB,KAAK0mB,IAAM,GAAoB,IAAb1mB,KAAK0mB,MAAgB1mB,KAAK2mB,IAAM,GAE5DF,GAAG3hB,UAAUujB,GAAK,SAAanpB,GAC7B,OAAQc,KAAK0mB,IAAMxnB,EAAEwnB,KAAO1mB,KAAK0mB,MAAQxnB,EAAEwnB,MAAQ1mB,KAAK2mB,IAAMznB,EAAEynB,KAElEF,GAAG3hB,UAAU7E,IAAM,WACjB,GAAIqV,UAAU,aAAcmR,GAAI,CAC9B,IAAIvnB,EAAIoW,UAAU,GAClB,OAAOmR,GAAGpM,KAAKra,MAAM+oB,QAAQ7pB,GACxB,GAA4B,iBAAjBoW,UAAU,GAAiB,CAC3C,IAAI+T,EAAM/T,UAAU,GACpB,OAAOmR,GAAGpM,KAAKra,MAAM+oB,QAAQM,KAGjC5C,GAAG3hB,UAAU8hB,KAAO,WAClB,GAAyB,IAArBtR,UAAU7U,QACZ,GAA4B,iBAAjB6U,UAAU,GAAiB,CACpC,IAAI5V,EAAI4V,UAAU,GAClBtV,KAAK0mB,IAAMhnB,EACXM,KAAK2mB,IAAM,OACN,GAAIrR,UAAU,aAAcmR,GAAI,CACrC,IAAII,EAAKvR,UAAU,GACnBtV,KAAK0mB,IAAMG,EAAGH,IACd1mB,KAAK2mB,IAAME,EAAGF,UAEX,GAAyB,IAArBrR,UAAU7U,OAAc,CACjC,IAAIsmB,EAAKzR,UAAU,GACf0R,EAAK1R,UAAU,GACnBtV,KAAK0mB,IAAMK,EACX/mB,KAAK2mB,IAAMK,IAGfP,GAAG3hB,UAAUsjB,GAAK,SAAalpB,GAC7B,OAAQc,KAAK0mB,IAAMxnB,EAAEwnB,KAAO1mB,KAAK0mB,MAAQxnB,EAAEwnB,MAAQ1mB,KAAK2mB,IAAMznB,EAAEynB,KAElEF,GAAG3hB,UAAU+lB,WAAa,WACxB,OAAQ7qB,KAAK0mB,IAAM,GAAoB,IAAb1mB,KAAK0mB,MAAgB1mB,KAAK2mB,IAAM,GAE5DF,GAAG3hB,UAAUsb,MAAQ,WACnB,OAAIpgB,KAAKmgB,QAAkBsG,GAAG/C,IAC1B1jB,KAAK4sB,aAAuB5sB,KAAKyC,QAAyBzC,KAAKqgB,QAErEoG,GAAG3hB,UAAU+nB,OAAS,WACpB,OAAI7sB,KAAK0mB,IAAM,EAAY,EACvB1mB,KAAK0mB,IAAM,GAAa,EACxB1mB,KAAK2mB,IAAM,EAAY,EACvB3mB,KAAK2mB,IAAM,GAAa,EACrB,GAETF,GAAG3hB,UAAUyb,YAAc,WACzB,MAAO,CAACuB,GAAcH,GAAYC,KAEpC6E,GAAG3hB,UAAU0b,SAAW,WACtB,OAAOiG,IAETA,GAAGyC,IAAM,SAAcxpB,GACrB,OAAO+mB,GAAGqC,QAAQppB,GAAG4qB,aAAa5qB,IAEpC+mB,GAAGqC,QAAU,WACX,GAA4B,iBAAjBxT,UAAU,GAAiB,CACpC,IAAI0Q,EAAM1Q,UAAU,GACpB,OAAOmR,GAAGK,MAAMd,GACX,GAA4B,iBAAjB1Q,UAAU,GAAiB,CAC3C,IAAI5V,EAAI4V,UAAU,GAClB,OAAO,IAAImR,GAAG/mB,KAGlB+mB,GAAGngB,KAAO,SAAe5G,GACvB,OAAO+mB,GAAGqC,QAAQppB,GAAG4G,QAEvBmgB,GAAGK,MAAQ,SAAgBd,GAGzB,IAFA,IAAInnB,EAAI,EACJiuB,EAAS9G,EAAIvlB,OACV6lB,GAAUC,aAAaP,EAAIoG,OAAOvtB,KAAOA,IAChD,IAAIgsB,GAAa,EACjB,GAAIhsB,EAAIiuB,EAAQ,CACd,IAAIC,EAAS/G,EAAIoG,OAAOvtB,GACT,MAAXkuB,GAA6B,MAAXA,IACpBluB,IACe,MAAXkuB,IAAkBlC,GAAa,IAOvC,IAJA,IAAI5K,EAAM,IAAIwG,GACVgC,EAAY,EACZuE,EAAe,EACf3C,EAAM,IAEJxrB,GAAKiuB,IADE,CAEX,IAAIG,EAAKjH,EAAIoG,OAAOvtB,GAEpB,GADAA,IACIynB,GAAU4G,QAAQD,GAAtB,CACE,IAAI5rB,EAAI4rB,EAAK,IACbhN,EAAIqK,aAAa7D,GAAGgB,KACpBxH,EAAI8I,QAAQ1nB,GACZonB,QAJF,CAOA,GAAW,MAAPwE,EAAJ,CAIA,GAAW,MAAPA,GAAqB,MAAPA,EAAY,CAC5B,IAAIT,EAASxG,EAAI0G,UAAU7tB,GAC3B,IACEwrB,EAAMjE,GAAQvG,SAAS2M,GACvB,MAAOW,GACP,MAAIA,aAAcxkB,MACV,IAAIA,MAAM,oBAAsB6jB,EAAS,cAAgBxG,GAClDmH,EAEjB,MAEF,MAAM,IAAIxkB,MAAM,yBAA2BskB,EAAK,iBAAmBpuB,EAAI,cAAgBmnB,GAdrFgH,EAAevE,GAgBnB,IAAI2E,EAAOnN,EACPoN,EAAe5E,EAAYuE,EAAe3C,EAC9C,GAAqB,IAAjBgD,EACFD,EAAOnN,OACF,GAAIoN,EAAe,EAAG,CAC3B,IAAInF,EAAQzB,GAAGgB,IAAItiB,IAAIkoB,GACvBD,EAAOnN,EAAIkI,OAAOD,QACb,GAAImF,EAAe,EAAG,CAC3B,IAAIC,EAAU7G,GAAGgB,IAAItiB,KAAKkoB,GAC1BD,EAAOnN,EAAIqI,SAASgF,GAEtB,OAAIzC,EACKuC,EAAKhE,SAEPgE,GAET3G,GAAG0D,UAAY,WACb,OAAO,IAAI1D,GAAGrF,GAAOsC,IAAKtC,GAAOsC,MAEnC+C,GAAGpM,KAAO,SAAewM,GACvB,OAAO,IAAIJ,GAAGI,IAEhBJ,GAAGuB,UAAY,SAAoBtoB,GACjC,IAAI6tB,EAAO/qB,KAAKiP,IAAI/R,GAChB8tB,EAAShrB,KAAK2iB,IAAIoI,GAAQ/qB,KAAK2iB,IAAI,IACnCsI,EAAOjrB,KAAK4d,MAAM5d,KAAKC,MAAM+qB,IAGjC,OADc,GADAhrB,KAAK2C,IAAI,GAAIsoB,IACPF,IAAQE,GAAQ,GAC7BA,GAEThH,GAAG4F,aAAe,SAAuBY,EAAI/P,GAE3C,IADA,IAAIsL,EAAM,IAAIzC,GACLlnB,EAAI,EAAGA,EAAIqe,EAAKre,IACvB2pB,EAAIvC,OAAOgH,GAEb,OAAOzE,EAAIvF,YAEbgE,GAAkBC,GAAGlb,IAAM,WAAc,OAAO,IAAIya,GAAG,kBAA0B,yBACjFQ,GAAkBE,OAAOnb,IAAM,WAAc,OAAO,IAAIya,GAAG,kBAA0B,yBACrFQ,GAAkBG,KAAKpb,IAAM,WAAc,OAAO,IAAIya,GAAG,mBAA0B,wBACnFQ,GAAkBI,EAAErb,IAAM,WAAc,OAAO,IAAIya,GAAG,kBAA0B,yBAChFQ,GAAkBvD,IAAI1X,IAAM,WAAc,OAAO,IAAIya,GAAGrF,GAAOsC,IAAKtC,GAAOsC,MAC3EuD,GAAkBK,IAAItb,IAAM,WAAc,OAAO,sBACjDib,GAAkBM,MAAMvb,IAAM,WAAc,OAAO,WACnDib,GAAkBO,iBAAiBxb,IAAM,WAAc,OAAO,IAC9Dib,GAAkBQ,IAAIzb,IAAM,WAAc,OAAOya,GAAGqC,QAAQ,KAC5D7B,GAAkBS,IAAI1b,IAAM,WAAc,OAAOya,GAAGqC,QAAQ,IAC5D7B,GAAkBU,sBAAsB3b,IAAM,WAAc,MAAO,KACnEib,GAAkBW,aAAa5b,IAAM,WAAc,MAAO,SAE1DvH,OAAOid,iBAAkB+E,GAAIQ,IAE7B,IAAIyG,GAAiB,aAEjBC,GAAoB,CAAEC,gBAAiB,CAAErpB,cAAc,IAE3DmpB,GAAe5oB,UAAUyb,YAAc,WACrC,MAAO,IAETmN,GAAe5oB,UAAU0b,SAAW,WAClC,OAAOkN,IAETA,GAAeG,iBAAmB,SAA2BhrB,EAAIC,EAAIgrB,GACnE,IAAI1sB,EAAQssB,GAAeK,uBAAuBlrB,EAAIC,EAAIgrB,GAC1D,GAAI1sB,GAAS,EAAK,OAAOA,EACzB,IAAI4sB,EAAMvH,GAAGqC,QAAQhmB,EAAGpD,GAAGqpB,SAASlmB,EAAGnD,GACnCuuB,EAAMxH,GAAGqC,QAAQhmB,EAAG5D,GAAG6pB,SAASlmB,EAAG3D,GACnCgvB,EAAMzH,GAAGqC,QAAQgF,EAAEpuB,GAAGqpB,SAASjmB,EAAGpD,GAClCyuB,EAAM1H,GAAGqC,QAAQgF,EAAE5uB,GAAG6pB,SAASjmB,EAAG5D,GACtC,OAAO8uB,EAAI1D,aAAa6D,GAAK5E,aAAa0E,EAAI3D,aAAa4D,IAAMrB,UAEnEa,GAAeU,aAAe,SAAuB1N,EAAI9S,EAAI+S,EAAI9S,GAE/D,OADU6S,EAAG4H,SAASza,GAAI0b,aAAa3b,EAAG0a,SAAS3H,IACxCkM,UAEba,GAAepe,aAAe,SAAuBzM,EAAIC,EAAIurB,EAAIC,GAC/D,IAAIC,EAAS9H,GAAGqC,QAAQwF,EAAGpvB,GAAGqqB,aAAa8E,EAAGnvB,GAAGorB,aAAa7D,GAAGqC,QAAQhmB,EAAGpD,GAAG6pB,aAAa1mB,EAAGnD,IAC3F8uB,EAAS/H,GAAGqC,QAAQwF,EAAG5uB,GAAG6pB,aAAa8E,EAAG3uB,GAAG4qB,aAAa7D,GAAGqC,QAAQhmB,EAAG5D,GAAGqqB,aAAa1mB,EAAG3D,IAC3FuvB,EAAQF,EAAO1F,SAAS2F,GACxBE,EAAQjI,GAAGqC,QAAQwF,EAAG5uB,GAAG6pB,aAAa8E,EAAG3uB,GAAG4qB,aAAa7D,GAAGqC,QAAQjmB,EAAG3D,GAAGqqB,aAAa8E,EAAGnvB,IAC1FyvB,EAAQlI,GAAGqC,QAAQwF,EAAGpvB,GAAGqqB,aAAa8E,EAAGnvB,GAAGorB,aAAa7D,GAAGqC,QAAQjmB,EAAGnD,GAAG6pB,aAAa8E,EAAG3uB,IAE1FkvB,EADOF,EAAM7F,SAAS8F,GACTlF,WAAWgF,GAAOtF,cAC/BzpB,EAAI+mB,GAAGqC,QAAQjmB,EAAGnD,GAAGqpB,QAAQtC,GAAGqC,QAAQhmB,EAAGpD,GAAG6pB,aAAa1mB,EAAGnD,GAAG4qB,aAAasE,IAAQzF,cACtF0F,EAAQpI,GAAGqC,QAAQhmB,EAAGpD,GAAG6pB,aAAa1mB,EAAGnD,GAAG4qB,aAAa7D,GAAGqC,QAAQjmB,EAAG3D,GAAGqqB,aAAa8E,EAAGnvB,IAC1F4vB,EAAQrI,GAAGqC,QAAQhmB,EAAG5D,GAAGqqB,aAAa1mB,EAAG3D,GAAGorB,aAAa7D,GAAGqC,QAAQjmB,EAAGnD,GAAG6pB,aAAa8E,EAAG3uB,IAE1FqvB,EADOF,EAAMhG,SAASiG,GACTrF,WAAWgF,GAAOtF,cAC/BjqB,EAAIunB,GAAGqC,QAAQuF,EAAGnvB,GAAG6pB,QAAQtC,GAAGqC,QAAQwF,EAAGpvB,GAAGqqB,aAAa8E,EAAGnvB,GAAGorB,aAAayE,IAAQ5F,cAC1F,OAAO,IAAIpH,GAAWriB,EAAGR,IAE3BwuB,GAAeK,uBAAyB,SAAiCiB,EAAIC,EAAIC,GAC/E,IAAIC,EAAS,KACTC,GAAWJ,EAAGtvB,EAAIwvB,EAAGxvB,IAAMuvB,EAAG/vB,EAAIgwB,EAAGhwB,GACrCmwB,GAAYL,EAAG9vB,EAAIgwB,EAAGhwB,IAAM+vB,EAAGvvB,EAAIwvB,EAAGxvB,GACtC4vB,EAAMF,EAAUC,EACpB,GAAID,EAAU,EAAK,CACjB,GAAIC,GAAY,EACd,OAAO3B,GAAeb,OAAOyC,GAE7BH,EAASC,EAAUC,MAEhB,CAAA,KAAID,EAAU,GAOnB,OAAO1B,GAAeb,OAAOyC,GAN7B,GAAID,GAAY,EACd,OAAO3B,GAAeb,OAAOyC,GAE7BH,GAAUC,EAAUC,EAKxB,IAAIE,EAAW7B,GAAeE,gBAAkBuB,EAChD,OAAIG,GAAOC,IAAaD,GAAOC,EACtB7B,GAAeb,OAAOyC,GAExB,GAET5B,GAAeb,OAAS,SAAiBntB,GACvC,OAAIA,EAAI,EAAY,EAChBA,EAAI,GAAa,EACd,GAETiuB,GAAkBC,gBAAgB5hB,IAAM,WAAc,OAAO,OAE7DvH,OAAOid,iBAAkBgM,GAAgBC,IAEzC,IAAI6B,GAAqB,aAErBC,GAAoB,CAAEpN,EAAG,CAAE9d,cAAc,GAAO+d,EAAG,CAAE/d,cAAc,GAAOge,EAAG,CAAEhe,cAAc,GAAOmrB,EAAG,CAAEnrB,cAAc,IAE3HkrB,GAAkBpN,EAAErW,IAAM,WAAc,OAAO,GAC/CyjB,GAAkBnN,EAAEtW,IAAM,WAAc,OAAO,GAC/CyjB,GAAkBlN,EAAEvW,IAAM,WAAc,OAAO,GAC/CyjB,GAAkBC,EAAE1jB,IAAM,WAAc,OAAO,GAC/CwjB,GAAmB1qB,UAAU0d,YAAc,SAAsBphB,EAAOqhB,EAAe9a,KACvF6nB,GAAmB1qB,UAAUhD,KAAO,aACpC0tB,GAAmB1qB,UAAU6d,YAAc,SAAsBvhB,EAAOqhB,KACxE+M,GAAmB1qB,UAAU6qB,cAAgB,aAC7CH,GAAmB1qB,UAAU8qB,kBAAoB,SAA4B/wB,KAC7E2wB,GAAmB1qB,UAAU+qB,aAAe,aAC5CL,GAAmB1qB,UAAUgrB,KAAO,SAAe1uB,KACnDouB,GAAmB1qB,UAAUke,MAAQ,aACrCwM,GAAmB1qB,UAAUirB,eAAiB,SAAyBC,KACvER,GAAmB1qB,UAAUuV,KAAO,aACpCmV,GAAmB1qB,UAAUmrB,KAAO,SAAe7uB,KACnDouB,GAAmB1qB,UAAUorB,kBAAoB,aACjDV,GAAmB1qB,UAAUyb,YAAc,WACzC,MAAO,CAACqB,KAEV4N,GAAmB1qB,UAAU0b,SAAW,WACtC,OAAOgP,IAGT/qB,OAAOid,iBAAkB8N,GAAoBC,IAE7C,IAAIU,GAAY,aAEZC,GAA6B,SAAUC,GACzC,SAASD,IACPC,EAAa1vB,KAAKX,KAAM,8DAa1B,OAVKqwB,IAAeD,EAA0BnP,UAAYoP,GAC1DD,EAA0BtrB,UAAYL,OAAOyc,OAAQmP,GAAgBA,EAAavrB,WAClFsrB,EAA0BtrB,UAAUqc,YAAciP,EAClDA,EAA0BtrB,UAAUyb,YAAc,WAChD,MAAO,IAET6P,EAA0BtrB,UAAU0b,SAAW,WAC7C,OAAO4P,GAGFA,GACPD,IAEEG,GAAS,aAEbA,GAAOC,UAAY,SAAoBC,EAAKC,EAAQC,EAAMC,EAASzT,GAEjE,IADA,IAAI+E,EAAI,EACCpjB,EAAI4xB,EAAQ5xB,EAAI4xB,EAASvT,EAAKre,IACrC6xB,EAAKC,EAAU1O,GAAKuO,EAAI3xB,GACxBojB,KAIJqO,GAAOM,YAAc,SAAsB7P,GACzC,MAAO,CACL8P,iBAAkB,MAClB9P,IAGJ,IAAI+P,GAAc,SAASA,IAIzB,GAHA9wB,KAAKN,EAAI,KACTM,KAAKd,EAAI,KACTc,KAAK+wB,EAAI,KACgB,IAArBzb,UAAU7U,OACZT,KAAKN,EAAI,EACTM,KAAKd,EAAI,EACTc,KAAK+wB,EAAI,OACJ,GAAyB,IAArBzb,UAAU7U,OAAc,CACjC,IAAIkB,EAAI2T,UAAU,GAClBtV,KAAKN,EAAIiC,EAAEjC,EACXM,KAAKd,EAAIyC,EAAEzC,EACXc,KAAK+wB,EAAI,OACJ,GAAyB,IAArBzb,UAAU7U,QACnB,GAA4B,iBAAjB6U,UAAU,IAA2C,iBAAjBA,UAAU,GAAiB,CACxE,IAAI0b,EAAK1b,UAAU,GACf2b,EAAK3b,UAAU,GACnBtV,KAAKN,EAAIsxB,EACThxB,KAAKd,EAAI+xB,EACTjxB,KAAK+wB,EAAI,OACJ,GAAIzb,UAAU,aAAcwb,GAAexb,UAAU,aAAcwb,EAAa,CACrF,IAAIjuB,EAAKyS,UAAU,GACfxS,EAAKwS,UAAU,GACnBtV,KAAKN,EAAImD,EAAG3D,EAAI4D,EAAGiuB,EAAIjuB,EAAG5D,EAAI2D,EAAGkuB,EACjC/wB,KAAKd,EAAI4D,EAAGpD,EAAImD,EAAGkuB,EAAIluB,EAAGnD,EAAIoD,EAAGiuB,EACjC/wB,KAAK+wB,EAAIluB,EAAGnD,EAAIoD,EAAG5D,EAAI4D,EAAGpD,EAAImD,EAAG3D,OAC5B,GAAIoW,UAAU,aAAcyM,IAAczM,UAAU,aAAcyM,GAAY,CACnF,IAAImP,EAAO5b,UAAU,GACjB6b,EAAO7b,UAAU,GACrBtV,KAAKN,EAAIwxB,EAAKhyB,EAAIiyB,EAAKjyB,EACvBc,KAAKd,EAAIiyB,EAAKzxB,EAAIwxB,EAAKxxB,EACvBM,KAAK+wB,EAAIG,EAAKxxB,EAAIyxB,EAAKjyB,EAAIiyB,EAAKzxB,EAAIwxB,EAAKhyB,QAEtC,GAAyB,IAArBoW,UAAU7U,OAAc,CACjC,IAAI2wB,EAAO9b,UAAU,GACjB+b,EAAO/b,UAAU,GACjBgc,EAAKhc,UAAU,GACnBtV,KAAKN,EAAI0xB,EACTpxB,KAAKd,EAAImyB,EACTrxB,KAAK+wB,EAAIO,OACJ,GAAyB,IAArBhc,UAAU7U,OAAc,CACjC,IAAI8wB,EAAOjc,UAAU,GACjBkc,EAAOlc,UAAU,GACjB+Y,EAAK/Y,UAAU,GACfgZ,EAAKhZ,UAAU,GACfmc,EAAKF,EAAKryB,EAAIsyB,EAAKtyB,EACnBwyB,EAAKF,EAAK9xB,EAAI6xB,EAAK7xB,EACnBiyB,EAAKJ,EAAK7xB,EAAI8xB,EAAKtyB,EAAIsyB,EAAK9xB,EAAI6xB,EAAKryB,EACrC0yB,EAAKvD,EAAGnvB,EAAIovB,EAAGpvB,EACf2yB,EAAKvD,EAAG5uB,EAAI2uB,EAAG3uB,EACfoyB,EAAKzD,EAAG3uB,EAAI4uB,EAAGpvB,EAAIovB,EAAG5uB,EAAI2uB,EAAGnvB,EACjCc,KAAKN,EAAIgyB,EAAKI,EAAKD,EAAKF,EACxB3xB,KAAKd,EAAI0yB,EAAKD,EAAKF,EAAKK,EACxB9xB,KAAK+wB,EAAIU,EAAKI,EAAKD,EAAKF,IAG5BZ,GAAYhsB,UAAUmrB,KAAO,WAC3B,IAAIvxB,EAAIsB,KAAKd,EAAIc,KAAK+wB,EACtB,GAAI3P,GAAOjB,MAAMzhB,IAAM0iB,GAAOK,WAAW/iB,GACvC,MAAM,IAAI0xB,GAEZ,OAAO1xB,GAEToyB,GAAYhsB,UAAUgrB,KAAO,WAC3B,IAAIpxB,EAAIsB,KAAKN,EAAIM,KAAK+wB,EACtB,GAAI3P,GAAOjB,MAAMzhB,IAAM0iB,GAAOK,WAAW/iB,GACvC,MAAM,IAAI0xB,GAEZ,OAAO1xB,GAEToyB,GAAYhsB,UAAU6qB,cAAgB,WACpC,IAAIhuB,EAAI,IAAIogB,GAGZ,OAFApgB,EAAEjC,EAAIM,KAAK8vB,OACXnuB,EAAEzC,EAAIc,KAAKiwB,OACJtuB,GAETmvB,GAAYhsB,UAAUyb,YAAc,WAClC,MAAO,IAETuQ,GAAYhsB,UAAU0b,SAAW,WAC/B,OAAOsQ,IAETA,GAAYxhB,aAAe,SAAuBzM,EAAIC,EAAIurB,EAAIC,GAC5D,IAAImD,EAAK5uB,EAAG3D,EAAI4D,EAAG5D,EACfwyB,EAAK5uB,EAAGpD,EAAImD,EAAGnD,EACfiyB,EAAK9uB,EAAGnD,EAAIoD,EAAG5D,EAAI4D,EAAGpD,EAAImD,EAAG3D,EAC7B0yB,EAAKvD,EAAGnvB,EAAIovB,EAAGpvB,EACf2yB,EAAKvD,EAAG5uB,EAAI2uB,EAAG3uB,EACfoyB,EAAKzD,EAAG3uB,EAAI4uB,EAAGpvB,EAAIovB,EAAG5uB,EAAI2uB,EAAGnvB,EAG7B6xB,EAAIU,EAAKI,EAAKD,EAAKF,EACnBK,GAHIL,EAAKI,EAAKD,EAAKF,GAGRZ,EACXiB,GAHIJ,EAAKD,EAAKF,EAAKK,GAGRf,EACf,GAAI3P,GAAOjB,MAAM4R,IAAU3Q,GAAOK,WAAWsQ,IAAS3Q,GAAOjB,MAAM6R,IAAU5Q,GAAOK,WAAWuQ,GAC7F,MAAM,IAAI5B,GAEZ,OAAO,IAAIrO,GAAWgQ,EAAMC,IAG9B,IAAIC,GAAW,SAASA,IAKtB,GAJAjyB,KAAKkyB,MAAQ,KACblyB,KAAKmyB,MAAQ,KACbnyB,KAAKoyB,MAAQ,KACbpyB,KAAKqyB,MAAQ,KACY,IAArB/c,UAAU7U,OACZT,KAAK4mB,YACA,GAAyB,IAArBtR,UAAU7U,QACnB,GAAI6U,UAAU,aAAcyM,GAAY,CACtC,IAAIpgB,EAAI2T,UAAU,GAClBtV,KAAK4mB,KAAKjlB,EAAEjC,EAAGiC,EAAEjC,EAAGiC,EAAEzC,EAAGyC,EAAEzC,QACtB,GAAIoW,UAAU,aAAc2c,EAAU,CAC3C,IAAIjC,EAAM1a,UAAU,GACpBtV,KAAK4mB,KAAKoJ,SAEP,GAAyB,IAArB1a,UAAU7U,OAAc,CACjC,IAAIoC,EAAKyS,UAAU,GACfxS,EAAKwS,UAAU,GACnBtV,KAAK4mB,KAAK/jB,EAAGnD,EAAGoD,EAAGpD,EAAGmD,EAAG3D,EAAG4D,EAAG5D,QAC1B,GAAyB,IAArBoW,UAAU7U,OAAc,CACjC,IAAIigB,EAAKpL,UAAU,GACfqL,EAAKrL,UAAU,GACf1H,EAAK0H,UAAU,GACfzH,EAAKyH,UAAU,GACnBtV,KAAK4mB,KAAKlG,EAAIC,EAAI/S,EAAIC,KAItBykB,GAAoB,CAAElQ,iBAAkB,CAAE7d,cAAc,IAC5D0tB,GAASntB,UAAUytB,QAAU,WAC3B,OAAOvyB,KAAKwyB,WAAaxyB,KAAKyyB,aAEhCR,GAASntB,UAAUwV,OAAS,SAAiB9P,GAC3C,KAAMA,aAAiBynB,IACrB,OAAO,EAET,IAAIS,EAAgBloB,EACpB,OAAIxK,KAAK2yB,SACAD,EAAcC,SAEhB3yB,KAAKmyB,QAAUO,EAAcE,WAAa5yB,KAAKqyB,QAAUK,EAAcG,WAAa7yB,KAAKkyB,QAAUQ,EAAcI,WAAa9yB,KAAKoyB,QAAUM,EAAcK,WAEpKd,GAASntB,UAAUwK,aAAe,SAAuB0gB,GACvD,GAAIhwB,KAAK2yB,UAAY3C,EAAI2C,WAAa3yB,KAAKgzB,WAAWhD,GAAQ,OAAO,IAAIiC,GACzE,IAAIgB,EAAUjzB,KAAKkyB,MAAQlC,EAAIkC,MAAQlyB,KAAKkyB,MAAQlC,EAAIkC,MACpDgB,EAAUlzB,KAAKoyB,MAAQpC,EAAIoC,MAAQpyB,KAAKoyB,MAAQpC,EAAIoC,MACpDe,EAAUnzB,KAAKmyB,MAAQnC,EAAImC,MAAQnyB,KAAKmyB,MAAQnC,EAAImC,MACpDiB,EAAUpzB,KAAKqyB,MAAQrC,EAAIqC,MAAQryB,KAAKqyB,MAAQrC,EAAIqC,MACxD,OAAO,IAAIJ,GAASgB,EAASE,EAASD,EAASE,IAEjDnB,GAASntB,UAAU6tB,OAAS,WAC1B,OAAO3yB,KAAKmyB,MAAQnyB,KAAKkyB,OAE3BD,GAASntB,UAAU8tB,QAAU,WAC3B,OAAO5yB,KAAKmyB,OAEdF,GAASntB,UAAUuuB,OAAS,WAC1B,GAAyB,IAArB/d,UAAU7U,OAAc,CAC1B,GAAI6U,UAAU,aAAcyM,GAAY,CACtC,IAAIpgB,EAAI2T,UAAU,GAClB,OAAOtV,KAAKqzB,OAAO1xB,EAAEjC,EAAGiC,EAAEzC,GACrB,GAAIoW,UAAU,aAAc2c,GAAU,CAC3C,IAAIznB,EAAQ8K,UAAU,GACtB,OAAItV,KAAK2yB,WAAYnoB,EAAMmoB,WAGpBnoB,EAAMsoB,WAAa9yB,KAAKkyB,OAAS1nB,EAAMooB,WAAa5yB,KAAKmyB,OAAS3nB,EAAMuoB,WAAa/yB,KAAKoyB,OAAS5nB,EAAMqoB,WAAa7yB,KAAKqyB,aAE/H,GAAyB,IAArB/c,UAAU7U,OAAc,CACjC,IAAIf,EAAI4V,UAAU,GACdpW,EAAIoW,UAAU,GAClB,OAAItV,KAAK2yB,WACFjzB,GAAKM,KAAKkyB,OAASxyB,GAAKM,KAAKmyB,OAASjzB,GAAKc,KAAKoyB,OAASlzB,GAAKc,KAAKqyB,SAG9EJ,GAASntB,UAAUkuB,WAAa,WAC9B,GAAyB,IAArB1d,UAAU7U,OAAc,CAC1B,GAAI6U,UAAU,aAAc2c,GAAU,CACpC,IAAIznB,EAAQ8K,UAAU,GACtB,OAAItV,KAAK2yB,WAAYnoB,EAAMmoB,YAGlBnoB,EAAM0nB,MAAQlyB,KAAKmyB,OAAS3nB,EAAM2nB,MAAQnyB,KAAKkyB,OAAS1nB,EAAM4nB,MAAQpyB,KAAKqyB,OAAS7nB,EAAM6nB,MAAQryB,KAAKoyB,OAC3G,GAAI9c,UAAU,aAAcyM,GAAY,CAC7C,IAAIpgB,EAAI2T,UAAU,GAClB,OAAOtV,KAAKgzB,WAAWrxB,EAAEjC,EAAGiC,EAAEzC,SAE3B,GAAyB,IAArBoW,UAAU7U,OAAc,CACjC,IAAIf,EAAI4V,UAAU,GACdpW,EAAIoW,UAAU,GAClB,OAAItV,KAAK2yB,YACAjzB,EAAIM,KAAKmyB,OAASzyB,EAAIM,KAAKkyB,OAAShzB,EAAIc,KAAKqyB,OAASnzB,EAAIc,KAAKoyB,SAG5EH,GAASntB,UAAUiuB,QAAU,WAC3B,OAAO/yB,KAAKoyB,OAEdH,GAASntB,UAAUguB,QAAU,WAC3B,OAAO9yB,KAAKkyB,OAEdD,GAASntB,UAAUwuB,gBAAkB,WACnC,GAAyB,IAArBhe,UAAU7U,QACZ,GAAI6U,UAAU,aAAcyM,GAAY,CACtC,IAAIpgB,EAAI2T,UAAU,GAClBtV,KAAKszB,gBAAgB3xB,EAAEjC,EAAGiC,EAAEzC,QACvB,GAAIoW,UAAU,aAAc2c,GAAU,CAC3C,IAAIznB,EAAQ8K,UAAU,GACtB,GAAI9K,EAAMmoB,SACR,OAAO,KAEL3yB,KAAK2yB,UACP3yB,KAAKkyB,MAAQ1nB,EAAMsoB,UACnB9yB,KAAKmyB,MAAQ3nB,EAAMooB,UACnB5yB,KAAKoyB,MAAQ5nB,EAAMuoB,UACnB/yB,KAAKqyB,MAAQ7nB,EAAMqoB,YAEfroB,EAAM0nB,MAAQlyB,KAAKkyB,QACrBlyB,KAAKkyB,MAAQ1nB,EAAM0nB,OAEjB1nB,EAAM2nB,MAAQnyB,KAAKmyB,QACrBnyB,KAAKmyB,MAAQ3nB,EAAM2nB,OAEjB3nB,EAAM4nB,MAAQpyB,KAAKoyB,QACrBpyB,KAAKoyB,MAAQ5nB,EAAM4nB,OAEjB5nB,EAAM6nB,MAAQryB,KAAKqyB,QACrBryB,KAAKqyB,MAAQ7nB,EAAM6nB,cAIpB,GAAyB,IAArB/c,UAAU7U,OAAc,CACjC,IAAIf,EAAI4V,UAAU,GACdpW,EAAIoW,UAAU,GACdtV,KAAK2yB,UACP3yB,KAAKkyB,MAAQxyB,EACbM,KAAKmyB,MAAQzyB,EACbM,KAAKoyB,MAAQlzB,EACbc,KAAKqyB,MAAQnzB,IAETQ,EAAIM,KAAKkyB,QACXlyB,KAAKkyB,MAAQxyB,GAEXA,EAAIM,KAAKmyB,QACXnyB,KAAKmyB,MAAQzyB,GAEXR,EAAIc,KAAKoyB,QACXpyB,KAAKoyB,MAAQlzB,GAEXA,EAAIc,KAAKqyB,QACXryB,KAAKqyB,MAAQnzB,MAKrB+yB,GAASntB,UAAUyuB,UAAY,WAC7B,GAAIvzB,KAAK2yB,SAAY,OAAO,EAC5B,IAAI5B,EAAI/wB,KAAKwyB,WACTvH,EAAIjrB,KAAKyyB,YACb,OAAI1B,EAAI9F,EAAY8F,EACb9F,GAETgH,GAASntB,UAAU0tB,SAAW,WAC5B,OAAIxyB,KAAK2yB,SACA,EAEF3yB,KAAKmyB,MAAQnyB,KAAKkyB,OAE3BD,GAASntB,UAAUge,UAAY,SAAoBC,GACjD,IAAIiN,EAAMjN,EACV,OAAI/iB,KAAK2yB,SACH3C,EAAI2C,SAAmB,GACnB,EAEJ3C,EAAI2C,SAAmB,EAEzB3yB,KAAKkyB,MAAQlC,EAAIkC,OAAiB,EAClClyB,KAAKkyB,MAAQlC,EAAIkC,MAAgB,EACjClyB,KAAKoyB,MAAQpC,EAAIoC,OAAiB,EAClCpyB,KAAKoyB,MAAQpC,EAAIoC,MAAgB,EACjCpyB,KAAKmyB,MAAQnC,EAAImC,OAAiB,EAClCnyB,KAAKmyB,MAAQnC,EAAImC,MAAgB,EACjCnyB,KAAKqyB,MAAQrC,EAAIqC,OAAiB,EAClCryB,KAAKqyB,MAAQrC,EAAIqC,MAAgB,EAC9B,GAETJ,GAASntB,UAAU0uB,UAAY,SAAoBC,EAAQC,GACzD,GAAI1zB,KAAK2yB,SACP,OAAO,KAET3yB,KAAK4mB,KAAK5mB,KAAK8yB,UAAYW,EAAQzzB,KAAK4yB,UAAYa,EAAQzzB,KAAK+yB,UAAYW,EAAQ1zB,KAAK6yB,UAAYa,IAExGzB,GAASntB,UAAUme,SAAW,WAC5B,MAAO,OAASjjB,KAAKkyB,MAAQ,MAAQlyB,KAAKmyB,MAAQ,KAAOnyB,KAAKoyB,MAAQ,MAAQpyB,KAAKqyB,MAAQ,KAE7FJ,GAASntB,UAAU6uB,UAAY,WAC7B3zB,KAAKkyB,MAAQ,EACblyB,KAAKmyB,OAAS,EACdnyB,KAAKoyB,MAAQ,EACbpyB,KAAKqyB,OAAS,GAEhBJ,GAASntB,UAAU2tB,UAAY,WAC7B,OAAIzyB,KAAK2yB,SACA,EAEF3yB,KAAKqyB,MAAQryB,KAAKoyB,OAE3BH,GAASntB,UAAU8uB,UAAY,WAC7B,GAAI5zB,KAAK2yB,SAAY,OAAO,EAC5B,IAAI5B,EAAI/wB,KAAKwyB,WACTvH,EAAIjrB,KAAKyyB,YACb,OAAI1B,EAAI9F,EAAY8F,EACb9F,GAETgH,GAASntB,UAAU+uB,SAAW,WAC5B,GAAyB,IAArBve,UAAU7U,OAAc,CAC1B,IAAI6iB,EAAWhO,UAAU,GACzBtV,KAAK6zB,SAASvQ,EAAUA,QACnB,GAAyB,IAArBhO,UAAU7U,OAAc,CACjC,IAAIqzB,EAASxe,UAAU,GACnBye,EAASze,UAAU,GACvB,GAAItV,KAAK2yB,SAAY,OAAO,KAC5B3yB,KAAKkyB,OAAS4B,EACd9zB,KAAKmyB,OAAS2B,EACd9zB,KAAKoyB,OAAS2B,EACd/zB,KAAKqyB,OAAS0B,GACV/zB,KAAKkyB,MAAQlyB,KAAKmyB,OAASnyB,KAAKoyB,MAAQpyB,KAAKqyB,QAASryB,KAAK2zB,cAGnE1B,GAASntB,UAAUkvB,SAAW,WAC5B,GAAyB,IAArB1e,UAAU7U,OAAc,CAC1B,GAAI6U,UAAU,aAAc2c,GAAU,CACpC,IAAIznB,EAAQ8K,UAAU,GACtB,OAAOtV,KAAKqzB,OAAO7oB,GACd,GAAI8K,UAAU,aAAcyM,GAAY,CAC7C,IAAIpgB,EAAI2T,UAAU,GAClB,OAAOtV,KAAKqzB,OAAO1xB,SAEhB,GAAyB,IAArB2T,UAAU7U,OAAc,CACjC,IAAIf,EAAI4V,UAAU,GACdpW,EAAIoW,UAAU,GAClB,OAAOtV,KAAKqzB,OAAO3zB,EAAGR,KAG1B+yB,GAASntB,UAAUmvB,OAAS,WAC1B,OAAIj0B,KAAK2yB,SAAmB,KACrB,IAAI5Q,IAAY/hB,KAAK8yB,UAAY9yB,KAAK4yB,WAAa,GAAM5yB,KAAK+yB,UAAY/yB,KAAK6yB,WAAa,IAErGZ,GAASntB,UAAU8hB,KAAO,WACxB,GAAyB,IAArBtR,UAAU7U,OACZT,KAAK2zB,iBACA,GAAyB,IAArBre,UAAU7U,QACnB,GAAI6U,UAAU,aAAcyM,GAAY,CACtC,IAAIpgB,EAAI2T,UAAU,GAClBtV,KAAK4mB,KAAKjlB,EAAEjC,EAAGiC,EAAEjC,EAAGiC,EAAEzC,EAAGyC,EAAEzC,QACtB,GAAIoW,UAAU,aAAc2c,GAAU,CAC3C,IAAIjC,EAAM1a,UAAU,GACpBtV,KAAKkyB,MAAQlC,EAAIkC,MACjBlyB,KAAKmyB,MAAQnC,EAAImC,MACjBnyB,KAAKoyB,MAAQpC,EAAIoC,MACjBpyB,KAAKqyB,MAAQrC,EAAIqC,YAEd,GAAyB,IAArB/c,UAAU7U,OAAc,CACjC,IAAIoC,EAAKyS,UAAU,GACfxS,EAAKwS,UAAU,GACnBtV,KAAK4mB,KAAK/jB,EAAGnD,EAAGoD,EAAGpD,EAAGmD,EAAG3D,EAAG4D,EAAG5D,QAC1B,GAAyB,IAArBoW,UAAU7U,OAAc,CACjC,IAAIigB,EAAKpL,UAAU,GACfqL,EAAKrL,UAAU,GACf1H,EAAK0H,UAAU,GACfzH,EAAKyH,UAAU,GACfoL,EAAKC,GACP3gB,KAAKkyB,MAAQxR,EACb1gB,KAAKmyB,MAAQxR,IAEb3gB,KAAKkyB,MAAQvR,EACb3gB,KAAKmyB,MAAQzR,GAEX9S,EAAKC,GACP7N,KAAKoyB,MAAQxkB,EACb5N,KAAKqyB,MAAQxkB,IAEb7N,KAAKoyB,MAAQvkB,EACb7N,KAAKqyB,MAAQzkB,KAInBqkB,GAASntB,UAAU+tB,QAAU,WAC3B,OAAO7yB,KAAKqyB,OAEdJ,GAASntB,UAAUwe,SAAW,SAAmB0M,GAC/C,GAAIhwB,KAAKgzB,WAAWhD,GAAQ,OAAO,EACnC,IAAI7M,EAAK,EACLnjB,KAAKmyB,MAAQnC,EAAIkC,MAAS/O,EAAK6M,EAAIkC,MAAQlyB,KAAKmyB,MAAkBnyB,KAAKkyB,MAAQlC,EAAImC,QAAShP,EAAKnjB,KAAKkyB,MAAQlC,EAAImC,OACtH,IAAI/O,EAAK,EAET,OADIpjB,KAAKqyB,MAAQrC,EAAIoC,MAAShP,EAAK4M,EAAIoC,MAAQpyB,KAAKqyB,MAAkBryB,KAAKoyB,MAAQpC,EAAIqC,QAASjP,EAAKpjB,KAAKoyB,MAAQpC,EAAIqC,OAC3G,IAAPlP,EAAqBC,EACd,IAAPA,EAAqBD,EAClB3gB,KAAK8D,KAAK6c,EAAKA,EAAKC,EAAKA,IAElC6O,GAASntB,UAAUye,SAAW,WAC5B,IAAIlG,EAAS,GAKb,OADAA,EAAS,IADTA,EAAS,IADTA,EAAS,IADTA,EAAS,GAAKA,EAAS0E,GAAWwB,SAASvjB,KAAKkyB,QACzBnQ,GAAWwB,SAASvjB,KAAKmyB,QACzBpQ,GAAWwB,SAASvjB,KAAKoyB,QACzBrQ,GAAWwB,SAASvjB,KAAKqyB,QAGlDJ,GAASntB,UAAUyb,YAAc,WAC/B,MAAO,CAACoB,GAAYG,KAEtBmQ,GAASntB,UAAU0b,SAAW,WAC5B,OAAOyR,IAETA,GAASe,WAAa,WACpB,GAAyB,IAArB1d,UAAU7U,OAAc,CAC1B,IAAIoC,EAAKyS,UAAU,GACfxS,EAAKwS,UAAU,GACfwY,EAAIxY,UAAU,GAClB,OAAIwY,EAAEpuB,IAAMmD,EAAGnD,EAAIoD,EAAGpD,EAAImD,EAAGnD,EAAIoD,EAAGpD,IAAMouB,EAAEpuB,IAAMmD,EAAGnD,EAAIoD,EAAGpD,EAAImD,EAAGnD,EAAIoD,EAAGpD,IAAOouB,EAAE5uB,IAAM2D,EAAG3D,EAAI4D,EAAG5D,EAAI2D,EAAG3D,EAAI4D,EAAG5D,IAAM4uB,EAAE5uB,IAAM2D,EAAG3D,EAAI4D,EAAG5D,EAAI2D,EAAG3D,EAAI4D,EAAG5D,GAIlJ,GAAyB,IAArBoW,UAAU7U,OAAc,CACjC,IAAIywB,EAAO5b,UAAU,GACjB6b,EAAO7b,UAAU,GACjB+Y,EAAK/Y,UAAU,GACfgZ,EAAKhZ,UAAU,GACf4e,EAAO1xB,KAAKwZ,IAAIqS,EAAG3uB,EAAG4uB,EAAG5uB,GACzBy0B,EAAO3xB,KAAK0Z,IAAImS,EAAG3uB,EAAG4uB,EAAG5uB,GACzB00B,EAAO5xB,KAAKwZ,IAAIkV,EAAKxxB,EAAGyxB,EAAKzxB,GAC7B20B,EAAO7xB,KAAK0Z,IAAIgV,EAAKxxB,EAAGyxB,EAAKzxB,GACjC,QAAI00B,EAAOD,OACPE,EAAOH,KACXA,EAAO1xB,KAAKwZ,IAAIqS,EAAGnvB,EAAGovB,EAAGpvB,GACzBi1B,EAAO3xB,KAAK0Z,IAAImS,EAAGnvB,EAAGovB,EAAGpvB,GACzBk1B,EAAO5xB,KAAKwZ,IAAIkV,EAAKhyB,EAAGiyB,EAAKjyB,GAC7Bm1B,EAAO7xB,KAAK0Z,IAAIgV,EAAKhyB,EAAGiyB,EAAKjyB,KACzBk1B,EAAOD,MACPE,EAAOH,OAIf5B,GAAkBlQ,iBAAiBpW,IAAM,WAAc,OAAO,oBAE9DvH,OAAOid,iBAAkBuQ,GAAUK,IAEnC,IAAIgC,GAAU,CACZC,QAAW,iCACXC,aAAgB,wBAChBC,OAAU,MACVC,WAAc,cACdC,iBAAoB,wBACpBC,WAAc,uBAgBZC,GAAY,SAAoBC,GAClC90B,KAAK80B,gBAAkBA,GAAmB,IAAIC,IAWhDF,GAAU/vB,UAAUkwB,KAAO,SAAeC,GACxC,IAAIC,EAAU7jB,EAAM2U,EACpBiP,EAAMA,EAAIpc,QAAQ,UAAW,KAC7B,IAAIsc,EAAUb,GAAQC,QAAQa,KAAKH,GAanC,IAZ6B,IAAzBA,EAAII,OAAO,YACbF,EAAUb,GAAQE,aAAaY,KAAKH,IAC5B,QAAK/vB,GAEXiwB,IACF9jB,EAAO8jB,EAAQ,GAAGG,cAClBtP,EAAMmP,EAAQ,GACVI,GAAQlkB,KACV6jB,EAAWK,GAAQlkB,GAAMmkB,MAAMx1B,KAAM,CAACgmB,WAIzB9gB,IAAbgwB,EAA0B,MAAM,IAAIvsB,MAAM,uBAAyBssB,GAEvE,OAAOC,GAUTL,GAAU/vB,UAAU2wB,MAAQ,SAAgBP,GAC1C,OAAOl1B,KAAK01B,gBAAgBR,IAU9BL,GAAU/vB,UAAU4wB,gBAAkB,SAA0BR,GAC9D,IAAI7jB,EAAO6jB,EAASS,kBAAkBL,cACtC,IAAKM,GAAUvkB,GACb,OAAO,KAET,IAAIwkB,EAAUxkB,EAAKmV,cAOnB,OALI0O,EAASY,UACJD,EAAU,SAEVA,EAAU,IAAMD,GAAUvkB,GAAMmkB,MAAMx1B,KAAM,CAACk1B,IAAa,KAUrE,IAAIU,GAAY,CACdG,WAAY,SAAqBC,GAC/B,OAAOA,EAAat2B,EAAI,IAAMs2B,EAAa92B,GAU7C8K,MAAO,SAAgBisB,GACrB,OAAOL,GAAUG,WAAWp1B,KAAKX,KAAMi2B,EAAQC,aAAaA,aAAa,KAW3EC,WAAY,SAAqBC,GAI/B,IAHA,IAEIC,EAAQ,GACHx3B,EAAI,EAAGqe,EAAMkZ,EAAaE,YAAY71B,OAAQ5B,EAAIqe,IAAOre,EAChEw3B,EAAM71B,KAAK,IAAMo1B,GAAU5rB,MAAMwrB,MAJtBx1B,KAIoC,CAACo2B,EAAaE,YAAYz3B,KAAO,KAElF,OAAOw3B,EAAM3yB,KAAK,MASpB6yB,WAAY,SAAqBC,GAI/B,IAHA,IAEIH,EAAQ,GACHx3B,EAAI,EAAGqe,EAAMsZ,EAAaC,QAAQP,aAAaz1B,OAAQ5B,EAAIqe,IAAOre,EACzEw3B,EAAM71B,KAAKo1B,GAAUG,WAAWP,MAJrBx1B,KAImC,CAACw2B,EAAaC,QAAQP,aAAar3B,MAEnF,OAAOw3B,EAAM3yB,KAAK,MAGpBgzB,WAAY,SAAqBC,GAI/B,IAHA,IAEIN,EAAQ,GACHx3B,EAAI,EAAGqe,EAAMyZ,EAAaF,QAAQP,aAAaz1B,OAAQ5B,EAAIqe,IAAOre,EACzEw3B,EAAM71B,KAAKo1B,GAAUG,WAAWP,MAJrBx1B,KAImC,CAAC22B,EAAaF,QAAQP,aAAar3B,MAEnF,OAAOw3B,EAAM3yB,KAAK,MAUpBkzB,gBAAiB,SAA0BC,GAIzC,IAHA,IAEIR,EAAQ,GACHx3B,EAAI,EAAGqe,EAAM2Z,EAAkBP,YAAY71B,OAAQ5B,EAAIqe,IAAOre,EACrEw3B,EAAM71B,KAAK,IACTo1B,GAAUW,WAAWf,MALZx1B,KAK0B,CAAC62B,EAAkBP,YAAYz3B,KAClE,KAEJ,OAAOw3B,EAAM3yB,KAAK,MASpBozB,QAAS,SAAkBC,GACzB,IAEIV,EAAQ,GACZA,EAAM71B,KAAK,IAAMo1B,GAAUW,WAAWf,MAAMx1B,KAAM,CAAC+2B,EAAUC,SAAW,KACxE,IAAK,IAAIn4B,EAAI,EAAGqe,EAAM6Z,EAAUE,OAAOx2B,OAAQ5B,EAAIqe,IAAOre,EACxDw3B,EAAM71B,KAAK,IAAMo1B,GAAUW,WAAWf,MAL3Bx1B,KAKyC,CAAC+2B,EAAUE,OAAOp4B,KAAO,KAE/E,OAAOw3B,EAAM3yB,KAAK,MASpBwzB,aAAc,SAAuBC,GAInC,IAHA,IAEId,EAAQ,GACHx3B,EAAI,EAAGqe,EAAMia,EAAeb,YAAY71B,OAAQ5B,EAAIqe,IAAOre,EAClEw3B,EAAM71B,KAAK,IAAMo1B,GAAUkB,QAAQtB,MAJxBx1B,KAIsC,CAACm3B,EAAeb,YAAYz3B,KAAO,KAEtF,OAAOw3B,EAAM3yB,KAAK,MAUpB0zB,mBAAoB,SAA6BC,GAI/C,IAHA,IAEIhB,EAAQ,GACHx3B,EAAI,EAAGqe,EAAMma,EAAWf,YAAY71B,OAAQ5B,EAAIqe,IAAOre,EAC9Dw3B,EAAM71B,KAJKR,KAIO01B,gBAAgB2B,EAAWf,YAAYz3B,KAE3D,OAAOw3B,EAAM3yB,KAAK,OASlB6xB,GAAU,CAQZvrB,MAAO,SAAgBgc,GACrB,QAAY9gB,IAAR8gB,EACF,OAAOhmB,KAAK80B,gBAAgBwC,cAG9B,IAAIC,EAASvR,EAAIwR,OAAO73B,MAAM20B,GAAQG,QACtC,OAAOz0B,KAAK80B,gBAAgBwC,YAAY,IAAIvV,GAAW/c,OAAOkb,WAAWqX,EAAO,IAC9EvyB,OAAOkb,WAAWqX,EAAO,OAU7BpB,WAAY,SAAqBnQ,GAC/B,IAMIhc,EAJJ,QAAY9E,IAAR8gB,EACF,OAAOhmB,KAAK80B,gBAAgB2C,mBAM9B,IAFA,IAAI7jB,EAASoS,EAAIwR,OAAO73B,MAAM,KAC1B+3B,EAAa,GACR74B,EAAI,EAAGqe,EAAMtJ,EAAOnT,OAAQ5B,EAAIqe,IAAOre,EAC9CmL,EAAQ4J,EAAO/U,GAAGga,QAAQyb,GAAQM,WAAY,MAC9C8C,EAAWl3B,KAAK+0B,GAAQvrB,MAAMwrB,MAXnBx1B,KAWiC,CAACgK,KAE/C,OAAOhK,KAAK80B,gBAAgB2C,iBAAiBC,IAU/CnB,WAAY,SAAqBvQ,GAC/B,QAAY9gB,IAAR8gB,EACF,OAAOhmB,KAAK80B,gBAAgB6C,mBAM9B,IAHA,IAEIJ,EAFA3jB,EAASoS,EAAIwR,OAAO73B,MAAM,KAC1B+3B,EAAa,GAER74B,EAAI,EAAGqe,EAAMtJ,EAAOnT,OAAQ5B,EAAIqe,IAAOre,EAC9C04B,EAAS3jB,EAAO/U,GAAG24B,OAAO73B,MAAM20B,GAAQG,QACxCiD,EAAWl3B,KAAK,IAAIuhB,GAAW/c,OAAOkb,WAAWqX,EAAO,IAAKvyB,OAAOkb,WAAWqX,EAAO,MAExF,OAAOv3B,KAAK80B,gBAAgB6C,iBAAiBD,IAU/ChB,WAAY,SAAqB1Q,GAC/B,QAAY9gB,IAAR8gB,EACF,OAAOhmB,KAAK80B,gBAAgB8C,mBAM9B,IAHA,IAEIL,EAFA3jB,EAASoS,EAAIwR,OAAO73B,MAAM,KAC1B+3B,EAAa,GAER74B,EAAI,EAAGqe,EAAMtJ,EAAOnT,OAAQ5B,EAAIqe,IAAOre,EAC9C04B,EAAS3jB,EAAO/U,GAAG24B,OAAO73B,MAAM20B,GAAQG,QACxCiD,EAAWl3B,KAAK,IAAIuhB,GAAW/c,OAAOkb,WAAWqX,EAAO,IAAKvyB,OAAOkb,WAAWqX,EAAO,MAExF,OAAOv3B,KAAK80B,gBAAgB8C,iBAAiBF,IAU/Cd,gBAAiB,SAA0B5Q,GACzC,IAMI6R,EAJJ,QAAY3yB,IAAR8gB,EACF,OAAOhmB,KAAK80B,gBAAgBgD,wBAM9B,IAFA,IAAIC,EAAQ/R,EAAIwR,OAAO73B,MAAM20B,GAAQI,YACjCgD,EAAa,GACR74B,EAAI,EAAGqe,EAAM6a,EAAMt3B,OAAQ5B,EAAIqe,IAAOre,EAC7Cg5B,EAAOE,EAAMl5B,GAAGga,QAAQyb,GAAQM,WAAY,MAC5C8C,EAAWl3B,KAAK+0B,GAAQgB,WAAWf,MAXxBx1B,KAWsC,CAAC63B,KAEpD,OAAO73B,KAAK80B,gBAAgBgD,sBAAsBJ,IAUpDZ,QAAS,SAAkB9Q,GACzB,IAMIvc,EAAM8sB,EAAYG,EAJtB,QAAYxxB,IAAR8gB,EACF,OAAOhmB,KAAK80B,gBAAgBkD,gBAO9B,IAHA,IACIC,EADA5nB,EAAQ2V,EAAIwR,OAAO73B,MAAM20B,GAAQI,YAEjCwD,EAAQ,GACHr5B,EAAI,EAAGqe,EAAM7M,EAAM5P,OAAQ5B,EAAIqe,IAAOre,EAC7C4K,EAAO4G,EAAMxR,GAAGga,QAAQyb,GAAQM,WAAY,MAC5C2B,EAAahB,GAAQgB,WAAWf,MAZrBx1B,KAYmC,CAACyJ,IAC/CitB,EAbW12B,KAaS80B,gBAAgB8C,iBAAiBrB,EAAWE,SACtD,IAAN53B,EACFo5B,EAAQvB,EAERwB,EAAM13B,KAAKk2B,GAGf,OAAO12B,KAAK80B,gBAAgBkD,cAAcC,EAAOC,IAUnDhB,aAAc,SAAuBlR,GACnC,IAMI8Q,EAJJ,QAAY5xB,IAAR8gB,EACF,OAAOhmB,KAAK80B,gBAAgBqD,qBAM9B,IAFA,IAAIC,EAAWpS,EAAIwR,OAAO73B,MAAM20B,GAAQK,kBACpC+C,EAAa,GACR74B,EAAI,EAAGqe,EAAMkb,EAAS33B,OAAQ5B,EAAIqe,IAAOre,EAChDi4B,EAAUsB,EAASv5B,GAAGga,QAAQyb,GAAQM,WAAY,MAClD8C,EAAWl3B,KAAK+0B,GAAQuB,QAAQtB,MAXrBx1B,KAWmC,CAAC82B,KAEjD,OAAO92B,KAAK80B,gBAAgBqD,mBAAmBT,IAUjDN,mBAAoB,SAA6BpR,GAG/C,QAAY9gB,IAAR8gB,EACF,OAAOhmB,KAAK80B,gBAAgBuD,2BAO9B,IAFA,IAAIC,GADJtS,EAAMA,EAAInN,QAAQ,kBAAmB,QAClB2e,OAAO73B,MAAM,KAC5B+3B,EAAa,GACR74B,EAAI,EAAGqe,EAAMob,EAAS73B,OAAQ5B,EAAIqe,IAAOre,EAChD64B,EAAWl3B,KAXAR,KAWYg1B,KAAKsD,EAASz5B,KAEvC,OAAOmB,KAAK80B,gBAAgBuD,yBAAyBX,KAsBrDa,GAAY,SAAoBzD,GAClC90B,KAAKw4B,OAAS,IAAI3D,GAAUC,IAW9ByD,GAAUzzB,UAAU2wB,MAAQ,SAAgBP,GAC1C,OAAOl1B,KAAKw4B,OAAO/C,MAAMP,IAY3BqD,GAAUE,aAAe,SAAuBte,EAAItX,GAClD,GAAyB,IAArByS,UAAU7U,OACZ,MAAM,IAAIkI,MAAM,mBAElB,MAAO,gBAAkBwR,EAAGza,EAAI,IAAMya,EAAGjb,EAAI,KAAO2D,EAAGnD,EAAI,IAAMmD,EAAG3D,EAAI,MAG1E,IAAIw5B,GAAoB,SAAU/vB,GAChC,SAAS+vB,EAAkB5X,GACzBnY,EAAMhI,KAAKX,KAAM8gB,GACjB9gB,KAAK+gB,KAAO,mBACZ/gB,KAAK8gB,QAAUA,EACf9gB,KAAKghB,OAAQ,IAAKrY,GAASqY,MAO7B,OAJKrY,IAAQ+vB,EAAiBzX,UAAYtY,GAC1C+vB,EAAiB5zB,UAAYL,OAAOyc,OAAQvY,GAASA,EAAM7D,WAC3D4zB,EAAiB5zB,UAAUqc,YAAcuX,EAElCA,GACP/vB,OAEEgwB,GAA4B,SAAUC,GACxC,SAASD,IAEP,GADAC,EAAoBj4B,KAAKX,MACA,IAArBsV,UAAU7U,OACZm4B,EAAoBj4B,KAAKX,WACpB,GAAyB,IAArBsV,UAAU7U,OAAc,CACjC,IAAIqgB,EAAUxL,UAAU,GACxBsjB,EAAoBj4B,KAAKX,KAAM8gB,IAcnC,OAVK8X,IAAsBD,EAAyB1X,UAAY2X,GAChED,EAAyB7zB,UAAYL,OAAOyc,OAAQ0X,GAAuBA,EAAoB9zB,WAC/F6zB,EAAyB7zB,UAAUqc,YAAcwX,EACjDA,EAAyB7zB,UAAUyb,YAAc,WAC/C,MAAO,IAEToY,EAAyB7zB,UAAU0b,SAAW,WAC5C,OAAOmY,GAGFA,GACPD,IAEEG,GAAS,aAEbA,GAAO/zB,UAAUyb,YAAc,WAC7B,MAAO,IAETsY,GAAO/zB,UAAU0b,SAAW,WAC1B,OAAOqY,IAETA,GAAOC,qBAAuB,WAC5B,GAAyB,IAArBxjB,UAAU7U,OACZo4B,GAAOC,qBAAqB,WACvB,GAAyB,IAArBxjB,UAAU7U,OAAc,CACjC,IAAIqgB,EAAUxL,UAAU,GACxB,MAAM,IAAIqjB,GAAyB,2BAAyC,OAAZ7X,EAAmB,KAAOA,EAAU,OAGxG+X,GAAOE,OAAS,WACd,IAAIC,EACAlY,EACJ,GAAyB,IAArBxL,UAAU7U,OACZu4B,EAAY1jB,UAAU,GACtBujB,GAAOE,OAAOC,EAAW,WACpB,GAAyB,IAArB1jB,UAAU7U,SACnBu4B,EAAY1jB,UAAU,GACtBwL,EAAUxL,UAAU,IACf0jB,GACH,MAAgB,OAAZlY,EACI,IAAI6X,GAEJ,IAAIA,GAAyB7X,IAK3C+X,GAAOve,OAAS,WACd,IAAI2e,EACAC,EACApY,EACJ,GAAyB,IAArBxL,UAAU7U,OACZw4B,EAAgB3jB,UAAU,GAC1B4jB,EAAc5jB,UAAU,GACxBujB,GAAOve,OAAO2e,EAAeC,EAAa,WACrC,GAAyB,IAArB5jB,UAAU7U,SACnBw4B,EAAgB3jB,UAAU,GAC1B4jB,EAAc5jB,UAAU,GACxBwL,EAAUxL,UAAU,IACf4jB,EAAY5e,OAAO2e,IACtB,MAAM,IAAIN,GAAyB,YAAcM,EAAgB,oBAAsBC,GAA2B,OAAZpY,EAAmB,KAAOA,EAAU,MAKhJ,IAAIqY,GAAkB,WACpBn5B,KAAKo5B,QAAU,KACfp5B,KAAKq5B,YAAc5wB,MAAM,GAAGwjB,OAAOqN,IAAI,WAAc,OAAO7wB,MAAM,KAClEzI,KAAKu5B,OAAS,IAAI9wB,MAAM,GAAGwjB,KAAK,MAChCjsB,KAAKw5B,cAAgB,KACrBx5B,KAAKy5B,UAAY,KACjBz5B,KAAK05B,IAAM,KACX15B,KAAK25B,IAAM,KACX35B,KAAK45B,gBAAkB,KACvB55B,KAAKu5B,OAAO,GAAK,IAAIxX,GACrB/hB,KAAKu5B,OAAO,GAAK,IAAIxX,GACrB/hB,KAAK05B,IAAM15B,KAAKu5B,OAAO,GACvBv5B,KAAK25B,IAAM35B,KAAKu5B,OAAO,GACvBv5B,KAAKo5B,QAAU,GAGbS,GAAqB,CAAEC,eAAgB,CAAEv1B,cAAc,GAAOw1B,aAAc,CAAEx1B,cAAc,GAAOy1B,UAAW,CAAEz1B,cAAc,GAAO01B,gBAAiB,CAAE11B,cAAc,GAAO21B,mBAAoB,CAAE31B,cAAc,GAAO41B,uBAAwB,CAAE51B,cAAc,IACpQ40B,GAAgBr0B,UAAUs1B,qBAAuB,SAA+BC,EAAcC,GAE5F,OADAt6B,KAAKu6B,sBACEv6B,KAAKw5B,cAAca,GAAcC,IAE1CnB,GAAgBr0B,UAAU01B,mBAAqB,WAC7C,IAAIC,EAAS,IAAI1U,GAIjB,OAHI/lB,KAAK06B,cAAgBD,EAAOxU,OAAO,aACnCjmB,KAAKy5B,WAAagB,EAAOxU,OAAO,WAChCjmB,KAAK26B,eAAiBF,EAAOxU,OAAO,cACjCwU,EAAOxX,YAEhBkW,GAAgBr0B,UAAU81B,oBAAsB,SAA8B/3B,EAAIC,EAAI+3B,EAAIC,GACxF96B,KAAKq5B,YAAY,GAAG,GAAKx2B,EACzB7C,KAAKq5B,YAAY,GAAG,GAAKv2B,EACzB9C,KAAKq5B,YAAY,GAAG,GAAKwB,EACzB76B,KAAKq5B,YAAY,GAAG,GAAKyB,EACzB96B,KAAKo5B,QAAUp5B,KAAK+6B,iBAAiBl4B,EAAIC,EAAI+3B,EAAIC,IAEnD3B,GAAgBr0B,UAAUk2B,mBAAqB,WAC7C,OAAOh7B,KAAKo5B,SAEdD,GAAgBr0B,UAAUy1B,oBAAsB,WAC9C,GAAyB,IAArBjlB,UAAU7U,OACe,OAAvBT,KAAKw5B,gBACPx5B,KAAKw5B,cAAgB/wB,MAAM,GAAGwjB,OAAOqN,IAAI,WAAc,OAAO7wB,MAAM,KACpEzI,KAAKu6B,oBAAoB,GACzBv6B,KAAKu6B,oBAAoB,SAEtB,GAAyB,IAArBjlB,UAAU7U,OAAc,CACjC,IAAI45B,EAAe/kB,UAAU,GACjBtV,KAAKi7B,gBAAgBZ,EAAc,GACnCr6B,KAAKi7B,gBAAgBZ,EAAc,IAE7Cr6B,KAAKw5B,cAAca,GAAc,GAAK,EACtCr6B,KAAKw5B,cAAca,GAAc,GAAK,IAEtCr6B,KAAKw5B,cAAca,GAAc,GAAK,EACtCr6B,KAAKw5B,cAAca,GAAc,GAAK,KAI5ClB,GAAgBr0B,UAAUo2B,SAAW,WACnC,OAAOl7B,KAAKm7B,mBAAqBn7B,KAAKy5B,WAExCN,GAAgBr0B,UAAUs2B,kBAAoB,SAA4BC,GACxEr7B,KAAK45B,gBAAkByB,GAEzBlC,GAAgBr0B,UAAUw2B,uBAAyB,WAGjD,GAAyB,IAArBhmB,UAAU7U,OACZ,QAAIT,KAAKs7B,uBAAuB,MAC5Bt7B,KAAKs7B,uBAAuB,GAE3B,GAAyB,IAArBhmB,UAAU7U,OAAc,CAEjC,IADA,IAAI86B,EAAiBjmB,UAAU,GACtBzW,EAAI,EAAGA,EAAImB,KAAKo5B,QAASv6B,IAChC,IATWmB,KASEu5B,OAAO16B,GAAG6jB,SATZ1iB,KAS4Bq5B,YAAYkC,GAAgB,MATxDv7B,KASsEu5B,OAAO16B,GAAG6jB,SAThF1iB,KASgGq5B,YAAYkC,GAAgB,IACrI,OAAO,EAGX,OAAO,IAGXpC,GAAgBr0B,UAAU6Q,gBAAkB,SAA0B2kB,GACpE,OAAOt6B,KAAKu5B,OAAOe,IAErBnB,GAAgBr0B,UAAU41B,WAAa,WACrC,OAAO16B,KAAKm7B,oBAAsBn7B,KAAKy5B,WAEzCN,GAAgBr0B,UAAUq2B,gBAAkB,WAC1C,OAAOn7B,KAAKo5B,UAAYD,GAAgBc,iBAE1Cd,GAAgBr0B,UAAUm2B,gBAAkB,SAA0BZ,EAAcC,GAElF,OADWnB,GAAgBqC,oBAAoBx7B,KAAKu5B,OAAOe,GAAWt6B,KAAKq5B,YAAYgB,GAAc,GAAIr6B,KAAKq5B,YAAYgB,GAAc,KAG1IlB,GAAgBr0B,UAAU61B,YAAc,WACtC,OAAO36B,KAAKo5B,UAAYD,GAAgBgB,wBAE1ChB,GAAgBr0B,UAAUme,SAAW,WACnC,OAAOsV,GAAUE,aAAaz4B,KAAKq5B,YAAY,GAAG,GAAIr5B,KAAKq5B,YAAY,GAAG,IAAM,MAAQd,GAAUE,aAAaz4B,KAAKq5B,YAAY,GAAG,GAAIr5B,KAAKq5B,YAAY,GAAG,IAAMr5B,KAAKw6B,sBAExKrB,GAAgBr0B,UAAU22B,YAAc,SAAsBpB,EAAcqB,GAC1E,OAAO17B,KAAKq5B,YAAYgB,GAAcqB,IAExCvC,GAAgBr0B,UAAU62B,eAAiB,SAAyBp0B,GAGlE,IAFE,IAEO1I,EAAI,EAAGA,EAAImB,KAAKo5B,QAASv6B,IAChC,GAHamB,KAGFu5B,OAAO16B,GAAG6jB,SAASnb,GAC5B,OAAO,EAGX,OAAO,GAET4xB,GAAgBr0B,UAAU82B,4BAA8B,SAAsCvB,EAAcC,GAE1G,OADAt6B,KAAKu6B,sBACEv6B,KAAKu5B,OAAOv5B,KAAKw5B,cAAca,GAAcC,KAEtDnB,GAAgBr0B,UAAUyb,YAAc,WACtC,MAAO,IAET4Y,GAAgBr0B,UAAU0b,SAAW,WACnC,OAAO2Y,IAETA,GAAgBqC,oBAAsB,SAA8B75B,EAAGwY,EAAItX,GACzE,IAAIsgB,EAAK3gB,KAAKiP,IAAI5O,EAAGnD,EAAIya,EAAGza,GACxB0jB,EAAK5gB,KAAKiP,IAAI5O,EAAG3D,EAAIib,EAAGjb,GACxBmI,GAAQ,EACZ,GAAI1F,EAAE2Y,OAAOH,GACX9S,EAAO,OACF,GAAI1F,EAAE2Y,OAAOzX,GACHwE,EAAX8b,EAAKC,EAAaD,EAAoBC,MACrC,CACL,IAAIyY,EAAMr5B,KAAKiP,IAAI9P,EAAEjC,EAAIya,EAAGza,GACxBo8B,EAAMt5B,KAAKiP,IAAI9P,EAAEzC,EAAIib,EAAGjb,GAEf,KADEmI,EAAX8b,EAAKC,EAAayY,EAAqBC,IACtBn6B,EAAE2Y,OAAOH,KAC5B9S,EAAO7E,KAAK0Z,IAAI2f,EAAKC,IAIzB,OADAjD,GAAOE,SAAkB,IAAT1xB,IAAiB1F,EAAE2Y,OAAOH,IAAM,4BACzC9S,GAET8xB,GAAgB4C,6BAA+B,SAAuCp6B,EAAGkB,EAAIC,GAC3F,IAAIqgB,EAAKxhB,EAAEjC,EAAImD,EAAGnD,EACd0jB,EAAKzhB,EAAEzC,EAAI2D,EAAG3D,EACdmI,EAAO7E,KAAK8D,KAAK6c,EAAKA,EAAKC,EAAKA,GAEpC,OADAyV,GAAOE,SAAkB,IAAT1xB,IAAiB1F,EAAE2Y,OAAOzX,IAAM,gCACzCwE,GAETwyB,GAAmBC,eAAe9tB,IAAM,WAAc,OAAO,GAC7D6tB,GAAmBE,aAAa/tB,IAAM,WAAc,OAAO,GAC3D6tB,GAAmBG,UAAUhuB,IAAM,WAAc,OAAO,GACxD6tB,GAAmBI,gBAAgBjuB,IAAM,WAAc,OAAO,GAC9D6tB,GAAmBK,mBAAmBluB,IAAM,WAAc,OAAO,GACjE6tB,GAAmBM,uBAAuBnuB,IAAM,WAAc,OAAO,GAErEvH,OAAOid,iBAAkByX,GAAiBU,IAE1C,IAAImC,GAAyB,SAAUC,GACrC,SAASD,IACPC,EAAmBzG,MAAMx1B,KAAMsV,WAoOjC,OAjOK2mB,IAAqBD,EAAsB/a,UAAYgb,GAC5DD,EAAsBl3B,UAAYL,OAAOyc,OAAQ+a,GAAsBA,EAAmBn3B,WAC1Fk3B,EAAsBl3B,UAAUqc,YAAc6a,EAE9CA,EAAsBl3B,UAAUo3B,qBAAuB,SAA+BC,GACpF,IAAIC,EAAO,IAAInK,GAASjyB,KAAKq5B,YAAY,GAAG,GAAIr5B,KAAKq5B,YAAY,GAAG,IAChEgD,EAAO,IAAIpK,GAASjyB,KAAKq5B,YAAY,GAAG,GAAIr5B,KAAKq5B,YAAY,GAAG,IACpE,OAAO+C,EAAKpI,SAASmI,IAAUE,EAAKrI,SAASmI,IAE/CH,EAAsBl3B,UAAU81B,oBAAsB,WACpD,GAAyB,IAArBtlB,UAAU7U,OAgBL,OAAOw7B,EAAmBn3B,UAAU81B,oBAAoBpF,MAAMx1B,KAAMsV,WAf3E,IAAI3T,EAAI2T,UAAU,GACdzS,EAAKyS,UAAU,GACfxS,EAAKwS,UAAU,GAEnB,GADAtV,KAAKy5B,WAAY,EACbxH,GAASe,WAAWnwB,EAAIC,EAAInB,IACmB,IAA7C26B,GAAazO,iBAAiBhrB,EAAIC,EAAInB,IAAyD,IAA7C26B,GAAazO,iBAAiB/qB,EAAID,EAAIlB,GAM1F,OALA3B,KAAKy5B,WAAY,GACb93B,EAAE2Y,OAAOzX,IAAOlB,EAAE2Y,OAAOxX,MAC3B9C,KAAKy5B,WAAY,GAEnBz5B,KAAKo5B,QAAU6C,EAAmB/B,mBAC3B,KAGXl6B,KAAKo5B,QAAU6C,EAAmBhC,iBAGtC+B,EAAsBl3B,UAAUy3B,mBAAqB,SAA6BC,EAAIC,EAAIC,EAAIC,EAAIC,GAChGA,EAAOl9B,EAAIM,KAAK68B,mBAAmBL,EAAG98B,EAAG+8B,EAAG/8B,EAAGg9B,EAAGh9B,EAAGi9B,EAAGj9B,GACxDk9B,EAAO19B,EAAIc,KAAK68B,mBAAmBL,EAAGt9B,EAAGu9B,EAAGv9B,EAAGw9B,EAAGx9B,EAAGy9B,EAAGz9B,GACxDs9B,EAAG98B,GAAKk9B,EAAOl9B,EACf88B,EAAGt9B,GAAK09B,EAAO19B,EACfu9B,EAAG/8B,GAAKk9B,EAAOl9B,EACf+8B,EAAGv9B,GAAK09B,EAAO19B,EACfw9B,EAAGh9B,GAAKk9B,EAAOl9B,EACfg9B,EAAGx9B,GAAK09B,EAAO19B,EACfy9B,EAAGj9B,GAAKk9B,EAAOl9B,EACfi9B,EAAGz9B,GAAK09B,EAAO19B,GAEjB88B,EAAsBl3B,UAAUg4B,4BAA8B,SAAsCj6B,EAAIC,EAAIurB,EAAIC,GAC9G,IAAI6N,EAAQ,KACZ,IACEA,EAAQrL,GAAYxhB,aAAazM,EAAIC,EAAIurB,EAAIC,GAC7C,MAAO5S,GACP,KAAIA,aAAa0U,IAER,MAAM1U,EADbygB,EAAQH,EAAsBe,gBAAgBl6B,EAAIC,EAAIurB,EAAIC,GAG9D,OAAO6N,GAETH,EAAsBl3B,UAAUwK,aAAe,SAAuBzM,EAAIC,EAAIurB,EAAIC,GAChF,IAAI6N,EAAQn8B,KAAKg9B,8BAA8Bn6B,EAAIC,EAAIurB,EAAIC,GAO3D,OANKtuB,KAAKk8B,qBAAqBC,KAC7BA,EAAQ,IAAIpa,GAAWia,EAAsBe,gBAAgBl6B,EAAIC,EAAIurB,EAAIC,KAE9C,OAAzBtuB,KAAK45B,iBACP55B,KAAK45B,gBAAgBqD,YAAYd,GAE5BA,GAETH,EAAsBl3B,UAAU+3B,mBAAqB,SAA6Bnc,EAAIC,EAAIuc,EAAIC,GAC5F,IAAIz9B,EAAIghB,EACJ0c,EAAO56B,KAAKiP,IAAI/R,GAYpB,OAXI8C,KAAKiP,IAAIkP,GAAMyc,IACjB19B,EAAIihB,EACJyc,EAAO56B,KAAKiP,IAAIkP,IAEdne,KAAKiP,IAAIyrB,GAAME,IACjB19B,EAAIw9B,EACJE,EAAO56B,KAAKiP,IAAIyrB,IAEd16B,KAAKiP,IAAI0rB,GAAMC,IACjB19B,EAAIy9B,GAECz9B,GAETs8B,EAAsBl3B,UAAUu4B,QAAU,SAAkBx6B,EAAIC,EAAIurB,EAAIC,EAAI6N,GAC1E,IAAImB,EAAU5P,GAAepe,aAAazM,EAAIC,EAAIurB,EAAIC,GAClDiP,EAAOv9B,KAAKk8B,qBAAqBoB,GACrChN,GAAOjtB,IAAIm6B,QAAQ,eAAiBD,EAAO,2BAA6BD,GACpEnB,EAAM7Y,SAASga,GAAW,MAC5BhN,GAAOjtB,IAAIm6B,QAAQ,cAAgBrB,EAAM7Y,SAASga,KAGtDtB,EAAsBl3B,UAAUk4B,8BAAgC,SAAwCn6B,EAAIC,EAAIurB,EAAIC,GAClH,IAAIkO,EAAK,IAAIza,GAAWlf,GACpB45B,EAAK,IAAI1a,GAAWjf,GACpB45B,EAAK,IAAI3a,GAAWsM,GACpBsO,EAAK,IAAI5a,GAAWuM,GACpBsO,EAAS,IAAI7a,GACjB/hB,KAAKy9B,qBAAqBjB,EAAIC,EAAIC,EAAIC,EAAIC,GAC1C,IAAIT,EAAQn8B,KAAK88B,4BAA4BN,EAAIC,EAAIC,EAAIC,GAGzD,OAFAR,EAAMz8B,GAAKk9B,EAAOl9B,EAClBy8B,EAAMj9B,GAAK09B,EAAO19B,EACXi9B,GAETH,EAAsBl3B,UAAU44B,6BAA+B,SAAuC76B,EAAIC,EAAIurB,EAAIC,GAChH,IAAIqP,EAAS1L,GAASe,WAAWnwB,EAAIC,EAAIurB,GACrCuP,EAAS3L,GAASe,WAAWnwB,EAAIC,EAAIwrB,GACrCuP,EAAS5L,GAASe,WAAW3E,EAAIC,EAAIzrB,GACrCi7B,EAAS7L,GAASe,WAAW3E,EAAIC,EAAIxrB,GACzC,OAAI66B,GAAUC,GACZ59B,KAAKu5B,OAAO,GAAKlL,EACjBruB,KAAKu5B,OAAO,GAAKjL,EACV2N,EAAmB9B,wBAExB0D,GAAUC,GACZ99B,KAAKu5B,OAAO,GAAK12B,EACjB7C,KAAKu5B,OAAO,GAAKz2B,EACVm5B,EAAmB9B,wBAExBwD,GAAUE,GACZ79B,KAAKu5B,OAAO,GAAKlL,EACjBruB,KAAKu5B,OAAO,GAAK12B,GACVwrB,EAAG/T,OAAOzX,IAAQ+6B,GAAWE,EAAiD7B,EAAmB9B,uBAA3D8B,EAAmB/B,oBAE9DyD,GAAUG,GACZ99B,KAAKu5B,OAAO,GAAKlL,EACjBruB,KAAKu5B,OAAO,GAAKz2B,GACVurB,EAAG/T,OAAOxX,IAAQ86B,GAAWC,EAAiD5B,EAAmB9B,uBAA3D8B,EAAmB/B,oBAE9D0D,GAAUC,GACZ79B,KAAKu5B,OAAO,GAAKjL,EACjBtuB,KAAKu5B,OAAO,GAAK12B,GACVyrB,EAAGhU,OAAOzX,IAAQ86B,GAAWG,EAAiD7B,EAAmB9B,uBAA3D8B,EAAmB/B,oBAE9D0D,GAAUE,GACZ99B,KAAKu5B,OAAO,GAAKjL,EACjBtuB,KAAKu5B,OAAO,GAAKz2B,GACVwrB,EAAGhU,OAAOxX,IAAQ66B,GAAWE,EAAiD5B,EAAmB9B,uBAA3D8B,EAAmB/B,oBAE3D+B,EAAmBhC,iBAE5B+B,EAAsBl3B,UAAU24B,qBAAuB,SAA+BM,EAAKC,EAAKC,EAAKC,EAAKtB,GACxG,IAAIuB,EAAQJ,EAAIr+B,EAAIs+B,EAAIt+B,EAAIq+B,EAAIr+B,EAAIs+B,EAAIt+B,EACpC0+B,EAAQL,EAAI7+B,EAAI8+B,EAAI9+B,EAAI6+B,EAAI7+B,EAAI8+B,EAAI9+B,EACpCm/B,EAAQN,EAAIr+B,EAAIs+B,EAAIt+B,EAAIq+B,EAAIr+B,EAAIs+B,EAAIt+B,EACpC4+B,EAAQP,EAAI7+B,EAAI8+B,EAAI9+B,EAAI6+B,EAAI7+B,EAAI8+B,EAAI9+B,EACpCq/B,EAAQN,EAAIv+B,EAAIw+B,EAAIx+B,EAAIu+B,EAAIv+B,EAAIw+B,EAAIx+B,EACpC8+B,EAAQP,EAAI/+B,EAAIg/B,EAAIh/B,EAAI++B,EAAI/+B,EAAIg/B,EAAIh/B,EACpCu/B,EAAQR,EAAIv+B,EAAIw+B,EAAIx+B,EAAIu+B,EAAIv+B,EAAIw+B,EAAIx+B,EACpCg/B,EAAQT,EAAI/+B,EAAIg/B,EAAIh/B,EAAI++B,EAAI/+B,EAAIg/B,EAAIh/B,EAKpCy/B,IAJUR,EAAQI,EAAQJ,EAAQI,IACxBF,EAAQI,EAAQJ,EAAQI,IAGF,EAChCG,IAHUR,EAAQI,EAAQJ,EAAQI,IACxBF,EAAQI,EAAQJ,EAAQI,IAEF,EACpC9B,EAAOl9B,EAAIi/B,EACX/B,EAAO19B,EAAI0/B,EACXb,EAAIr+B,GAAKk9B,EAAOl9B,EAChBq+B,EAAI7+B,GAAK09B,EAAO19B,EAChB8+B,EAAIt+B,GAAKk9B,EAAOl9B,EAChBs+B,EAAI9+B,GAAK09B,EAAO19B,EAChB++B,EAAIv+B,GAAKk9B,EAAOl9B,EAChBu+B,EAAI/+B,GAAK09B,EAAO19B,EAChBg/B,EAAIx+B,GAAKk9B,EAAOl9B,EAChBw+B,EAAIh/B,GAAK09B,EAAO19B,GAElB88B,EAAsBl3B,UAAUi2B,iBAAmB,SAA2Bl4B,EAAIC,EAAIurB,EAAIC,GAExF,GADAtuB,KAAKy5B,WAAY,GACZxH,GAASe,WAAWnwB,EAAIC,EAAIurB,EAAIC,GAAO,OAAO2N,EAAmBhC,gBACtE,IAAI4E,EAAMvC,GAAazO,iBAAiBhrB,EAAIC,EAAIurB,GAC5CyQ,EAAMxC,GAAazO,iBAAiBhrB,EAAIC,EAAIwrB,GAChD,GAAKuQ,EAAM,GAAKC,EAAM,GAAOD,EAAM,GAAKC,EAAM,EAC5C,OAAO7C,EAAmBhC,gBAE5B,IAAI8E,EAAMzC,GAAazO,iBAAiBQ,EAAIC,EAAIzrB,GAC5Cm8B,EAAM1C,GAAazO,iBAAiBQ,EAAIC,EAAIxrB,GAChD,OAAKi8B,EAAM,GAAKC,EAAM,GAAOD,EAAM,GAAKC,EAAM,EACrC/C,EAAmBhC,gBAEJ,IAAR4E,GAAqB,IAARC,GAAqB,IAARC,GAAqB,IAARC,EAE9Ch/B,KAAK09B,6BAA6B76B,EAAIC,EAAIurB,EAAIC,IAE3C,IAARuQ,GAAqB,IAARC,GAAqB,IAARC,GAAqB,IAARC,GACzCh/B,KAAKy5B,WAAY,EACb52B,EAAG6f,SAAS2L,IAAOxrB,EAAG6f,SAAS4L,GACjCtuB,KAAKu5B,OAAO,GAAK12B,EACRC,EAAG4f,SAAS2L,IAAOvrB,EAAG4f,SAAS4L,GACxCtuB,KAAKu5B,OAAO,GAAKz2B,EACA,IAAR+7B,EACT7+B,KAAKu5B,OAAO,GAAK,IAAIxX,GAAWsM,GACf,IAARyQ,EACT9+B,KAAKu5B,OAAO,GAAK,IAAIxX,GAAWuM,GACf,IAARyQ,EACT/+B,KAAKu5B,OAAO,GAAK,IAAIxX,GAAWlf,GACf,IAARm8B,IACTh/B,KAAKu5B,OAAO,GAAK,IAAIxX,GAAWjf,MAGlC9C,KAAKy5B,WAAY,EACjBz5B,KAAKu5B,OAAO,GAAKv5B,KAAKsP,aAAazM,EAAIC,EAAIurB,EAAIC,IAE1C2N,EAAmB/B,qBAE5B8B,EAAsBl3B,UAAUyb,YAAc,WAC5C,MAAO,IAETyb,EAAsBl3B,UAAU0b,SAAW,WACzC,OAAOwb,GAETA,EAAsBe,gBAAkB,SAA0Bl6B,EAAIC,EAAIurB,EAAIC,GAC5E,IAAI2Q,EAAYp8B,EACZq8B,EAAU5C,GAAa6C,kBAAkBt8B,EAAIwrB,EAAIC,GACjDjnB,EAAOi1B,GAAa6C,kBAAkBr8B,EAAIurB,EAAIC,GAelD,OAdIjnB,EAAO63B,IACTA,EAAU73B,EACV43B,EAAYn8B,IAEduE,EAAOi1B,GAAa6C,kBAAkB9Q,EAAIxrB,EAAIC,IACnCo8B,IACTA,EAAU73B,EACV43B,EAAY5Q,IAEdhnB,EAAOi1B,GAAa6C,kBAAkB7Q,EAAIzrB,EAAIC,IACnCo8B,IACTA,EAAU73B,EACV43B,EAAY3Q,GAEP2Q,GAGFjD,GACP7C,IAEEiG,GAAoB,aAExBA,GAAkBt6B,UAAUyb,YAAc,WACxC,MAAO,IAET6e,GAAkBt6B,UAAU0b,SAAW,WACrC,OAAO4e,IAETA,GAAkBvR,iBAAmB,SAA2BhrB,EAAIC,EAAIgrB,GACtE,IAAIE,EAAMlrB,EAAGpD,EAAImD,EAAGnD,EAChBuuB,EAAMnrB,EAAG5D,EAAI2D,EAAG3D,EAChBgvB,EAAMJ,EAAEpuB,EAAIoD,EAAGpD,EACfyuB,EAAML,EAAE5uB,EAAI4D,EAAG5D,EACnB,OAAOkgC,GAAkBhR,aAAaJ,EAAKC,EAAKC,EAAKC,IAEvDiR,GAAkBhR,aAAe,SAAuB1N,EAAI9S,EAAI+S,EAAI9S,GAClE,IAAIwxB,EAAO,KACPC,EAAO,KACPx2B,EAAI,KAER,GADAu2B,EAAO,EACI,IAAP3e,GAAqB,IAAP7S,EAChB,OAAW,IAAPD,GAAqB,IAAP+S,EACT,EACE/S,EAAK,EACV+S,EAAK,GACC0e,EAEDA,EAGL1e,EAAK,EACA0e,GAECA,EAId,GAAW,IAAPzxB,GAAqB,IAAP+S,EAChB,OAAI9S,EAAK,EACH6S,EAAK,EACA2e,GAECA,EAGN3e,EAAK,GACC2e,EAEDA,EA8Db,GA1DIzxB,EAAK,EACHC,EAAK,EACHD,GAAMC,IAGRwxB,GAAQA,EACRC,EAAO5e,EACPA,EAAKC,EACLA,EAAK2e,EACLA,EAAO1xB,EACPA,EAAKC,EACLA,EAAKyxB,GAGH1xB,IAAOC,GACTwxB,GAAQA,EACR1e,GAAMA,EACN9S,GAAMA,IAENyxB,EAAO5e,EACPA,GAAMC,EACNA,EAAK2e,EACLA,EAAO1xB,EACPA,GAAMC,EACNA,EAAKyxB,GAILzxB,EAAK,GACFD,GAAMC,GACTwxB,GAAQA,EACR3e,GAAMA,EACN9S,GAAMA,IAEN0xB,GAAQ5e,EACRA,EAAKC,EACLA,EAAK2e,EACLA,GAAQ1xB,EACRA,EAAKC,EACLA,EAAKyxB,GAGH1xB,GAAMC,GACR6S,GAAMA,EACN9S,GAAMA,EACN+S,GAAMA,EACN9S,GAAMA,IAENwxB,GAAQA,EACRC,GAAQ5e,EACRA,GAAMC,EACNA,EAAK2e,EACLA,GAAQ1xB,EACRA,GAAMC,EACNA,EAAKyxB,GAIP5e,EAAK,EAAK,CACZ,KAAIC,EAAK,GAOP,OAAO0e,EANP,KAAI3e,GAAMC,GAGR,OAAO0e,MAKN,CACL,GAAI1e,EAAK,EACP,OAAQ0e,EAER,KAAI3e,GAAMC,GAKR,OAAQ0e,EAJRA,GAAQA,EACR3e,GAAMA,EACNC,GAAMA,EAMZ,OAAa,CAIX,IADA9S,IAFA/E,EAAItG,KAAKC,MAAMke,EAAKD,IAEN9S,GACL,EACP,OAAQyxB,EAEV,GAAIxxB,EAAKD,EACP,OAAOyxB,EAET,GAAI3e,GARJC,GAAU7X,EAAI4X,GAQAC,GACZ,GAAI/S,EAAKC,EAAKA,EACZ,OAAOwxB,MAEJ,CACL,GAAIzxB,EAAKC,EAAKA,EACZ,OAAQwxB,EAER1e,EAAKD,EAAKC,EACV9S,EAAKD,EAAKC,EACVwxB,GAAQA,EAGZ,GAAW,IAAPxxB,EACF,OAAW,IAAP8S,EACK,GAEC0e,EAGZ,GAAW,IAAP1e,EACF,OAAO0e,EAKT,IADAzxB,IAFA9E,EAAItG,KAAKC,MAAMie,EAAKC,IAEN9S,GACL,EACP,OAAOwxB,EAET,GAAIzxB,EAAKC,EACP,OAAQwxB,EAEV,GAAI1e,GARJD,GAAU5X,EAAI6X,GAQAD,GACZ,GAAI7S,EAAKD,EAAKA,EACZ,OAAQyxB,MAEL,CACL,GAAIxxB,EAAKD,EAAKA,EACZ,OAAOyxB,EAEP3e,EAAKC,EAAKD,EACV9S,EAAKC,EAAKD,EACVyxB,GAAQA,EAGZ,GAAW,IAAPzxB,EACF,OAAW,IAAP8S,EACK,EAEA2e,EAGX,GAAW,IAAP3e,EACF,OAAQ2e,IAKd,IAAIE,GAAqB,WACvBv/B,KAAKw/B,GAAK,KACVx/B,KAAKy/B,eAAiB,EACtBz/B,KAAK0/B,mBAAoB,EACzB,IAAI/9B,EAAI2T,UAAU,GAClBtV,KAAKw/B,GAAK79B,GAEZ49B,GAAmBz6B,UAAU66B,aAAe,SAAuB98B,EAAIC,GACrE,GAAID,EAAGnD,EAAIM,KAAKw/B,GAAG9/B,GAAKoD,EAAGpD,EAAIM,KAAKw/B,GAAG9/B,EAAK,OAAO,KACnD,GAAIM,KAAKw/B,GAAG9/B,IAAMoD,EAAGpD,GAAKM,KAAKw/B,GAAGtgC,IAAM4D,EAAG5D,EAEzC,OADAc,KAAK0/B,mBAAoB,EAClB,KAET,GAAI78B,EAAG3D,IAAMc,KAAKw/B,GAAGtgC,GAAK4D,EAAG5D,IAAMc,KAAKw/B,GAAGtgC,EAAG,CAC5C,IAAI0gC,EAAO/8B,EAAGnD,EACVmgC,EAAO/8B,EAAGpD,EAQd,OAPIkgC,EAAOC,IACTD,EAAO98B,EAAGpD,EACVmgC,EAAOh9B,EAAGnD,GAERM,KAAKw/B,GAAG9/B,GAAKkgC,GAAQ5/B,KAAKw/B,GAAG9/B,GAAKmgC,IACpC7/B,KAAK0/B,mBAAoB,GAEpB,KAET,GAAK78B,EAAG3D,EAAIc,KAAKw/B,GAAGtgC,GAAK4D,EAAG5D,GAAKc,KAAKw/B,GAAGtgC,GAAO4D,EAAG5D,EAAIc,KAAKw/B,GAAGtgC,GAAK2D,EAAG3D,GAAKc,KAAKw/B,GAAGtgC,EAAI,CACtF,IAAIwhB,EAAK7d,EAAGnD,EAAIM,KAAKw/B,GAAG9/B,EACpBkO,EAAK/K,EAAG3D,EAAIc,KAAKw/B,GAAGtgC,EACpByhB,EAAK7d,EAAGpD,EAAIM,KAAKw/B,GAAG9/B,EACpBmO,EAAK/K,EAAG5D,EAAIc,KAAKw/B,GAAGtgC,EACpB4gC,EAAWV,GAAkBhR,aAAa1N,EAAI9S,EAAI+S,EAAI9S,GAC1D,GAAiB,IAAbiyB,EAEF,OADA9/B,KAAK0/B,mBAAoB,EAClB,KAEL7xB,EAAKD,IAAMkyB,GAAYA,GACvBA,EAAW,GACb9/B,KAAKy/B,mBAIXF,GAAmBz6B,UAAUi7B,iBAAmB,WAC9C,OAAO//B,KAAKggC,gBAAkB3b,GAASI,UAEzC8a,GAAmBz6B,UAAUk7B,YAAc,WACzC,OAAIhgC,KAAK0/B,kBAA4Brb,GAASG,SAC1CxkB,KAAKy/B,eAAiB,GAAM,EACvBpb,GAASE,SAEXF,GAASI,UAElB8a,GAAmBz6B,UAAUm7B,YAAc,WACzC,OAAOjgC,KAAK0/B,mBAEdH,GAAmBz6B,UAAUyb,YAAc,WACzC,MAAO,IAETgf,GAAmBz6B,UAAU0b,SAAW,WACtC,OAAO+e,IAETA,GAAmBW,kBAAoB,WACrC,GAAI5qB,UAAU,aAAcyM,IAAc8C,GAAavP,UAAU,GAAIka,IAAqB,CAMxF,IALA,IAAI7tB,EAAI2T,UAAU,GACd7L,EAAO6L,UAAU,GACjB6qB,EAAU,IAAIZ,GAAmB59B,GACjCkB,EAAK,IAAIkf,GACTjf,EAAK,IAAIif,GACJljB,EAAI,EAAGA,EAAI4K,EAAK3H,OAAQjD,IAI/B,GAHA4K,EAAKkmB,cAAc9wB,EAAGgE,GACtB4G,EAAKkmB,cAAc9wB,EAAI,EAAGiE,GAC1Bq9B,EAAQR,aAAa98B,EAAIC,GACrBq9B,EAAQF,cAAiB,OAAOE,EAAQH,cAE9C,OAAOG,EAAQH,cACV,GAAI1qB,UAAU,aAAcyM,IAAczM,UAAU,aAAc7M,MAAO,CAI9E,IAHA,IAAI23B,EAAM9qB,UAAU,GAChB+qB,EAAS/qB,UAAU,GACnBgrB,EAAY,IAAIf,GAAmBa,GAC9BG,EAAM,EAAGA,EAAMF,EAAO5/B,OAAQ8/B,IAAO,CAC5C,IAAIrP,EAAOmP,EAAOE,GACdpP,EAAOkP,EAAOE,EAAM,GAExB,GADAD,EAAUX,aAAazO,EAAMC,GACzBmP,EAAUL,cAAiB,OAAOK,EAAUN,cAElD,OAAOM,EAAUN,gBAIrB,IAAI1D,GAAe,aAEfkE,GAAoB,CAAEC,UAAW,CAAEl8B,cAAc,GAAOm8B,MAAO,CAAEn8B,cAAc,GAAOo8B,iBAAkB,CAAEp8B,cAAc,GAAOq8B,KAAM,CAAEr8B,cAAc,GAAOy1B,UAAW,CAAEz1B,cAAc,GAAOs8B,SAAU,CAAEt8B,cAAc,IAE5N+3B,GAAax3B,UAAUyb,YAAc,WACnC,MAAO,IAET+b,GAAax3B,UAAU0b,SAAW,WAChC,OAAO8b,IAETA,GAAazO,iBAAmB,SAA2BhrB,EAAIC,EAAIgrB,GACjE,OAAOJ,GAAeG,iBAAiBhrB,EAAIC,EAAIgrB,IAEjDwO,GAAa/hB,WAAa,WACxB,GAAIjF,UAAU,aAAc7M,MAAO,CACjC,IAAIgB,EAAO6L,UAAU,GACrB,GAAI7L,EAAKhJ,OAAS,EAAK,OAAO,EAG9B,IAFA,IAAIqgC,EAAM,EACNC,EAAKt3B,EAAK,GAAG/J,EACRb,EAAI,EAAGA,EAAI4K,EAAKhJ,OAAS,EAAG5B,IAAK,CACxC,IAAIa,EAAI+J,EAAK5K,GAAGa,EAAIqhC,EAChBnzB,EAAKnE,EAAK5K,EAAI,GAAGK,EAErB4hC,GAAOphC,GADE+J,EAAK5K,EAAI,GAAGK,EACJ0O,GAEnB,OAAOkzB,EAAM,EACR,GAAIjc,GAAavP,UAAU,GAAIka,IAAqB,CACzD,IAAI6Q,EAAS/qB,UAAU,GACnBlS,EAAIi9B,EAAOv+B,OACf,GAAIsB,EAAI,EAAK,OAAO,EACpB,IAAI+W,EAAK,IAAI4H,GACTlf,EAAK,IAAIkf,GACTjf,EAAK,IAAIif,GACbse,EAAO1Q,cAAc,EAAG9sB,GACxBw9B,EAAO1Q,cAAc,EAAG7sB,GACxB,IAAIk+B,EAAOn+B,EAAGnD,EACdoD,EAAGpD,GAAKshC,EAER,IADA,IAAIC,EAAQ,EACHV,EAAM,EAAGA,EAAMn9B,EAAI,EAAGm9B,IAC7BpmB,EAAGjb,EAAI2D,EAAG3D,EACV2D,EAAGnD,EAAIoD,EAAGpD,EACVmD,EAAG3D,EAAI4D,EAAG5D,EACVmhC,EAAO1Q,cAAc4Q,EAAM,EAAGz9B,GAC9BA,EAAGpD,GAAKshC,EACRC,GAASp+B,EAAGnD,GAAKya,EAAGjb,EAAI4D,EAAG5D,GAE7B,OAAO+hC,EAAQ,IAGnB3E,GAAa4E,iBAAmB,SAA2BC,EAAGC,EAAGxX,EAAGyX,GAClE,GAAIF,EAAE7mB,OAAO8mB,GAAM,OAAO9E,GAAa6C,kBAAkBgC,EAAGvX,EAAGyX,GAC/D,GAAIzX,EAAEtP,OAAO+mB,GAAM,OAAO/E,GAAa6C,kBAAkBkC,EAAGF,EAAGC,GAC/D,IAAIE,GAAiB,EACrB,GAAKrP,GAASe,WAAWmO,EAAGC,EAAGxX,EAAGyX,GAE3B,CACL,IAAI5S,GAAS2S,EAAE1hC,EAAIyhC,EAAEzhC,IAAM2hC,EAAEniC,EAAI0qB,EAAE1qB,IAAMkiC,EAAEliC,EAAIiiC,EAAEjiC,IAAMmiC,EAAE3hC,EAAIkqB,EAAElqB,GAC/D,GAAc,IAAV+uB,EACF6S,GAAiB,MACZ,CACL,IAAIC,GAASJ,EAAEjiC,EAAI0qB,EAAE1qB,IAAMmiC,EAAE3hC,EAAIkqB,EAAElqB,IAAMyhC,EAAEzhC,EAAIkqB,EAAElqB,IAAM2hC,EAAEniC,EAAI0qB,EAAE1qB,GAE3D4Z,IADQqoB,EAAEjiC,EAAI0qB,EAAE1qB,IAAMkiC,EAAE1hC,EAAIyhC,EAAEzhC,IAAMyhC,EAAEzhC,EAAIkqB,EAAElqB,IAAM0hC,EAAEliC,EAAIiiC,EAAEjiC,IAC/CuvB,EACXxvB,EAAIsiC,EAAQ9S,GACZxvB,EAAI,GAAKA,EAAI,GAAK6Z,EAAI,GAAKA,EAAI,KACjCwoB,GAAiB,SAXrBA,GAAiB,EAenB,OAAIA,EACKxc,GAAS9I,IAAIsgB,GAAa6C,kBAAkBgC,EAAGvX,EAAGyX,GAAI/E,GAAa6C,kBAAkBiC,EAAGxX,EAAGyX,GAAI/E,GAAa6C,kBAAkBvV,EAAGuX,EAAGC,GAAI9E,GAAa6C,kBAAkBkC,EAAGF,EAAGC,IAE/K,GAET9E,GAAakF,cAAgB,SAAwB7/B,EAAG8H,GACtD,OAAO6yB,GAAa4D,kBAAkBv+B,EAAG8H,KAAU4a,GAASI,UAE9D6X,GAAamF,cAAgB,SAAwBC,GACnD,IAAIt+B,EAAIs+B,EAAI5/B,OACZ,GAAIsB,GAAK,EAAK,OAAO,EACrB,IAAI8Z,EAAM,EACNvb,EAAI,IAAIogB,GACZ2f,EAAI/R,cAAc,EAAGhuB,GAGrB,IAFA,IAAIo/B,EAAKp/B,EAAEjC,EACPiiC,EAAKhgC,EAAEzC,EACFL,EAAI,EAAGA,EAAIuE,EAAGvE,IAAK,CAC1B6iC,EAAI/R,cAAc9wB,EAAG8C,GACrB,IAAI+e,EAAK/e,EAAEjC,EACPkO,EAAKjM,EAAEzC,EACPikB,EAAKzC,EAAKqgB,EACV3d,EAAKxV,EAAK+zB,EACdzkB,GAAO1a,KAAK8D,KAAK6c,EAAKA,EAAKC,EAAKA,GAChC2d,EAAKrgB,EACLihB,EAAK/zB,EAEP,OAAOsP,GAETof,GAAasF,MAAQ,SAAgBn4B,GACnC,IAAIo4B,EAAOp4B,EAAKhJ,OAAS,EACzB,GAAIohC,EAAO,EAAK,MAAM,IAAIhhB,GAAyB,qEAGnD,IAFA,IAAIihB,EAAOr4B,EAAK,GACZs4B,EAAU,EACLljC,EAAI,EAAGA,GAAKgjC,EAAMhjC,IAAK,CAC9B,IAAI8C,EAAI8H,EAAK5K,GACT8C,EAAEzC,EAAI4iC,EAAK5iC,IACb4iC,EAAOngC,EACPogC,EAAUljC,GAGd,IAAImjC,EAAQD,EACZ,IACEC,GAAgB,GACJ,IAAKA,EAAQH,SAClBp4B,EAAKu4B,GAAOtf,SAASof,IAASE,IAAUD,GACjD,IAAIE,EAAQF,EACZ,GACEE,GAASA,EAAQ,GAAKJ,QACfp4B,EAAKw4B,GAAOvf,SAASof,IAASG,IAAUF,GACjD,IAAI55B,EAAOsB,EAAKu4B,GACZtgC,EAAO+H,EAAKw4B,GAChB,GAAI95B,EAAKua,SAASof,IAASpgC,EAAKghB,SAASof,IAAS35B,EAAKua,SAAShhB,GAAS,OAAO,EAChF,IAAIwgC,EAAO5F,GAAa6F,mBAAmBh6B,EAAM25B,EAAMpgC,GACnDkgC,GAAQ,EAMZ,OAJEA,EADW,IAATM,EACM/5B,EAAKzI,EAAIgC,EAAKhC,EAEdwiC,EAAO,EAEVN,GAETtF,GAAa4D,kBAAoB,SAA4Bv+B,EAAG8H,GAC9D,OAAO81B,GAAmBW,kBAAkBv+B,EAAG8H,IAEjD6yB,GAAa8F,+BAAiC,SAAyCzgC,EAAGw/B,EAAGC,GAC3F,IAAIiB,GAAQjB,EAAE1hC,EAAIyhC,EAAEzhC,IAAM0hC,EAAE1hC,EAAIyhC,EAAEzhC,IAAM0hC,EAAEliC,EAAIiiC,EAAEjiC,IAAMkiC,EAAEliC,EAAIiiC,EAAEjiC,GAC1D4Z,IAAMqoB,EAAEjiC,EAAIyC,EAAEzC,IAAMkiC,EAAE1hC,EAAIyhC,EAAEzhC,IAAMyhC,EAAEzhC,EAAIiC,EAAEjC,IAAM0hC,EAAEliC,EAAIiiC,EAAEjiC,IAAMmjC,EAClE,OAAO7/B,KAAKiP,IAAIqH,GAAKtW,KAAK8D,KAAK+7B,IAEjC/F,GAAa6F,mBAAqB,SAA6Bt/B,EAAIC,EAAIgrB,GACrE,OAAOwO,GAAazO,iBAAiBhrB,EAAIC,EAAIgrB,IAE/CwO,GAAa6C,kBAAoB,WAC/B,GAAyB,IAArB7pB,UAAU7U,OAAc,CAC1B,IAAIkB,EAAI2T,UAAU,GACduiB,EAAOviB,UAAU,GACrB,GAAoB,IAAhBuiB,EAAKp3B,OAAgB,MAAM,IAAIogB,GAAyB,+CAE5D,IADA,IAAIyhB,EAAc3gC,EAAE2hB,SAASuU,EAAK,IACzBh5B,EAAI,EAAGA,EAAIg5B,EAAKp3B,OAAS,EAAG5B,IAAK,CACxC,IAAIwI,EAAOi1B,GAAa6C,kBAAkBx9B,EAAGk2B,EAAKh5B,GAAIg5B,EAAKh5B,EAAI,IAC3DwI,EAAOi7B,IACTA,EAAcj7B,GAGlB,OAAOi7B,EACF,GAAyB,IAArBhtB,UAAU7U,OAAc,CACjC,IAAI2/B,EAAM9qB,UAAU,GAChB6rB,EAAI7rB,UAAU,GACd8rB,EAAI9rB,UAAU,GAClB,GAAI6rB,EAAEzhC,IAAM0hC,EAAE1hC,GAAKyhC,EAAEjiC,IAAMkiC,EAAEliC,EAAK,OAAOkhC,EAAI9c,SAAS6d,GACtD,IAAIkB,GAAQjB,EAAE1hC,EAAIyhC,EAAEzhC,IAAM0hC,EAAE1hC,EAAIyhC,EAAEzhC,IAAM0hC,EAAEliC,EAAIiiC,EAAEjiC,IAAMkiC,EAAEliC,EAAIiiC,EAAEjiC,GAC1DD,IAAMmhC,EAAI1gC,EAAIyhC,EAAEzhC,IAAM0hC,EAAE1hC,EAAIyhC,EAAEzhC,IAAM0gC,EAAIlhC,EAAIiiC,EAAEjiC,IAAMkiC,EAAEliC,EAAIiiC,EAAEjiC,IAAMmjC,EACtE,GAAIpjC,GAAK,EAAO,OAAOmhC,EAAI9c,SAAS6d,GACpC,GAAIliC,GAAK,EAAO,OAAOmhC,EAAI9c,SAAS8d,GACpC,IAAItoB,IAAMqoB,EAAEjiC,EAAIkhC,EAAIlhC,IAAMkiC,EAAE1hC,EAAIyhC,EAAEzhC,IAAMyhC,EAAEzhC,EAAI0gC,EAAI1gC,IAAM0hC,EAAEliC,EAAIiiC,EAAEjiC,IAAMmjC,EACtE,OAAO7/B,KAAKiP,IAAIqH,GAAKtW,KAAK8D,KAAK+7B,KAGnC/F,GAAaiG,SAAW,SAAmB5gC,EAAG4F,GAE5C,IADA,IAAIi7B,EAAkB,IAAIxG,GACjBn9B,EAAI,EAAGA,EAAI0I,EAAG9G,OAAQ5B,IAAK,CAClC,IAAIsb,EAAK5S,EAAG1I,EAAI,GACZgE,EAAK0E,EAAG1I,GAEZ,GADA2jC,EAAgB5H,oBAAoBj5B,EAAGwY,EAAItX,GACvC2/B,EAAgBrH,kBAClB,OAAO,EAGX,OAAO,GAETqF,GAAkBC,UAAUz0B,IAAM,WAAc,OAAQ,GACxDw0B,GAAkBE,MAAM10B,IAAM,WAAc,OAAOswB,GAAamE,WAChED,GAAkBG,iBAAiB30B,IAAM,WAAc,OAAO,GAC9Dw0B,GAAkBI,KAAK50B,IAAM,WAAc,OAAOswB,GAAaqE,kBAC/DH,GAAkBxG,UAAUhuB,IAAM,WAAc,OAAO,GACvDw0B,GAAkBK,SAAS70B,IAAM,WAAc,OAAOswB,GAAatC,WAEnEv1B,OAAOid,iBAAkB4a,GAAckE,IAEvC,IAAIiC,GAA0B,aAE9BA,GAAwB39B,UAAU49B,OAAS,SAAiBn6B,KAC5Dk6B,GAAwB39B,UAAUyb,YAAc,WAC9C,MAAO,IAETkiB,GAAwB39B,UAAU0b,SAAW,WAC3C,OAAOiiB,IAGT,IAAIE,GAAW,WACb,IAAIprB,EAAUjC,UAAU,GAExBtV,KAAK4iC,UAAY,KACjB5iC,KAAK6iC,SAAW,KAChB7iC,KAAK8iC,MAAQ,KACb9iC,KAAK+iC,UAAY,KACjB/iC,KAAK6iC,SAAWtrB,EAChBvX,KAAK8iC,MAAQvrB,EAAQyrB,WAGnBC,GAAqB,CAAE7gB,iBAAkB,CAAE7d,cAAc,GAAO2+B,gBAAiB,CAAE3+B,cAAc,GAAO4+B,qBAAsB,CAAE5+B,cAAc,GAAO6+B,qBAAsB,CAAE7+B,cAAc,GAAO8+B,qBAAsB,CAAE9+B,cAAc,GAAO++B,0BAA2B,CAAE/+B,cAAc,GAAOg/B,kBAAmB,CAAEh/B,cAAc,GAAOi/B,uBAAwB,CAAEj/B,cAAc,GAAOk/B,6BAA8B,CAAEl/B,cAAc,GAAOm/B,sBAAuB,CAAEn/B,cAAc,IAC1do+B,GAAS79B,UAAU6+B,qBAAuB,WACxC,OAAO3jC,KAAK4jC,iBAAmBjB,GAASc,8BAE1Cd,GAAS79B,UAAU++B,WAAa,WAC9B,OAAO7jC,KAAK6iC,UAEdF,GAAS79B,UAAUg/B,aAAe,SAAuB1gC,GACvD,OAAOpD,MAET2iC,GAAS79B,UAAUytB,QAAU,WAC3B,OAAO,GAEToQ,GAAS79B,UAAUi/B,YAAc,WAC/B,OAAO,GAETpB,GAAS79B,UAAUwV,OAAS,WAC1B,GAAIhF,UAAU,aAAcqtB,GAAU,CACpC,IAAIqB,EAAM1uB,UAAU,GACpB,OAAY,OAAR0uB,GACGhkC,KAAKikC,WAAWD,GAClB,GAAI1uB,UAAU,aAAc7Q,OAAQ,CACzC,IAAIse,EAAIzN,UAAU,GAClB,KAAMyN,aAAa4f,IAAa,OAAO,EACvC,IAAIuB,EAAInhB,EACR,OAAO/iB,KAAKmkC,YAAYD,KAG5BvB,GAAS79B,UAAUq/B,YAAc,SAAsB35B,GACrD,OAAOxK,OAASwK,GAASxK,KAAKmkC,YAAY35B,EAAO,IAEnDm4B,GAAS79B,UAAUs/B,gBAAkB,WACnCpkC,KAAKw1B,MAAMmN,GAASe,wBAEtBf,GAAS79B,UAAUu/B,sBAAwB,WACzCrkC,KAAK4iC,UAAY,MAEnBD,GAAS79B,UAAUw/B,WAAa,SAAqBJ,GACnD,OAAU,OAANA,GACGlkC,KAAKukC,OAAOJ,YAAYD,EAAEK,SAEnC5B,GAAS79B,UAAU0/B,UAAY,WAC7B,OAAO,GAET7B,GAAS79B,UAAU2/B,iBAAmB,WACpC,OAAO,GAET9B,GAAS79B,UAAUge,UAAY,WAC7B,GAAyB,IAArBxN,UAAU7U,OAAc,CAC1B,IAAIsiB,EAAIzN,UAAU,GACd9K,EAAQuY,EACZ,OAAI/iB,KAAK4jC,iBAAmBp5B,EAAMo5B,eACzB5jC,KAAK4jC,eAAiBp5B,EAAMo5B,eAEjC5jC,KAAK81B,WAAatrB,EAAMsrB,UACnB,EAEL91B,KAAK81B,WACC,EAENtrB,EAAMsrB,UACD,EAEF91B,KAAK0kC,mBAAmB3hB,GAC1B,GAAyB,IAArBzN,UAAU7U,OAAc,CACjC,IAAIkkC,EAAUrvB,UAAU,GACpBsD,EAAOtD,UAAU,GACrB,OAAItV,KAAK4jC,iBAAmBe,EAAQf,eAC3B5jC,KAAK4jC,eAAiBe,EAAQf,eAEnC5jC,KAAK81B,WAAa6O,EAAQ7O,UACrB,EAEL91B,KAAK81B,WACC,EAEN6O,EAAQ7O,UACH,EAEF91B,KAAK0kC,mBAAmBC,EAAS/rB,KAG5C+pB,GAAS79B,UAAU8/B,YAAc,WAC/B,OAAO5kC,KAAK+iC,WAEdJ,GAAS79B,UAAUk+B,QAAU,WAC3B,OAAOhjC,KAAK8iC,OAEdH,GAAS79B,UAAU+/B,YAAc,WAC/B,OAAO7kC,KAAK6jC,aAAaiB,WAAW9kC,KAAK+kC,wBAE3CpC,GAAS79B,UAAUkgC,2BAA6B,SAAqCd,GACnF,GAAIA,EAAEN,iBAAmBjB,GAASc,6BAChC,MAAM,IAAI5iB,GAAyB,8DAGvC8hB,GAAS79B,UAAUmgC,MAAQ,SAAgBvmC,EAAGC,EAAGiiB,GAC/C,OAAkB,IAAdA,EACKliB,EAAE4b,OAAO3b,GAEXD,EAAE4kB,SAAS3kB,IAAMiiB,GAE1B+hB,GAAS79B,UAAUy/B,KAAO,WACxB,IAAIlqB,EAAOra,KAAKqa,OAEhB,OADAA,EAAK6qB,YACE7qB,GAETsoB,GAAS79B,UAAUqgC,kBAAoB,WACrC,OAAOnlC,KAAK6iC,SAASsC,qBAEvBxC,GAAS79B,UAAUigC,oBAAsB,WAIvC,OAHuB,OAAnB/kC,KAAK4iC,YACP5iC,KAAK4iC,UAAY5iC,KAAKolC,2BAEjB,IAAInT,GAASjyB,KAAK4iC,YAE3BD,GAAS79B,UAAUugC,QAAU,SAAkBC,GAC7CtlC,KAAK8iC,MAAQwC,GAEf3C,GAAS79B,UAAUygC,YAAc,SAAsBC,GACrDxlC,KAAK+iC,UAAYyC,GAEnB7C,GAAS79B,UAAU3E,QAAU,SAAkBzB,EAAGC,GAGhD,IAFA,IAAIE,EAAIH,EAAE+mC,WACNxjC,EAAItD,EAAE8mC,WACH5mC,EAAE6mC,WAAazjC,EAAEyjC,WAAW,CACjC,IAAIC,EAAW9mC,EAAE6C,OACbkkC,EAAW3jC,EAAEP,OACbmkC,EAAaF,EAAS7iB,UAAU8iB,GACpC,GAAmB,IAAfC,EACF,OAAOA,EAGX,OAAIhnC,EAAE6mC,UACG,EAELzjC,EAAEyjC,WACI,EAEH,GAET/C,GAAS79B,UAAUye,SAAW,WAC5B,OAAOvjB,KAAK+kC,sBAAsBxhB,YAEpCof,GAAS79B,UAAUghC,8BAAgC,WACjD,OAAI9lC,KAAK4jC,iBAAmBjB,GAASc,8BAAgCzjC,KAAK4jC,iBAAmBjB,GAASQ,sBAAwBnjC,KAAK4jC,iBAAmBjB,GAASW,2BAA6BtjC,KAAK4jC,iBAAmBjB,GAASa,wBAK/Nb,GAAS79B,UAAUyb,YAAc,WAC/B,MAAO,CAACqB,GAAUD,GAAYG,KAEhC6gB,GAAS79B,UAAU0b,SAAW,WAC5B,OAAOmiB,IAETA,GAASoD,oBAAsB,SAA8BC,GAC3D,IAAK,IAAInnC,EAAI,EAAGA,EAAImnC,EAAWvlC,OAAQ5B,IACrC,IAAKmnC,EAAWnnC,GAAGi3B,UACjB,OAAO,EAGX,OAAO,GAET6M,GAASsD,gBAAkB,SAA0B5P,GACnD,IAAK,IAAIx3B,EAAI,EAAGA,EAAIw3B,EAAM51B,OAAQ5B,IAChC,GAAiB,OAAbw3B,EAAMx3B,GACR,OAAO,EAGX,OAAO,GAETokC,GAAmB7gB,iBAAiBpW,IAAM,WAAc,OAAO,oBAC/Di3B,GAAmBC,gBAAgBl3B,IAAM,WAAc,OAAO,GAC9Di3B,GAAmBE,qBAAqBn3B,IAAM,WAAc,OAAO,GACnEi3B,GAAmBG,qBAAqBp3B,IAAM,WAAc,OAAO,GACnEi3B,GAAmBI,qBAAqBr3B,IAAM,WAAc,OAAO,GACnEi3B,GAAmBK,0BAA0Bt3B,IAAM,WAAc,OAAO,GACxEi3B,GAAmBM,kBAAkBv3B,IAAM,WAAc,OAAO,GAChEi3B,GAAmBO,uBAAuBx3B,IAAM,WAAc,OAAO,GACrEi3B,GAAmBQ,6BAA6Bz3B,IAAM,WAAc,OAAO,GAC3Ei3B,GAAmBS,sBAAsB13B,IAAM,WAAc,OAAO03B,IAEpEj/B,OAAOid,iBAAkBihB,GAAUM,IAEnC,IAAIS,GAAwB,aAE5BA,GAAsBnjB,YAAc,WAClC,MAAO,CAACkiB,KAEViB,GAAsBhB,OAAS,SAAiBn6B,GAC9CA,EAAK87B,yBAGP,IAAI6B,GAAmB,aAEvBA,GAAiBphC,UAAU49B,OAAS,SAAiBz6B,KACrDi+B,GAAiBphC,UAAUyb,YAAc,WACvC,MAAO,IAET2lB,GAAiBphC,UAAU0b,SAAW,WACpC,OAAO0lB,IAGT,IAAIC,GAAmB,aAEnBC,GAAqB,CAAEC,qBAAsB,CAAE9hC,cAAc,GAAO+hC,yBAA0B,CAAE/hC,cAAc,GAAOgiC,oCAAqC,CAAEhiC,cAAc,GAAOiiC,mCAAoC,CAAEjiC,cAAc,GAAOkiC,mBAAoB,CAAEliC,cAAc,GAAOmiC,uBAAwB,CAAEniC,cAAc,GAAOoiC,mCAAoC,CAAEpiC,cAAc,GAAOqiC,kCAAmC,CAAEriC,cAAc,GAAOsiC,sBAAuB,CAAEtiC,cAAc,IAEte4hC,GAAiBrhC,UAAUgiC,aAAe,SAAuBC,KACjEZ,GAAiBrhC,UAAUyb,YAAc,WACvC,MAAO,IAET4lB,GAAiBrhC,UAAU0b,SAAW,WACpC,OAAO2lB,IAETC,GAAmBC,qBAAqBr6B,IAAM,WAAc,OAAOq6B,IACnED,GAAmBE,yBAAyBt6B,IAAM,WAAc,OAAOs6B,IACvEF,GAAmBG,oCAAoCv6B,IAAM,WAAc,OAAOu6B,IAClFH,GAAmBI,mCAAmCx6B,IAAM,WAAc,OAAOw6B,IACjFJ,GAAmBK,mBAAmBz6B,IAAM,WAAc,OAAO,IAAIq6B,IACrED,GAAmBM,uBAAuB16B,IAAM,WAAc,OAAO,IAAIs6B,IACzEF,GAAmBO,mCAAmC36B,IAAM,WAAc,OAAO,IAAIu6B,IACrFH,GAAmBQ,kCAAkC56B,IAAM,WAAc,OAAO,IAAIw6B,IACpFJ,GAAmBS,sBAAsB76B,IAAM,WAAc,OAAOm6B,GAAiBM,oBAErFhiC,OAAOid,iBAAkBykB,GAAkBC,IAE3C,IAAIC,GAAuB,aAE3BA,GAAqBvhC,UAAUgiC,aAAe,SAAuBC,GACnE,OAAOA,EAAgB,GAAM,GAE/BV,GAAqBvhC,UAAUyb,YAAc,WAC3C,MAAO,CAAC4lB,KAEVE,GAAqBvhC,UAAU0b,SAAW,WACxC,OAAO6lB,IAGT,IAAIC,GAA2B,aAE/BA,GAAyBxhC,UAAUgiC,aAAe,SAAuBC,GACvE,OAAOA,EAAgB,GAEzBT,GAAyBxhC,UAAUyb,YAAc,WAC/C,MAAO,CAAC4lB,KAEVG,GAAyBxhC,UAAU0b,SAAW,WAC5C,OAAO8lB,IAGT,IAAIC,GAAsC,aAE1CA,GAAoCzhC,UAAUgiC,aAAe,SAAuBC,GAClF,OAAOA,EAAgB,GAEzBR,GAAoCzhC,UAAUyb,YAAc,WAC1D,MAAO,CAAC4lB,KAEVI,GAAoCzhC,UAAU0b,SAAW,WACvD,OAAO+lB,IAGT,IAAIC,GAAqC,aAEzCA,GAAmC1hC,UAAUgiC,aAAe,SAAuBC,GACjF,OAAyB,IAAlBA,GAETP,GAAmC1hC,UAAUyb,YAAc,WACzD,MAAO,CAAC4lB,KAEVK,GAAmC1hC,UAAU0b,SAAW,WACtD,OAAOgmB,IAWT,IAAIQ,GAAa,aAmDjB,SAASC,GAA2BnmB,GAClC9gB,KAAK8gB,QAAUA,GAAW,GAlD5BkmB,GAAWliC,UAAU7E,IAAM,aAS3B+mC,GAAWliC,UAAUoiC,OAAS,aAM9BF,GAAWliC,UAAUgxB,QAAU,aAM/BkR,GAAWliC,UAAU2gC,SAAW,aAMhCuB,GAAWliC,UAAUhD,KAAO,aAM5BklC,GAAWliC,UAAUqiC,QAAU,aAQ/BH,GAAWliC,UAAUrF,OAAS,aAW9BwnC,GAA0BniC,UAAY,IAAI6D,MAK1Cs+B,GAA0BniC,UAAUic,KAAO,4BAO3C,IAAIqmB,GAAW,aAEfA,GAAStiC,UAAU4gC,QAAU,aAM7B0B,GAAStiC,UAAUpD,KAAO,aAM1B0lC,GAAStiC,UAAUrF,OAAS,aAS5B,IAAI4nC,GAAQ,SAAUC,GACpB,SAASD,IACPC,EAAc9R,MAAMx1B,KAAMsV,WAwB5B,OArBKgyB,IAAgBD,EAAKpmB,UAAYqmB,GACtCD,EAAKviC,UAAYL,OAAOyc,OAAQomB,GAAiBA,EAAcxiC,WAC/DuiC,EAAKviC,UAAUqc,YAAckmB,EAE7BA,EAAKviC,UAAUkH,IAAM,aASrBq7B,EAAKviC,UAAU6G,IAAM,aAMrB07B,EAAKviC,UAAUgxB,QAAU,aAElBuR,GACPL,IAQF,SAASO,GAAwBzmB,GAC/B9gB,KAAK8gB,QAAUA,GAAW,GAE5BymB,GAAuBziC,UAAY,IAAI6D,MAKvC4+B,GAAuBziC,UAAUic,KAAO,yBAUxC,IAAIymB,GAAa,SAAUC,GACzB,SAASD,IACPC,EAAQ9mC,KAAKX,MACbA,KAAK0nC,OAAS,GAEVpyB,UAAU,aAAc0xB,IAC1BhnC,KAAKknC,OAAO5xB,UAAU,IAkH1B,OA9GKmyB,IAAUD,EAAUvmB,UAAYwmB,GACrCD,EAAU1iC,UAAYL,OAAOyc,OAAQumB,GAAWA,EAAQ3iC,WACxD0iC,EAAU1iC,UAAUqc,YAAcqmB,EAElCA,EAAU1iC,UAAU6iC,eAAiB,aACrCH,EAAU1iC,UAAUyb,YAAc,WAA0B,MAAO,CAACknB,EAAST,KAK7EQ,EAAU1iC,UAAU7E,IAAM,SAAcyb,GAMtC,OALyB,IAArBpG,UAAU7U,OACZT,KAAK0nC,OAAOlnC,KAAKkb,GAEjB1b,KAAK0nC,OAAOx+B,OAAOoM,UAAU,GAAIA,UAAU,KAEtC,GAGTkyB,EAAU1iC,UAAU8iC,MAAQ,WAC1B5nC,KAAK0nC,OAAS,IAMhBF,EAAU1iC,UAAUoiC,OAAS,SAAiBjlB,GAG5C,IAFA,IAESpjB,EAAIojB,EAAEwjB,WAAY5mC,EAAE6mC,WAFhB1lC,KAGJC,IAAIpB,EAAE6C,QAEf,OAAO,GAMT8lC,EAAU1iC,UAAU6G,IAAM,SAAcvK,EAAOymC,GAC7C,IAAIC,EAAa9nC,KAAK0nC,OAAOtmC,GAE7B,OADApB,KAAK0nC,OAAOtmC,GAASymC,EACdC,GAMTN,EAAU1iC,UAAU2gC,SAAW,WAC7B,OAAO,IAAIsC,GAAU/nC,OAMvBwnC,EAAU1iC,UAAUkH,IAAM,SAAc5K,GACtC,GAAIA,EAAQ,GAAKA,GAASpB,KAAK8B,OAC7B,MAAM,IAAImlC,GAGZ,OAAOjnC,KAAK0nC,OAAOtmC,IAMrBomC,EAAU1iC,UAAUgxB,QAAU,WAC5B,OAA8B,IAAvB91B,KAAK0nC,OAAOjnC,QAMrB+mC,EAAU1iC,UAAUhD,KAAO,WACzB,OAAO9B,KAAK0nC,OAAOjnC,QAMrB+mC,EAAU1iC,UAAUqiC,QAAU,WAK5B,IAJA,IAEI9Q,EAAQ,GAEHx3B,EAAI,EAAGqe,EAAMld,KAAK0nC,OAAOjnC,OAAQ5B,EAAIqe,EAAKre,IACjDw3B,EAAM71B,KALKR,KAKO0nC,OAAO7oC,IAG3B,OAAOw3B,GAMTmR,EAAU1iC,UAAUrF,OAAS,SAAiBsjB,GAK5C,IAJA,IAEIilB,GAAQ,EAEHnpC,EAAI,EAAGqe,EAAMld,KAAK0nC,OAAOjnC,OAAQ5B,EAAIqe,EAAKre,IACjD,GALWmB,KAKA0nC,OAAO7oC,KAAOkkB,EAAG,CALjB/iB,KAMF0nC,OAAOx+B,OAAOrK,EAAG,GACxBmpC,GAAQ,EACR,MAIJ,OAAOA,GAGFR,GACPH,IAQEU,GAAa,SAAUE,GACzB,SAASF,EAAWG,GAClBD,EAAYtnC,KAAKX,MAKjBA,KAAKmoC,WAAaD,EAKlBloC,KAAKooC,UAAY,EA2CnB,OAxCKH,IAAcF,EAAU9mB,UAAYgnB,GACzCF,EAAUjjC,UAAYL,OAAOyc,OAAQ+mB,GAAeA,EAAYnjC,WAChEijC,EAAUjjC,UAAUqc,YAAc4mB,EAKlCA,EAAUjjC,UAAUpD,KAAO,WACzB,GAAI1B,KAAKooC,YAAcpoC,KAAKmoC,WAAWrmC,OACrC,MAAM,IAAIylC,GAEZ,OAAOvnC,KAAKmoC,WAAWn8B,IAAIhM,KAAKooC,cAMlCL,EAAUjjC,UAAU4gC,QAAU,WAC5B,OAAI1lC,KAAKooC,UAAYpoC,KAAKmoC,WAAWrmC,QAWvCimC,EAAUjjC,UAAU6G,IAAM,SAAck8B,GACtC,OAAO7nC,KAAKmoC,WAAWx8B,IAAI3L,KAAKooC,UAAY,EAAGP,IAMjDE,EAAUjjC,UAAUrF,OAAS,WAC3BO,KAAKmoC,WAAW1oC,OAAOO,KAAKmoC,WAAWn8B,IAAIhM,KAAKooC,aAG3CL,GACPX,IAEEiB,GAAkB,SAAUC,GAC9B,SAASD,IAEP,GADAC,EAAa3nC,KAAKX,MACO,IAArBsV,UAAU7U,aACP,GAAyB,IAArB6U,UAAU7U,OAAc,CACjC,IAAIwH,EAAQqN,UAAU,GACtBtV,KAAK2nC,eAAe1/B,EAAMxH,QAC1BT,KAAKC,IAAIgI,GAAO,QACX,GAAyB,IAArBqN,UAAU7U,OAAc,CACjC,IAAI8nC,EAAUjzB,UAAU,GACpBkzB,EAAgBlzB,UAAU,GAC9BtV,KAAK2nC,eAAeY,EAAQ9nC,QAC5BT,KAAKC,IAAIsoC,EAASC,IAIjBF,IAAeD,EAAepnB,UAAYqnB,GAC/CD,EAAevjC,UAAYL,OAAOyc,OAAQonB,GAAgBA,EAAaxjC,WACvEujC,EAAevjC,UAAUqc,YAAcknB,EAEvC,IAAInmB,EAAkB,CAAEumB,eAAgB,CAAElkC,cAAc,IAsHxD,OArHA2d,EAAgBumB,eAAez8B,IAAM,WAAc,OAAO,IAAIvD,MAAM,GAAGwjB,KAAK,OAC5Eoc,EAAevjC,UAAU6qB,cAAgB,SAAwB9wB,GAC/D,OAAOmB,KAAKgM,IAAInN,IAElBwpC,EAAevjC,UAAUoiC,OAAS,WAGhC,GAAyB,IAArB5xB,UAAU7U,OAAc,CAI1B,IAHA,IAAIioC,EAAOpzB,UAAU,GACjBkzB,EAAgBlzB,UAAU,GAC1BqzB,GAAY,EACP9pC,EAAI6pC,EAAKjD,WAAY5mC,EAAE6mC,WANrB1lC,KAOFC,IAAIpB,EAAE6C,OAAQ8mC,GACrBG,GAAY,EAEd,OAAOA,EACA,OAAOL,EAAaxjC,UAAUoiC,OAAO1R,MAAMx1B,KAAMsV,YAE5D+yB,EAAevjC,UAAUke,MAAQ,WAI/B,IAHA,IAEIA,EAAQslB,EAAaxjC,UAAUke,MAAMriB,KAAKX,MACrCnB,EAAI,EAAGA,EAAImB,KAAK8B,OAAQjD,IAC/BmkB,EAAM/iB,IAAIpB,EAJCmB,KAISgM,IAAInN,GAAGwb,QAE7B,OAAO2I,GAETqlB,EAAevjC,UAAUorB,kBAAoB,WAC3C,OAAOlwB,KAAKmnC,QAAQkB,EAAeI,iBAErCJ,EAAevjC,UAAU7E,IAAM,WAG7B,GAAyB,IAArBqV,UAAU7U,OAAc,CAC1B,IAAIwH,EAAQqN,UAAU,GACtBgzB,EAAaxjC,UAAU7E,IAAIU,KAAKX,KAAMiI,QACjC,GAAyB,IAArBqN,UAAU7U,OAAc,CACjC,GAAI6U,UAAU,aAAc7M,OAAiC,kBAAjB6M,UAAU,GAAkB,CACtE,IAAIizB,EAAUjzB,UAAU,GACpBkzB,EAAgBlzB,UAAU,GAE9B,OADAtV,KAAKC,IAAIsoC,EAASC,GAAe,IAC1B,EACF,GAAIlzB,UAAU,aAAcyM,IAAsC,kBAAjBzM,UAAU,GAAkB,CAClF,IAAIszB,EAAUtzB,UAAU,GAExB,IADsBA,UAAU,GAE9B,GAAItV,KAAK8B,QAAU,EAEjB,GADW9B,KAAKgM,IAAIhM,KAAK8B,OAAS,GACzB4gB,SAASkmB,GAAY,OAAO,KAGzCN,EAAaxjC,UAAU7E,IAAIU,KAAKX,KAAM4oC,QACjC,GAAItzB,UAAU,aAAc7Q,QAAkC,kBAAjB6Q,UAAU,GAAkB,CAC9E,IAAIuzB,EAAMvzB,UAAU,GAChBwzB,EAAkBxzB,UAAU,GAEhC,OADAtV,KAAKC,IAAI4oC,EAAKC,IACP,QAEJ,GAAyB,IAArBxzB,UAAU7U,OAAc,CACjC,GAA4B,kBAAjB6U,UAAU,IAAqBA,UAAU,aAAc7M,OAAiC,kBAAjB6M,UAAU,GAAmB,CAC7G,IAAIyzB,EAAUzzB,UAAU,GACpB0zB,EAAkB1zB,UAAU,GAEhC,GADgBA,UAAU,GAExB,IAAK,IAAIirB,EAAM,EAAGA,EAAMwI,EAAQtoC,OAAQ8/B,IAjCjCvgC,KAkCEC,IAAI8oC,EAAQxI,GAAMyI,QAG3B,IAAK,IAAIC,EAAMF,EAAQtoC,OAAS,EAAGwoC,GAAO,EAAGA,IArCtCjpC,KAsCEC,IAAI8oC,EAAQE,GAAMD,GAG7B,OAAO,EACF,GAA4B,kBAAjB1zB,UAAU,IAAqBtQ,OAAOgb,UAAU1K,UAAU,KAAOA,UAAU,aAAcyM,GAAa,CACtH,IAAImnB,EAAM5zB,UAAU,GAChB6zB,EAAU7zB,UAAU,GAExB,IADsBA,UAAU,GACV,CACpB,IAAIxT,EAAO9B,KAAK8B,OAChB,GAAIA,EAAO,EAAG,CACZ,GAAIonC,EAAM,EAER,GADWlpC,KAAKgM,IAAIk9B,EAAM,GACjBxmB,SAASymB,GAAY,OAAO,KAEvC,GAAID,EAAMpnC,EAER,GADW9B,KAAKgM,IAAIk9B,GACXxmB,SAASymB,GAAY,OAAO,MAI3Cb,EAAaxjC,UAAU7E,IAAIU,KAAKX,KAAMkpC,EAAKC,SAExC,GAAyB,IAArB7zB,UAAU7U,OAAc,CACjC,IAAI2oC,EAAU9zB,UAAU,GACpB+zB,EAAkB/zB,UAAU,GAC5BjT,EAAQiT,UAAU,GAClBhT,EAAMgT,UAAU,GAChBg0B,EAAM,EACNjnC,EAAQC,IAAOgnC,GAAO,GAC1B,IAAK,IAAIzqC,EAAIwD,EAAOxD,IAAMyD,EAAKzD,GAAKyqC,EApEzBtpC,KAqEFC,IAAImpC,EAAQvqC,GAAIwqC,GAEzB,OAAO,IAGXhB,EAAevjC,UAAUykC,UAAY,WAC/BvpC,KAAK8B,OAAS,GAAK9B,KAAKC,IAAI,IAAI8hB,GAAW/hB,KAAKgM,IAAI,KAAK,IAE/Dq8B,EAAevjC,UAAUyb,YAAc,WACrC,MAAO,IAET8nB,EAAevjC,UAAU0b,SAAW,WAClC,OAAO6nB,GAGT5jC,OAAOid,iBAAkB2mB,EAAgBnmB,GAElCmmB,GACPb,IAEEgC,GAAmB,aAEnBC,GAAqB,CAAEC,kBAAmB,CAAEnlC,cAAc,GAAOolC,wBAAyB,CAAEplC,cAAc,GAAOkkC,eAAgB,CAAElkC,cAAc,IAErJklC,GAAmBC,kBAAkB19B,IAAM,WAAc,OAAO09B,IAChED,GAAmBE,wBAAwB39B,IAAM,WAAc,OAAO29B,IACtEF,GAAmBhB,eAAez8B,IAAM,WAAc,OAAO,IAAIvD,MAAM,GAAGwjB,KAAK,OAE/Eud,GAAiB1kC,UAAUyb,YAAc,WACvC,MAAO,IAETipB,GAAiB1kC,UAAU0b,SAAW,WACpC,OAAOgpB,IAETA,GAAiBI,OAAS,SAAiBlI,GACzC,QAAIA,EAAIjhC,OAAS,MACZihC,EAAI,GAAGhf,SAASgf,EAAIA,EAAIjhC,OAAS,KAGxC+oC,GAAiBK,YAAc,SAAsBC,EAASpI,GAC5D,IAAK,IAAI7iC,EAAI,EAAGA,EAAIirC,EAAQrpC,OAAQ5B,IAAK,CACvC,IAAIkrC,EAASD,EAAQjrC,GACrB,GAAI2qC,GAAiBj5B,QAAQw5B,EAAQrI,GAAO,EAAK,OAAOqI,EAE1D,OAAO,MAETP,GAAiBQ,OAAS,SAAiBC,EAAaC,GACtD,IAAIrrC,EAAI2qC,GAAiBj5B,QAAQ25B,EAAiBD,GAClD,GAAIprC,EAAI,EAAK,OAAO,KACpB,IAAIsrC,EAAiB,IAAI1hC,MAAMwhC,EAAYxpC,QAAQwrB,KAAK,MACxDqE,GAAOC,UAAU0Z,EAAaprC,EAAGsrC,EAAgB,EAAGF,EAAYxpC,OAAS5B,GACzEyxB,GAAOC,UAAU0Z,EAAa,EAAGE,EAAgBF,EAAYxpC,OAAS5B,EAAGA,GACzEyxB,GAAOC,UAAU4Z,EAAgB,EAAGF,EAAa,EAAGA,EAAYxpC,SAElE+oC,GAAiBlvB,OAAS,WACxB,GAAyB,IAArBhF,UAAU7U,OAAc,CAC1B,IAAI2pC,EAAS90B,UAAU,GACnB+0B,EAAS/0B,UAAU,GACvB,GAAI80B,IAAWC,EAAU,OAAO,EAChC,GAAe,OAAXD,GAA8B,OAAXC,EAAmB,OAAO,EACjD,GAAID,EAAO3pC,SAAW4pC,EAAO5pC,OAAU,OAAO,EAC9C,IAAK,IAAI5B,EAAI,EAAGA,EAAIurC,EAAO3pC,OAAQ5B,IACjC,IAAKurC,EAAOvrC,GAAGyb,OAAO+vB,EAAOxrC,IAAO,OAAO,EAE7C,OAAO,EACF,GAAyB,IAArByW,UAAU7U,OAAc,CACjC,IAAI6pC,EAAWh1B,UAAU,GACrBi1B,EAAWj1B,UAAU,GACrBk1B,EAAuBl1B,UAAU,GACrC,GAAIg1B,IAAaC,EAAY,OAAO,EACpC,GAAiB,OAAbD,GAAkC,OAAbC,EAAqB,OAAO,EACrD,GAAID,EAAS7pC,SAAW8pC,EAAS9pC,OAAU,OAAO,EAClD,IAAK,IAAI8/B,EAAM,EAAGA,EAAM+J,EAAS7pC,OAAQ8/B,IACvC,GAAmE,IAA/DiK,EAAqBrqC,QAAQmqC,EAAS/J,GAAMgK,EAAShK,IAAe,OAAO,EAEjF,OAAO,IAGXiJ,GAAiBl6B,aAAe,SAAuB26B,EAAaja,GAElE,IADA,IAAIya,EAAY,IAAIpC,GACXxpC,EAAI,EAAGA,EAAIorC,EAAYxpC,OAAQ5B,IAClCmxB,EAAIgD,WAAWiX,EAAYprC,KAAO4rC,EAAUxqC,IAAIgqC,EAAYprC,IAAI,GAEtE,OAAO4rC,EAAUva,qBAEnBsZ,GAAiBkB,kBAAoB,SAA4BziC,GAC/D,IAAK,IAAIpJ,EAAI,EAAGA,EAAIoJ,EAAMxH,OAAQ5B,IAChC,GAAIoJ,EAAMpJ,EAAI,GAAGyb,OAAOrS,EAAMpJ,IAC5B,OAAO,EAGX,OAAO,GAET2qC,GAAiBmB,qBAAuB,SAA+B1iC,GACrE,OAAKuhC,GAAiBkB,kBAAkBziC,GACxB,IAAIogC,GAAepgC,GAAO,GACzBioB,oBAFwCjoB,GAI3DuhC,GAAiB71B,QAAU,SAAkB1L,GAG3C,IAFA,IAAI2iC,EAAO3iC,EAAMxH,OAAS,EACtBoqC,EAAMroC,KAAK4d,MAAMwqB,EAAO,GACnB/rC,EAAI,EAAGA,GAAKgsC,EAAKhsC,IAAK,CAC7B,IAAIqD,EAAM+F,EAAMpJ,GAChBoJ,EAAMpJ,GAAKoJ,EAAM2iC,EAAO/rC,GACxBoJ,EAAM2iC,EAAO/rC,GAAKqD,IAGtBsnC,GAAiBsB,WAAa,SAAqB7iC,GAEjD,IADA,IAAI8iC,EAAU,EACLlsC,EAAI,EAAGA,EAAIoJ,EAAMxH,OAAQ5B,IACf,OAAboJ,EAAMpJ,IAAeksC,IAE3B,IAAIC,EAAW,IAAIviC,MAAMsiC,GAAS9e,KAAK,MACvC,GAAgB,IAAZ8e,EAAiB,OAAOC,EAE5B,IADA,IAAI/oC,EAAI,EACCs+B,EAAM,EAAGA,EAAMt4B,EAAMxH,OAAQ8/B,IACjB,OAAft4B,EAAMs4B,KAAiByK,EAAS/oC,KAAOgG,EAAMs4B,IAEnD,OAAOyK,GAETxB,GAAiByB,SAAW,WAC1B,GAAyB,IAArB31B,UAAU7U,OAAc,CAG1B,IAFA,IAAIwpC,EAAc30B,UAAU,GACxB+E,EAAO,IAAI5R,MAAMwhC,EAAYxpC,QAAQwrB,KAAK,MACrCptB,EAAI,EAAGA,EAAIorC,EAAYxpC,OAAQ5B,IACtCwb,EAAKxb,GAAK,IAAIkjB,GAAWkoB,EAAYprC,IAEvC,OAAOwb,EACF,GAAyB,IAArB/E,UAAU7U,OAMnB,IALA,IAAI+vB,EAAMlb,UAAU,GAChB41B,EAAW51B,UAAU,GACrBob,EAAOpb,UAAU,GACjB61B,EAAY71B,UAAU,GACtB7U,EAAS6U,UAAU,GACdirB,EAAM,EAAGA,EAAM9/B,EAAQ8/B,IAC9B7P,EAAKya,EAAY5K,GAAO,IAAIxe,GAAWyO,EAAI0a,EAAW3K,KAI5DiJ,GAAiB4B,gBAAkB,SAA0BC,EAAMC,GACjE,IAAK,IAAIzsC,EAAI,EAAGA,EAAIwsC,EAAK5qC,OAAQ5B,IAAK,CACpC,IAAIgE,EAAKwoC,EAAKxsC,GACViE,EAAKwoC,EAAKD,EAAK5qC,OAAS5B,EAAI,GAChC,GAAyB,IAArBgE,EAAGigB,UAAUhgB,GAAa,OAAO,EAEvC,OAAO,GAET0mC,GAAiB+B,SAAW,SAAmBtB,GAE7C,IADA,IAAIja,EAAM,IAAIiC,GACLpzB,EAAI,EAAGA,EAAIorC,EAAYxpC,OAAQ5B,IACtCmxB,EAAIsD,gBAAgB2W,EAAYprC,IAElC,OAAOmxB,GAETwZ,GAAiBtZ,kBAAoB,SAA4Bua,GAC/D,OAAOA,EAAUtD,QAAQqC,GAAiBf,iBAE5Ce,GAAiBgC,6BAA+B,SAAuCpoC,EAAG6e,GACxF,OAAOA,EAAExhB,QAAU2C,EAAI6e,EAAI,IAE7BunB,GAAiBj5B,QAAU,SAAkBwlB,EAAYkU,GACvD,IAAK,IAAIprC,EAAI,EAAGA,EAAIorC,EAAYxpC,OAAQ5B,IACtC,GAAIk3B,EAAWzb,OAAO2vB,EAAYprC,IAChC,OAAOA,EAGX,OAAQ,GAEV2qC,GAAiBiC,oBAAsB,SAA8B/J,GACnE,IAAK,IAAI7iC,EAAI,EAAGA,EAAI2D,KAAK4d,MAAMshB,EAAIjhC,OAAS,GAAI5B,IAAK,CACnD,IAAIoD,EAAIy/B,EAAIjhC,OAAS,EAAI5B,EACrB+Z,EAAO8oB,EAAI7iC,GAAGikB,UAAU4e,EAAIz/B,IAChC,GAAa,IAAT2W,EAAc,OAAOA,EAE3B,OAAO,GAET4wB,GAAiBrpC,QAAU,SAAkBkrC,EAAMC,GAEjD,IADA,IAAIzsC,EAAI,EACDA,EAAIwsC,EAAK5qC,QAAU5B,EAAIysC,EAAK7qC,QAAQ,CACzC,IAAIN,EAAUkrC,EAAKxsC,GAAGikB,UAAUwoB,EAAKzsC,IACrC,GAAgB,IAAZsB,EAAiB,OAAOA,EAC5BtB,IAEF,OAAIA,EAAIysC,EAAK7qC,QAAkB,EAC3B5B,EAAIwsC,EAAK5qC,OAAiB,EACvB,GAET+oC,GAAiBkC,cAAgB,SAAwBzB,GAEvD,IADA,IAAI0B,EAAW,KACN9sC,EAAI,EAAGA,EAAIorC,EAAYxpC,OAAQ5B,KACrB,OAAb8sC,GAAqBA,EAAS7oB,UAAUmnB,EAAYprC,IAAM,KAC5D8sC,EAAW1B,EAAYprC,IAG3B,OAAO8sC,GAETnC,GAAiBoC,QAAU,SAAkBlK,EAAKr/B,EAAOC,GACvDD,EAAQyiB,GAASQ,MAAMjjB,EAAO,EAAGq/B,EAAIjhC,QAErC,IAAIorC,GADJvpC,EAAMwiB,GAASQ,MAAMhjB,GAAM,EAAGo/B,EAAIjhC,SACjB4B,EAAQ,EACrBC,EAAM,IAAKupC,EAAO,GAClBxpC,GAASq/B,EAAIjhC,SAAUorC,EAAO,GAC9BvpC,EAAMD,IAASwpC,EAAO,GAC1B,IAAIC,EAAa,IAAIrjC,MAAMojC,GAAM5f,KAAK,MACtC,GAAa,IAAT4f,EAAc,OAAOC,EAEzB,IADA,IAAIC,EAAO,EACFltC,EAAIwD,EAAOxD,GAAKyD,EAAKzD,IAC5BitC,EAAWC,KAAUrK,EAAI7iC,GAE3B,OAAOitC,GAGTrnC,OAAOid,iBAAkB8nB,GAAkBC,IAE3C,IAAIC,GAAoB,aAExBA,GAAkB5kC,UAAU3E,QAAU,SAAkB2jB,EAAIC,GAG1D,OAAOylB,GAAiBrpC,QAFb2jB,EACAC,IAGb2lB,GAAkB5kC,UAAUyb,YAAc,WACxC,MAAO,CAACsB,KAEV6nB,GAAkB5kC,UAAU0b,SAAW,WACrC,OAAOkpB,IAGT,IAAIC,GAA0B,aAE9BA,GAAwB7kC,UAAU3E,QAAU,SAAkB2jB,EAAIC,GAChE,IAAIsnB,EAAOvnB,EACPwnB,EAAOvnB,EACX,GAAIsnB,EAAK5qC,OAAS6qC,EAAK7qC,OAAU,OAAQ,EACzC,GAAI4qC,EAAK5qC,OAAS6qC,EAAK7qC,OAAU,OAAO,EACxC,GAAoB,IAAhB4qC,EAAK5qC,OAAgB,OAAO,EAChC,IAAIurC,EAAcxC,GAAiBrpC,QAAQkrC,EAAMC,GAEjD,OADiB9B,GAAiB4B,gBAAgBC,EAAMC,GAC/B,EAClBU,GAETrC,GAAwB7kC,UAAUmnC,WAAa,SAAqBnoB,EAAIC,GACtE,IAAIsnB,EAAOvnB,EACPwnB,EAAOvnB,EACX,GAAIsnB,EAAK5qC,OAAS6qC,EAAK7qC,OAAU,OAAQ,EACzC,GAAI4qC,EAAK5qC,OAAS6qC,EAAK7qC,OAAU,OAAO,EACxC,GAAoB,IAAhB4qC,EAAK5qC,OAAgB,OAAO,EAKhC,IAJA,IAAIyrC,EAAO1C,GAAiBiC,oBAAoBJ,GAC5Cc,EAAO3C,GAAiBiC,oBAAoBH,GAC5Cc,EAAKF,EAAO,EAAI,EAAIb,EAAK5qC,OAAS,EAClC4rC,EAAKF,EAAO,EAAI,EAAId,EAAK5qC,OAAS,EAC7B5B,EAAI,EAAGA,EAAIwsC,EAAK5qC,OAAQ5B,IAAK,CACpC,IAAIytC,EAAYjB,EAAKe,GAAItpB,UAAUwoB,EAAKe,IACxC,GAAkB,IAAdC,EAAmB,OAAOA,EAC9BF,GAAMF,EACNG,GAAMF,EAER,OAAO,GAETxC,GAAwB7kC,UAAUyb,YAAc,WAC9C,MAAO,CAACsB,KAEV8nB,GAAwB7kC,UAAU0b,SAAW,WAC3C,OAAOmpB,IAST,IAAI4C,GAAQ,aAEZA,GAAMznC,UAAUkH,IAAM,aAQtBugC,GAAMznC,UAAU0nC,IAAM,aAMtBD,GAAMznC,UAAUhD,KAAO,aAMvByqC,GAAMznC,UAAU7D,OAAS,aAkBzBsrC,GAAMznC,UAAU2nC,SAAW,aAS3B,IAAIC,GAAa,SAAUnhC,GAC1B,SAASmhC,IACRnhC,EAAIiqB,MAAMx1B,KAAMsV,WAOjB,OANM/J,IAAMmhC,EAAUzrB,UAAY1V,GAClCmhC,EAAU5nC,UAAYL,OAAOyc,OAAQ3V,GAAOA,EAAIzG,WAChD4nC,EAAU5nC,UAAUqc,YAAcurB,EAI3BA,GACNH,IAQF,SAASI,GAAuB7rB,GAC9B9gB,KAAK8gB,QAAUA,GAAW,GAgB5B,SAAS8rB,MAdTD,GAAsB7nC,UAAY,IAAI6D,MAKtCgkC,GAAsB7nC,UAAUic,KAAO,2BAUnCjc,UAAY,IAAIkiC,MAUhBliC,UAAUkvB,SAAW,aASzB,IAAI6Y,GAAW,SAAUC,GACvB,SAASD,IACPC,EAAOnsC,KAAKX,MACZA,KAAK0nC,OAAS,GAEVpyB,UAAU,aAAc0xB,IAC1BhnC,KAAKknC,OAAO5xB,UAAU,IA4F1B,OAxFKw3B,IAASD,EAAQ5rB,UAAY6rB,GAClCD,EAAQ/nC,UAAYL,OAAOyc,OAAQ4rB,GAAUA,EAAOhoC,WACpD+nC,EAAQ/nC,UAAUqc,YAAc0rB,EAKhCA,EAAQ/nC,UAAUkvB,SAAW,SAAmBjR,GAG9C,IAFA,IAESlkB,EAAI,EAAGqe,EAAMld,KAAK0nC,OAAOjnC,OAAQ5B,EAAIqe,EAAKre,IAAK,CAEtD,GAJWmB,KAGI0nC,OAAO7oC,KACZkkB,EACR,OAAO,EAGX,OAAO,GAMT8pB,EAAQ/nC,UAAU7E,IAAM,SAAc8iB,GACpC,OAAI/iB,KAAKg0B,SAASjR,KAIlB/iB,KAAK0nC,OAAOlnC,KAAKuiB,IAEV,IAMT8pB,EAAQ/nC,UAAUoiC,OAAS,SAAiBjlB,GAG1C,IAFA,IAESpjB,EAAIojB,EAAEwjB,WAAY5mC,EAAE6mC,WAFhB1lC,KAGJC,IAAIpB,EAAE6C,QAEf,OAAO,GAMTmrC,EAAQ/nC,UAAUrF,OAAS,SAAiBsjB,GAE1C,MAAM,IAAIpa,OAMZkkC,EAAQ/nC,UAAUhD,KAAO,WACvB,OAAO9B,KAAK0nC,OAAOjnC,QAMrBosC,EAAQ/nC,UAAUgxB,QAAU,WAC1B,OAA8B,IAAvB91B,KAAK0nC,OAAOjnC,QAMrBosC,EAAQ/nC,UAAUqiC,QAAU,WAK1B,IAJA,IAEI9Q,EAAQ,GAEHx3B,EAAI,EAAGqe,EAAMld,KAAK0nC,OAAOjnC,OAAQ5B,EAAIqe,EAAKre,IACjDw3B,EAAM71B,KALKR,KAKO0nC,OAAO7oC,IAG3B,OAAOw3B,GAMTwW,EAAQ/nC,UAAU2gC,SAAW,WAC3B,OAAO,IAAIsH,GAAY/sC,OAGlB6sC,GACPD,IAQEG,GAAe,SAAU9E,GAC3B,SAASF,EAAWiF,GAClB/E,EAAYtnC,KAAKX,MAKjBA,KAAKitC,SAAWD,EAKhBhtC,KAAKooC,UAAY,EAmCnB,OAhCKH,IAAcF,EAAU9mB,UAAYgnB,GACzCF,EAAUjjC,UAAYL,OAAOyc,OAAQ+mB,GAAeA,EAAYnjC,WAChEijC,EAAUjjC,UAAUqc,YAAc4mB,EAKlCA,EAAUjjC,UAAUpD,KAAO,WACzB,GAAI1B,KAAKooC,YAAcpoC,KAAKitC,SAASnrC,OACnC,MAAM,IAAIylC,GAEZ,OAAOvnC,KAAKitC,SAASvF,OAAO1nC,KAAKooC,cAMnCL,EAAUjjC,UAAU4gC,QAAU,WAC5B,OAAI1lC,KAAKooC,UAAYpoC,KAAKitC,SAASnrC,QAUrCimC,EAAUjjC,UAAUrF,OAAS,WAC3B,MAAM,IAAIktC,IAGL5E,GACPX,IAEE8F,GAAQ,EAEZ,SAASC,GAASxrC,GAAK,OAAc,OAANA,EAAaurC,GAAQvrC,EAAEyrC,MACtD,SAASC,GAAU1rC,GAAK,OAAc,OAANA,EAAa,KAAOA,EAAES,OACtD,SAASkrC,GAAU3rC,EAAGsgB,GAAe,OAANtgB,IAAcA,EAAEyrC,MAAQnrB,GACvD,SAASsrB,GAAQ5rC,GAAK,OAAc,OAANA,EAAa,KAAOA,EAAEpD,KACpD,SAASivC,GAAS7rC,GAAK,OAAc,OAANA,EAAa,KAAOA,EAAEnD,MASrD,SAASivC,KAKPztC,KAAK0tC,MAAQ,KAKb1tC,KAAK2tC,MAAQ,EAEfF,GAAQ3oC,UAAY,IAAI4nC,GAKxBe,GAAQ3oC,UAAUkH,IAAM,SAAU3N,GAEhC,IADA,IAAIsD,EAAI3B,KAAK0tC,MACA,OAAN/rC,GAAY,CACjB,IAAIvC,EAAMf,EAAe,UAAEsD,EAAEtD,KAC7B,GAAIe,EAAM,EAAKuC,EAAIA,EAAEpD,SAChB,CAAA,KAAIa,EAAM,GACR,OAAOuC,EAAEgG,MADIhG,EAAIA,EAAEnD,OAG5B,OAAO,MAMTivC,GAAQ3oC,UAAU0nC,IAAM,SAAUnuC,EAAKsJ,GACrC,GAAmB,OAAf3H,KAAK0tC,MAYP,OAXA1tC,KAAK0tC,MAAQ,CACXrvC,IAAKA,EACLsJ,MAAOA,EACPpJ,KAAM,KACNC,MAAO,KACP4D,OAAQ,KACRgrC,MAAOF,GACPU,SAAU,WAAuB,OAAO5tC,KAAK2H,OAC7CkmC,OAAQ,WAAqB,OAAO7tC,KAAK3B,MAE3C2B,KAAK2tC,MAAQ,EACN,KAET,IACIvrC,EACAhD,EAFAN,EAAIkB,KAAK0tC,MAGb,GAGE,GAFAtrC,EAAStD,GACTM,EAAMf,EAAe,UAAES,EAAET,MACf,EACRS,EAAIA,EAAEP,SACD,CAAA,KAAIa,EAAM,GAEV,CACL,IAAI0uC,EAAWhvC,EAAE6I,MAEjB,OADA7I,EAAE6I,MAAQA,EACHmmC,EAJPhvC,EAAIA,EAAEN,aAMK,OAANM,GACT,IAAI4c,EAAI,CACNrd,IAAKA,EACLE,KAAM,KACNC,MAAO,KACPmJ,MAAOA,EACPvF,OAAQA,EACRgrC,MAAOF,GACPU,SAAU,WAAuB,OAAO5tC,KAAK2H,OAC7CkmC,OAAQ,WAAqB,OAAO7tC,KAAK3B,MAS3C,OAPIe,EAAM,EACRgD,EAAO7D,KAAOmd,EAEdtZ,EAAO5D,MAAQkd,EAEjB1b,KAAK+tC,kBAAkBryB,GACvB1b,KAAK2tC,QACE,MAMTF,GAAQ3oC,UAAUipC,kBAAoB,SAAUruC,GAI9C,IADAA,EAAE0tC,MAtGM,EAuGI,MAAL1tC,GAAaA,IAAMM,KAAK0tC,OAvGvB,IAuGgChuC,EAAE0C,OAAOgrC,OAC/C,GAAIC,GAAS3tC,KAAO6tC,GAAOF,GAASA,GAAS3tC,KAAM,CACjD,IAAIR,EAAIsuC,GAAQH,GAASA,GAAS3tC,KAzG9B,IA0GAytC,GAAQjuC,IACVouC,GAASD,GAAS3tC,GAAIwtC,IACtBI,GAASpuC,EAAGguC,IACZI,GAASD,GAASA,GAAS3tC,IA7GzB,GA8GFA,EAAI2tC,GAASA,GAAS3tC,MAElBA,IAAM8tC,GAAQH,GAAS3tC,MACzBA,EAAI2tC,GAAS3tC,GAbRM,KAcEuY,WAAW7Y,IAEpB4tC,GAASD,GAAS3tC,GAAIwtC,IACtBI,GAASD,GAASA,GAAS3tC,IArHzB,GAoGKM,KAkBAsY,YAAY+0B,GAASA,GAAS3tC,UAElC,CACL,IAAI2pB,EAAMkkB,GAAOF,GAASA,GAAS3tC,KAzH/B,IA0HAytC,GAAQ9jB,IACVikB,GAASD,GAAS3tC,GAAIwtC,IACtBI,GAASjkB,EAAK6jB,IACdI,GAASD,GAASA,GAAS3tC,IA7HzB,GA8HFA,EAAI2tC,GAASA,GAAS3tC,MAElBA,IAAM6tC,GAAOF,GAAS3tC,MACxBA,EAAI2tC,GAAS3tC,GA7BRM,KA8BEsY,YAAY5Y,IAErB4tC,GAASD,GAAS3tC,GAAIwtC,IACtBI,GAASD,GAASA,GAAS3tC,IArIzB,GAoGKM,KAkCAuY,WAAW80B,GAASA,GAAS3tC,MAI1CM,KAAK0tC,MAAMN,MAAQF,IAMrBO,GAAQ3oC,UAAU7D,OAAS,WACzB,IAAIinC,EAAY,IAAIV,GAChB7lC,EAAI3B,KAAKguC,gBACb,GAAU,OAANrsC,EAEF,IADAumC,EAAUjoC,IAAI0B,EAAEgG,OACsB,QAA9BhG,EAAI8rC,GAAQlsC,UAAUI,KAC5BumC,EAAUjoC,IAAI0B,EAAEgG,OAGpB,OAAOugC,GAMTuF,GAAQ3oC,UAAU2nC,SAAW,WAC3B,IAAIO,EAAU,IAAIH,GACdlrC,EAAI3B,KAAKguC,gBACb,GAAU,OAANrsC,EAEF,IADAqrC,EAAQ/sC,IAAI0B,GAC0B,QAA9BA,EAAI8rC,GAAQlsC,UAAUI,KAC5BqrC,EAAQ/sC,IAAI0B,GAGhB,OAAOqrC,GAMTS,GAAQ3oC,UAAUyT,WAAa,SAAU5W,GACvC,GAAS,MAALA,EAAW,CACb,IAAI1C,EAAI0C,EAAEnD,MACVmD,EAAEnD,MAAQS,EAAEV,KACE,MAAVU,EAAEV,OAAgBU,EAAEV,KAAK6D,OAAST,GACtC1C,EAAEmD,OAAST,EAAES,OACI,OAAbT,EAAES,OAAmBpC,KAAK0tC,MAAQzuC,EAAc0C,EAAES,OAAO7D,OAASoD,EAAKA,EAAES,OAAO7D,KAAOU,EAAY0C,EAAES,OAAO5D,MAAQS,EACxHA,EAAEV,KAAOoD,EACTA,EAAES,OAASnD,IAOfwuC,GAAQ3oC,UAAUwT,YAAc,SAAU3W,GACxC,GAAS,MAALA,EAAW,CACb,IAAI3C,EAAI2C,EAAEpD,KACVoD,EAAEpD,KAAOS,EAAER,MACI,MAAXQ,EAAER,QAAiBQ,EAAER,MAAM4D,OAAST,GACxC3C,EAAEoD,OAAST,EAAES,OACI,OAAbT,EAAES,OAAmBpC,KAAK0tC,MAAQ1uC,EAAc2C,EAAES,OAAO5D,QAAUmD,EAAKA,EAAES,OAAO5D,MAAQQ,EAAY2C,EAAES,OAAO7D,KAAOS,EACzHA,EAAER,MAAQmD,EACVA,EAAES,OAASpD,IAOfyuC,GAAQ3oC,UAAUkpC,cAAgB,WAChC,IAAIrsC,EAAI3B,KAAK0tC,MACb,GAAS,MAAL/rC,EACF,KAAiB,MAAVA,EAAEpD,MACPoD,EAAIA,EAAEpD,KAGV,OAAOoD,GAQT8rC,GAAQlsC,UAAY,SAAUzC,GAC5B,GAAU,OAANA,EAAc,OAAO,KAAY,GAAgB,OAAZA,EAAEN,MAAgB,CAEzD,IADA,IAAImD,EAAI7C,EAAEN,MACQ,OAAXmD,EAAEpD,MACPoD,EAAIA,EAAEpD,KAER,OAAOoD,EAIP,IAFA,IAAIy+B,EAAMthC,EAAEsD,OACR6qB,EAAKnuB,EACM,OAARshC,GAAgBnT,IAAOmT,EAAI5hC,OAChCyuB,EAAKmT,EACLA,EAAMA,EAAIh+B,OAEZ,OAAOg+B,GAOXqN,GAAQ3oC,UAAUhD,KAAO,WACvB,OAAO9B,KAAK2tC,OAGd,IAAIM,GAAS,aAgBb,SAASC,MAWT,SAASC,KAKPnuC,KAAK0nC,OAAS,GAEVpyB,UAAU,aAAc0xB,IAC1BhnC,KAAKknC,OAAO5xB,UAAU,IAjC1B24B,GAAOnpC,UAAUyb,YAAc,WAC7B,MAAO,IAET0tB,GAAOnpC,UAAU0b,SAAW,WAC1B,OAAOytB,IAWTC,GAAUppC,UAAY,IAAI8nC,GAqB1BuB,GAAQrpC,UAAY,IAAIopC,GAKxBC,GAAQrpC,UAAUkvB,SAAW,SAAUjR,GAGrC,IAFA,IAESlkB,EAAI,EAAGqe,EAAMld,KAAK0nC,OAAOjnC,OAAQ5B,EAAIqe,EAAKre,IAAK,CAEtD,GAA0B,IAJfmB,KAGI0nC,OAAO7oC,GACL,UAAEkkB,GACjB,OAAO,EAGX,OAAO,GAMTorB,GAAQrpC,UAAU7E,IAAM,SAAU8iB,GAGhC,GAAI/iB,KAAKg0B,SAASjR,GAChB,OAAO,EAGT,IAAK,IAAIlkB,EAAI,EAAGqe,EAAMld,KAAK0nC,OAAOjnC,OAAQ5B,EAAIqe,EAAKre,IAAK,CAEtD,GAA0B,IARfmB,KAOI0nC,OAAO7oC,GACL,UAAEkkB,GAEjB,OAVS/iB,KASF0nC,OAAOx+B,OAAOrK,EAAG,EAAGkkB,IACpB,EAMX,OAFA/iB,KAAK0nC,OAAOlnC,KAAKuiB,IAEV,GAMTorB,GAAQrpC,UAAUoiC,OAAS,SAAUjlB,GAGnC,IAFA,IAESpjB,EAAIojB,EAAEwjB,WAAY5mC,EAAE6mC,WAFhB1lC,KAGJC,IAAIpB,EAAE6C,QAEf,OAAO,GAMTysC,GAAQrpC,UAAUrF,OAAS,SAAUic,GACnC,MAAM,IAAIixB,IAMZwB,GAAQrpC,UAAUhD,KAAO,WACvB,OAAO9B,KAAK0nC,OAAOjnC,QAMrB0tC,GAAQrpC,UAAUgxB,QAAU,WAC1B,OAA8B,IAAvB91B,KAAK0nC,OAAOjnC,QAMrB0tC,GAAQrpC,UAAUqiC,QAAU,WAK1B,IAJA,IAEI9Q,EAAQ,GAEHx3B,EAAI,EAAGqe,EAAMld,KAAK0nC,OAAOjnC,OAAQ5B,EAAIqe,EAAKre,IACjDw3B,EAAM71B,KALKR,KAKO0nC,OAAO7oC,IAG3B,OAAOw3B,GAMT8X,GAAQrpC,UAAU2gC,SAAW,WAC3B,OAAO,IAAI2I,GAAYpuC,OASzB,IAAIouC,GAAc,SAAUC,GAK1BruC,KAAKsuC,SAAWD,EAKhBruC,KAAKooC,UAAY,GAMnBgG,GAAYtpC,UAAUpD,KAAO,WAC3B,GAAI1B,KAAKooC,YAAcpoC,KAAKsuC,SAASxsC,OACnC,MAAM,IAAIylC,GAEZ,OAAOvnC,KAAKsuC,SAAS5G,OAAO1nC,KAAKooC,cAMnCgG,GAAYtpC,UAAU4gC,QAAU,WAC9B,OAAI1lC,KAAKooC,UAAYpoC,KAAKsuC,SAASxsC,QAUrCssC,GAAYtpC,UAAUrF,OAAS,WAC7B,MAAM,IAAIktC,IASZ,IAAI4B,GAAS,aAEbA,GAAOxsC,KAAO,WACZ,IACIlD,EACAC,EACAC,EACAoB,EAJAzB,EAAI4W,UAAU,GAKlB,GAAyB,IAArBA,UAAU7U,OACZN,EAAU,SAAUzB,EAAGC,GACrB,OAAOD,EAAEokB,UAAUnkB,IAErBD,EAAEqD,KAAK5B,QACF,GAAyB,IAArBmV,UAAU7U,OACnB1B,EAAauW,UAAU,GACvBnV,EAAU,SAAUzB,EAAGC,GACrB,OAAOI,EAAoB,QAAEL,EAAGC,IAElCD,EAAEqD,KAAK5B,QACF,GAAyB,IAArBmV,UAAU7U,OAAc,EACjC3B,EAAIJ,EAAEmR,MAAMyF,UAAU,GAAIA,UAAU,KAClCvT,OACF,IAAI9C,EAAIP,EAAEmR,MAAM,EAAGyF,UAAU,IAAIpF,OAAOpR,EAAGJ,EAAEmR,MAAMyF,UAAU,GAAI5W,EAAE+B,SAEnE,IADA/B,EAAEwK,OAAO,EAAGxK,EAAE+B,QACT5B,EAAI,EAAGA,EAAII,EAAEwB,OAAQ5B,IACxBH,EAAE8B,KAAKvB,EAAEJ,SAEN,GAAyB,IAArByW,UAAU7U,OASnB,IARA3B,EAAIJ,EAAEmR,MAAMyF,UAAU,GAAIA,UAAU,IACpCvW,EAAauW,UAAU,GACvBnV,EAAU,SAAUzB,EAAGC,GACrB,OAAOI,EAAoB,QAAEL,EAAGC,IAElCG,EAAEiD,KAAK5B,GACPlB,EAAIP,EAAEmR,MAAM,EAAGyF,UAAU,IAAIpF,OAAOpR,EAAGJ,EAAEmR,MAAMyF,UAAU,GAAI5W,EAAE+B,SAC/D/B,EAAEwK,OAAO,EAAGxK,EAAE+B,QACT5B,EAAI,EAAGA,EAAII,EAAEwB,OAAQ5B,IACxBH,EAAE8B,KAAKvB,EAAEJ,KAQf0vC,GAAOC,OAAS,SAAiBnY,GAE/B,IADA,IAAI6R,EAAY,IAAIV,GACX3oC,EAAI,EAAGqe,EAAMmZ,EAAM51B,OAAQ5B,EAAIqe,EAAKre,IAC3CqpC,EAAUjoC,IAAIo2B,EAAMx3B,IAEtB,OAAOqpC,GAGT,IAAIuG,GAAY,aAEZC,GAAqB,CAAEC,EAAG,CAAEpqC,cAAc,GAAOqqC,EAAG,CAAErqC,cAAc,GAAO48B,EAAG,CAAE58B,cAAc,GAAOsqC,MAAO,CAAEtqC,cAAc,GAAOuqC,KAAM,CAAEvqC,cAAc,GAAOwqC,SAAU,CAAExqC,cAAc,GAAOyqC,UAAW,CAAEzqC,cAAc,GAAO0qC,SAAU,CAAE1qC,cAAc,GAAO2qC,aAAc,CAAE3qC,cAAc,GAAO4qC,MAAO,CAAE5qC,cAAc,GAAO6qC,MAAO,CAAE7qC,cAAc,GAAO8qC,MAAO,CAAE9qC,cAAc,IAEhYmqC,GAAmBC,EAAE3iC,IAAM,WAAc,OAAO,GAChD0iC,GAAmBE,EAAE5iC,IAAM,WAAc,OAAO,GAChD0iC,GAAmBvN,EAAEn1B,IAAM,WAAc,OAAO,GAChD0iC,GAAmBG,MAAM7iC,IAAM,WAAc,OAAQ,GACrD0iC,GAAmBI,KAAK9iC,IAAM,WAAc,OAAQ,GACpD0iC,GAAmBK,SAAS/iC,IAAM,WAAc,OAAQ,GACxD0iC,GAAmBM,UAAUhjC,IAAM,WAAc,MAAO,KACxD0iC,GAAmBO,SAASjjC,IAAM,WAAc,MAAO,KACvD0iC,GAAmBQ,aAAaljC,IAAM,WAAc,MAAO,KAC3D0iC,GAAmBS,MAAMnjC,IAAM,WAAc,MAAO,KACpD0iC,GAAmBU,MAAMpjC,IAAM,WAAc,MAAO,KACpD0iC,GAAmBW,MAAMrjC,IAAM,WAAc,MAAO,KAEpDyiC,GAAU3pC,UAAUyb,YAAc,WAChC,MAAO,IAETkuB,GAAU3pC,UAAU0b,SAAW,WAC7B,OAAOiuB,IAETA,GAAUa,kBAAoB,SAA4BC,GACxD,OAAQA,GACN,KAAKd,GAAUI,MACb,OAAOJ,GAAUO,UACnB,KAAKP,GAAUK,KACb,OAAOL,GAAUQ,SACnB,KAAKR,GAAUM,SACb,OAAON,GAAUS,aACnB,KAAKT,GAAUE,EACb,OAAOF,GAAUU,MACnB,KAAKV,GAAUG,EACb,OAAOH,GAAUW,MACnB,KAAKX,GAAUtN,EACb,OAAOsN,GAAUY,MAGrB,MAAM,IAAIxuB,GAAyB,4BAA8B0uB,IAEnEd,GAAUe,iBAAmB,SAA2BC,GACtD,OAAQnpB,GAAUE,YAAYipB,IAC5B,KAAKhB,GAAUO,UACb,OAAOP,GAAUI,MACnB,KAAKJ,GAAUQ,SACb,OAAOR,GAAUK,KACnB,KAAKL,GAAUS,aACb,OAAOT,GAAUM,SACnB,KAAKN,GAAUU,MACb,OAAOV,GAAUE,EACnB,KAAKF,GAAUW,MACb,OAAOX,GAAUG,EACnB,KAAKH,GAAUY,MACb,OAAOZ,GAAUtN,EAGrB,MAAM,IAAItgB,GAAyB,6BAA+B4uB,IAGpEhrC,OAAOid,iBAAkB+sB,GAAWC,IAEpC,IAAIgB,GAAiB,aAErBA,GAAe5qC,UAAU49B,OAAS,SAAiBn6B,KACnDmnC,GAAe5qC,UAAUyb,YAAc,WACrC,MAAO,IAETmvB,GAAe5qC,UAAU0b,SAAW,WAClC,OAAOkvB,IAGT,IAAIC,GAA2B,aAE/BA,GAAyB7qC,UAAU49B,OAAS,SAAiBkN,EAAK/wC,KAClE8wC,GAAyB7qC,UAAU+qC,OAAS,aAC5CF,GAAyB7qC,UAAUgrC,kBAAoB,aACvDH,GAAyB7qC,UAAUyb,YAAc,WAC/C,MAAO,IAETovB,GAAyB7qC,UAAU0b,SAAW,WAC5C,OAAOmvB,IAGT,IAAII,GAAsB,SAAUC,GAClC,SAASD,EAAoB/J,EAAYzuB,GAIvC,GAHAy4B,EAAYrvC,KAAKX,KAAMuX,GACvBvX,KAAKs2B,YAAc0P,GAAc,GAE7BgK,EAAY/J,gBAAgBjmC,KAAKs2B,aACnC,MAAM,IAAIzV,GAAyB,6CAIlCmvB,IAAcD,EAAmB9uB,UAAY+uB,GAClDD,EAAmBjrC,UAAYL,OAAOyc,OAAQ8uB,GAAeA,EAAYlrC,WACzEirC,EAAmBjrC,UAAUqc,YAAc4uB,EAE3C,IAAI7tB,EAAkB,CAAEE,iBAAkB,CAAE7d,cAAc,IAmO1D,OAlOAwrC,EAAmBjrC,UAAUsgC,wBAA0B,WAIrD,IAHA,IAEImG,EAAW,IAAItZ,GACVpzB,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3C0sC,EAASjY,gBAJEtzB,KAIqBs2B,YAAYz3B,GAAGkmC,uBAEjD,OAAOwG,GAETwE,EAAmBjrC,UAAUg/B,aAAe,SAAuB1gC,GACjE,OAAOpD,KAAKs2B,YAAYlzB,IAE1B2sC,EAAmBjrC,UAAU8+B,aAAe,WAC1C,OAAOoM,EAAYvM,8BAErBsM,EAAmBjrC,UAAUmrC,eAAiB,WAK5C,IAJA,IAEIhG,EAAc,IAAIxhC,MAAMzI,KAAKkwC,gBAAgBjkB,KAAK,MAClDnjB,GAAK,EACAjK,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAE3C,IADA,IAAIsxC,EALOnwC,KAKmBs2B,YAAYz3B,GAAGoxC,iBACpChuC,EAAI,EAAGA,EAAIkuC,EAAiB1vC,OAAQwB,IAE3CgoC,IADAnhC,GACiBqnC,EAAiBluC,GAGtC,OAAOgoC,GAET8F,EAAmBjrC,UAAUytB,QAAU,WAIrC,IAHA,IAEI6d,EAAO,EACFvxC,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3CuxC,GAJWpwC,KAIIs2B,YAAYz3B,GAAG0zB,UAEhC,OAAO6d,GAETL,EAAmBjrC,UAAUq/B,YAAc,WAGzC,GAAyB,IAArB7uB,UAAU7U,OAAc,CAC1B,IAAI+J,EAAQ8K,UAAU,GAClBsL,EAAYtL,UAAU,GAC1B,IAAKtV,KAAKqwC,kBAAkB7lC,GAC1B,OAAO,EAET,IAAI8lC,EAAkB9lC,EACtB,GAAIxK,KAAKs2B,YAAY71B,SAAW6vC,EAAgBha,YAAY71B,OAC1D,OAAO,EAET,IAAK,IAAI5B,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3C,IAbSmB,KAaGs2B,YAAYz3B,GAAGslC,YAAYmM,EAAgBha,YAAYz3B,GAAI+hB,GACrE,OAAO,EAGX,OAAO,EACA,OAAOovB,EAAYlrC,UAAUq/B,YAAY3O,MAAMx1B,KAAMsV,YAEhEy6B,EAAmBjrC,UAAUogC,UAAY,WAGvC,IAFA,IAESrmC,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAFhCmB,KAGJs2B,YAAYz3B,GAAGqmC,YAExBqJ,GAAOxsC,KAAK/B,KAAKs2B,cAEnByZ,EAAmBjrC,UAAU6qB,cAAgB,WAC3C,OAAI3vB,KAAK81B,UAAoB,KACtB91B,KAAKs2B,YAAY,GAAG3G,iBAE7BogB,EAAmBjrC,UAAUyrC,qBAAuB,WAIlD,IAHA,IAEIC,EAAY/B,GAAUI,MACjBhwC,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3C2xC,EAAYhuC,KAAK0Z,IAAIs0B,EAJVxwC,KAI4Bs2B,YAAYz3B,GAAG0xC,wBAExD,OAAOC,GAETT,EAAmBjrC,UAAU+qB,aAAe,WAI1C,IAHA,IAEI2gB,EAAY/B,GAAUI,MACjBhwC,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3C2xC,EAAYhuC,KAAK0Z,IAAIs0B,EAJVxwC,KAI4Bs2B,YAAYz3B,GAAGgxB,gBAExD,OAAO2gB,GAETT,EAAmBjrC,UAAU0/B,UAAY,WAIvC,IAHA,IAEI1D,EAAM,EACDjiC,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3CiiC,GAJW9gC,KAIGs2B,YAAYz3B,GAAG2lC,YAE/B,OAAO1D,GAETiP,EAAmBjrC,UAAUorC,aAAe,WAI1C,IAHA,IAEIO,EAAY,EACP5xC,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3C4xC,GAJWzwC,KAISs2B,YAAYz3B,GAAGqxC,eAErC,OAAOO,GAETV,EAAmBjrC,UAAU2/B,iBAAmB,WAC9C,OAAOzkC,KAAKs2B,YAAY71B,QAE1BsvC,EAAmBjrC,UAAU6O,QAAU,WAKrC,IAJA,IAEIvQ,EAAIpD,KAAKs2B,YAAY71B,OACrBiwC,EAAW,IAAIjoC,MAAMrF,GAAG6oB,KAAK,MACxBptB,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3C6xC,EAAS7xC,GALEmB,KAKUs2B,YAAYz3B,GAAG8U,UAEtC,OAAO3T,KAAK6jC,aAAaxL,yBAAyBqY,IAEpDX,EAAmBjrC,UAAU4/B,mBAAqB,WAGhD,GAAyB,IAArBpvB,UAAU7U,OAAc,CAC1B,IAAIsiB,EAAIzN,UAAU,GACdq7B,EAAgB,IAAIxC,GAAQI,GAAOC,OAAOxuC,KAAKs2B,cAC/Csa,EAAgB,IAAIzC,GAAQI,GAAOC,OAAOzrB,EAAEuT,cAChD,OAAOt2B,KAAKG,QAAQwwC,EAAeC,GAC9B,GAAyB,IAArBt7B,UAAU7U,OAAc,CAOjC,IANA,IAAIowC,EAAMv7B,UAAU,GAChBsD,EAAOtD,UAAU,GACjBw7B,EAAKD,EACLrU,EAAKx8B,KAAKykC,mBACVhI,EAAKqU,EAAGrM,mBACR5lC,EAAI,EACDA,EAAI29B,GAAM39B,EAAI49B,GAAI,CACvB,IAAIsU,EAfK/wC,KAea8jC,aAAajlC,GAC/BmyC,EAAYF,EAAGhN,aAAajlC,GAC5BoyC,EAAWF,EAASrM,mBAAmBsM,EAAWp4B,GACtD,GAAiB,IAAbq4B,EAAkB,OAAOA,EAC7BpyC,IAEF,OAAIA,EAAI29B,EAAa,EACjB39B,EAAI49B,GAAc,EACf,IAGXsT,EAAmBjrC,UAAU0wB,MAAQ,WAGnC,GAAI3Q,GAAavP,UAAU,GAAI4wB,IAE7B,IADA,IAAIxD,EAASptB,UAAU,GACdzW,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAJlCmB,KAKFs2B,YAAYz3B,GAAG22B,MAAMkN,QAEzB,GAAI7d,GAAavP,UAAU,GAAIq6B,IAA2B,CAC/D,IAAIuB,EAAW57B,UAAU,GACzB,GAAgC,IAA5BtV,KAAKs2B,YAAY71B,OAAgB,OAAO,KAC5C,IAAK,IAAI8/B,EAAM,EAAGA,EAAMvgC,KAAKs2B,YAAY71B,SAV9BT,KAWFs2B,YAAYiK,GAAK/K,MAAM0b,IAC1BA,EAASrB,UAFkCtP,KAM7C2Q,EAASpB,qBAAuB9vC,KAAKokC,uBACpC,GAAIvf,GAAavP,UAAU,GAAIo6B,IAAiB,CACrD,IAAIyB,EAAW77B,UAAU,GACzB67B,EAASzO,OAAO1iC,MAChB,IAAK,IAAIipC,EAAM,EAAGA,EAAMjpC,KAAKs2B,YAAY71B,OAAQwoC,IApBtCjpC,KAqBFs2B,YAAY2S,GAAKzT,MAAM2b,QAE3B,GAAItsB,GAAavP,UAAU,GAAImtB,IAA0B,CAC9D,IAAI2O,EAAW97B,UAAU,GACzB87B,EAAS1O,OAAO1iC,MAChB,IAAK,IAAIkpC,EAAM,EAAGA,EAAMlpC,KAAKs2B,YAAY71B,OAAQyoC,IA1BtClpC,KA2BFs2B,YAAY4S,GAAK1T,MAAM4b,KAIpCrB,EAAmBjrC,UAAUusC,YAAc,WAGzC,OAFArxC,KAAKglC,2BAA2BhlC,MAChC64B,GAAOC,uBACA,MAETiX,EAAmBjrC,UAAUke,MAAQ,WACnC,IAEI8tB,EAAKd,EAAYlrC,UAAUke,MAAMriB,KAAKX,MAC1C8wC,EAAGxa,YAAc,IAAI7tB,MAAMzI,KAAKs2B,YAAY71B,QAAQwrB,KAAK,MACzD,IAAK,IAAIptB,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3CiyC,EAAGxa,YAAYz3B,GALJmB,KAKgBs2B,YAAYz3B,GAAGmkB,QAE5C,OAAO8tB,GAETf,EAAmBjrC,UAAU6wB,gBAAkB,WAC7C,MAAO,sBAEToa,EAAmBjrC,UAAUuV,KAAO,WAIlC,IAHA,IAEI2rB,EAAa,IAAIv9B,MAAMzI,KAAKs2B,YAAY71B,QAAQwrB,KAAK,MAChDptB,EAAI,EAAGA,EAAImnC,EAAWvlC,OAAQ5B,IACrCmnC,EAAWnnC,GAJAmB,KAIYs2B,YAAYz3B,GAAGwb,OAExC,OAAO,IAAI01B,EAAmB/J,EAAYhmC,KAAK6iC,WAEjDkN,EAAmBjrC,UAAUgxB,QAAU,WAGrC,IAFA,IAESj3B,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3C,IAHWmB,KAGCs2B,YAAYz3B,GAAGi3B,UACzB,OAAO,EAGX,OAAO,GAETia,EAAmBjrC,UAAUyb,YAAc,WACzC,MAAO,IAETwvB,EAAmBjrC,UAAU0b,SAAW,WACtC,OAAOuvB,GAET7tB,EAAgBE,iBAAiBpW,IAAM,WAAc,OAAQ,oBAE7DvH,OAAOid,iBAAkBquB,EAAoB7tB,GAEtC6tB,GACPpN,IAEE2O,GAAmB,SAAUC,GAC/B,SAASD,IACPC,EAAsB/b,MAAMx1B,KAAMsV,WAG/Bi8B,IAAwBD,EAAgBrwB,UAAYswB,GACzDD,EAAgBxsC,UAAYL,OAAOyc,OAAQqwB,GAAyBA,EAAsBzsC,WAC1FwsC,EAAgBxsC,UAAUqc,YAAcmwB,EAExC,IAAIpvB,EAAkB,CAAEE,iBAAkB,CAAE7d,cAAc,IAwE1D,OAtEA+sC,EAAgBxsC,UAAU8+B,aAAe,WACvC,OAAOjB,GAASW,2BAElBgO,EAAgBxsC,UAAUq/B,YAAc,WACtC,GAAyB,IAArB7uB,UAAU7U,OAAc,CAC1B,IAAI+J,EAAQ8K,UAAU,GAClBsL,EAAYtL,UAAU,GAC1B,QAAKtV,KAAKqwC,kBAAkB7lC,IAGrB+mC,EAAsBzsC,UAAUq/B,YAAYxjC,KAAKX,KAAMwK,EAAOoW,GAC9D,OAAO2wB,EAAsBzsC,UAAUq/B,YAAY3O,MAAMx1B,KAAMsV,YAE1Eg8B,EAAgBxsC,UAAUyrC,qBAAuB,WAC/C,OAAIvwC,KAAKwxC,WACA/C,GAAUI,MAEZ,GAETyC,EAAgBxsC,UAAU0sC,SAAW,WAGnC,GAAIxxC,KAAK81B,UACP,OAAO,EAET,IAAK,IAAIj3B,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3C,IANWmB,KAMCs2B,YAAYz3B,GAAG2yC,WACzB,OAAO,EAGX,OAAO,GAETF,EAAgBxsC,UAAU+qB,aAAe,WACvC,OAAO,GAETyhB,EAAgBxsC,UAAU6O,QAAU,WAKlC,IAJA,IAEI89B,EAASzxC,KAAKs2B,YAAY71B,OAC1BixC,EAAW,IAAIjpC,MAAMgpC,GAAQxlB,KAAK,MAC7BptB,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3C6yC,EAASD,EAAS,EAAI5yC,GALXmB,KAKuBs2B,YAAYz3B,GAAG8U,UAEnD,OAAO3T,KAAK6jC,aAAa/L,sBAAsB4Z,IAEjDJ,EAAgBxsC,UAAUusC,YAAc,WACtC,OAAO,IAAIM,GAAW3xC,MAAMqxC,eAE9BC,EAAgBxsC,UAAU6wB,gBAAkB,WAC1C,MAAO,mBAET2b,EAAgBxsC,UAAUuV,KAAO,WAI/B,IAHA,IAEIu3B,EAAc,IAAInpC,MAAMzI,KAAKs2B,YAAY71B,QAAQwrB,KAAK,MACjDptB,EAAI,EAAGA,EAAI+yC,EAAYnxC,OAAQ5B,IACtC+yC,EAAY/yC,GAJDmB,KAIas2B,YAAYz3B,GAAGwb,OAEzC,OAAO,IAAIi3B,EAAgBM,EAAa5xC,KAAK6iC,WAE/CyO,EAAgBxsC,UAAUyb,YAAc,WACtC,MAAO,CAAC0tB,KAEVqD,EAAgBxsC,UAAU0b,SAAW,WACnC,OAAO8wB,GAETpvB,EAAgBE,iBAAiBpW,IAAM,WAAc,OAAO,oBAE5DvH,OAAOid,iBAAkB4vB,EAAiBpvB,GAEnCovB,GACPvB,IAEE4B,GAAa,WAKf,GAJA3xC,KAAK6xC,MAAQ,KACb7xC,KAAK8xC,UAAY,KACjB9xC,KAAK+xC,QAAU,KACf/xC,KAAKgyC,aAAe,KACK,IAArB18B,UAAU7U,OAAc,CAC1B,IAAI8H,EAAO+M,UAAU,GACjB28B,EAAS9L,GAAiBM,mBAC9BzmC,KAAK6xC,MAAQtpC,EACbvI,KAAK8xC,UAAYvpC,EAAKs7B,aACtB7jC,KAAK+xC,QAAUE,OACV,GAAyB,IAArB38B,UAAU7U,OAAc,CACjC,IAAIyxC,EAAS58B,UAAU,GACnB68B,EAAW78B,UAAU,GACzBtV,KAAK6xC,MAAQK,EACblyC,KAAK8xC,UAAYI,EAAOrO,aACxB7jC,KAAK+xC,QAAUI,IAGnBR,GAAW7sC,UAAUstC,wBAA0B,SAAkCC,GAC/E,GAAIryC,KAAK6xC,MAAM/b,UACb,OAAO91B,KAAKsyC,qBAEd,IAAIC,EAASvyC,KAAKwyC,2BAA2BH,GAC7C,OAAsB,IAAlBE,EAAO9xC,OACFT,KAAK8xC,UAAUxa,YAAYib,EAAO,IAEpCvyC,KAAK8xC,UAAUW,2BAA2BF,IAEnDZ,GAAW7sC,UAAUusC,YAAc,WACjC,OAAIrxC,KAAK6xC,iBAAiBa,GAAqB1yC,KAAK2yC,mBAAmB3yC,KAAK6xC,OACxE7xC,KAAK6xC,iBAAiBP,GAA0BtxC,KAAKoyC,wBAAwBpyC,KAAK6xC,OAC/E7xC,KAAK6xC,MAAMR,eAEpBM,GAAW7sC,UAAU6tC,mBAAqB,SAA6B9a,GACrE,OAAI73B,KAAK6xC,MAAM/b,UACN91B,KAAKsyC,qBAEVza,EAAK2Z,WACwBxxC,KAAK+xC,QAAQjL,aAAa,GAEhDjP,EAAK+a,gBAEL5yC,KAAK8xC,UAAUra,mBAGnBz3B,KAAK8xC,UAAUra,iBAAiB,CAACI,EAAK+a,gBAAiB/a,EAAKgb,iBAErElB,GAAW7sC,UAAUwtC,mBAAqB,WACxC,OAAOtyC,KAAK8xC,UAAUra,oBAExBka,GAAW7sC,UAAU0tC,2BAA6B,SAAqCH,GACnF,IAEEE,EAAS,IAAI/K,GACjBxnC,KAAKgyC,aAAe,IAAIvE,GACxB,IAAK,IAAI5uC,EAAI,EAAGA,EAAIwzC,EAAM5N,mBAAoB5lC,IAAK,CACjD,IAAIg5B,EAAOwa,EAAMvO,aAAajlC,GACF,IAAxBg5B,EAAKqY,iBANIlwC,KAON8yC,YAAYjb,EAAKkb,eAAe,IAP1B/yC,KAQN8yC,YAAYjb,EAAKkb,eAAelb,EAAKqY,eAAiB,KAE/D,IAAK,IAAI8C,EAAKhzC,KAAKgyC,aAAavF,WAAWhH,WAAYuN,EAAGtN,WAAY,CACpE,IAAIuN,EAAQD,EAAGtxC,OAEXwxC,EADUD,EAAMrF,WACEuF,MAbTnzC,KAcF+xC,QAAQjL,aAAaoM,IAC9BX,EAAOtyC,IAAIgzC,EAAMpF,UAGrB,OAAOrE,GAAiBtZ,kBAAkBqiB,IAE5CZ,GAAW7sC,UAAUguC,YAAc,SAAsBvrC,GACvD,IAAI44B,EAAUngC,KAAKgyC,aAAahmC,IAAIzE,GACpB,OAAZ44B,IACFA,EAAU,IAAIiT,GACdpzC,KAAKgyC,aAAaxF,IAAIjlC,EAAI44B,IAE5BA,EAAQgT,SAEVxB,GAAW7sC,UAAUyb,YAAc,WACjC,MAAO,IAEToxB,GAAW7sC,UAAU0b,SAAW,WAC9B,OAAOmxB,IAETA,GAAWN,YAAc,WACvB,GAAyB,IAArB/7B,UAAU7U,OAAc,CAC1B,IAAIyjC,EAAI5uB,UAAU,GAElB,OADU,IAAIq8B,GAAWzN,GACdmN,cACN,GAAyB,IAArB/7B,UAAU7U,OAAc,CACjC,IAAIujC,EAAM1uB,UAAU,GAChB28B,EAAS38B,UAAU,GAEvB,OADY,IAAIq8B,GAAW3N,EAAKiO,GACnBZ,gBAIjB,IAAI+B,GAAU,WACZpzC,KAAKmzC,MAAQ,MAWf,SAASE,MAET,SAASC,MAXTF,GAAQtuC,UAAUyb,YAAc,WAC9B,MAAO,IAET6yB,GAAQtuC,UAAU0b,SAAW,WAC3B,OAAO4yB,IAST,IAAIG,GAAgB,aAEpB,SAASC,MAET,SAASC,MAET,SAASC,MAET,IAAIC,GAAa,aAEbC,GAAqB,CAAEC,QAAS,CAAEtvC,cAAc,GAAOuvC,uBAAwB,CAAEvvC,cAAc,IAEnGovC,GAAW7uC,UAAUyb,YAAc,WACjC,MAAO,IAETozB,GAAW7uC,UAAU0b,SAAW,WAC9B,OAAOmzB,IAETA,GAAWI,MAAQ,SAAgB9xB,EAAG7e,GAEpC,IADA,IAAI6pB,EAAK,IAAIxkB,MAAMrF,GAAG6oB,KAAK,MAClBptB,EAAI,EAAGA,EAAIuE,EAAGvE,IACrBouB,EAAGpuB,GAAKojB,EAEV,OAAO+xB,OAAO/mB,IAEhB0mB,GAAWM,cAAgB,WACzB,GAAyB,IAArB3+B,UAAU7U,OAAc,CAC1B,IAAI3B,EAAIwW,UAAU,GACd4+B,EAAK,IAAIV,GACTW,EAAK,IAAId,GAAYa,GAEzB,OADAp1C,EAAEs1C,gBAAgBD,GACXD,EAAGjxB,WACL,GAAyB,IAArB3N,UAAU7U,OAAc,CAMjC,IALA,IAAI4zC,EAAM/+B,UAAU,GAChB8I,EAAQ9I,UAAU,GAClBg/B,EAAa,GAEbC,EAAmB,IAAIb,GADR,IAAIJ,GAAaK,GAAWM,cAAcI,KAEpDx1C,EAAI,EAAGA,EAAIuf,EAAOvf,IACzB,IACEy1C,GAAcC,EAAiBC,WAAab,GAAWE,QACvD,MAAOn4B,GACP,KAAIA,aAAa+3B,IAER,MAAM/3B,EADbmd,GAAOC,uBAIb,OAAOwb,IAGXX,GAAWh0C,MAAQ,SAAgBmZ,EAAG27B,GAKpC,IAJA,IAAIC,EAAeD,EAAUh0C,OACzBk0C,EAAY,IAAInN,GAChBoN,EAAY,GAAK97B,EACjB6D,EAAMi4B,EAAUrkC,QAAQkkC,GACrB93B,GAAO,GAAG,CACf,IAAIk4B,EAAQD,EAAUloB,UAAU,EAAG/P,GACnCg4B,EAAU10C,IAAI40C,GAEdl4B,GADAi4B,EAAYA,EAAUloB,UAAU/P,EAAM+3B,IACtBnkC,QAAQkkC,GAEtBG,EAAUn0C,OAAS,GAAKk0C,EAAU10C,IAAI20C,GAE1C,IADA,IAAIE,EAAM,IAAIrsC,MAAMksC,EAAU7yC,QAAQmqB,KAAK,MAClCptB,EAAI,EAAGA,EAAIi2C,EAAIr0C,OAAQ5B,IAC9Bi2C,EAAIj2C,GAAK81C,EAAU3oC,IAAInN,GAEzB,OAAOi2C,GAETnB,GAAW1wB,SAAW,WACpB,GAAyB,IAArB3N,UAAU7U,OAAc,CAC1B,IAAIY,EAAIiU,UAAU,GAClB,OAAOq+B,GAAWG,uBAAuBiB,OAAO1zC,KAGpDsyC,GAAWlf,OAAS,SAAiBrxB,GACnC,OAAOuwC,GAAWI,MAAM,IAAK3wC,IAE/BwwC,GAAmBC,QAAQ7nC,IAAM,WAAc,OAAOskB,GAAOM,YAAY,mBACzEgjB,GAAmBE,uBAAuB9nC,IAAM,WAAc,OAAO,IAAIunC,GAAc,QAEvF9uC,OAAOid,iBAAkBiyB,GAAYC,IAErC,IAAIoB,GAAsB,aAE1BA,GAAoBlwC,UAAUyb,YAAc,WAC1C,MAAO,IAETy0B,GAAoBlwC,UAAU0b,SAAW,WACvC,OAAOw0B,IAETA,GAAoBC,UAAY,SAAoBzkB,EAAKC,EAAQC,EAAMC,GAErE,IADA,IAAIukB,EAAS1yC,KAAKwZ,IAAIwU,EAAIX,eAAgBa,EAAKb,gBACtCslB,EAAM,EAAGA,EAAMD,EAAQC,IAC9BzkB,EAAKlO,YAAYmO,EAASwkB,EAAK3kB,EAAI7N,YAAY8N,EAAQ0kB,KAG3DH,GAAoBpL,OAAS,SAAiBgG,GAC5C,IAAIxsC,EAAIwsC,EAAI9tC,OACZ,OAAU,IAANsB,KACAA,GAAK,KACFwsC,EAAIjtB,YAAY,EAAG6M,GAAmBnN,KAAOutB,EAAIjtB,YAAYvf,EAAI,EAAGosB,GAAmBnN,IAAMutB,EAAIjtB,YAAY,EAAG6M,GAAmBlN,KAAOstB,EAAIjtB,YAAYvf,EAAI,EAAGosB,GAAmBlN,KAE7L0yB,GAAoBI,QAAU,SAAkBC,EAAKC,GACnD,IAAIC,EAAUF,EAAIvzC,OAElB,GAAIyzC,IADUD,EAAIxzC,OACS,OAAO,EAElC,IADA,IAAIqzC,EAAM3yC,KAAKwZ,IAAIq5B,EAAIxlB,eAAgBylB,EAAIzlB,gBAClChxB,EAAI,EAAGA,EAAI02C,EAAS12C,IAC3B,IAAK,IAAIwC,EAAI,EAAGA,EAAI8zC,EAAK9zC,IAAK,CAC5B,IAAI8E,EAAKkvC,EAAI1yB,YAAY9jB,EAAGwC,GACxB+E,EAAKkvC,EAAI3yB,YAAY9jB,EAAGwC,GAC5B,GAAIg0C,EAAI1yB,YAAY9jB,EAAGwC,KAAOi0C,EAAI3yB,YAAY9jB,EAAGwC,MAC7C+f,GAAOjB,MAAMha,KAAOib,GAAOjB,MAAM/Z,IACrC,OAAO,EAGX,OAAO,GAET4uC,GAAoBQ,OAAS,SAAiBC,EAAM7F,EAAK9tC,GACvD,IAAI4zC,EAASD,EAAKv0B,OAAOpf,EAAM8tC,EAAI/f,gBAC/BzsB,EAAIwsC,EAAI9tC,OAEZ,GADAkzC,GAAoB36B,KAAKu1B,EAAK,EAAG8F,EAAQ,EAAGtyC,GACxCA,EAAI,EACN,IAAK,IAAIvE,EAAIuE,EAAGvE,EAAIiD,EAAMjD,IAAOm2C,GAAoB36B,KAAKu1B,EAAKxsC,EAAI,EAAGsyC,EAAQ72C,EAAG,GAEnF,OAAO62C,GAETV,GAAoBrhC,QAAU,SAAkBi8B,GAG9C,IAFA,IAAIhF,EAAOgF,EAAI9tC,OAAS,EACpB+oC,EAAMroC,KAAK4d,MAAMwqB,EAAO,GACnB/rC,EAAI,EAAGA,GAAKgsC,EAAKhsC,IACxBm2C,GAAoB1V,KAAKsQ,EAAK/wC,EAAG+rC,EAAO/rC,IAG5Cm2C,GAAoB1V,KAAO,SAAesQ,EAAK/wC,EAAGoD,GAChD,GAAIpD,IAAMoD,EAAK,OAAO,KACtB,IAAK,IAAIkzC,EAAM,EAAGA,EAAMvF,EAAI/f,eAAgBslB,IAAO,CACjD,IAAIjzC,EAAM0tC,EAAIjtB,YAAY9jB,EAAGs2C,GAC7BvF,EAAIptB,YAAY3jB,EAAGs2C,EAAKvF,EAAIjtB,YAAY1gB,EAAGkzC,IAC3CvF,EAAIptB,YAAYvgB,EAAGkzC,EAAKjzC,KAG5B8yC,GAAoB36B,KAAO,SAAemW,EAAKC,EAAQC,EAAMC,EAASlwB,GACpE,IAAK,IAAI5B,EAAI,EAAGA,EAAI4B,EAAQ5B,IAC1Bm2C,GAAoBC,UAAUzkB,EAAKC,EAAS5xB,EAAG6xB,EAAMC,EAAU9xB,IAGnEm2C,GAAoB/xB,SAAW,WAC7B,GAAyB,IAArB3N,UAAU7U,OAAc,CAC1B,IAAIk1C,EAAKrgC,UAAU,GACfxT,EAAO6zC,EAAG7zC,OACd,GAAa,IAATA,EAAc,MAAO,KACzB,IAAIqzC,EAAMQ,EAAG9lB,eACTrH,EAAM,IAAIzC,GACdyC,EAAIvC,OAAO,KACX,IAAK,IAAIpnB,EAAI,EAAGA,EAAIiD,EAAMjD,IAAK,CACzBA,EAAI,GAAK2pB,EAAIvC,OAAO,KACxB,IAAK,IAAI5kB,EAAI,EAAGA,EAAI8zC,EAAK9zC,IACnBA,EAAI,GAAKmnB,EAAIvC,OAAO,KACxBuC,EAAIvC,OAAO0tB,GAAW1wB,SAAS0yB,EAAGhzB,YAAY9jB,EAAGwC,KAIrD,OADAmnB,EAAIvC,OAAO,KACJuC,EAAIvF,aAGf+xB,GAAoBY,gBAAkB,SAA0BH,EAAM7F,GACpE,IAAIxsC,EAAIwsC,EAAI9tC,OACZ,OAAU,IAANsB,EAAkBwsC,EAClBxsC,GAAK,EAAY4xC,GAAoBa,iBAAiBJ,EAAM7F,EAAK,GACtDA,EAAIjtB,YAAY,EAAG6M,GAAmBnN,KAAOutB,EAAIjtB,YAAYvf,EAAI,EAAGosB,GAAmBnN,IAAMutB,EAAIjtB,YAAY,EAAG6M,GAAmBlN,KAAOstB,EAAIjtB,YAAYvf,EAAI,EAAGosB,GAAmBlN,GAC5KstB,EAChBoF,GAAoBa,iBAAiBJ,EAAM7F,EAAKxsC,EAAI,IAE7D4xC,GAAoBa,iBAAmB,SAA2BJ,EAAM7F,EAAK9tC,GAC3E,IAAI4zC,EAASD,EAAKv0B,OAAOpf,EAAM8tC,EAAI/f,gBAC/BzsB,EAAIwsC,EAAI9tC,OACZkzC,GAAoB36B,KAAKu1B,EAAK,EAAG8F,EAAQ,EAAGtyC,GAC5C,IAAK,IAAIvE,EAAIuE,EAAGvE,EAAIiD,EAAMjD,IAAOm2C,GAAoB36B,KAAKu1B,EAAK,EAAG8F,EAAQ72C,EAAG,GAC7E,OAAO62C,GAGT,IAAIhD,GAAc,SAAU1C,GAC1B,SAAS0C,EAAY9+B,EAAQ2D,GAC3By4B,EAAYrvC,KAAKX,KAAMuX,GACvBvX,KAAKy2B,QAAU,KACfz2B,KAAK4mB,KAAKhT,GAGPo8B,IAAc0C,EAAWzxB,UAAY+uB,GAC1C0C,EAAW5tC,UAAYL,OAAOyc,OAAQ8uB,GAAeA,EAAYlrC,WACjE4tC,EAAW5tC,UAAUqc,YAAcuxB,EAEnC,IAAIxwB,EAAkB,CAAEE,iBAAkB,CAAE7d,cAAc,IA6M1D,OA5MAmuC,EAAW5tC,UAAUsgC,wBAA0B,WAC7C,OAAIplC,KAAK81B,UACA,IAAI7D,GAENjyB,KAAKy2B,QAAQ1G,eAAe,IAAIkC,KAEzCygB,EAAW5tC,UAAU8kC,OAAS,WAC5B,OAAO5pC,KAAKwxC,YAAcxxC,KAAK81C,YAEjCpD,EAAW5tC,UAAU8+B,aAAe,WAClC,OAAOoM,EAAY5M,sBAErBsP,EAAW5tC,UAAUmrC,eAAiB,WACpC,OAAOjwC,KAAKy2B,QAAQvG,qBAEtBwiB,EAAW5tC,UAAUq/B,YAAc,WAGjC,GAAyB,IAArB7uB,UAAU7U,OAAc,CAC1B,IAAI+J,EAAQ8K,UAAU,GAClBsL,EAAYtL,UAAU,GAC1B,IAAKtV,KAAKqwC,kBAAkB7lC,GAC1B,OAAO,EAET,IAAIurC,EAAkBvrC,EACtB,GAAIxK,KAAKy2B,QAAQ30B,SAAWi0C,EAAgBtf,QAAQ30B,OAClD,OAAO,EAET,IAAK,IAAIjD,EAAI,EAAGA,EAAImB,KAAKy2B,QAAQ30B,OAAQjD,IACvC,IAbSmB,KAaGilC,MAbHjlC,KAagBy2B,QAAQ9G,cAAc9wB,GAAIk3C,EAAgBtf,QAAQ9G,cAAc9wB,GAAI+hB,GAC3F,OAAO,EAGX,OAAO,EACA,OAAOovB,EAAYlrC,UAAUq/B,YAAY3O,MAAMx1B,KAAMsV,YAEhEo9B,EAAW5tC,UAAUogC,UAAY,WAG/B,IAFA,IAESrmC,EAAI,EAAGA,EAAI2D,KAAK4d,MAAMpgB,KAAKy2B,QAAQ30B,OAAS,GAAIjD,IAAK,CAC5D,IAAIoD,EAHOjC,KAGIy2B,QAAQ30B,OAAS,EAAIjD,EACpC,IAJWmB,KAICy2B,QAAQ9G,cAAc9wB,GAAGyb,OAJ1Bta,KAIwCy2B,QAAQ9G,cAAc1tB,IAIvE,OARSjC,KAKEy2B,QAAQ9G,cAAc9wB,GAAGikB,UAL3B9iB,KAK4Cy2B,QAAQ9G,cAAc1tB,IAAM,GAC/E+yC,GAAoBrhC,QANb3T,KAM4By2B,SAE9B,OAIbic,EAAW5tC,UAAU6qB,cAAgB,WACnC,OAAI3vB,KAAK81B,UAAoB,KACtB91B,KAAKy2B,QAAQ9G,cAAc,IAEpC+iB,EAAW5tC,UAAUyrC,qBAAuB,WAC1C,OAAIvwC,KAAKwxC,WACA/C,GAAUI,MAEZ,GAET6D,EAAW5tC,UAAU0sC,SAAW,WAC9B,OAAIxxC,KAAK81B,WAGF91B,KAAK+yC,eAAe,GAAGrwB,SAAS1iB,KAAK+yC,eAAe/yC,KAAKkwC,eAAiB,KAEnFwC,EAAW5tC,UAAU+tC,YAAc,WACjC,OAAI7yC,KAAK81B,UACA,KAEF91B,KAAKg2C,UAAUh2C,KAAKkwC,eAAiB,IAE9CwC,EAAW5tC,UAAU+qB,aAAe,WAClC,OAAO,GAET6iB,EAAW5tC,UAAU0/B,UAAY,WAC/B,OAAOlI,GAAamF,cAAczhC,KAAKy2B,UAEzCic,EAAW5tC,UAAUorC,aAAe,WAClC,OAAOlwC,KAAKy2B,QAAQ30B,QAEtB4wC,EAAW5tC,UAAU6O,QAAU,WAC7B,IAAIi8B,EAAM5vC,KAAKy2B,QAAQpc,OAGvB,OAFA26B,GAAoBrhC,QAAQi8B,GACd5vC,KAAK6jC,aAAalM,iBAAiBiY,IAGnD8C,EAAW5tC,UAAU4/B,mBAAqB,WAGxC,GAAyB,IAArBpvB,UAAU7U,OAAc,CAK1B,IAJA,IACIo3B,EADIviB,UAAU,GAEdzW,EAAI,EACJoD,EAAI,EACDpD,EAAImB,KAAKy2B,QAAQ30B,QAAUG,EAAI41B,EAAKpB,QAAQ30B,QAAQ,CACzD,IAAI+jC,EARK7lC,KAQey2B,QAAQ9G,cAAc9wB,GAAGikB,UAAU+U,EAAKpB,QAAQ9G,cAAc1tB,IACtF,GAAmB,IAAf4jC,EACF,OAAOA,EAEThnC,IACAoD,IAEF,OAAIpD,EAAImB,KAAKy2B,QAAQ30B,OACZ,EAELG,EAAI41B,EAAKpB,QAAQ30B,QACX,EAEH,EACF,GAAyB,IAArBwT,UAAU7U,OAAc,CACjC,IAEIw1C,EAFM3gC,UAAU,GAGpB,OAFWA,UAAU,GAETnV,QAAQH,KAAKy2B,QAASwf,EAAOxf,WAG7Cic,EAAW5tC,UAAU0wB,MAAQ,WAG3B,GAAI3Q,GAAavP,UAAU,GAAI4wB,IAE7B,IADA,IAAIxD,EAASptB,UAAU,GACdzW,EAAI,EAAGA,EAAImB,KAAKy2B,QAAQ30B,OAAQjD,IACvC6jC,EAAOA,OALE1iC,KAKYy2B,QAAQ9G,cAAc9wB,SAExC,GAAIgmB,GAAavP,UAAU,GAAIq6B,IAA2B,CAC/D,IAAIuB,EAAW57B,UAAU,GACzB,GAA4B,IAAxBtV,KAAKy2B,QAAQ30B,OAAgB,OAAO,KACxC,IAAK,IAAIy+B,EAAM,EAAGA,EAAMvgC,KAAKy2B,QAAQ30B,SACnCovC,EAASxO,OAXA1iC,KAWcy2B,QAAS8J,IAC5B2Q,EAASrB,UAF8BtP,KAIzC2Q,EAASpB,qBAAuB9vC,KAAKokC,uBACpC,GAAIvf,GAAavP,UAAU,GAAIo6B,IAAiB,CACtCp6B,UAAU,GAChBotB,OAAO1iC,WACX,GAAI6kB,GAAavP,UAAU,GAAImtB,IAA0B,CAC/CntB,UAAU,GAChBotB,OAAO1iC,QAGpB0yC,EAAW5tC,UAAUusC,YAAc,WACjC,OAAO,IAAIM,GAAW3xC,MAAMqxC,eAE9BqB,EAAW5tC,UAAUurC,kBAAoB,SAA4B7lC,GACnE,OAAOA,aAAiBkoC,GAE1BA,EAAW5tC,UAAUke,MAAQ,WAC3B,IAAIkzB,EAAKlG,EAAYlrC,UAAUke,MAAMriB,KAAKX,MAE1C,OADAk2C,EAAGzf,QAAUz2B,KAAKy2B,QAAQzT,QACnBkzB,GAETxD,EAAW5tC,UAAUiuC,eAAiB,SAAyB3vC,GAC7D,OAAOpD,KAAKy2B,QAAQ9G,cAAcvsB,IAEpCsvC,EAAW5tC,UAAU6wB,gBAAkB,WACrC,MAAO,cAET+c,EAAW5tC,UAAUuV,KAAO,WAC1B,OAAO,IAAIq4B,EAAW1yC,KAAKy2B,QAAQpc,OAAQra,KAAK6iC,WAElD6P,EAAW5tC,UAAUqxC,sBAAwB,WAC3C,OAAOn2C,KAAKy2B,SAEdic,EAAW5tC,UAAUgxB,QAAU,WAC7B,OAA+B,IAAxB91B,KAAKy2B,QAAQ30B,QAEtB4wC,EAAW5tC,UAAU8hB,KAAO,SAAehT,GAIzC,GAHe,OAAXA,IACFA,EAAS5T,KAAK6jC,aAAauS,+BAA+Bl1B,OAAO,KAE7C,IAAlBtN,EAAO9R,OACT,MAAM,IAAI+e,GAAyB,iDAAmDjN,EAAO9R,OAAS,yBAExG9B,KAAKy2B,QAAU7iB,GAEjB8+B,EAAW5tC,UAAUuxC,aAAe,SAAuB9uC,GAGzD,IAFA,IAES1I,EAAI,EAAGA,EAAImB,KAAKy2B,QAAQ30B,OAAQjD,IACvC,GAHWmB,KAGAy2B,QAAQ9G,cAAc9wB,GAAGyb,OAAO/S,GACzC,OAAO,EAGX,OAAO,GAETmrC,EAAW5tC,UAAU8tC,cAAgB,WACnC,OAAI5yC,KAAK81B,UACA,KAEF91B,KAAKg2C,UAAU,IAExBtD,EAAW5tC,UAAUkxC,UAAY,SAAoB5yC,GACnD,OAAOpD,KAAK6jC,aAAavM,YAAYt3B,KAAKy2B,QAAQ9G,cAAcvsB,KAElEsvC,EAAW5tC,UAAUyb,YAAc,WACjC,MAAO,CAAC0tB,KAEVyE,EAAW5tC,UAAU0b,SAAW,WAC9B,OAAOkyB,GAETxwB,EAAgBE,iBAAiBpW,IAAM,WAAc,OAAO,oBAE5DvH,OAAOid,iBAAkBgxB,EAAYxwB,GAE9BwwB,GACP/P,IAEE2T,GAAS,aAEbA,GAAOxxC,UAAUyb,YAAc,WAC7B,MAAO,IAET+1B,GAAOxxC,UAAU0b,SAAW,WAC1B,OAAO81B,IAGT,IAAIC,GAAS,SAAUvG,GACrB,SAASuG,EAAOtM,EAAa1yB,GAC3By4B,EAAYrvC,KAAKX,KAAMuX,GACvBvX,KAAKk2B,aAAe+T,GAAe,KACnCjqC,KAAK4mB,KAAK5mB,KAAKk2B,cAGZ8Z,IAAcuG,EAAMt1B,UAAY+uB,GACrCuG,EAAMzxC,UAAYL,OAAOyc,OAAQ8uB,GAAeA,EAAYlrC,WAC5DyxC,EAAMzxC,UAAUqc,YAAco1B,EAE9B,IAAIr0B,EAAkB,CAAEE,iBAAkB,CAAE7d,cAAc,IAmI1D,OAlIAgyC,EAAMzxC,UAAUsgC,wBAA0B,WACxC,GAAIplC,KAAK81B,UACP,OAAO,IAAI7D,GAEb,IAAIjC,EAAM,IAAIiC,GAEd,OADAjC,EAAIsD,gBAAgBtzB,KAAKk2B,aAAapG,KAAK,GAAI9vB,KAAKk2B,aAAajG,KAAK,IAC/DD,GAETumB,EAAMzxC,UAAU8+B,aAAe,WAC7B,OAAOoM,EAAY9M,iBAErBqT,EAAMzxC,UAAUmrC,eAAiB,WAC/B,OAAOjwC,KAAK81B,UAAY,GAAK,CAAC91B,KAAK2vB,kBAErC4mB,EAAMzxC,UAAUq/B,YAAc,WAC5B,GAAyB,IAArB7uB,UAAU7U,OAAc,CAC1B,IAAI+J,EAAQ8K,UAAU,GAClBsL,EAAYtL,UAAU,GAC1B,QAAKtV,KAAKqwC,kBAAkB7lC,QAGxBxK,KAAK81B,YAAatrB,EAAMsrB,YAGxB91B,KAAK81B,YAActrB,EAAMsrB,WAGtB91B,KAAKilC,MAAMz6B,EAAMmlB,gBAAiB3vB,KAAK2vB,gBAAiB/O,IACxD,OAAOovB,EAAYlrC,UAAUq/B,YAAY3O,MAAMx1B,KAAMsV,YAEhEihC,EAAMzxC,UAAUogC,UAAY,aAC5BqR,EAAMzxC,UAAU6qB,cAAgB,WAC9B,OAAoC,IAA7B3vB,KAAKk2B,aAAap0B,OAAe9B,KAAKk2B,aAAavG,cAAc,GAAK,MAE/E4mB,EAAMzxC,UAAUyrC,qBAAuB,WACrC,OAAO9B,GAAUI,OAEnB0H,EAAMzxC,UAAU+qB,aAAe,WAC7B,OAAO,GAET0mB,EAAMzxC,UAAUorC,aAAe,WAC7B,OAAOlwC,KAAK81B,UAAY,EAAI,GAE9BygB,EAAMzxC,UAAU6O,QAAU,WACxB,OAAO3T,KAAKqa,QAEdk8B,EAAMzxC,UAAUgrB,KAAO,WACrB,GAA6B,OAAzB9vB,KAAK2vB,gBACP,MAAM,IAAIhnB,MAAM,8BAElB,OAAO3I,KAAK2vB,gBAAgBjwB,GAE9B62C,EAAMzxC,UAAU4/B,mBAAqB,WACnC,GAAyB,IAArBpvB,UAAU7U,OAAc,CAC1B,IACIw1B,EADQ3gB,UAAU,GAEtB,OAAOtV,KAAK2vB,gBAAgB7M,UAAUmT,EAAQtG,iBACzC,GAAyB,IAArBra,UAAU7U,OAAc,CACjC,IAEIuJ,EAFUsL,UAAU,GAGxB,OAFWA,UAAU,GAETnV,QAAQH,KAAKk2B,aAAclsB,EAAMksB,gBAGjDqgB,EAAMzxC,UAAU0wB,MAAQ,WACtB,GAAI3Q,GAAavP,UAAU,GAAI4wB,IAAmB,CAChD,IAAIxD,EAASptB,UAAU,GACvB,GAAItV,KAAK81B,UACP,OAAO,KAET4M,EAAOA,OAAO1iC,KAAK2vB,sBACd,GAAI9K,GAAavP,UAAU,GAAIq6B,IAA2B,CAC/D,IAAIuB,EAAW57B,UAAU,GACzB,GAAItV,KAAK81B,UAAa,OAAO,KAC7Bob,EAASxO,OAAO1iC,KAAKk2B,aAAc,GAC/Bgb,EAASpB,qBAAuB9vC,KAAKokC,uBACpC,GAAIvf,GAAavP,UAAU,GAAIo6B,IAAiB,CACtCp6B,UAAU,GAChBotB,OAAO1iC,WACX,GAAI6kB,GAAavP,UAAU,GAAImtB,IAA0B,CAC/CntB,UAAU,GAChBotB,OAAO1iC,QAGpBu2C,EAAMzxC,UAAUusC,YAAc,WAC5B,OAAOrxC,KAAK6jC,aAAaxL,yBAAyB,OAEpDke,EAAMzxC,UAAUke,MAAQ,WACtB,IAAIrhB,EAAIquC,EAAYlrC,UAAUke,MAAMriB,KAAKX,MAEzC,OADA2B,EAAEu0B,aAAel2B,KAAKk2B,aAAalT,QAC5BrhB,GAET40C,EAAMzxC,UAAU6wB,gBAAkB,WAChC,MAAO,SAET4gB,EAAMzxC,UAAUuV,KAAO,WACrB,OAAO,IAAIk8B,EAAMv2C,KAAKk2B,aAAa7b,OAAQra,KAAK6iC,WAElD0T,EAAMzxC,UAAUqxC,sBAAwB,WACtC,OAAOn2C,KAAKk2B,cAEdqgB,EAAMzxC,UAAUmrB,KAAO,WACrB,GAA6B,OAAzBjwB,KAAK2vB,gBACP,MAAM,IAAIhnB,MAAM,8BAElB,OAAO3I,KAAK2vB,gBAAgBzwB,GAE9Bq3C,EAAMzxC,UAAUgxB,QAAU,WACxB,OAAoC,IAA7B91B,KAAKk2B,aAAap0B,QAE3By0C,EAAMzxC,UAAU8hB,KAAO,SAAeqjB,GAChB,OAAhBA,IACFA,EAAcjqC,KAAK6jC,aAAauS,+BAA+Bl1B,OAAO,KAExE2X,GAAOE,OAAOkR,EAAYnoC,QAAU,GACpC9B,KAAKk2B,aAAe+T,GAEtBsM,EAAMzxC,UAAUgxC,SAAW,WACzB,OAAO,GAETS,EAAMzxC,UAAUyb,YAAc,WAC5B,MAAO,CAAC+1B,KAEVC,EAAMzxC,UAAU0b,SAAW,WACzB,OAAO+1B,GAETr0B,EAAgBE,iBAAiBpW,IAAM,WAAc,OAAO,oBAE5DvH,OAAOid,iBAAkB60B,EAAOr0B,GAEzBq0B,GACP5T,IAEE6T,GAAY,aAEhBA,GAAU1xC,UAAUyb,YAAc,WAChC,MAAO,IAETi2B,GAAU1xC,UAAU0b,SAAW,WAC7B,OAAOg2B,IAGT,IAAIC,GAAW,SAAUzG,GACvB,SAASyG,EAASxe,EAAOC,EAAO3gB,GAU9B,GATAy4B,EAAYrvC,KAAKX,KAAMuX,GACvBvX,KAAKg3B,OAAS,KACdh3B,KAAKi3B,OAAS,KACA,OAAVgB,IACFA,EAAQj4B,KAAK6jC,aAAajM,oBAEd,OAAVM,IACFA,EAAQ,IAEN8X,EAAY/J,gBAAgB/N,GAC9B,MAAM,IAAIrX,GAAyB,wCAErC,GAAIoX,EAAMnC,WAAaka,EAAYjK,oBAAoB7N,GACrD,MAAM,IAAIrX,GAAyB,oCAErC7gB,KAAKg3B,OAASiB,EACdj4B,KAAKi3B,OAASiB,EAGX8X,IAAcyG,EAAQx1B,UAAY+uB,GACvCyG,EAAQ3xC,UAAYL,OAAOyc,OAAQ8uB,GAAeA,EAAYlrC,WAC9D2xC,EAAQ3xC,UAAUqc,YAAcs1B,EAEhC,IAAIv0B,EAAkB,CAAEE,iBAAkB,CAAE7d,cAAc,IAoR1D,OAnRAkyC,EAAQ3xC,UAAUsgC,wBAA0B,WAC1C,OAAOplC,KAAKg3B,OAAO+N,uBAErB0R,EAAQ3xC,UAAU8+B,aAAe,WAC/B,OAAOoM,EAAYzM,mBAErBkT,EAAQ3xC,UAAUmrC,eAAiB,WAGjC,GAAIjwC,KAAK81B,UACP,MAAO,GAKT,IAHA,IAAImU,EAAc,IAAIxhC,MAAMzI,KAAKkwC,gBAAgBjkB,KAAK,MAClDnjB,GAAK,EACL4tC,EAAmB12C,KAAKg3B,OAAOiZ,iBAC1BvwC,EAAI,EAAGA,EAAIg3C,EAAiBj2C,OAAQf,IAE3CuqC,IADAnhC,GACiB4tC,EAAiBh3C,GAEpC,IAAK,IAAIb,EAAI,EAAGA,EAAImB,KAAKi3B,OAAOx2B,OAAQ5B,IAEtC,IADA,IAAIsxC,EAbOnwC,KAamBi3B,OAAOp4B,GAAGoxC,iBAC/BhuC,EAAI,EAAGA,EAAIkuC,EAAiB1vC,OAAQwB,IAE3CgoC,IADAnhC,GACiBqnC,EAAiBluC,GAGtC,OAAOgoC,GAETwM,EAAQ3xC,UAAUytB,QAAU,WAC1B,IAEI6d,EAAO,EACXA,GAAQ5tC,KAAKiP,IAAI6qB,GAAa/hB,WAAWva,KAAKg3B,OAAOmf,0BACrD,IAAK,IAAIt3C,EAAI,EAAGA,EAAImB,KAAKi3B,OAAOx2B,OAAQ5B,IACtCuxC,GAAQ5tC,KAAKiP,IAAI6qB,GAAa/hB,WALnBva,KAKqCi3B,OAAOp4B,GAAGs3C,0BAE5D,OAAO/F,GAETqG,EAAQ3xC,UAAUi/B,YAAc,WAC9B,GAAkC,IAA9B/jC,KAAK22C,qBAA8B,OAAO,EAC9C,GAAoB,OAAhB32C,KAAKg3B,OAAmB,OAAO,EACnC,GAAmC,IAA/Bh3B,KAAKg3B,OAAOkZ,eAAwB,OAAO,EAG/C,IAFA,IAAIN,EAAM5vC,KAAKg3B,OAAOmf,wBAClBnmB,EAAMhwB,KAAK+kC,sBACNlmC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIa,EAAIkwC,EAAI9f,KAAKjxB,GACjB,GAAMa,IAAMswB,EAAI8C,WAAapzB,IAAMswB,EAAI4C,UAAc,OAAO,EAC5D,IAAI1zB,EAAI0wC,EAAI3f,KAAKpxB,GACjB,GAAMK,IAAM8wB,EAAI+C,WAAa7zB,IAAM8wB,EAAI6C,UAAc,OAAO,EAI9D,IAFA,IAAI+jB,EAAQhH,EAAI9f,KAAK,GACjB+mB,EAAQjH,EAAI3f,KAAK,GACZsQ,EAAM,EAAGA,GAAO,EAAGA,IAAO,CACjC,IAAIhb,EAAMqqB,EAAI9f,KAAKyQ,GACflX,EAAMumB,EAAI3f,KAAKsQ,GAGnB,GAFehb,IAAQqxB,KACRvtB,IAAQwtB,GACM,OAAO,EACpCD,EAAQrxB,EACRsxB,EAAQxtB,EAEV,OAAO,GAETotB,EAAQ3xC,UAAUq/B,YAAc,WAG9B,GAAyB,IAArB7uB,UAAU7U,OAAc,CAC1B,IAAI+J,EAAQ8K,UAAU,GAClBsL,EAAYtL,UAAU,GAC1B,IAAKtV,KAAKqwC,kBAAkB7lC,GAC1B,OAAO,EAET,IAAIssC,EAAetsC,EACfusC,EAAY/2C,KAAKg3B,OACjBggB,EAAoBF,EAAa9f,OACrC,IAAK+f,EAAU5S,YAAY6S,EAAmBp2B,GAC5C,OAAO,EAET,GAAI5gB,KAAKi3B,OAAOx2B,SAAWq2C,EAAa7f,OAAOx2B,OAC7C,OAAO,EAET,IAAK,IAAI5B,EAAI,EAAGA,EAAImB,KAAKi3B,OAAOx2B,OAAQ5B,IACtC,IAlBSmB,KAkBGi3B,OAAOp4B,GAAGslC,YAAY2S,EAAa7f,OAAOp4B,GAAI+hB,GACxD,OAAO,EAGX,OAAO,EACA,OAAOovB,EAAYlrC,UAAUq/B,YAAY3O,MAAMx1B,KAAMsV,YAEhEmhC,EAAQ3xC,UAAUogC,UAAY,WAG5B,GAAyB,IAArB5vB,UAAU7U,OAAc,CAC1BT,KAAKklC,UAAUllC,KAAKg3B,QAAQ,GAC5B,IAAK,IAAIn4B,EAAI,EAAGA,EAAImB,KAAKi3B,OAAOx2B,OAAQ5B,IAJ7BmB,KAKFklC,UALEllC,KAKei3B,OAAOp4B,IAAI,GAErC0vC,GAAOxsC,KAAK/B,KAAKi3B,aACZ,GAAyB,IAArB3hB,UAAU7U,OAAc,CACjC,IAAIgJ,EAAO6L,UAAU,GACjB2hC,EAAY3hC,UAAU,GAC1B,GAAI7L,EAAKqsB,UACP,OAAO,KAET,IAAIohB,EAAoB,IAAIzuC,MAAMgB,EAAKwmC,iBAAiBxvC,OAAS,GAAGwrB,KAAK,MACzEqE,GAAOC,UAAU9mB,EAAKwmC,iBAAkB,EAAGiH,EAAmB,EAAGA,EAAkBz2C,QACnF,IAAIirC,EAAgBlC,GAAiBkC,cAAcjiC,EAAKwmC,kBACxDzG,GAAiBQ,OAAOkN,EAAmBxL,GAC3Cpb,GAAOC,UAAU2mB,EAAmB,EAAGztC,EAAKwmC,iBAAkB,EAAGiH,EAAkBz2C,QACnFgJ,EAAKwmC,iBAAiBiH,EAAkBz2C,QAAUy2C,EAAkB,GAChE5a,GAAasF,MAAMn4B,EAAKwmC,oBAAsBgH,GAChDzN,GAAiB71B,QAAQlK,EAAKwmC,oBAIpCwG,EAAQ3xC,UAAU6qB,cAAgB,WAChC,OAAO3vB,KAAKg3B,OAAOrH,iBAErB8mB,EAAQ3xC,UAAU6xC,mBAAqB,WACrC,OAAO32C,KAAKi3B,OAAOx2B,QAErBg2C,EAAQ3xC,UAAUyrC,qBAAuB,WACvC,OAAO,GAETkG,EAAQ3xC,UAAU+qB,aAAe,WAC/B,OAAO,GAET4mB,EAAQ3xC,UAAU0/B,UAAY,WAC5B,IAEItnB,EAAM,EACVA,GAAOld,KAAKg3B,OAAOwN,YACnB,IAAK,IAAI3lC,EAAI,EAAGA,EAAImB,KAAKi3B,OAAOx2B,OAAQ5B,IACtCqe,GALWld,KAKGi3B,OAAOp4B,GAAG2lC,YAE1B,OAAOtnB,GAETu5B,EAAQ3xC,UAAUorC,aAAe,WAI/B,IAHA,IAEIO,EAAYzwC,KAAKg3B,OAAOkZ,eACnBrxC,EAAI,EAAGA,EAAImB,KAAKi3B,OAAOx2B,OAAQ5B,IACtC4xC,GAJWzwC,KAISi3B,OAAOp4B,GAAGqxC,eAEhC,OAAOO,GAETgG,EAAQ3xC,UAAU6O,QAAU,WAC1B,IAEItK,EAAOrJ,KAAKqa,OAChBhR,EAAK2tB,OAASh3B,KAAKg3B,OAAO3c,OAAO1G,UACjCtK,EAAK4tB,OAAS,IAAIxuB,MAAMzI,KAAKi3B,OAAOx2B,QAAQwrB,KAAK,MACjD,IAAK,IAAIptB,EAAI,EAAGA,EAAImB,KAAKi3B,OAAOx2B,OAAQ5B,IACtCwK,EAAK4tB,OAAOp4B,GANDmB,KAMai3B,OAAOp4B,GAAGwb,OAAO1G,UAE3C,OAAOtK,GAETotC,EAAQ3xC,UAAUqyC,WAAa,WAC7B,OAAOn3C,KAAKo3C,kBAAkBD,cAEhCV,EAAQ3xC,UAAU4/B,mBAAqB,WAGrC,GAAyB,IAArBpvB,UAAU7U,OAAc,CAC1B,IAAIsiB,EAAIzN,UAAU,GACdyhC,EAAY/2C,KAAKg3B,OACjBqgB,EAAat0B,EAAEiU,OACnB,OAAO+f,EAAUrS,mBAAmB2S,GAC/B,GAAyB,IAArB/hC,UAAU7U,OAAc,CACjC,IAAIowC,EAAMv7B,UAAU,GAChBsD,EAAOtD,UAAU,GACjBjM,EAAOwnC,EACPyG,EAAct3C,KAAKg3B,OACnBugB,EAAeluC,EAAK2tB,OACpBwgB,EAAYF,EAAY5S,mBAAmB6S,EAAc3+B,GAC7D,GAAkB,IAAd4+B,EAAmB,OAAOA,EAI9B,IAHA,IAAIC,EAASz3C,KAAK22C,qBACde,EAASruC,EAAKstC,qBACd93C,EAAI,EACDA,EAAI44C,GAAU54C,EAAI64C,GAAQ,CAC/B,IAAIC,EAnBK33C,KAmBa43C,iBAAiB/4C,GACnCg5C,EAAYxuC,EAAKuuC,iBAAiB/4C,GAClCoyC,EAAW0G,EAASjT,mBAAmBmT,EAAWj/B,GACtD,GAAiB,IAAbq4B,EAAkB,OAAOA,EAC7BpyC,IAEF,OAAIA,EAAI44C,EAAiB,EACrB54C,EAAI64C,GAAkB,EACnB,IAGXjB,EAAQ3xC,UAAU0wB,MAAQ,SAAgBkN,GAGxC,GAAI7d,GAAa6d,EAAQwD,IAAmB,CAC1ClmC,KAAKg3B,OAAOxB,MAAMkN,GAClB,IAAK,IAAInC,EAAM,EAAGA,EAAMvgC,KAAKi3B,OAAOx2B,OAAQ8/B,IAJjCvgC,KAKFi3B,OAAOsJ,GAAK/K,MAAMkN,QAEtB,GAAI7d,GAAa6d,EAAQiN,IAA2B,CAEzD,GADA3vC,KAAKg3B,OAAOxB,MAAMkN,IACbA,EAAOmN,SACV,IAAK,IAAI5G,EAAM,EAAGA,EAAMjpC,KAAKi3B,OAAOx2B,SAV3BT,KAWAi3B,OAAOgS,GAAKzT,MAAMkN,IACrBA,EAAOmN,UAF+B5G,KAK1CvG,EAAOoN,qBAAuB9vC,KAAKokC,uBAClC,GAAIvf,GAAa6d,EAAQgN,IAC9BhN,EAAOA,OAAO1iC,WACT,GAAI6kB,GAAa6d,EAAQD,IAA0B,CACxDC,EAAOA,OAAO1iC,MACdA,KAAKg3B,OAAOxB,MAAMkN,GAClB,IAAK,IAAI7jC,EAAI,EAAGA,EAAImB,KAAKi3B,OAAOx2B,OAAQ5B,IArB7BmB,KAsBFi3B,OAAOp4B,GAAG22B,MAAMkN,KAI7B+T,EAAQ3xC,UAAUusC,YAAc,WAG9B,GAAIrxC,KAAK81B,UACP,OAAO91B,KAAK6jC,aAAa/L,wBAE3B,IAAIznB,EAAQ,IAAI5H,MAAMzI,KAAKi3B,OAAOx2B,OAAS,GAAGwrB,KAAK,MACnD5b,EAAM,GAAKrQ,KAAKg3B,OAChB,IAAK,IAAIn4B,EAAI,EAAGA,EAAImB,KAAKi3B,OAAOx2B,OAAQ5B,IACtCwR,EAAMxR,EAAI,GARCmB,KAQWi3B,OAAOp4B,GAE/B,OAAIwR,EAAM5P,QAAU,EAAYT,KAAK6jC,aAAajM,iBAAiBvnB,EAAM,GAAG8lC,yBACrEn2C,KAAK6jC,aAAa/L,sBAAsBznB,IAEjDomC,EAAQ3xC,UAAUke,MAAQ,WACxB,IAEI3Z,EAAO2mC,EAAYlrC,UAAUke,MAAMriB,KAAKX,MAC5CqJ,EAAK2tB,OAASh3B,KAAKg3B,OAAOhU,QAC1B3Z,EAAK4tB,OAAS,IAAIxuB,MAAMzI,KAAKi3B,OAAOx2B,QAAQwrB,KAAK,MACjD,IAAK,IAAIptB,EAAI,EAAGA,EAAImB,KAAKi3B,OAAOx2B,OAAQ5B,IACtCwK,EAAK4tB,OAAOp4B,GANDmB,KAMai3B,OAAOp4B,GAAGmkB,QAEpC,OAAO3Z,GAETotC,EAAQ3xC,UAAU6wB,gBAAkB,WAClC,MAAO,WAET8gB,EAAQ3xC,UAAUuV,KAAO,WAKvB,IAJA,IAEI4d,EAAQj4B,KAAKg3B,OAAO3c,OACpB6d,EAAQ,IAAIzvB,MAAMzI,KAAKi3B,OAAOx2B,QAAQwrB,KAAK,MACtCptB,EAAI,EAAGA,EAAIq5B,EAAMz3B,OAAQ5B,IAChCq5B,EAAMr5B,GALKmB,KAKOi3B,OAAOp4B,GAAGwb,OAE9B,OAAO,IAAIo8B,EAAQxe,EAAOC,EAAOl4B,KAAK6iC,WAExC4T,EAAQ3xC,UAAUsyC,gBAAkB,WAClC,OAAOp3C,KAAKg3B,QAEdyf,EAAQ3xC,UAAUgxB,QAAU,WAC1B,OAAO91B,KAAKg3B,OAAOlB,WAErB2gB,EAAQ3xC,UAAU8yC,iBAAmB,SAA2Bx0C,GAC9D,OAAOpD,KAAKi3B,OAAO7zB,IAErBqzC,EAAQ3xC,UAAUyb,YAAc,WAC9B,MAAO,CAACi2B,KAEVC,EAAQ3xC,UAAU0b,SAAW,WAC3B,OAAOi2B,GAETv0B,EAAgBE,iBAAiBpW,IAAM,WAAc,OAAQ,oBAE7DvH,OAAOid,iBAAkB+0B,EAASv0B,GAE3Bu0B,GACP9T,IAEEmV,GAAc,SAAUvG,GAC1B,SAASuG,IACPvG,EAAsB/b,MAAMx1B,KAAMsV,WAG/Bi8B,IAAwBuG,EAAW72B,UAAYswB,GACpDuG,EAAWhzC,UAAYL,OAAOyc,OAAQqwB,GAAyBA,EAAsBzsC,WACrFgzC,EAAWhzC,UAAUqc,YAAc22B,EAEnC,IAAI51B,EAAkB,CAAEE,iBAAkB,CAAE7d,cAAc,IAuD1D,OArDAuzC,EAAWhzC,UAAU8+B,aAAe,WAClC,OAAOjB,GAASQ,sBAElB2U,EAAWhzC,UAAUizC,QAAU,WAC7B,OAAO,GAETD,EAAWhzC,UAAUq/B,YAAc,WACjC,GAAyB,IAArB7uB,UAAU7U,OAAc,CAC1B,IAAI+J,EAAQ8K,UAAU,GAClBsL,EAAYtL,UAAU,GAC1B,QAAKtV,KAAKqwC,kBAAkB7lC,IAGrB+mC,EAAsBzsC,UAAUq/B,YAAYxjC,KAAKX,KAAMwK,EAAOoW,GAC9D,OAAO2wB,EAAsBzsC,UAAUq/B,YAAY3O,MAAMx1B,KAAMsV,YAE1EwiC,EAAWhzC,UAAU6qB,cAAgB,WACnC,GAAyB,IAArBra,UAAU7U,OAAc,CAC1B,IAAI2C,EAAIkS,UAAU,GAClB,OAAOtV,KAAKs2B,YAAYlzB,GAAGusB,gBACpB,OAAO4hB,EAAsBzsC,UAAU6qB,cAAc6F,MAAMx1B,KAAMsV,YAE5EwiC,EAAWhzC,UAAUyrC,qBAAuB,WAC1C,OAAO9B,GAAUI,OAEnBiJ,EAAWhzC,UAAU+qB,aAAe,WAClC,OAAO,GAETioB,EAAWhzC,UAAUusC,YAAc,WACjC,OAAOrxC,KAAK6jC,aAAaxL,yBAAyB,OAEpDyf,EAAWhzC,UAAU6wB,gBAAkB,WACrC,MAAO,cAETmiB,EAAWhzC,UAAUuV,KAAO,WAI1B,IAHA,IAEIzG,EAAS,IAAInL,MAAMzI,KAAKs2B,YAAY71B,QAAQwrB,KAAK,MAC5CptB,EAAI,EAAGA,EAAI+U,EAAOnT,OAAQ5B,IACjC+U,EAAO/U,GAJImB,KAIQs2B,YAAYz3B,GAAGwb,OAEpC,OAAO,IAAIy9B,EAAWlkC,EAAQ5T,KAAK6iC,WAErCiV,EAAWhzC,UAAUyb,YAAc,WACjC,MAAO,CAAC+1B,KAEVwB,EAAWhzC,UAAU0b,SAAW,WAC9B,OAAOs3B,GAET51B,EAAgBE,iBAAiBpW,IAAM,WAAc,OAAQ,oBAE7DvH,OAAOid,iBAAkBo2B,EAAY51B,GAE9B41B,GACP/H,IAEEiI,GAAc,SAAUC,GAC1B,SAASD,EAAYpkC,EAAQ2D,GACvB3D,aAAkBmO,IAAcxK,aAAmBwd,KACrDnhB,EAAS2D,EAAQ6+B,+BAA+Bl1B,OAAOtN,IAEzDqkC,EAAct3C,KAAKX,KAAM4T,EAAQ2D,GACjCvX,KAAKk4C,uBAGFD,IAAgBD,EAAW/2B,UAAYg3B,GAC5CD,EAAWlzC,UAAYL,OAAOyc,OAAQ+2B,GAAiBA,EAAcnzC,WACrEkzC,EAAWlzC,UAAUqc,YAAc62B,EAEnC,IAAI91B,EAAkB,CAAEi2B,mBAAoB,CAAE5zC,cAAc,GAAO6d,iBAAkB,CAAE7d,cAAc,IA4CrG,OA3CAyzC,EAAWlzC,UAAU8+B,aAAe,WAClC,OAAOjB,GAASU,sBAElB2U,EAAWlzC,UAAUyrC,qBAAuB,WAC1C,OAAO9B,GAAUI,OAEnBmJ,EAAWlzC,UAAU0sC,SAAW,WAC9B,QAAIxxC,KAAK81B,WAGFmiB,EAAcnzC,UAAU0sC,SAAS7wC,KAAKX,OAE/Cg4C,EAAWlzC,UAAU6O,QAAU,WAC7B,IAAIi8B,EAAM5vC,KAAKy2B,QAAQpc,OAGvB,OAFA26B,GAAoBrhC,QAAQi8B,GAClB5vC,KAAK6jC,aAAajM,iBAAiBgY,IAG/CoI,EAAWlzC,UAAUozC,qBAAuB,WAC1C,IAAKl4C,KAAK81B,YAAcmiB,EAAcnzC,UAAU0sC,SAAS7wC,KAAKX,MAC5D,MAAM,IAAI6gB,GAAyB,wDAErC,GAAI7gB,KAAKm2C,wBAAwBr0C,QAAU,GAAK9B,KAAKm2C,wBAAwBr0C,OAASk2C,EAAWG,mBAC/F,MAAM,IAAIt3B,GAAyB,iDAAmD7gB,KAAKm2C,wBAAwBr0C,OAAS,0BAGhIk2C,EAAWlzC,UAAU6wB,gBAAkB,WACrC,MAAO,cAETqiB,EAAWlzC,UAAUuV,KAAO,WAC1B,OAAO,IAAI29B,EAAWh4C,KAAKy2B,QAAQpc,OAAQra,KAAK6iC,WAElDmV,EAAWlzC,UAAUyb,YAAc,WACjC,MAAO,IAETy3B,EAAWlzC,UAAU0b,SAAW,WAC9B,OAAOw3B,GAET91B,EAAgBi2B,mBAAmBnsC,IAAM,WAAc,OAAO,GAC9DkW,EAAgBE,iBAAiBpW,IAAM,WAAc,OAAQ,oBAE7DvH,OAAOid,iBAAkBs2B,EAAY91B,GAE9B81B,GACPtF,IAEE0F,GAAgB,SAAU7G,GAC5B,SAAS6G,IACP7G,EAAsB/b,MAAMx1B,KAAMsV,WAG/Bi8B,IAAwB6G,EAAan3B,UAAYswB,GACtD6G,EAAatzC,UAAYL,OAAOyc,OAAQqwB,GAAyBA,EAAsBzsC,WACvFszC,EAAatzC,UAAUqc,YAAci3B,EAErC,IAAIl2B,EAAkB,CAAEE,iBAAkB,CAAE7d,cAAc,IAsE1D,OApEA6zC,EAAatzC,UAAU8+B,aAAe,WACpC,OAAOjB,GAASa,wBAElB4U,EAAatzC,UAAUq/B,YAAc,WACnC,GAAyB,IAArB7uB,UAAU7U,OAAc,CAC1B,IAAI+J,EAAQ8K,UAAU,GAClBsL,EAAYtL,UAAU,GAC1B,QAAKtV,KAAKqwC,kBAAkB7lC,IAGrB+mC,EAAsBzsC,UAAUq/B,YAAYxjC,KAAKX,KAAMwK,EAAOoW,GAC9D,OAAO2wB,EAAsBzsC,UAAUq/B,YAAY3O,MAAMx1B,KAAMsV,YAE1E8iC,EAAatzC,UAAUyrC,qBAAuB,WAC5C,OAAO,GAET6H,EAAatzC,UAAU+qB,aAAe,WACpC,OAAO,GAETuoB,EAAatzC,UAAU6O,QAAU,WAK/B,IAJA,IAEIvQ,EAAIpD,KAAKs2B,YAAY71B,OACrBiwC,EAAW,IAAIjoC,MAAMrF,GAAG6oB,KAAK,MACxBptB,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAC3C6xC,EAAS7xC,GALEmB,KAKUs2B,YAAYz3B,GAAG8U,UAEtC,OAAO3T,KAAK6jC,aAAa1L,mBAAmBuY,IAE9C0H,EAAatzC,UAAUusC,YAAc,WAGnC,GAAIrxC,KAAK81B,UACP,OAAO91B,KAAK6jC,aAAa/L,wBAG3B,IADA,IAAIugB,EAAW,IAAI7Q,GACV3oC,EAAI,EAAGA,EAAImB,KAAKs2B,YAAY71B,OAAQ5B,IAG3C,IAFA,IACIwR,EAROrQ,KAOUs2B,YAAYz3B,GACbwyC,cACXpvC,EAAI,EAAGA,EAAIoO,EAAMo0B,mBAAoBxiC,IAC5Co2C,EAASp4C,IAAIoQ,EAAMyzB,aAAa7hC,IAGpC,IAAIq2C,EAAgB,IAAI7vC,MAAM4vC,EAASv2C,QAAQmqB,KAAK,MACpD,OAAOjsB,KAAK6jC,aAAa/L,sBAAsBugB,EAASlR,QAAQmR,KAElEF,EAAatzC,UAAU6wB,gBAAkB,WACvC,MAAO,gBAETyiB,EAAatzC,UAAUuV,KAAO,WAI5B,IAHA,IAEI+d,EAAW,IAAI3vB,MAAMzI,KAAKs2B,YAAY71B,QAAQwrB,KAAK,MAC9CptB,EAAI,EAAGA,EAAIu5B,EAAS33B,OAAQ5B,IACnCu5B,EAASv5B,GAJEmB,KAIUs2B,YAAYz3B,GAAGwb,OAEtC,OAAO,IAAI+9B,EAAahgB,EAAUp4B,KAAK6iC,WAEzCuV,EAAatzC,UAAUyb,YAAc,WACnC,MAAO,CAACi2B,KAEV4B,EAAatzC,UAAU0b,SAAW,WAChC,OAAO43B,GAETl2B,EAAgBE,iBAAiBpW,IAAM,WAAc,OAAQ,mBAE7DvH,OAAOid,iBAAkB02B,EAAcl2B,GAEhCk2B,GACPrI,IAEEwI,GAAiB,SAAyBhhC,GAC5CvX,KAAK6iC,SAAWtrB,GAAW,KAC3BvX,KAAKw4C,mBAAoB,GAGvBC,GAAqB,CAAEC,sBAAuB,CAAEn0C,cAAc,GAAOo0C,oBAAqB,CAAEp0C,cAAc,GAAOq0C,4BAA6B,CAAEr0C,cAAc,IAClKg0C,GAAezzC,UAAU+zC,gBAAkB,SAA0BC,GACnE94C,KAAKw4C,kBAAoBM,GAE3BP,GAAezzC,UAAUi0C,KAAO,SAAe7jB,EAAU9jB,GACvD,GAAiB,OAAb8jB,EAAqB,OAAO,KAChC,IAAI7X,EAASrd,KAAKg5C,aAAa9jB,EAAU9jB,GAIzC,OAHIpR,KAAKw4C,mBACPn7B,EAAOkoB,YAAYrQ,EAAS0P,eAEvBvnB,GAETk7B,GAAezzC,UAAUk0C,aAAe,SAAuB9jB,EAAU9jB,GAEvE,OADsB,OAAlBpR,KAAK6iC,WAAqB7iC,KAAK6iC,SAAW3N,EAAS2O,cACnD3O,aAAoB6a,GACf/vC,KAAKi5C,uBAAuB/jB,EAAU9jB,GAE3C8jB,aAAoBuhB,GACfz2C,KAAKk5C,YAAYhkB,EAAU9jB,GAEhC8jB,aAAoBqhB,GACfnlC,EAAU2nC,KAAK7jB,EAAUl1B,KAAK6iC,UAEnC3N,aAAoBwd,GACfthC,EAAU2nC,KAAK7jB,EAAUl1B,KAAK6iC,WAEvChK,GAAOC,qBAAqB,+BAAiC5D,EAAS1U,WAAW24B,WAC1E,OAETZ,GAAezzC,UAAUm0C,uBAAyB,SAAiC5hB,EAAYjmB,GAK7F,IAJE,IAEEgoC,EAAoBhoC,EAAU2nC,KAAK1hB,EAAYr3B,KAAK6iC,UACpDmD,EAAa,IAAIwB,GACZ3oC,EAAI,EAAGA,EAAIu6C,EAAkB3U,mBAAoB5lC,IAAK,CAC7D,IAAIq2B,EALSl1B,KAKS+4C,KAAKK,EAAkBtV,aAAajlC,GAAIuS,GAC7C,OAAb8jB,GAAqBA,EAASY,WAGlCkQ,EAAW/lC,IAAIi1B,GAEjB,OAAIkkB,EAAkB54B,aAAes3B,GAC5B93C,KAAK6iC,SAASpL,iBAAiBuO,EAAWmB,QAAQ,KAEvDiS,EAAkB54B,aAAe8wB,GAC5BtxC,KAAK6iC,SAAS/K,sBAAsBkO,EAAWmB,QAAQ,KAE5DiS,EAAkB54B,aAAe43B,GAC5Bp4C,KAAK6iC,SAAS1K,mBAAmB6N,EAAWmB,QAAQ,KAEtDnnC,KAAK6iC,SAASxK,yBAAyB2N,EAAWmB,QAAQ,MAEnEoR,GAAezzC,UAAUo0C,YAAc,SAAsBpiB,EAAS1lB,GAClE,IAEEioC,EAAajoC,EAAU2nC,KAAKjiB,EAAS92B,KAAK6iC,UAE9C,GADmB,OAAfwW,IAAuBA,EAAar5C,KAAK6iC,SAAS7K,cAAc,OAChEqhB,EAAWvjB,UACb,OAAOujB,EAET,IAAIphB,EAAQj4B,KAAK+4C,KAAKM,EAAWjC,kBAAmBhmC,GACpD,GAAc,OAAV6mB,GAAkBA,EAAMnC,UAC1B,OAAO91B,KAAK6iC,SAAS7K,gBAGvB,IADA,IAAIE,EAAQ,IAAIsP,GACP3oC,EAAI,EAAGA,EAAIw6C,EAAW1C,qBAAsB93C,IAAK,CACxD,IAAIy6C,EAbSt5C,KAaK+4C,KAAKM,EAAWzB,iBAAiB/4C,GAAIuS,GAC1C,OAATkoC,GAAiBA,EAAKxjB,WAG1BoC,EAAMj4B,IAAIq5C,GAEZ,OAAOt5C,KAAK6iC,SAAS7K,cAAcC,EAAOC,EAAMiP,QAAQ,MAE1DoR,GAAezzC,UAAUyb,YAAc,WACrC,MAAO,IAETg4B,GAAezzC,UAAU0b,SAAW,WAClC,OAAO+3B,IAETA,GAAegB,wBAA0B,aACzCd,GAAmBC,sBAAsB1sC,IAAM,WAAc,OAAO0sC,IACpED,GAAmBE,oBAAoB3sC,IAAM,WAAc,OAAO2sC,IAClEF,GAAmBG,4BAA4B5sC,IAAM,WAAc,OAAO4sC,IAE1En0C,OAAOid,iBAAkB62B,GAAgBE,IAEzC,IAAIC,GAAwB,aAE5BA,GAAsB5zC,UAAUi0C,KAAO,SAAe7jB,EAAU3d,GAC9D,OAAO2d,GAETwjB,GAAsB5zC,UAAUyb,YAAc,WAC5C,MAAO,CAACg4B,GAAegB,0BAEzBb,GAAsB5zC,UAAU0b,SAAW,WACzC,OAAOk4B,IAGT,IAAIC,GAAsB,aAE1BA,GAAoB7zC,UAAUi0C,KAAO,SAAe7jB,EAAU3d,GAC5D,IAAIggB,EAASv3B,KAAKw5C,gBAAgBtkB,EAAS+a,iBAAkB/a,GAC7D,OAAe,OAAXqC,EAA0BrC,EAC1BA,aAAoB8iB,GACfzgC,EAAQqgB,iBAAiBL,GAE9BrC,aAAoBwd,GACfn7B,EAAQogB,iBAAiBJ,GAE9BrC,aAAoBqhB,GAClBhf,EAAO92B,OAAS,EACX8W,EAAQ+f,YAAYC,EAAO,IAE3BhgB,EAAQ+f,cAGZpC,GAETyjB,GAAoB7zC,UAAUyb,YAAc,WAC1C,MAAO,CAACg4B,GAAegB,0BAEzBZ,GAAoB7zC,UAAU0b,SAAW,WACvC,OAAOm4B,IAGT,IAAIC,GAA8B,aAElCA,GAA4B9zC,UAAUi0C,KAAO,SAAe7jB,EAAU3d,GACpE,OAAI2d,aAAoB8iB,GACfzgC,EAAQqgB,iBAAiB53B,KAAK+4C,KAAK7jB,EAASihB,wBAAyBjhB,IAE1EA,aAAoBwd,GACfn7B,EAAQogB,iBAAiB33B,KAAK+4C,KAAK7jB,EAASihB,wBAAyBjhB,IAE1EA,aAAoBqhB,GACfh/B,EAAQ+f,YAAYt3B,KAAK+4C,KAAK7jB,EAASihB,wBAAyBjhB,IAElEA,GAET0jB,GAA4B9zC,UAAUyb,YAAc,WAClD,MAAO,CAACg4B,GAAegB,0BAEzBX,GAA4B9zC,UAAU0b,SAAW,WAC/C,OAAOo4B,IAGT,IAAIa,GAA0B,WAK5B,GAFAz5C,KAAK05C,WAAa,EAClB15C,KAAKk2B,aAAe,KACK,IAArB5gB,UAAU7U,QACZ,GAAI6U,UAAU,aAAc7M,MAC1BzI,KAAKk2B,aAAe5gB,UAAU,GAC9BtV,KAAK05C,WAAa,OACb,GAAI10C,OAAOgb,UAAU1K,UAAU,IAAK,CACzC,IAAIxT,EAAOwT,UAAU,GACrBtV,KAAKk2B,aAAe,IAAIztB,MAAM3G,GAAMmqB,KAAK,MACzC,IAAK,IAAIptB,EAAI,EAAGA,EAAIiD,EAAMjD,IAXjBmB,KAYAk2B,aAAar3B,GAAK,IAAIkjB,QAE1B,GAAI8C,GAAavP,UAAU,GAAIka,IAAqB,CACzD,IAAImqB,EAAWrkC,UAAU,GACzB,GAAiB,OAAbqkC,EAEF,OADA35C,KAAKk2B,aAAe,IAAIztB,MAAM,GAAGwjB,KAAK,MAC/B,KAETjsB,KAAK05C,WAAaC,EAAS9pB,eAC3B7vB,KAAKk2B,aAAe,IAAIztB,MAAMkxC,EAAS73C,QAAQmqB,KAAK,MACpD,IAAK,IAAIsU,EAAM,EAAGA,EAAMvgC,KAAKk2B,aAAaz1B,OAAQ8/B,IAtBzCvgC,KAuBAk2B,aAAaqK,GAAOoZ,EAAS/pB,kBAAkB2Q,SAGrD,GAAyB,IAArBjrB,UAAU7U,OACnB,GAAI6U,UAAU,aAAc7M,OAASzD,OAAOgb,UAAU1K,UAAU,IAAK,CACnE,IAAI20B,EAAc30B,UAAU,GACxBk7B,EAAYl7B,UAAU,GAC1BtV,KAAKk2B,aAAe+T,EACpBjqC,KAAK05C,WAAalJ,EACE,OAAhBvG,IAAwBjqC,KAAKk2B,aAAe,IAAIztB,MAAM,GAAGwjB,KAAK,YAC7D,GAAIjnB,OAAOgb,UAAU1K,UAAU,KAAOtQ,OAAOgb,UAAU1K,UAAU,IAAK,CAC3E,IAAIskC,EAAStkC,UAAU,GACnBukC,EAAcvkC,UAAU,GAC5BtV,KAAKk2B,aAAe,IAAIztB,MAAMmxC,GAAQ3tB,KAAK,MAC3CjsB,KAAK05C,WAAaG,EAClB,IAAK,IAAI5Q,EAAM,EAAGA,EAAM2Q,EAAQ3Q,IAtCvBjpC,KAuCAk2B,aAAa+S,GAAO,IAAIlnB,KAMnC+3B,GAAqB,CAAE13B,iBAAkB,CAAE7d,cAAc,IAC7Dk1C,GAAwB30C,UAAU0d,YAAc,SAAsBphB,EAAOqhB,EAAe9a,GAC1F,OAAQ8a,GACN,KAAK+M,GAAmBnN,EACtBriB,KAAKk2B,aAAa90B,GAAO1B,EAAIiI,EAC7B,MACF,KAAK6nB,GAAmBlN,EACtBtiB,KAAKk2B,aAAa90B,GAAOlC,EAAIyI,EAC7B,MACF,KAAK6nB,GAAmBjN,EACtBviB,KAAKk2B,aAAa90B,GAAOuX,EAAIhR,EAC7B,MACF,QACE,MAAM,IAAIkZ,GAAyB,2BAGzC44B,GAAwB30C,UAAUhD,KAAO,WACvC,OAAO9B,KAAKk2B,aAAaz1B,QAE3Bg5C,GAAwB30C,UAAU6d,YAAc,SAAsBvhB,EAAOqhB,GAC3E,OAAQA,GACN,KAAK+M,GAAmBnN,EACtB,OAAOriB,KAAKk2B,aAAa90B,GAAO1B,EAClC,KAAK8vB,GAAmBlN,EACtB,OAAOtiB,KAAKk2B,aAAa90B,GAAOlC,EAClC,KAAKswB,GAAmBjN,EACtB,OAAOviB,KAAKk2B,aAAa90B,GAAOuX,EAGpC,OAAOyI,GAAOsC,KAEhB+1B,GAAwB30C,UAAU6qB,cAAgB,WAChD,GAAyB,IAArBra,UAAU7U,OAAc,CAC1B,IAAI5B,EAAIyW,UAAU,GAClB,OAAOtV,KAAKk2B,aAAar3B,GACpB,GAAyB,IAArByW,UAAU7U,OAAc,CACjC,IAAIW,EAAQkU,UAAU,GAClBrN,EAAQqN,UAAU,GACtBrN,EAAMvI,EAAIM,KAAKk2B,aAAa90B,GAAO1B,EACnCuI,EAAM/I,EAAIc,KAAKk2B,aAAa90B,GAAOlC,EACnC+I,EAAM0Q,EAAI3Y,KAAKk2B,aAAa90B,GAAOuX,IAGvC8gC,GAAwB30C,UAAU8qB,kBAAoB,SAA4B/wB,GAChF,OAAO,IAAIkjB,GAAW/hB,KAAKk2B,aAAar3B,KAE1C46C,GAAwB30C,UAAU+qB,aAAe,WAC/C,OAAO7vB,KAAK05C,YAEdD,GAAwB30C,UAAUgrB,KAAO,SAAe1uB,GACtD,OAAOpB,KAAKk2B,aAAa90B,GAAO1B,GAElC+5C,GAAwB30C,UAAUke,MAAQ,WAIxC,IAHE,IAEE+2B,EAAmB,IAAItxC,MAAMzI,KAAK8B,QAAQmqB,KAAK,MAC1CptB,EAAI,EAAGA,EAAImB,KAAKk2B,aAAaz1B,OAAQ5B,IAC5Ck7C,EAAiBl7C,GAJJmB,KAIgBk2B,aAAar3B,GAAGmkB,QAE/C,OAAO,IAAIy2B,GAAwBM,EAAkB/5C,KAAK05C,aAE5DD,GAAwB30C,UAAUirB,eAAiB,SAAyBC,GAG1E,IAFE,IAEOnxB,EAAI,EAAGA,EAAImB,KAAKk2B,aAAaz1B,OAAQ5B,IAC5CmxB,EAAIsD,gBAHStzB,KAGck2B,aAAar3B,IAE1C,OAAOmxB,GAETypB,GAAwB30C,UAAUuV,KAAO,WAIvC,IAHE,IAEE0/B,EAAmB,IAAItxC,MAAMzI,KAAK8B,QAAQmqB,KAAK,MAC1CptB,EAAI,EAAGA,EAAImB,KAAKk2B,aAAaz1B,OAAQ5B,IAC5Ck7C,EAAiBl7C,GAJJmB,KAIgBk2B,aAAar3B,GAAGwb,OAE/C,OAAO,IAAIo/B,GAAwBM,EAAkB/5C,KAAK05C,aAE5DD,GAAwB30C,UAAUme,SAAW,WAG3C,GAAIjjB,KAAKk2B,aAAaz1B,OAAS,EAAG,CAChC,IAAIu5C,EAAS,IAAIj0B,GAAa,GAAK/lB,KAAKk2B,aAAaz1B,QACrDu5C,EAAO/zB,OAAO,KACd+zB,EAAO/zB,OAAOjmB,KAAKk2B,aAAa,IAChC,IAAK,IAAIr3B,EAAI,EAAGA,EAAImB,KAAKk2B,aAAaz1B,OAAQ5B,IAC5Cm7C,EAAO/zB,OAAO,MACd+zB,EAAO/zB,OARIjmB,KAQUk2B,aAAar3B,IAGpC,OADAm7C,EAAO/zB,OAAO,KACP+zB,EAAO/2B,WAEd,MAAO,MAGXw2B,GAAwB30C,UAAUmrB,KAAO,SAAe7uB,GACtD,OAAOpB,KAAKk2B,aAAa90B,GAAOlC,GAElCu6C,GAAwB30C,UAAUorB,kBAAoB,WACpD,OAAOlwB,KAAKk2B,cAEdujB,GAAwB30C,UAAUyb,YAAc,WAC9C,MAAO,CAACiP,GAAoB1N,KAE9B23B,GAAwB30C,UAAU0b,SAAW,WAC3C,OAAOi5B,IAETK,GAAmB13B,iBAAiBpW,IAAM,WAAc,OAAQ,mBAEhEvH,OAAOid,iBAAkB+3B,GAAyBK,IAElD,IAAIG,GAAiC,aAEjCC,GAAqB,CAAE93B,iBAAkB,CAAE7d,cAAc,GAAO41C,eAAgB,CAAE51C,cAAc,IAEpG01C,GAA+Bn1C,UAAUs1C,YAAc,WACrD,OAAOH,GAA+Bl2C,YAExCk2C,GAA+Bn1C,UAAUoc,OAAS,WAChD,GAAyB,IAArB5L,UAAU7U,OAAc,CAC1B,GAAI6U,UAAU,aAAc7M,MAAO,CACjC,IAAIwhC,EAAc30B,UAAU,GAC5B,OAAO,IAAImkC,GAAwBxP,GAC9B,GAAIplB,GAAavP,UAAU,GAAIka,IAAqB,CACzD,IAAImqB,EAAWrkC,UAAU,GACzB,OAAO,IAAImkC,GAAwBE,SAEhC,GAAyB,IAArBrkC,UAAU7U,OAAc,CACjC,IAAIqB,EAAOwT,UAAU,GACjBk7B,EAAYl7B,UAAU,GAE1B,OADIk7B,EAAY,IAAKA,EAAY,GAC7BA,EAAY,EAAY,IAAIiJ,GAAwB33C,GACjD,IAAI23C,GAAwB33C,EAAM0uC,KAG7CyJ,GAA+Bn1C,UAAUyb,YAAc,WACrD,MAAO,CAAC6D,GAA2BtC,KAErCm4B,GAA+Bn1C,UAAU0b,SAAW,WAClD,OAAOy5B,IAETA,GAA+Bl2C,SAAW,WACxC,OAAOk2C,GAA+BE,gBAGxCD,GAAmB93B,iBAAiBpW,IAAM,WAAc,OAAQ,oBAChEkuC,GAAmBC,eAAenuC,IAAM,WAAc,OAAO,IAAIiuC,IAEjEx1C,OAAOid,iBAAkBu4B,GAAgCC,IASzD,IAAIG,GAAW,SAAUC,GACvB,SAASD,IACPC,EAAa35C,KAAKX,MAClBA,KAAKu6C,KAAO,IAAIhvC,IAmDlB,OAhDK+uC,IAAeD,EAAQp5B,UAAYq5B,GACxCD,EAAQv1C,UAAYL,OAAOyc,OAAQo5B,GAAgBA,EAAax1C,WAChEu1C,EAAQv1C,UAAUqc,YAAck5B,EAIhCA,EAAQv1C,UAAUkH,IAAM,SAAc3N,GACpC,OAAO2B,KAAKu6C,KAAKvuC,IAAI3N,IAAQ,MAM/Bg8C,EAAQv1C,UAAU0nC,IAAM,SAAcnuC,EAAKsJ,GAEzC,OADA3H,KAAKu6C,KAAK5uC,IAAItN,EAAKsJ,GACZA,GAMT0yC,EAAQv1C,UAAU7D,OAAS,WAIzB,IAHA,IAAIinC,EAAY,IAAIV,GAChBwL,EAAKhzC,KAAKu6C,KAAKt5C,SACf8hB,EAAIiwB,EAAGtxC,QACHqhB,EAAExiB,MACR2nC,EAAUjoC,IAAI8iB,EAAEpb,OAChBob,EAAIiwB,EAAGtxC,OAET,OAAOwmC,GAMTmS,EAAQv1C,UAAU2nC,SAAW,WAC3B,IAAIO,EAAU,IAAIH,GAElB,OADA7sC,KAAKu6C,KAAKC,UAAUx5C,QAAQ,SAAUiyC,GAAS,OAAOjG,EAAQ/sC,IAAIgzC,KAC3DjG,GAMTqN,EAAQv1C,UAAUhD,KAAO,WACvB,OAAO9B,KAAKu6C,KAAKz4C,QAGZu4C,GACP9N,IAEEkO,GAAiB,SAASA,IAG5B,GAFAz6C,KAAK06C,WAAa,KAClB16C,KAAK26C,OAAS,KACW,IAArBrlC,UAAU7U,OACZT,KAAK06C,WAAaD,EAAeG,cAC5B,GAAyB,IAArBtlC,UAAU7U,OACnB,GAAI6U,UAAU,aAAculC,GAAM,CAChC,IAAIC,EAAYxlC,UAAU,GAC1BtV,KAAK06C,WAAaI,EACdA,IAAcL,EAAeM,OAC/B/6C,KAAKg7C,SAAS,QAEX,GAA4B,iBAAjB1lC,UAAU,GAAiB,CAC3C,IAAI4S,EAAQ5S,UAAU,GACtBtV,KAAK06C,WAAaD,EAAeM,MACjC/6C,KAAKg7C,SAAS9yB,QACT,GAAI5S,UAAU,aAAcmlC,EAAgB,CACjD,IAAIQ,EAAK3lC,UAAU,GACnBtV,KAAK06C,WAAaO,EAAGP,WACrB16C,KAAK26C,OAASM,EAAGN,SAKnBO,GAAqB,CAAE94B,iBAAkB,CAAE7d,cAAc,GAAO42C,oBAAqB,CAAE52C,cAAc,IACzGk2C,GAAe31C,UAAUwV,OAAS,SAAiB9P,GACjD,KAAMA,aAAiBiwC,IACrB,OAAO,EAET,IAAIW,EAAsB5wC,EAC1B,OAAOxK,KAAK06C,aAAeU,EAAoBV,YAAc16C,KAAK26C,SAAWS,EAAoBT,QAEnGF,GAAe31C,UAAUge,UAAY,SAAoBC,GACvD,IAAIvY,EAAQuY,EACRmJ,EAAYlsB,KAAKq7C,8BACjBC,EAAiB9wC,EAAM6wC,8BAC3B,OAAO,IAAIj1B,GAAQ8F,GAAWpJ,UAAU,IAAIsD,GAAQk1B,KAEtDb,GAAe31C,UAAUy2C,SAAW,WAClC,OAAOv7C,KAAK26C,QAEdF,GAAe31C,UAAU02C,WAAa,WACpC,OAAOx7C,KAAK06C,aAAeD,GAAeG,UAAY56C,KAAK06C,aAAeD,GAAegB,iBAE3FhB,GAAe31C,UAAU42C,QAAU,WACjC,OAAO17C,KAAK06C,YAEdD,GAAe31C,UAAUme,SAAW,WAClC,IAAI04B,EAAc,UAQlB,OAPI37C,KAAK06C,aAAeD,GAAeG,SACrCe,EAAc,WACL37C,KAAK06C,aAAeD,GAAegB,gBAC5CE,EAAc,kBACL37C,KAAK06C,aAAeD,GAAeM,QAC5CY,EAAc,gBAAkB37C,KAAKu7C,WAAa,KAE7CI,GAETlB,GAAe31C,UAAUm4B,YAAc,WACrC,GAA4B,iBAAjB3nB,UAAU,GAAiB,CACpC,IAAI2K,EAAM3K,UAAU,GACpB,OAAI8L,GAAOjB,MAAMF,GAAeA,EAC5BjgB,KAAK06C,aAAeD,GAAegB,gBAChBx7B,EAGnBjgB,KAAK06C,aAAeD,GAAeM,MAC9Bv4C,KAAKuF,MAAMkY,EAAMjgB,KAAK26C,QAAU36C,KAAK26C,OAEvC16B,EACF,GAAI3K,UAAU,aAAcyM,GAAY,CAC7C,IAAI9Z,EAAQqN,UAAU,GACtB,GAAItV,KAAK06C,aAAeD,GAAeG,SAAY,OAAO,KAC1D3yC,EAAMvI,EAAIM,KAAKi9B,YAAYh1B,EAAMvI,GACjCuI,EAAM/I,EAAIc,KAAKi9B,YAAYh1B,EAAM/I,KAGrCu7C,GAAe31C,UAAUu2C,4BAA8B,WACrD,IAAIO,EAAe,GAQnB,OAPI57C,KAAK06C,aAAeD,GAAeG,SACrCgB,EAAe,GACN57C,KAAK06C,aAAeD,GAAegB,gBAC5CG,EAAe,EACN57C,KAAK06C,aAAeD,GAAeM,QAC5Ca,EAAe,EAAIp5C,KAAK4d,MAAM5d,KAAK6d,KAAK7d,KAAK2iB,IAAInlB,KAAKu7C,YAAc/4C,KAAK2iB,IAAI,OAExEy2B,GAETnB,GAAe31C,UAAUk2C,SAAW,SAAmB9yB,GACrDloB,KAAK26C,OAASn4C,KAAKiP,IAAIyW,IAEzBuyB,GAAe31C,UAAUyb,YAAc,WACrC,MAAO,CAACuB,GAAcH,KAExB84B,GAAe31C,UAAU0b,SAAW,WAClC,OAAOi6B,IAETA,GAAeoB,YAAc,SAAsBC,EAAKC,GACtD,OAAID,EAAIh5B,UAAUi5B,IAAQ,EAAYD,EAC/BC,GAETb,GAAmB94B,iBAAiBpW,IAAM,WAAc,OAAO,oBAC/DkvC,GAAmBC,oBAAoBnvC,IAAM,WAAc,OAAO,kBAElEvH,OAAOid,iBAAkB+4B,GAAgBS,IAEzC,IAAIL,GAAO,SAASA,EAAM95B,GACxB/gB,KAAKg8C,MAAQj7B,GAAQ,KACrB85B,EAAKoB,cAAczP,IAAIzrB,EAAM/gB,OAG3Bk8C,GAAsB,CAAE95B,iBAAkB,CAAE7d,cAAc,GAAO03C,cAAe,CAAE13C,cAAc,IACpGs2C,GAAK/1C,UAAUs1C,YAAc,WAC3B,OAAOS,GAAKoB,cAAcjwC,IAAIhM,KAAKg8C,QAErCnB,GAAK/1C,UAAUme,SAAW,WACxB,OAAOjjB,KAAKg8C,OAEdnB,GAAK/1C,UAAUyb,YAAc,WAC3B,MAAO,CAACuB,KAEV+4B,GAAK/1C,UAAU0b,SAAW,WACxB,OAAOq6B,IAETqB,GAAoB95B,iBAAiBpW,IAAM,WAAc,OAAQ,mBACjEkwC,GAAoBD,cAAcjwC,IAAM,WAAc,OAAO,IAAIquC,IAEjE51C,OAAOid,iBAAkBm5B,GAAMqB,IAE/BzB,GAAeI,KAAOA,GACtBJ,GAAeM,MAAQ,IAAIF,GAAK,SAChCJ,GAAeG,SAAW,IAAIC,GAAK,YACnCJ,GAAegB,gBAAkB,IAAIZ,GAAK,mBAE1C,IAAI9lB,GAAkB,SAASA,IAC7B/0B,KAAK45B,gBAAkB,IAAI6gB,GAC3Bz6C,KAAK8iC,MAAQ,EACb9iC,KAAKm8C,2BAA6BpnB,EAAgBqnB,sCAEzB,IAArB9mC,UAAU7U,SACkB,IAArB6U,UAAU7U,OACfokB,GAAavP,UAAU,GAAI8O,IAC7BpkB,KAAKm8C,2BAA6B7mC,UAAU,GACnCA,UAAU,aAAcmlC,KACjCz6C,KAAK45B,gBAAkBtkB,UAAU,IAEL,IAArBA,UAAU7U,QACnBT,KAAK45B,gBAAkBtkB,UAAU,GACjCtV,KAAK8iC,MAAQxtB,UAAU,IACO,IAArBA,UAAU7U,SACnBT,KAAK45B,gBAAkBtkB,UAAU,GACjCtV,KAAK8iC,MAAQxtB,UAAU,GACvBtV,KAAKm8C,2BAA6B7mC,UAAU,MAI5C+mC,GAAoB,CAAEj6B,iBAAkB,CAAE7d,cAAc,IAC5DwwB,GAAgBjwB,UAAUggC,WAAa,SAAqByG,GAC1D,OAAIA,EAAS5Y,SACJ3yB,KAAKs3B,YAAY,MAEtBiU,EAASzY,YAAcyY,EAAS3Y,WAAa2Y,EAASxY,YAAcwY,EAAS1Y,UACxE7yB,KAAKs3B,YAAY,IAAIvV,GAAWwpB,EAASzY,UAAWyY,EAASxY,YAElEwY,EAASzY,YAAcyY,EAAS3Y,WAAa2Y,EAASxY,YAAcwY,EAAS1Y,UACxE7yB,KAAK23B,iBAAiB,CAAC,IAAI5V,GAAWwpB,EAASzY,UAAWyY,EAASxY,WAAY,IAAIhR,GAAWwpB,EAAS3Y,UAAW2Y,EAAS1Y,aAE7H7yB,KAAKg4B,cAAch4B,KAAK43B,iBAAiB,CAAC,IAAI7V,GAAWwpB,EAASzY,UAAWyY,EAASxY,WAAY,IAAIhR,GAAWwpB,EAASzY,UAAWyY,EAAS1Y,WAAY,IAAI9Q,GAAWwpB,EAAS3Y,UAAW2Y,EAAS1Y,WAAY,IAAI9Q,GAAWwpB,EAAS3Y,UAAW2Y,EAASxY,WAAY,IAAIhR,GAAWwpB,EAASzY,UAAWyY,EAASxY,aAAc,OAE7UgC,GAAgBjwB,UAAU6yB,iBAAmB,SAA2BsS,GACtE,OAAKA,EACIA,aAAuBxhC,MAAgB,IAAIiqC,GAAW1yC,KAAKo2C,+BAA+Bl1B,OAAO+oB,GAAcjqC,MAC/G6kB,GAAaolB,EAAaza,IAA8B,IAAIkjB,GAAWzI,EAAajqC,WAAxF,EAFsB,IAAI0yC,GAAW1yC,KAAKo2C,+BAA+Bl1B,OAAO,IAAKlhB,OAI5F+0B,GAAgBjwB,UAAUgzB,sBAAwB,WAChD,GAAyB,IAArBxiB,UAAU7U,OACZ,OAAO,IAAI6wC,GAAgB,KAAMtxC,MAC5B,GAAyB,IAArBsV,UAAU7U,OAAc,CACjC,IAAImxC,EAAct8B,UAAU,GAC5B,OAAO,IAAIg8B,GAAgBM,EAAa5xC,QAG5C+0B,GAAgBjwB,UAAUw3C,cAAgB,SAAwBC,GAIhE,IAHA,IAAIC,EAAY,KACZC,GAAkB,EAClBC,GAAwB,EACnB79C,EAAI09C,EAAS9W,WAAY5mC,EAAE6mC,WAAY,CAC9C,IAAIn9B,EAAO1J,EAAE6C,OACTi7C,EAAYp0C,EAAKiY,WACH,OAAdg8B,IACFA,EAAYG,GAEVA,IAAcH,IAChBC,GAAkB,GAEhBl0C,EAAKu9B,kCAAmC4W,GAAwB,GAEtE,GAAkB,OAAdF,EACF,OAAOx8C,KAAKq4B,2BAEd,GAAIokB,GAAmBC,EACrB,OAAO18C,KAAKq4B,yBAAyBtD,GAAgB6nB,gBAAgBL,IAEvE,IAAIM,EAAQN,EAAS9W,WAAW/jC,OAEhC,GADmB66C,EAASz6C,OAAS,EACnB,CAChB,GAAI+6C,aAAiBpG,GACnB,OAAOz2C,KAAKm4B,mBAAmBpD,GAAgB+nB,eAAeP,IACzD,GAAIM,aAAiBnK,GAC1B,OAAO1yC,KAAK83B,sBAAsB/C,GAAgBgoB,kBAAkBR,IAC/D,GAAIM,aAAiBtG,GAC1B,OAAOv2C,KAAKy3B,iBAAiB1C,GAAgBioB,aAAaT,IAE5D1jB,GAAOC,qBAAqB,oBAAsB+jB,EAAMr8B,WAAW24B,WAErE,OAAO0D,GAET9nB,GAAgBjwB,UAAU2tC,2BAA6B,SAAqCxI,GAC1F,OAAOjqC,KAAKy3B,iBAAiC,OAAhBwS,EAAuBjqC,KAAKo2C,+BAA+Bl1B,OAAO+oB,GAAe,OAEhHlV,GAAgBjwB,UAAUwyB,YAAc,WACtC,GAAyB,IAArBhiB,UAAU7U,OACZ,OAAOT,KAAKs3B,YAAYt3B,KAAKo2C,+BAA+Bl1B,OAAO,KAC9D,GAAyB,IAArB5L,UAAU7U,OAAc,CACjC,GAAI6U,UAAU,aAAcyM,GAAY,CACtC,IAAIgU,EAAazgB,UAAU,GAC3B,OAAOtV,KAAKs3B,YAA2B,OAAfvB,EAAsB/1B,KAAKo2C,+BAA+Bl1B,OAAO,CAAC6U,IAAe,MACpG,GAAIlR,GAAavP,UAAU,GAAIka,IAAqB,CACzD,IAAIya,EAAc30B,UAAU,GAC5B,OAAO,IAAIihC,GAAMtM,EAAajqC,SAIpC+0B,GAAgBjwB,UAAUsxC,6BAA+B,WACvD,OAAOp2C,KAAKm8C,4BAEdpnB,GAAgBjwB,UAAUkzB,cAAgB,WACxC,GAAyB,IAArB1iB,UAAU7U,OACZ,OAAO,IAAIg2C,GAAQ,KAAM,KAAMz2C,MAC1B,GAAyB,IAArBsV,UAAU7U,OAAc,CACjC,GAAIokB,GAAavP,UAAU,GAAIka,IAAqB,CAClD,IAAIya,EAAc30B,UAAU,GAC5B,OAAOtV,KAAKg4B,cAAch4B,KAAK43B,iBAAiBqS,IAC3C,GAAI30B,UAAU,aAAc7M,MAAO,CACxC,IAAIw0C,EAAgB3nC,UAAU,GAC9B,OAAOtV,KAAKg4B,cAAch4B,KAAK43B,iBAAiBqlB,IAC3C,GAAI3nC,UAAU,aAAc0iC,GAAY,CAC7C,IAAI/f,EAAQ3iB,UAAU,GACtB,OAAOtV,KAAKg4B,cAAcC,EAAO,YAE9B,GAAyB,IAArB3iB,UAAU7U,OAAc,CACjC,IAAIy8C,EAAU5nC,UAAU,GACpB4iB,EAAQ5iB,UAAU,GACtB,OAAO,IAAImhC,GAAQyG,EAAShlB,EAAOl4B,QAGvC+0B,GAAgBjwB,UAAUk+B,QAAU,WAClC,OAAOhjC,KAAK8iC,OAEd/N,GAAgBjwB,UAAUuzB,yBAA2B,WACnD,GAAyB,IAArB/iB,UAAU7U,OACZ,OAAO,IAAIsvC,GAAmB,KAAM/vC,MAC/B,GAAyB,IAArBsV,UAAU7U,OAAc,CACjC,IAAIulC,EAAa1wB,UAAU,GAC3B,OAAO,IAAIy6B,GAAmB/J,EAAYhmC,QAG9C+0B,GAAgBjwB,UAAUq4C,eAAiB,SAAyBjZ,GAElE,OADa,IAAIqU,GAAev4C,MAClB+4C,KAAK7U,EAAG,CACpB6U,KAAM,WACJ,GAAyB,IAArBzjC,UAAU7U,OAAc,CAC1B,IAAIk5C,EAAWrkC,UAAU,GAEzB,OAAOtV,KAAKm8C,2BAA2Bj7B,OAAOy4B,QAKtD5kB,GAAgBjwB,UAAUqgC,kBAAoB,WAC5C,OAAOnlC,KAAK45B,iBAEd7E,GAAgBjwB,UAAU8yB,iBAAmB,WAC3C,GAAyB,IAArBtiB,UAAU7U,OACZ,OAAOT,KAAK43B,iBAAiB53B,KAAKo2C,+BAA+Bl1B,OAAO,KACnE,GAAyB,IAArB5L,UAAU7U,OAAc,CACjC,GAAI6U,UAAU,aAAc7M,MAAO,CACjC,IAAIwhC,EAAc30B,UAAU,GAC5B,OAAOtV,KAAK43B,iBAAiC,OAAhBqS,EAAuBjqC,KAAKo2C,+BAA+Bl1B,OAAO+oB,GAAe,MACzG,GAAIplB,GAAavP,UAAU,GAAIka,IAAqB,CACzD,IAAIytB,EAAgB3nC,UAAU,GAC9B,OAAO,IAAI0iC,GAAWiF,EAAej9C,SAI3C+0B,GAAgBjwB,UAAUqzB,mBAAqB,WAC7C,GAAyB,IAArB7iB,UAAU7U,OACZ,OAAO,IAAI23C,GAAa,KAAMp4C,MACzB,GAAyB,IAArBsV,UAAU7U,OAAc,CACjC,IAAI23B,EAAW9iB,UAAU,GACzB,OAAO,IAAI8iC,GAAahgB,EAAUp4B,QAGtC+0B,GAAgBjwB,UAAU2yB,iBAAmB,WAG3C,GAAyB,IAArBniB,UAAU7U,OACZ,OAAO,IAAIq3C,GAAW,KAAM93C,MACvB,GAAyB,IAArBsV,UAAU7U,OAAc,CACjC,GAAI6U,UAAU,aAAc7M,MAAO,CACjC,IAAIuB,EAAQsL,UAAU,GACtB,OAAO,IAAIwiC,GAAW9tC,EAAOhK,MACxB,GAAIsV,UAAU,aAAc7M,MAAO,CACxC,IAAIwhC,EAAc30B,UAAU,GAC5B,OAAOtV,KAAKy3B,iBAAiC,OAAhBwS,EAAuBjqC,KAAKo2C,+BAA+Bl1B,OAAO+oB,GAAe,MACzG,GAAIplB,GAAavP,UAAU,GAAIka,IAAqB,CACzD,IAAIytB,EAAgB3nC,UAAU,GAC9B,GAAsB,OAAlB2nC,EACF,OAAOj9C,KAAKy3B,iBAAiB,IAAIhvB,MAAM,GAAGwjB,KAAK,OAGjD,IADA,IAAIrY,EAAS,IAAInL,MAAMw0C,EAAcn7C,QAAQmqB,KAAK,MACzCptB,EAAI,EAAGA,EAAIo+C,EAAcn7C,OAAQjD,IAAK,CAC7C,IAAIu+C,EAlBKp9C,KAkBUo2C,+BAA+Bl1B,OAAO,EAAG+7B,EAAcptB,gBAC1EmlB,GAAoB36B,KAAK4iC,EAAep+C,EAAGu+C,EAAO,EAAG,GACrDxpC,EAAO/U,GApBEmB,KAoBUs3B,YAAY8lB,GAEjC,OAAOp9C,KAAKy3B,iBAAiB7jB,MAInCmhB,GAAgBjwB,UAAUyb,YAAc,WACtC,MAAO,CAACuB,KAEViT,GAAgBjwB,UAAU0b,SAAW,WACnC,OAAOuU,IAETA,GAAgBsoB,oBAAsB,SAA8BC,GAClE,IAAIC,EAAoB,IAAI90C,MAAM60C,EAAcx7C,QAAQmqB,KAAK,MAC7D,OAAOqxB,EAAcnW,QAAQoW,IAE/BxoB,GAAgB6nB,gBAAkB,SAA0B5W,GAC1D,GAAmB,OAAfA,EAAuB,OAAO,KAClC,IAAIwX,EAAgB,IAAI/0C,MAAMu9B,EAAWlkC,QAAQmqB,KAAK,MACtD,OAAO+Z,EAAWmB,QAAQqW,IAE5BzoB,GAAgBqnB,oCAAsC,WACpD,OAAOnC,GAA+Bl2C,YAExCgxB,GAAgB0oB,uBAAyB,SAAiCC,GACxE,IAAIC,EAAuB,IAAIl1C,MAAMi1C,EAAiB57C,QAAQmqB,KAAK,MACnE,OAAOyxB,EAAiBvW,QAAQwW,IAElC5oB,GAAgBgoB,kBAAoB,SAA4BnL,GAC9D,IAAIgM,EAAkB,IAAIn1C,MAAMmpC,EAAY9vC,QAAQmqB,KAAK,MACzD,OAAO2lB,EAAYzK,QAAQyW,IAE7B7oB,GAAgB8oB,kBAAoB,SAA4BC,GAC9D,IAAIC,EAAkB,IAAIt1C,MAAMq1C,EAAYh8C,QAAQmqB,KAAK,MACzD,OAAO6xB,EAAY3W,QAAQ4W,IAE7BhpB,GAAgBipB,kBAAoB,SAA4BC,GAC9D,IAAIC,EAAkB,IAAIz1C,MAAMw1C,EAAYn8C,QAAQmqB,KAAK,MACzD,OAAOgyB,EAAY9W,QAAQ+W,IAE7BnpB,GAAgBioB,aAAe,SAAuBppC,GACpD,IAAIuqC,EAAa,IAAI11C,MAAMmL,EAAO9R,QAAQmqB,KAAK,MAC/C,OAAOrY,EAAOuzB,QAAQgX,IAExBppB,GAAgB+nB,eAAiB,SAAyB1kB,GACxD,IAAIgmB,EAAe,IAAI31C,MAAM2vB,EAASt2B,QAAQmqB,KAAK,MACnD,OAAOmM,EAAS+O,QAAQiX,IAE1BrpB,GAAgBspB,6BAA+B,SAAuCp2C,EAAOq2C,GAE3F,OADAA,EAASnZ,oBAAoBlI,YAAYh1B,GAClCq2C,EAASza,aAAavM,YAAYrvB,IAE3Co0C,GAAkBj6B,iBAAiBpW,IAAM,WAAc,OAAQ,oBAE/DvH,OAAOid,iBAAkBqT,GAAiBsnB,IAE1C,IAAIkC,GAAgB,CAAC,QAAS,aAAc,aAAc,kBAAmB,UAAW,gBAepFC,GAAgB,SAAwB1pB,GAC1C90B,KAAK80B,gBAAkBA,GAAmB,IAAIC,IAUhDypB,GAAc15C,UAAUkwB,KAAO,SAAeypB,GAC5C,IAAI5V,EAOAx3B,GALFw3B,EADkB,iBAAT4V,EACHC,KAAK53B,MAAM23B,GAEXA,GAGOptC,KAEf,IAAKyV,GAAMzV,GACT,MAAM,IAAI1I,MAAM,yBAA2BkgC,EAAIx3B,MAGjD,OAAqC,IAAjCktC,GAAchuC,QAAQc,GACjByV,GAAMzV,GAAMmkB,MAAMx1B,KAAM,CAAC6oC,EAAIoB,cAClB,uBAAT54B,EACFyV,GAAMzV,GAAMmkB,MAAMx1B,KAAM,CAAC6oC,EAAI7C,aAI/Blf,GAAMzV,GAAMmkB,MAAMx1B,KAAM,CAAC6oC,KAWlC2V,GAAc15C,UAAU2wB,MAAQ,SAAgBP,GAC9C,IAAI7jB,EAAO6jB,EAASS,kBAEpB,IAAKiW,GAAQv6B,GACX,MAAM,IAAI1I,MAAM,6BAGlB,OAAOijC,GAAQv6B,GAAMmkB,MAAMx1B,KAAM,CAACk1B,KAGpC,IAAIpO,GAAQ,CASV63B,QAAS,SAAU9V,GACjB,IAAI+V,EAAU,GAGd,IAAK,IAAIvgD,KAAOwqC,EACd+V,EAAQvgD,GAAOwqC,EAAIxqC,GAIrB,GAAIwqC,EAAI3T,SAAU,CAChB,IAAI7jB,EAAOw3B,EAAI3T,SAAS7jB,KACxB,IAAKyV,GAAMzV,GACT,MAAM,IAAI1I,MAAM,yBAA2BkgC,EAAIx3B,MAEjDutC,EAAQ1pB,SAAWl1B,KAAKg1B,KAAK6T,EAAI3T,UAQnC,OAJI2T,EAAI36B,OACN0wC,EAAQ1wC,KAAO4Y,GAAM5Y,KAAKsnB,MAAMx1B,KAAM,CAAC6oC,EAAI36B,QAGtC0wC,GAWTC,kBAAmB,SAAUhW,GAC3B,IAEIiW,EAAoB,GAExB,GAAIjW,EAAIkW,SAAU,CAChBD,EAAkBC,SAAW,GAE7B,IAAK,IAAIlgD,EAAI,EAAGA,EAAIgqC,EAAIkW,SAASt+C,SAAU5B,EACzCigD,EAAkBC,SAASv+C,KARlBR,KAQ8Bg1B,KAAK6T,EAAIkW,SAASlgD,KAQ7D,OAJIgqC,EAAI36B,OACN4wC,EAAkB5wC,KAAOlO,KAAK8mB,MAAM5Y,KAAKsnB,MAAMx1B,KAAM,CAAC6oC,EAAI36B,QAGrD4wC,GAWT7U,YAAa,SAAU5T,GAErB,IADA,IAAI4T,EAAc,GACTprC,EAAI,EAAGA,EAAIw3B,EAAM51B,SAAU5B,EAAG,CACrC,IAAImgD,EAAM3oB,EAAMx3B,GAChBorC,EAAYzpC,KAAK,IAAIuhB,GAAWi9B,EAAI,GAAIA,EAAI,KAE9C,OAAO/U,GAWT/7B,KAAM,SAAUmoB,GACd,OAAOr2B,KAAK80B,gBAAgB8C,iBAAiB,CAC3C,IAAI7V,GAAWsU,EAAM,GAAIA,EAAM,IAC/B,IAAItU,GAAWsU,EAAM,GAAIA,EAAM,IAC/B,IAAItU,GAAWsU,EAAM,GAAIA,EAAM,IAC/B,IAAItU,GAAWsU,EAAM,GAAIA,EAAM,IAC/B,IAAItU,GAAWsU,EAAM,GAAIA,EAAM,OAYnCkgB,MAAO,SAAUlgB,GACf,IAAIN,EAAa,IAAIhU,GAAWsU,EAAM,GAAIA,EAAM,IAChD,OAAOr2B,KAAK80B,gBAAgBwC,YAAYvB,IAW1C+hB,WAAY,SAAUzhB,GAIpB,IAHA,IAEIziB,EAAS,GACJ/U,EAAI,EAAGA,EAAIw3B,EAAM51B,SAAU5B,EAClC+U,EAAOpT,KAAKsmB,GAAMyvB,MAAM/gB,MAJbx1B,KAI2B,CAACq2B,EAAMx3B,MAE/C,OAAOmB,KAAK80B,gBAAgB2C,iBAAiB7jB,IAW/C8+B,WAAY,SAAUrc,GACpB,IAAI4T,EAAcnjB,GAAMmjB,YAAYzU,MAAMx1B,KAAM,CAACq2B,IACjD,OAAOr2B,KAAK80B,gBAAgB6C,iBAAiBsS,IAW/CqH,gBAAiB,SAAUjb,GAIzB,IAHA,IAEIub,EAAc,GACT/yC,EAAI,EAAGA,EAAIw3B,EAAM51B,SAAU5B,EAClC+yC,EAAYpxC,KAAKsmB,GAAM4rB,WAAWld,MAJvBx1B,KAIqC,CAACq2B,EAAMx3B,MAEzD,OAAOmB,KAAK80B,gBAAgBgD,sBAAsB8Z,IAWpD6E,QAAS,SAAUpgB,GAMjB,IALA,IAEIqgB,EAAmB5vB,GAAMmjB,YAAYzU,MAAMx1B,KAAM,CAACq2B,EAAM,KACxD4B,EAAQj4B,KAAK80B,gBAAgB8C,iBAAiB8e,GAC9Cxe,EAAQ,GACHr5B,EAAI,EAAGA,EAAIw3B,EAAM51B,SAAU5B,EAAG,CACrC,IAAIy6C,EAAOjjB,EAAMx3B,GACborC,EAAcnjB,GAAMmjB,YAAYzU,MAPzBx1B,KAOuC,CAACs5C,IAC/C2F,EAROj/C,KAQa80B,gBAAgB8C,iBAAiBqS,GACzD/R,EAAM13B,KAAKy+C,GAEb,OAAOj/C,KAAK80B,gBAAgBkD,cAAcC,EAAOC,IAWnDkgB,aAAc,SAAU/hB,GAItB,IAHA,IAEI+B,EAAW,GACNv5B,EAAI,EAAGA,EAAIw3B,EAAM51B,SAAU5B,EAAG,CACrC,IAAIi4B,EAAUT,EAAMx3B,GACpBu5B,EAAS53B,KAAKsmB,GAAM2vB,QAAQjhB,MALjBx1B,KAK+B,CAAC82B,KAE7C,OAAO92B,KAAK80B,gBAAgBqD,mBAAmBC,IAWjD2X,mBAAoB,SAAU1Z,GAI5B,IAHA,IAEI2P,EAAa,GACRnnC,EAAI,EAAGA,EAAIw3B,EAAM51B,SAAU5B,EAAG,CACrC,IAAIq2B,EAAWmB,EAAMx3B,GACrBmnC,EAAWxlC,KALAR,KAKYg1B,KAAKE,IAE9B,OAAOl1B,KAAK80B,gBAAgBuD,yBAAyB2N,KAIrD4F,GAAU,CASZ7V,WAAY,SAAUA,GACpB,MAAO,CAACA,EAAWr2B,EAAGq2B,EAAW72B,IAWnCq3C,MAAO,SAAUvsC,GAEf,MAAO,CACLqH,KAAM,QACN44B,YAHU2B,GAAQ7V,WAAWP,MAAMx1B,KAAM,CAACgK,EAAM2lB,oBAepDmoB,WAAY,SAAU3hB,GAIpB,IAHA,IAEIE,EAAQ,GACHx3B,EAAI,EAAGA,EAAIs3B,EAAWG,YAAY71B,SAAU5B,EAAG,CACtD,IAAImL,EAAQmsB,EAAWG,YAAYz3B,GAC/BqgD,EAAUtT,GAAQ2K,MAAM/gB,MALjBx1B,KAK+B,CAACgK,IAC3CqsB,EAAM71B,KAAK0+C,EAAQjV,aAErB,MAAO,CACL54B,KAAM,aACN44B,YAAa5T,IAYjBqc,WAAY,SAAUnc,GAKpB,IAJA,IAEIF,EAAQ,GACR4T,EAAc1T,EAAW0Z,iBACpBpxC,EAAI,EAAGA,EAAIorC,EAAYxpC,SAAU5B,EAAG,CAC3C,IAAIk3B,EAAakU,EAAYprC,GAC7Bw3B,EAAM71B,KAAKorC,GAAQ7V,WAAWP,MANnBx1B,KAMiC,CAAC+1B,KAE/C,MAAO,CACL1kB,KAAM,aACN44B,YAAa5T,IAYjBib,gBAAiB,SAAU1a,GAIzB,IAHA,IAEIP,EAAQ,GACHx3B,EAAI,EAAGA,EAAI+3B,EAAgBN,YAAY71B,SAAU5B,EAAG,CAC3D,IAAI03B,EAAaK,EAAgBN,YAAYz3B,GACzCqgD,EAAUtT,GAAQ8G,WAAWld,MALtBx1B,KAKoC,CAACu2B,IAChDF,EAAM71B,KAAK0+C,EAAQjV,aAErB,MAAO,CACL54B,KAAM,kBACN44B,YAAa5T,IAYjBogB,QAAS,SAAU3f,GACjB,IAEIT,EAAQ,GACR8oB,EAAevT,GAAQ8G,WAAWld,MAAMx1B,KAAM,CAAC82B,EAAQE,SAC3DX,EAAM71B,KAAK2+C,EAAalV,aACxB,IAAK,IAAIprC,EAAI,EAAGA,EAAIi4B,EAAQG,OAAOx2B,SAAU5B,EAAG,CAC9C,IAAIy6C,EAAOxiB,EAAQG,OAAOp4B,GACtBugD,EAAcxT,GAAQ8G,WAAWld,MAP1Bx1B,KAOwC,CAACs5C,IACpDjjB,EAAM71B,KAAK4+C,EAAYnV,aAEzB,MAAO,CACL54B,KAAM,UACN44B,YAAa5T,IAYjB+hB,aAAc,SAAUlhB,GAItB,IAHA,IAEIb,EAAQ,GACHx3B,EAAI,EAAGA,EAAIq4B,EAAaZ,YAAY71B,SAAU5B,EAAG,CACxD,IAAIi4B,EAAUI,EAAaZ,YAAYz3B,GACnCqgD,EAAUtT,GAAQ6K,QAAQjhB,MALnBx1B,KAKiC,CAAC82B,IAC7CT,EAAM71B,KAAK0+C,EAAQjV,aAErB,MAAO,CACL54B,KAAM,eACN44B,YAAa5T,IAYjB0Z,mBAAoB,SAAU1Y,GAI5B,IAHA,IAEIhB,EAAQ,GACHx3B,EAAI,EAAGA,EAAIw4B,EAAWf,YAAY71B,SAAU5B,EAAG,CACtD,IAAIq2B,EAAWmC,EAAWf,YAAYz3B,GAClCwS,EAAO6jB,EAASS,kBACpBU,EAAM71B,KAAKorC,GAAQv6B,GAAMmkB,MANdx1B,KAM4B,CAACk1B,KAE1C,MAAO,CACL7jB,KAAM,qBACN20B,WAAY3P,KAkBdgpB,GAAgB,SAAwBvqB,GAC1C90B,KAAK80B,gBAAkBA,GAAmB,IAAIC,GAC9C/0B,KAAKq7B,eAAiBr7B,KAAK80B,gBAAgBqQ,oBAC3CnlC,KAAKw4B,OAAS,IAAIgmB,GAAcx+C,KAAK80B,kBAWvCuqB,GAAcv6C,UAAUkwB,KAAO,SAAekqB,GAC5C,IAAIhqB,EAAWl1B,KAAKw4B,OAAOxD,KAAKkqB,GAMhC,OAJIl/C,KAAKq7B,eAAeqgB,YAAcjB,GAAeM,OACnD/6C,KAAKs/C,gBAAgBpqB,GAGhBA,GAITmqB,GAAcv6C,UAAUw6C,gBAAkB,SAA0BpqB,GAChE,IAEEr2B,EAAGqe,EAEP,GAAIgY,EAASa,WACX/1B,KAAKq7B,eAAe4B,YAAY/H,EAASa,iBACpC,GAAIb,EAASthB,OAClB,IAAK/U,EAAI,EAAGqe,EAAMgY,EAASthB,OAAOnT,OAAQ5B,EAAIqe,EAAKre,IAPtCmB,KAQJq7B,eAAe4B,YAAY/H,EAASthB,OAAO/U,SAE/C,GAAIq2B,EAAS8Q,WAClB,IAAKnnC,EAAI,EAAGqe,EAAMgY,EAAS8Q,WAAWvlC,OAAQ5B,EAAIqe,EAAKre,IAX1CmB,KAYJs/C,gBAAgBpqB,EAAS8Q,WAAWnnC,KAuBjD,IAAI0gD,GAAgB,WAClBv/C,KAAKw4B,OAAS,IAAIgmB,GAAcx+C,KAAK80B,kBAUvCyqB,GAAcz6C,UAAU2wB,MAAQ,SAAgBP,GAC9C,OAAOl1B,KAAKw4B,OAAO/C,MAAMP,IAO3B,IAAIsqB,GAAW,aAEXC,GAAqB,CAAEC,GAAI,CAAEn7C,cAAc,GAAOq8B,KAAM,CAAEr8B,cAAc,GAAOm8B,MAAO,CAAEn8B,cAAc,IAyB1G,SAASo7C,GAAqB7+B,GAC5B9gB,KAAK8gB,QAAUA,GAAW,GAgB5B,SAAS8+B,KAKP5/C,KAAK0nC,OAAS,GA7ChB8X,GAAS16C,UAAUyb,YAAc,WAC/B,MAAO,IAETi/B,GAAS16C,UAAU0b,SAAW,WAC5B,OAAOg/B,IAETA,GAASK,SAAW,SAAmBC,GACrC,OAAIA,IAAaN,GAAS5e,KAAe4e,GAAS9e,MAC9Cof,IAAaN,GAAS9e,MAAgB8e,GAAS5e,KAC5Ckf,GAETL,GAAmBC,GAAG1zC,IAAM,WAAc,OAAO,GACjDyzC,GAAmB7e,KAAK50B,IAAM,WAAc,OAAO,GACnDyzC,GAAmB/e,MAAM10B,IAAM,WAAc,OAAO,GAEpDvH,OAAOid,iBAAkB89B,GAAUC,IAWnCE,GAAoB76C,UAAY,IAAI6D,MAKpCg3C,GAAoB76C,UAAUic,KAAO,sBAgBrC6+B,GAAM96C,UAAY,IAAIuiC,GAKtBuY,GAAM96C,UAAU7E,IAAM,SAAUyb,GAE9B,OADA1b,KAAK0nC,OAAOlnC,KAAKkb,IACV,GAMTkkC,GAAM96C,UAAUkH,IAAM,SAAU5K,GAC9B,GAAIA,EAAQ,GAAKA,GAASpB,KAAK8B,OAC7B,MAAM,IAAI6G,MAGZ,OAAO3I,KAAK0nC,OAAOtmC,IAQrBw+C,GAAM96C,UAAUtE,KAAO,SAAUkb,GAE/B,OADA1b,KAAK0nC,OAAOlnC,KAAKkb,GACVA,GAQTkkC,GAAM96C,UAAUpE,IAAM,SAAUgb,GAC9B,GAA2B,IAAvB1b,KAAK0nC,OAAOjnC,OACd,MAAM,IAAIk/C,GAGZ,OAAO3/C,KAAK0nC,OAAOhnC,OAQrBk/C,GAAM96C,UAAUiZ,KAAO,WACrB,GAA2B,IAAvB/d,KAAK0nC,OAAOjnC,OACd,MAAM,IAAIk/C,GAGZ,OAAO3/C,KAAK0nC,OAAO1nC,KAAK0nC,OAAOjnC,OAAS,IAQ1Cm/C,GAAM96C,UAAUi7C,MAAQ,WACtB,OAA2B,IAAvB//C,KAAK0nC,OAAOjnC,QAUlBm/C,GAAM96C,UAAUgxB,QAAU,WACxB,OAAO91B,KAAK+/C,SAiBdH,GAAM96C,UAAUuwB,OAAS,SAAUtS,GACjC,OAAO/iB,KAAK0nC,OAAOn3B,QAAQwS,IAO7B68B,GAAM96C,UAAUhD,KAAO,WACrB,OAAO9B,KAAK0nC,OAAOjnC,QAMrBm/C,GAAM96C,UAAUqiC,QAAU,WAKxB,IAJA,IAEI9Q,EAAQ,GAEHx3B,EAAI,EAAGqe,EAAMld,KAAK0nC,OAAOjnC,OAAQ5B,EAAIqe,EAAKre,IACjDw3B,EAAM71B,KALKR,KAKO0nC,OAAO7oC,IAG3B,OAAOw3B,GAGT,IAAI2pB,GAAsB,WACxBhgD,KAAKigD,WAAa,EAClBjgD,KAAKkgD,UAAY,KACjBlgD,KAAKmgD,OAAS,KACdngD,KAAKogD,YAAc,MAErBJ,GAAoBl7C,UAAU6qB,cAAgB,WAC5C,OAAO3vB,KAAKkgD,WAEdF,GAAoBl7C,UAAUu7C,iBAAmB,SAA2BC,EAAIl/C,GAC9E,IAAIm/C,EAAOvgD,KAAKwgD,0BAA0BF,EAAIl/C,GAM9C,OALIm/C,EAAO,IAAKA,EAAOvgD,KAAKwgD,0BAA0BF,EAAIl/C,EAAQ,IAC9Dm/C,EAAO,IACTvgD,KAAKkgD,UAAY,KACjBlgD,KAAKygD,4BAA4BH,IAE5BC,GAETP,GAAoBl7C,UAAU47C,0BAA4B,WACxD,IAAIhf,EAAM1hC,KAAKmgD,OAAOQ,UAAU1Q,iBAChCpX,GAAOE,OAAO/4B,KAAKigD,UAAY,GAAKjgD,KAAKigD,UAAYve,EAAIjhC,OAAQ,0DACjE,IAAImgD,EAAQlf,EAAI1hC,KAAKigD,UAAY,GAC7BY,EAAQnf,EAAI1hC,KAAKigD,UAAY,GAC7Ba,EAAcxkB,GAAa6F,mBAAmBniC,KAAKkgD,UAAWW,EAAOD,GACrEG,GAAU,EACVH,EAAM1hD,EAAIc,KAAKkgD,UAAUhhD,GAAK2hD,EAAM3hD,EAAIc,KAAKkgD,UAAUhhD,GAAK4hD,IAAgBxkB,GAAaqE,iBAC3FogB,GAAU,EACDH,EAAM1hD,EAAIc,KAAKkgD,UAAUhhD,GAAK2hD,EAAM3hD,EAAIc,KAAKkgD,UAAUhhD,GAAK4hD,IAAgBxkB,GAAamE,YAClGsgB,GAAU,GAERA,IACF/gD,KAAKigD,UAAYjgD,KAAKigD,UAAY,IAGtCD,GAAoBl7C,UAAU07C,0BAA4B,SAAoCF,EAAIzhD,GAChG,IACIoJ,EADIq4C,EAAGK,UACG1Q,iBACd,GAAIpxC,EAAI,GAAKA,EAAI,GAAKoJ,EAAMxH,OAAU,OAAQ,EAC9C,GAAIwH,EAAMpJ,GAAGK,IAAM+I,EAAMpJ,EAAI,GAAGK,EAAK,OAAQ,EAC7C,IAAIyd,EAAM6iC,GAAS5e,KAEnB,OADI34B,EAAMpJ,GAAGK,EAAI+I,EAAMpJ,EAAI,GAAGK,IAAKyd,EAAM6iC,GAAS9e,OAC3C/jB,GAETqjC,GAAoBl7C,UAAU67C,QAAU,WACtC,OAAO3gD,KAAKogD,aAEdJ,GAAoBl7C,UAAU27C,4BAA8B,SAAsCH,GAIhG,IAHE,IAEEr4C,EAAQq4C,EAAGK,UAAU1Q,iBAChBpxC,EAAI,EAAGA,EAAIoJ,EAAMxH,OAAS,EAAG5B,KACX,OAJZmB,KAIFkgD,WAAsBj4C,EAAMpJ,GAAGa,EAJ7BM,KAIwCkgD,UAAUxgD,KAJlDM,KAKJmgD,OAASG,EALLtgD,KAMJigD,UAAYphD,EANRmB,KAOJkgD,UAAYj4C,EAAMpJ,KAI/BmhD,GAAoBl7C,UAAUk8C,wBAA0B,WACtD,IACIC,EADOjhD,KAAKmgD,OAAOe,UACPC,WAChBnhD,KAAKmgD,OAASc,EAAKG,mBACdphD,KAAKmgD,OAAOkB,cACfrhD,KAAKmgD,OAASngD,KAAKmgD,OAAOmB,SAC1BthD,KAAKigD,UAAYjgD,KAAKmgD,OAAOQ,UAAU1Q,iBAAiBxvC,OAAS,IAGrEu/C,GAAoBl7C,UAAUy8C,SAAW,SAAmBC,GAG1D,IAFE,IAEO3iD,EAAI2iD,EAAY/b,WAAY5mC,EAAE6mC,WAAY,CACjD,IAAI4a,EAAKzhD,EAAE6C,OACN4+C,EAAGe,aAJKrhD,KAKNygD,4BAA4BH,GAErCznB,GAAOE,OAA0B,IAAnB/4B,KAAKigD,WAAmBjgD,KAAKkgD,UAAU5lC,OAAOta,KAAKmgD,OAAOxwB,iBAAkB,yCACnE,IAAnB3vB,KAAKigD,UACPjgD,KAAKghD,0BAELhhD,KAAK0gD,4BAEP1gD,KAAKogD,YAAcpgD,KAAKmgD,OACJngD,KAAKqgD,iBAAiBrgD,KAAKmgD,OAAQngD,KAAKigD,aACtCT,GAAS5e,OAC7B5gC,KAAKogD,YAAcpgD,KAAKmgD,OAAOmB,WAGnCtB,GAAoBl7C,UAAUyb,YAAc,WAC1C,MAAO,IAETy/B,GAAoBl7C,UAAU0b,SAAW,WACvC,OAAOw/B,IAGT,IAAIyB,GAAqB,SAAU7oB,GACjC,SAAS6oB,EAAmBC,EAAKn6C,GAC/BqxB,EAAoBj4B,KAAKX,KAAMyhD,EAAkBE,aAAaD,EAAKn6C,IACnEvH,KAAKuH,GAAKA,EAAK,IAAIwa,GAAWxa,GAAM,KACpCvH,KAAK+gB,KAAO,oBAoBd,OAjBK6X,IAAsB6oB,EAAkBxgC,UAAY2X,GACzD6oB,EAAkB38C,UAAYL,OAAOyc,OAAQ0X,GAAuBA,EAAoB9zB,WACxF28C,EAAkB38C,UAAUqc,YAAcsgC,EAC1CA,EAAkB38C,UAAU6qB,cAAgB,WAC1C,OAAO3vB,KAAKuH,IAEdk6C,EAAkB38C,UAAUyb,YAAc,WACxC,MAAO,IAETkhC,EAAkB38C,UAAU0b,SAAW,WACrC,OAAOihC,GAETA,EAAkBE,aAAe,SAAuBD,EAAKn6C,GAC3D,OAAKA,EACEm6C,EADWA,EAAM,MAAQn6C,EAAK,MAIhCk6C,GACP/oB,IAEEkpB,GAAa,WACf5hD,KAAK0nC,OAAS,IAEhBka,GAAW98C,UAAU+8C,QAAU,SAAkBnmC,GAC/C1b,KAAK0nC,OAAOlnC,KAAKkb,IAEnBkmC,GAAW98C,UAAUg9C,YAAc,WACjC,OAAO9hD,KAAK0nC,OAAO3zB,SAErB6tC,GAAW98C,UAAUgxB,QAAU,WAC7B,OAA8B,IAAvB91B,KAAK0nC,OAAOjnC,QAGrB,IAAIshD,GAAiB,WACnB/hD,KAAKgiD,QAAU,KACfhiD,KAAKiiD,aAAe,IAAIza,GACxBxnC,KAAKkiD,OAAS,IAAI1a,GAClBxnC,KAAKmiD,gBAAkB,KACvBniD,KAAKoiD,KAAO,KACZpiD,KAAKgiD,QAAU,IAAIhC,IAErB+B,GAAej9C,UAAUu9C,kBAAoB,WAC3C,IAAK,IAAIrP,EAAKhzC,KAAKiiD,aAAaxc,WAAYuN,EAAGtN,WAAY,CAChDsN,EAAGtxC,OACT4gD,YAAW,KAGlBP,GAAej9C,UAAUy9C,uBAAyB,WAChD,OAAOviD,KAAKmiD,iBAEdJ,GAAej9C,UAAU09C,iBAAmB,SAA2Bp/C,GAIrE,IAHE,IAEEq/C,EAAY,KACP5jD,EAAIuE,EAAE+9C,WAAW1b,WAAY5mC,EAAE6mC,WAAY,CAClD,IAAI4a,EAAKzhD,EAAE6C,OACX,GAAI4+C,EAAGoC,aAAepC,EAAGgB,SAASoB,YAAa,CAC7CD,EAAYnC,EACZ,OAGJ,GAAkB,OAAdmC,EAAsB,MAAM,IAAIhB,GAAkB,4CAA8Cr+C,EAAEusB,iBACtGvsB,EAAE+9C,WAAWwB,cAAcF,GAC3B,IAAK,IAAIliB,EAAMn9B,EAAE+9C,WAAW1b,WAAYlF,EAAImF,WAAY,CACtD,IAAIkd,EAAOriB,EAAI7+B,OACfkhD,EAAKN,YAAW,GAdHtiD,KAeN6iD,cAAcD,KAGzBb,GAAej9C,UAAUg+C,aAAe,SAAuBC,GAC7D/iD,KAAKqiD,oBACL,IAAI/B,EAAKtgD,KAAKgiD,QAAQrB,UAGtBL,EAAG0C,cAAcxD,GAAS9e,MAAOqiB,GACjC/iD,KAAK6iD,cAAcvC,GACnBtgD,KAAK2iD,cAAcrC,IAErByB,GAAej9C,UAAUoc,OAAS,SAAiB3hB,GACjDS,KAAKijD,aAAa1jD,GAClBS,KAAKgiD,QAAQT,SAASvhD,KAAKiiD,cAC3BjiD,KAAKmiD,gBAAkBniD,KAAKgiD,QAAQryB,iBAEtCoyB,GAAej9C,UAAUo+C,gBAAkB,WACzC,IAAK,IAAIlQ,EAAKhzC,KAAKiiD,aAAaxc,WAAYuN,EAAGtN,WAAY,CACzD,IAAI4a,EAAKtN,EAAGtxC,OACR4+C,EAAG6C,SAAS3D,GAAS9e,QAAU,GAAK4f,EAAG6C,SAAS3D,GAAS5e,OAAS,IAAM0f,EAAG8C,sBAC7E9C,EAAG+C,aAAY,KAIrBtB,GAAej9C,UAAU69C,cAAgB,SAAwBF,GAC7D,IAEEa,EAAe,IAAIzW,GACnB0W,EAAY,IAAI3B,GAChB4B,EAAYf,EAAUvB,UAI1B,IAHAqC,EAAU1B,QAAQ2B,GAClBF,EAAarjD,IAAIujD,GACjBf,EAAUH,YAAW,IACbiB,EAAUztB,WAAW,CAC3B,IAAI1yB,EAAImgD,EAAUzB,cAClBwB,EAAarjD,IAAImD,GAVJpD,KAWNwiD,iBAAiBp/C,GACxB,IAAK,IAAIvE,EAAIuE,EAAE+9C,WAAW1b,WAAY5mC,EAAE6mC,WAAY,CAClD,IACI+d,EADK5kD,EAAE6C,OACE4/C,SACb,IAAImC,EAAIf,YAAR,CACA,IAAIgB,EAAUD,EAAIvC,UACboC,EAAatvB,SAAS0vB,KACzBH,EAAU1B,QAAQ6B,GAClBJ,EAAarjD,IAAIyjD,QAKzB3B,GAAej9C,UAAUge,UAAY,SAAoBC,GACvD,IAAI4gC,EAAQ5gC,EACZ,OAAI/iB,KAAKmiD,gBAAgBziD,EAAIikD,EAAMxB,gBAAgBziD,GACzC,EAENM,KAAKmiD,gBAAgBziD,EAAIikD,EAAMxB,gBAAgBziD,EAC1C,EAEF,GAETqiD,GAAej9C,UAAU+/B,YAAc,WACrC,GAAkB,OAAd7kC,KAAKoiD,KAAe,CAEtB,IADA,IAAIwB,EAAU,IAAI3xB,GACT+gB,EAAKhzC,KAAKiiD,aAAaxc,WAAYuN,EAAGtN,WAG7C,IAFA,IACIhE,EADUsR,EAAGtxC,OACCi/C,UAAU1Q,iBACnBpxC,EAAI,EAAGA,EAAI6iC,EAAIjhC,OAAS,EAAG5B,IAClC+kD,EAAQtwB,gBAAgBoO,EAAI7iC,IAGhCmB,KAAKoiD,KAAOwB,EAEd,OAAO5jD,KAAKoiD,MAEdL,GAAej9C,UAAUm+C,aAAe,SAAuBO,GAC3D,IAEEK,EAAY,IAAIjE,GAEpB,IADAiE,EAAU5jD,IAAIujD,IACNK,EAAU9D,SAAS,CACzB,IAAIxgD,EAAOskD,EAAUnjD,MALRV,KAMNC,IAAIV,EAAMskD,KAGrB9B,GAAej9C,UAAU+9C,cAAgB,SAAwBvC,GAC/D,IAAImD,EAAMnD,EAAGgB,SACbmC,EAAIK,SAAStE,GAAS5e,KAAM0f,EAAG6C,SAAS3D,GAAS9e,QACjD+iB,EAAIK,SAAStE,GAAS9e,MAAO4f,EAAG6C,SAAS3D,GAAS5e,QAEpDmhB,GAAej9C,UAAU7E,IAAM,SAAcV,EAAMskD,GAGjDtkD,EAAK+iD,YAAW,GAChBtiD,KAAKkiD,OAAOjiD,IAAIV,GAChB,IAAK,IAAIV,EAAIU,EAAK4hD,WAAW1b,WAAY5mC,EAAE6mC,WAAY,CACrD,IAAI4a,EAAKzhD,EAAE6C,OALE1B,KAMNiiD,aAAahiD,IAAIqgD,GACxB,IACIyD,EADMzD,EAAGgB,SACKJ,UACb6C,EAAQrB,aAAemB,EAAUrjD,KAAKujD,KAG/ChC,GAAej9C,UAAUk/C,SAAW,WAClC,OAAOhkD,KAAKkiD,QAEdH,GAAej9C,UAAUm/C,iBAAmB,WAC1C,OAAOjkD,KAAKiiD,cAEdF,GAAej9C,UAAUyb,YAAc,WACrC,MAAO,CAACoB,KAEVogC,GAAej9C,UAAU0b,SAAW,WAClC,OAAOuhC,IAGT,IAAImC,GAAmB,SAASA,IAI9B,GADAlkD,KAAKmkD,SAAW,KACS,IAArB7uC,UAAU7U,QACZ,GAAI6U,UAAU,aAAc7M,MAAO,CACjC,IAAI07C,EAAW7uC,UAAU,GACzBtV,KAAK4mB,KAAKu9B,EAAS1jD,aACd,GAAIuE,OAAOgb,UAAU1K,UAAU,IAAK,CACzC,IAAI8uC,EAAK9uC,UAAU,GACnBtV,KAAK4mB,KAAK,GACV5mB,KAAKmkD,SAAS3E,GAASE,IAAM0E,OACxB,GAAI9uC,UAAU,aAAc4uC,EAAkB,CACnD,IAAIG,EAAK/uC,UAAU,GAEnB,GADAtV,KAAK4mB,KAAKy9B,EAAGF,SAAS1jD,QACX,OAAP4jD,EACF,IAAK,IAAIxlD,EAAI,EAAGA,EAAImB,KAAKmkD,SAAS1jD,OAAQ5B,IAfnCmB,KAgBEmkD,SAAStlD,GAAKwlD,EAAGF,SAAStlD,SAIlC,GAAyB,IAArByW,UAAU7U,OAAc,CACjC,IAAI6jD,EAAOhvC,UAAU,GACjB/W,EAAO+W,UAAU,GACjB9W,EAAQ8W,UAAU,GACtBtV,KAAK4mB,KAAK,GACV5mB,KAAKmkD,SAAS3E,GAASE,IAAM4E,EAC7BtkD,KAAKmkD,SAAS3E,GAAS5e,MAAQriC,EAC/ByB,KAAKmkD,SAAS3E,GAAS9e,OAASliC,IAGpC0lD,GAAiBp/C,UAAUy/C,gBAAkB,SAA0BC,GAGrE,IAFE,IAEO3lD,EAAI,EAAGA,EAAImB,KAAKmkD,SAAS1jD,OAAQ5B,IAF3BmB,KAGNmkD,SAAStlD,GAAK2lD,GAGzBN,GAAiBp/C,UAAU6tB,OAAS,WAGlC,IAFE,IAEO9zB,EAAI,EAAGA,EAAImB,KAAKmkD,SAAS1jD,OAAQ5B,IACxC,GAHamB,KAGFmkD,SAAStlD,KAAOwlB,GAASK,KAAQ,OAAO,EAErD,OAAO,GAETw/B,GAAiBp/C,UAAU2/C,sBAAwB,SAAgCD,GAGjF,IAFE,IAEO3lD,EAAI,EAAGA,EAAImB,KAAKmkD,SAAS1jD,OAAQ5B,IAF3BmB,KAGFmkD,SAAStlD,KAAOwlB,GAASK,OAHvB1kB,KAGsCmkD,SAAStlD,GAAK2lD,IAGrEN,GAAiBp/C,UAAU4/C,OAAS,WAClC,OAAgC,IAAzB1kD,KAAKmkD,SAAS1jD,QAEvByjD,GAAiBp/C,UAAUjB,MAAQ,SAAgBwgD,GAGjD,GAAIA,EAAGF,SAAS1jD,OAAST,KAAKmkD,SAAS1jD,OAAQ,CAC7C,IAAIkkD,EAAS,IAAIl8C,MAAM,GAAGwjB,KAAK,MAC/B04B,EAAOnF,GAASE,IAAM1/C,KAAKmkD,SAAS3E,GAASE,IAC7CiF,EAAOnF,GAAS5e,MAAQvc,GAASK,KACjCigC,EAAOnF,GAAS9e,OAASrc,GAASK,KAClC1kB,KAAKmkD,SAAWQ,EAElB,IAAK,IAAI9lD,EAAI,EAAGA,EAAImB,KAAKmkD,SAAS1jD,OAAQ5B,IAT3BmB,KAUFmkD,SAAStlD,KAAOwlB,GAASK,MAAQ7lB,EAAIwlD,EAAGF,SAAS1jD,SAV/CT,KAUgEmkD,SAAStlD,GAAKwlD,EAAGF,SAAStlD,KAG3GqlD,GAAiBp/C,UAAU8/C,aAAe,WACxC,OAAO5kD,KAAKmkD,UAEdD,GAAiBp/C,UAAU+/C,KAAO,WAChC,GAAI7kD,KAAKmkD,SAAS1jD,QAAU,EAAK,OAAO,KACxC,IAAIqkD,EAAO9kD,KAAKmkD,SAAS3E,GAAS5e,MAClC5gC,KAAKmkD,SAAS3E,GAAS5e,MAAQ5gC,KAAKmkD,SAAS3E,GAAS9e,OACtD1gC,KAAKmkD,SAAS3E,GAAS9e,OAASokB,GAElCZ,GAAiBp/C,UAAUme,SAAW,WACpC,IAAIuF,EAAM,IAAIzC,GAId,OAHI/lB,KAAKmkD,SAAS1jD,OAAS,GAAK+nB,EAAIvC,OAAO5B,GAASM,iBAAiB3kB,KAAKmkD,SAAS3E,GAAS5e,QAC5FpY,EAAIvC,OAAO5B,GAASM,iBAAiB3kB,KAAKmkD,SAAS3E,GAASE,MACxD1/C,KAAKmkD,SAAS1jD,OAAS,GAAK+nB,EAAIvC,OAAO5B,GAASM,iBAAiB3kB,KAAKmkD,SAAS3E,GAAS9e,SACrFlY,EAAIvF,YAEbihC,GAAiBp/C,UAAUigD,aAAe,SAAuBX,EAAI7lD,EAAMC,GACzEwB,KAAKmkD,SAAS3E,GAASE,IAAM0E,EAC7BpkD,KAAKmkD,SAAS3E,GAAS5e,MAAQriC,EAC/ByB,KAAKmkD,SAAS3E,GAAS9e,OAASliC,GAElC0lD,GAAiBp/C,UAAUkH,IAAM,SAAcg5C,GAC7C,OAAIA,EAAWhlD,KAAKmkD,SAAS1jD,OAAiBT,KAAKmkD,SAASa,GACrD3gC,GAASK,MAElBw/B,GAAiBp/C,UAAUmgD,OAAS,WAClC,OAAOjlD,KAAKmkD,SAAS1jD,OAAS,GAEhCyjD,GAAiBp/C,UAAUogD,UAAY,WAGrC,IAFE,IAEOrmD,EAAI,EAAGA,EAAImB,KAAKmkD,SAAS1jD,OAAQ5B,IACxC,GAHamB,KAGFmkD,SAAStlD,KAAOwlB,GAASK,KAAQ,OAAO,EAErD,OAAO,GAETw/B,GAAiBp/C,UAAUqgD,YAAc,WACvC,GAAyB,IAArB7vC,UAAU7U,OAAc,CAC1B,IAAI+jD,EAAWlvC,UAAU,GACzBtV,KAAKmlD,YAAY3F,GAASE,GAAI8E,QACzB,GAAyB,IAArBlvC,UAAU7U,OAAc,CACjC,IAAI2kD,EAAW9vC,UAAU,GACrB+vC,EAAa/vC,UAAU,GAC3BtV,KAAKmkD,SAASiB,GAAYC,IAG9BnB,GAAiBp/C,UAAU8hB,KAAO,SAAe9kB,GAC/C9B,KAAKmkD,SAAW,IAAI17C,MAAM3G,GAAMmqB,KAAK,MACrCjsB,KAAKukD,gBAAgBlgC,GAASK,OAEhCw/B,GAAiBp/C,UAAUwgD,cAAgB,SAAwBz9B,EAAIu9B,GACrE,OAAOplD,KAAKmkD,SAASiB,KAAcv9B,EAAGs8B,SAASiB,IAEjDlB,GAAiBp/C,UAAUygD,kBAAoB,SAA4BC,GAGzE,IAFE,IAEO3mD,EAAI,EAAGA,EAAImB,KAAKmkD,SAAS1jD,OAAQ5B,IACxC,GAHamB,KAGFmkD,SAAStlD,KAAO2mD,EAAO,OAAO,EAE3C,OAAO,GAETtB,GAAiBp/C,UAAUyb,YAAc,WACvC,MAAO,IAET2jC,GAAiBp/C,UAAU0b,SAAW,WACpC,OAAO0jC,IAGT,IAAIuB,GAAQ,SAASA,IAEnB,GADAzlD,KAAK0lD,IAAM,IAAIj9C,MAAM,GAAGwjB,KAAK,MACJ,IAArB3W,UAAU7U,QACZ,GAAIuE,OAAOgb,UAAU1K,UAAU,IAAK,CAClC,IAAIqwC,EAAQrwC,UAAU,GACtBtV,KAAK0lD,IAAI,GAAK,IAAIxB,GAAiByB,GACnC3lD,KAAK0lD,IAAI,GAAK,IAAIxB,GAAiByB,QAC9B,GAAIrwC,UAAU,aAAcmwC,EAAO,CACxC,IAAIG,EAAMtwC,UAAU,GACpBtV,KAAK0lD,IAAI,GAAK,IAAIxB,GAAiB0B,EAAIF,IAAI,IAC3C1lD,KAAK0lD,IAAI,GAAK,IAAIxB,GAAiB0B,EAAIF,IAAI,UAExC,GAAyB,IAArBpwC,UAAU7U,OAAc,CACjC,IAAIolD,EAAYvwC,UAAU,GACtBwwC,EAAUxwC,UAAU,GACxBtV,KAAK0lD,IAAI,GAAK,IAAIxB,GAAiB7/B,GAASK,MAC5C1kB,KAAK0lD,IAAI,GAAK,IAAIxB,GAAiB7/B,GAASK,MAC5C1kB,KAAK0lD,IAAIG,GAAWV,YAAYW,QAC3B,GAAyB,IAArBxwC,UAAU7U,OAAc,CACjC,IAAIslD,EAAUzwC,UAAU,GACpB0wC,EAAU1wC,UAAU,GACpB2wC,EAAW3wC,UAAU,GACzBtV,KAAK0lD,IAAI,GAAK,IAAIxB,GAAiB6B,EAASC,EAASC,GACrDjmD,KAAK0lD,IAAI,GAAK,IAAIxB,GAAiB6B,EAASC,EAASC,QAChD,GAAyB,IAArB3wC,UAAU7U,OAAc,CACjC,IAAIylD,EAAc5wC,UAAU,GACxB6wC,EAAU7wC,UAAU,GACpB8wC,EAAY9wC,UAAU,GACtB+wC,EAAa/wC,UAAU,GAC3BtV,KAAK0lD,IAAI,GAAK,IAAIxB,GAAiB7/B,GAASK,KAAML,GAASK,KAAML,GAASK,MAC1E1kB,KAAK0lD,IAAI,GAAK,IAAIxB,GAAiB7/B,GAASK,KAAML,GAASK,KAAML,GAASK,MAC1E1kB,KAAK0lD,IAAIQ,GAAanB,aAAaoB,EAASC,EAAWC,KAG3DZ,GAAM3gD,UAAUwhD,iBAAmB,WACjC,IAAInT,EAAQ,EAGZ,OAFKnzC,KAAK0lD,IAAI,GAAG/yB,UAAYwgB,IACxBnzC,KAAK0lD,IAAI,GAAG/yB,UAAYwgB,IACtBA,GAETsS,GAAM3gD,UAAUy/C,gBAAkB,SAA0BsB,EAAW1B,GACrEnkD,KAAK0lD,IAAIG,GAAWtB,gBAAgBJ,IAEtCsB,GAAM3gD,UAAU6tB,OAAS,SAAiBkzB,GACxC,OAAO7lD,KAAK0lD,IAAIG,GAAWlzB,UAE7B8yB,GAAM3gD,UAAU2/C,sBAAwB,WACtC,GAAyB,IAArBnvC,UAAU7U,OAAc,CAC1B,IAAI0jD,EAAW7uC,UAAU,GACzBtV,KAAKykD,sBAAsB,EAAGN,GAC9BnkD,KAAKykD,sBAAsB,EAAGN,QACzB,GAAyB,IAArB7uC,UAAU7U,OAAc,CACjC,IAAIolD,EAAYvwC,UAAU,GACtBixC,EAAajxC,UAAU,GAC3BtV,KAAK0lD,IAAIG,GAAWpB,sBAAsB8B,KAG9Cd,GAAM3gD,UAAU4/C,OAAS,SAAiBmB,GACxC,OAAO7lD,KAAK0lD,IAAIG,GAAWnB,UAE7Be,GAAM3gD,UAAUjB,MAAQ,SAAgB+hD,GAGtC,IAFE,IAEO/mD,EAAI,EAAGA,EAAI,EAAGA,IACC,OAHTmB,KAGF0lD,IAAI7mD,IAA8B,OAAf+mD,EAAIF,IAAI7mD,GAHzBmB,KAIJ0lD,IAAI7mD,GAAK,IAAIqlD,GAAiB0B,EAAIF,IAAI7mD,IAJlCmB,KAMJ0lD,IAAI7mD,GAAGgF,MAAM+hD,EAAIF,IAAI7mD,KAIlC4mD,GAAM3gD,UAAU+/C,KAAO,WACrB7kD,KAAK0lD,IAAI,GAAGb,OACZ7kD,KAAK0lD,IAAI,GAAGb,QAEdY,GAAM3gD,UAAUk7B,YAAc,WAC5B,GAAyB,IAArB1qB,UAAU7U,OAAc,CAC1B,IAAIolD,EAAYvwC,UAAU,GAC1B,OAAOtV,KAAK0lD,IAAIG,GAAW75C,IAAIwzC,GAASE,IACnC,GAAyB,IAArBpqC,UAAU7U,OAAc,CACjC,IAAIylD,EAAc5wC,UAAU,GACxB0vC,EAAW1vC,UAAU,GACzB,OAAOtV,KAAK0lD,IAAIQ,GAAal6C,IAAIg5C,KAGrCS,GAAM3gD,UAAUme,SAAW,WACzB,IAAIuF,EAAM,IAAIzC,GASd,OARoB,OAAhB/lB,KAAK0lD,IAAI,KACXl9B,EAAIvC,OAAO,MACXuC,EAAIvC,OAAOjmB,KAAK0lD,IAAI,GAAGziC,aAEL,OAAhBjjB,KAAK0lD,IAAI,KACXl9B,EAAIvC,OAAO,OACXuC,EAAIvC,OAAOjmB,KAAK0lD,IAAI,GAAGziC,aAElBuF,EAAIvF,YAEbwiC,GAAM3gD,UAAUmgD,OAAS,WACvB,GAAyB,IAArB3vC,UAAU7U,OACZ,OAAOT,KAAK0lD,IAAI,GAAGT,UAAYjlD,KAAK0lD,IAAI,GAAGT,SACtC,GAAyB,IAArB3vC,UAAU7U,OAAc,CACjC,IAAIolD,EAAYvwC,UAAU,GAC1B,OAAOtV,KAAK0lD,IAAIG,GAAWZ,WAG/BQ,GAAM3gD,UAAUogD,UAAY,SAAoBW,GAC9C,OAAO7lD,KAAK0lD,IAAIG,GAAWX,aAE7BO,GAAM3gD,UAAUqgD,YAAc,WAC5B,GAAyB,IAArB7vC,UAAU7U,OAAc,CAC1B,IAAIolD,EAAYvwC,UAAU,GACtB6uC,EAAW7uC,UAAU,GACzBtV,KAAK0lD,IAAIG,GAAWV,YAAY3F,GAASE,GAAIyE,QACxC,GAAyB,IAArB7uC,UAAU7U,OAAc,CACjC,IAAIylD,EAAc5wC,UAAU,GACxB0vC,EAAW1vC,UAAU,GACrBixC,EAAajxC,UAAU,GAC3BtV,KAAK0lD,IAAIQ,GAAaf,YAAYH,EAAUuB,KAGhDd,GAAM3gD,UAAUwgD,cAAgB,SAAwBM,EAAKrF,GAC3D,OAAOvgD,KAAK0lD,IAAI,GAAGJ,cAAcM,EAAIF,IAAI,GAAInF,IAASvgD,KAAK0lD,IAAI,GAAGJ,cAAcM,EAAIF,IAAI,GAAInF,IAE9FkF,GAAM3gD,UAAUygD,kBAAoB,SAA4BM,EAAWL,GACzE,OAAOxlD,KAAK0lD,IAAIG,GAAWN,kBAAkBC,IAE/CC,GAAM3gD,UAAU0hD,OAAS,SAAiBX,GACpC7lD,KAAK0lD,IAAIG,GAAWZ,WAAYjlD,KAAK0lD,IAAIG,GAAa,IAAI3B,GAAiBlkD,KAAK0lD,IAAIG,GAAW1B,SAAS,MAE9GsB,GAAM3gD,UAAUyb,YAAc,WAC5B,MAAO,IAETklC,GAAM3gD,UAAU0b,SAAW,WACzB,OAAOilC,IAETA,GAAMgB,YAAc,SAAsBC,GAExC,IADA,IAAIC,EAAY,IAAIlB,GAAMphC,GAASK,MAC1B7lB,EAAI,EAAGA,EAAI,EAAGA,IACrB8nD,EAAUxB,YAAYtmD,EAAG6nD,EAAM1mB,YAAYnhC,IAE7C,OAAO8nD,GAGT,IAAIC,GAAW,WACb5mD,KAAK6mD,SAAW,KAChB7mD,KAAK8mD,gBAAkB,EACvB9mD,KAAK+mD,OAAS,IAAIvf,GAClBxnC,KAAKgnD,KAAO,IAAIxf,GAChBxnC,KAAKinD,OAAS,IAAIxB,GAAMphC,GAASK,MACjC1kB,KAAKknD,MAAQ,KACblnD,KAAKmnD,QAAU,KACfnnD,KAAKg3B,OAAS,KACdh3B,KAAKi3B,OAAS,IAAIuQ,GAClBxnC,KAAKonD,iBAAmB,KACxB,IAAI/kD,EAAQiT,UAAU,GAClBwf,EAAkBxf,UAAU,GAChCtV,KAAKonD,iBAAmBtyB,EACxB90B,KAAKqnD,cAAchlD,GACnBrC,KAAKsnD,eAEPV,GAAS9hD,UAAUwiD,YAAc,WAG/B,GAAmB,OAAftnD,KAAKknD,MAAkB,OAAO,KAElC,IADA,IAAIj/C,EAAQ,IAAIQ,MAAMzI,KAAKgnD,KAAKllD,QAAQmqB,KAAK,MACpCptB,EAAI,EAAGA,EAAImB,KAAKgnD,KAAKllD,OAAQjD,IACpCoJ,EAAMpJ,GALOmB,KAKKgnD,KAAKh7C,IAAInN,GAE7BmB,KAAKknD,MAAQlnD,KAAKonD,iBAAiBxvB,iBAAiB3vB,GACpDjI,KAAKmnD,QAAU7qB,GAAasF,MAAM5hC,KAAKknD,MAAMjX,mBAE/C2W,GAAS9hD,UAAUyiD,WAAa,WAC9B,OAA0C,IAAnCvnD,KAAKinD,OAAOX,oBAErBM,GAAS9hD,UAAUuiD,cAAgB,SAAwBhlD,GAGzDrC,KAAK6mD,SAAWxkD,EAChB,IAAIi+C,EAAKj+C,EACLmlD,GAAc,EAClB,EAAG,CACD,GAAW,OAAPlH,EAAe,MAAM,IAAImB,GAAkB,2BAC/C,GAAInB,EAAGmH,gBAPMznD,KAOsB,MAAM,IAAIyhD,GAAkB,uDAAyDnB,EAAG3wB,iBAP9G3vB,KAQN+mD,OAAO9mD,IAAIqgD,GAClB,IAAIoG,EAAQpG,EAAGoH,WACf7uB,GAAOE,OAAO2tB,EAAMzB,UAVPjlD,KAWN2nD,WAAWjB,GAXL1mD,KAYN4nD,UAAUtH,EAAGK,UAAWL,EAAGe,YAAamG,GAC/CA,GAAc,EAbDxnD,KAcN6nD,YAAYvH,EAdNtgD,MAebsgD,EAfatgD,KAeD8nD,QAAQxH,SACbA,IAAOtgD,KAAK6mD,WAEvBD,GAAS9hD,UAAUijD,cAAgB,WACjC,OAAO/nD,KAAKknD,OAEdN,GAAS9hD,UAAU6qB,cAAgB,SAAwB9wB,GACzD,OAAOmB,KAAKgnD,KAAKh7C,IAAInN,IAEvB+nD,GAAS9hD,UAAUkjD,qBAAuB,WAGxChoD,KAAK8mD,eAAiB,EACtB,IAAIxG,EAAKtgD,KAAK6mD,SACd,EAAG,CACD,IACIoB,EADO3H,EAAGY,UACIC,WAAW+G,kBANhBloD,MAOTioD,EAPSjoD,KAOO8mD,iBAPP9mD,KAOgC8mD,eAAiBmB,GAC9D3H,EARatgD,KAQD8nD,QAAQxH,SACbA,IAAOtgD,KAAK6mD,UACrB7mD,KAAK8mD,gBAAkB,GAEzBF,GAAS9hD,UAAU8iD,UAAY,SAAoBO,EAAM9G,EAAWmG,GAChE,IAEEY,EAAUD,EAAKlY,iBACnB,GAAIoR,EAAW,CACb,IAAIgH,EAAa,EACbb,IAAea,EAAa,GAChC,IAAK,IAAIxpD,EAAIwpD,EAAYxpD,EAAIupD,EAAQ3nD,OAAQ5B,IANhCmB,KAOJgnD,KAAK/mD,IAAImoD,EAAQvpD,QAErB,CACL,IAAIypD,EAAeF,EAAQ3nD,OAAS,EAChC+mD,IAAec,EAAeF,EAAQ3nD,OAAS,GACnD,IAAK,IAAI8/B,EAAM+nB,EAAc/nB,GAAO,EAAGA,IAZ1BvgC,KAaJgnD,KAAK/mD,IAAImoD,EAAQ7nB,MAI9BqmB,GAAS9hD,UAAUyjD,OAAS,WAC1B,OAAOvoD,KAAKmnD,SAEdP,GAAS9hD,UAAUu+C,YAAc,WAC/B,IAAI/C,EAAKtgD,KAAK6mD,SACd,GACEvG,EAAGK,UAAU0C,aAAY,GACzB/C,EAAKA,EAAGwH,gBACDxH,IAAOtgD,KAAK6mD,WAEvBD,GAAS9hD,UAAU0jD,cAAgB,SAAwB7mD,GACzD,IAAIs2B,EAAQj4B,KAAK+nD,gBAEjB,IADU9vB,EAAM8M,sBACP/Q,SAASryB,GAAM,OAAO,EAC/B,IAAK26B,GAAakF,cAAc7/B,EAAGs2B,EAAMgY,kBAAqB,OAAO,EACrE,IAAK,IAAIpxC,EAAImB,KAAKi3B,OAAOwO,WAAY5mC,EAAE6mC,WAAY,CAEjD,GADW7mC,EAAE6C,OACJ8mD,cAAc7mD,GAAM,OAAO,EAEtC,OAAO,GAETilD,GAAS9hD,UAAU2jD,QAAU,SAAkBh/C,GAC7CzJ,KAAKi3B,OAAOh3B,IAAIwJ,IAElBm9C,GAAS9hD,UAAU4jD,QAAU,WAC3B,OAAuB,OAAhB1oD,KAAKg3B,QAEd4vB,GAAS9hD,UAAU4iD,SAAW,WAC5B,OAAO1nD,KAAKinD,QAEdL,GAAS9hD,UAAUq8C,SAAW,WAC5B,OAAOnhD,KAAK+mD,QAEdH,GAAS9hD,UAAU6jD,iBAAmB,WAEpC,OADI3oD,KAAK8mD,eAAiB,GAAK9mD,KAAKgoD,uBAC7BhoD,KAAK8mD,gBAEdF,GAAS9hD,UAAU8jD,SAAW,WAC5B,OAAO5oD,KAAKg3B,QAEd4vB,GAAS9hD,UAAU6iD,WAAa,WAC9B,GAAyB,IAArBryC,UAAU7U,OAAc,CAC1B,IAAIooD,EAAUvzC,UAAU,GACxBtV,KAAK2nD,WAAWkB,EAAS,GACzB7oD,KAAK2nD,WAAWkB,EAAS,QACpB,GAAyB,IAArBvzC,UAAU7U,OAAc,CACjC,IAAIqoD,EAAYxzC,UAAU,GACtBuwC,EAAYvwC,UAAU,GACtBkwC,EAAMsD,EAAU9oB,YAAY6lB,EAAWrG,GAAS9e,OACpD,GAAI8kB,IAAQnhC,GAASK,KAAQ,OAAO,KACpC,GAAI1kB,KAAKinD,OAAOjnB,YAAY6lB,KAAexhC,GAASK,KAElD,OADA1kB,KAAKinD,OAAO9B,YAAYU,EAAWL,GAC5B,OAIboB,GAAS9hD,UAAUikD,SAAW,SAAmB9wB,GAC/Cj4B,KAAKg3B,OAASiB,EACA,OAAVA,GAAkBA,EAAMwwB,QAAQzoD,OAEtC4mD,GAAS9hD,UAAUkkD,UAAY,SAAoBl0B,GAIjD,IAHE,IAEEm0B,EAAS,IAAIxgD,MAAMzI,KAAKi3B,OAAOn1B,QAAQmqB,KAAK,MACvCptB,EAAI,EAAGA,EAAImB,KAAKi3B,OAAOn1B,OAAQjD,IACtCoqD,EAAOpqD,GAJMmB,KAIMi3B,OAAOjrB,IAAInN,GAAGkpD,gBAGnC,OADWjzB,EAAgBkD,cAAch4B,KAAK+nD,gBAAiBkB,IAGjErC,GAAS9hD,UAAUyb,YAAc,WAC/B,MAAO,IAETqmC,GAAS9hD,UAAU0b,SAAW,WAC5B,OAAOomC,IAGT,IAAIsC,GAAmB,SAAUC,GAC/B,SAASD,IACP,IAAI7mD,EAAQiT,UAAU,GAClBwf,EAAkBxf,UAAU,GAChC6zC,EAAYxoD,KAAKX,KAAMqC,EAAOyyB,GAmBhC,OAhBKq0B,IAAcD,EAAgBjoC,UAAYkoC,GAC/CD,EAAgBpkD,UAAYL,OAAOyc,OAAQioC,GAAeA,EAAYrkD,WACtEokD,EAAgBpkD,UAAUqc,YAAc+nC,EACxCA,EAAgBpkD,UAAU+iD,YAAc,SAAsBvH,EAAI8I,GAChE9I,EAAG+I,eAAeD,IAEpBF,EAAgBpkD,UAAUgjD,QAAU,SAAkBxH,GACpD,OAAOA,EAAGgJ,cAEZJ,EAAgBpkD,UAAUyb,YAAc,WACtC,MAAO,IAET2oC,EAAgBpkD,UAAU0b,SAAW,WACnC,OAAO0oC,GAGFA,GACPtC,IAEE2C,GAAmB,SAAUJ,GAC/B,SAASI,IACP,IAAIlnD,EAAQiT,UAAU,GAClBwf,EAAkBxf,UAAU,GAChC6zC,EAAYxoD,KAAKX,KAAMqC,EAAOyyB,GA2ChC,OAxCKq0B,IAAcI,EAAgBtoC,UAAYkoC,GAC/CI,EAAgBzkD,UAAYL,OAAOyc,OAAQioC,GAAeA,EAAYrkD,WACtEykD,EAAgBzkD,UAAUqc,YAAcooC,EACxCA,EAAgBzkD,UAAU0kD,kBAAoB,WAC5C,IAEIC,EAAe,IAAIjiB,GACnB8Y,EAAKtgD,KAAK6mD,SACd,EAAG,CACD,GAA4B,OAAxBvG,EAAGoJ,iBAA2B,CAChC,IAAIC,EAAQ,IAAIT,GAAgB5I,EANvBtgD,KAMkConD,kBAC3CqC,EAAaxpD,IAAI0pD,GAEnBrJ,EAAKA,EAAGwH,gBACDxH,IAAOtgD,KAAK6mD,UACrB,OAAO4C,GAETF,EAAgBzkD,UAAU+iD,YAAc,SAAsBvH,EAAI8I,GAChE9I,EAAGuH,YAAYuB,IAEjBG,EAAgBzkD,UAAU8kD,qCAAuC,WAC/D,IAEItJ,EAAKtgD,KAAK6mD,SACd,EAAG,CACUvG,EAAGY,UACTC,WAAW0I,yBALL7pD,MAMXsgD,EAAKA,EAAGwH,gBACDxH,IAAOtgD,KAAK6mD,WAEvB0C,EAAgBzkD,UAAUgjD,QAAU,SAAkBxH,GACpD,OAAOA,EAAGwH,WAEZyB,EAAgBzkD,UAAUyb,YAAc,WACtC,MAAO,IAETgpC,EAAgBzkD,UAAU0b,SAAW,WACnC,OAAO+oC,GAGFA,GACP3C,IAEEkD,GAAiB,WAMnB,GALA9pD,KAAKinD,OAAS,KACdjnD,KAAK+pD,aAAc,EACnB/pD,KAAKgqD,YAAa,EAClBhqD,KAAKiqD,eAAgB,EACrBjqD,KAAKkqD,YAAa,EACO,IAArB50C,UAAU7U,aAAsB,GAAyB,IAArB6U,UAAU7U,OAAc,CAC9D,IAAIimD,EAAQpxC,UAAU,GACtBtV,KAAKinD,OAASP,IAGlBoD,GAAehlD,UAAUw9C,WAAa,SAAqBI,GACzD1iD,KAAKkqD,WAAaxH,GAEpBoH,GAAehlD,UAAUu+C,YAAc,SAAsBl4C,GAC3DnL,KAAK+pD,YAAc5+C,GAErB2+C,GAAehlD,UAAUqlD,UAAY,WACnC,OAAOnqD,KAAKgqD,YAEdF,GAAehlD,UAAUslD,aAAe,WACtC,OAAOpqD,KAAKiqD,eAEdH,GAAehlD,UAAUulD,SAAW,SAAmB3D,GACrD1mD,KAAKinD,OAASP,GAEhBoD,GAAehlD,UAAU4iD,SAAW,WAClC,OAAO1nD,KAAKinD,QAEd6C,GAAehlD,UAAUwlD,WAAa,SAAqBH,GACzDnqD,KAAKgqD,WAAaG,EAClBnqD,KAAKiqD,eAAgB,GAEvBH,GAAehlD,UAAUylD,SAAW,SAAmBC,GACrD3xB,GAAOE,OAAO/4B,KAAKinD,OAAOX,oBAAsB,EAAG,uBACnDtmD,KAAKyqD,UAAUD,IAEjBV,GAAehlD,UAAUqG,WAAa,WACpC,OAAOnL,KAAK+pD,aAEdD,GAAehlD,UAAU49C,UAAY,WACnC,OAAO1iD,KAAKkqD,YAEdJ,GAAehlD,UAAUyb,YAAc,WACrC,MAAO,IAETupC,GAAehlD,UAAU0b,SAAW,WAClC,OAAOspC,IAGT,IAAI1rD,GAAQ,SAAUssD,GACpB,SAAStsD,IACPssD,EAAkB/pD,KAAKX,MACvBA,KAAK2qD,OAAS,KACd3qD,KAAK+mD,OAAS,KACd,IAAI9+C,EAAQqN,UAAU,GAClBs1C,EAAQt1C,UAAU,GACtBtV,KAAK2qD,OAAS1iD,EACdjI,KAAK+mD,OAAS6D,EACd5qD,KAAKinD,OAAS,IAAIxB,GAAM,EAAGphC,GAASK,MAwFtC,OArFKgmC,IAAoBtsD,EAAK6iB,UAAYypC,GAC1CtsD,EAAK0G,UAAYL,OAAOyc,OAAQwpC,GAAqBA,EAAkB5lD,WACvE1G,EAAK0G,UAAUqc,YAAc/iB,EAC7BA,EAAK0G,UAAU+lD,uBAAyB,WACtC,IAAK,IAAI7X,EAAKhzC,KAAKmhD,WAAWA,WAAW1b,WAAYuN,EAAGtN,WAAY,CAElE,GADSsN,EAAGtxC,OACLi/C,UAAUx1C,aAAgB,OAAO,EAE1C,OAAO,GAET/M,EAAK0G,UAAUyiD,WAAa,WAC1B,OAA0C,IAAnCvnD,KAAKinD,OAAOX,oBAErBloD,EAAK0G,UAAU6qB,cAAgB,WAC7B,OAAO3vB,KAAK2qD,QAEdvsD,EAAK0G,UAAUgmD,MAAQ,SAAgBznD,GACrCA,EAAIm6B,QAAQ,QAAUx9B,KAAK2qD,OAAS,SAAW3qD,KAAKinD,SAEtD7oD,EAAK0G,UAAU2lD,UAAY,SAAoBD,KAC/CpsD,EAAK0G,UAAUimD,sBAAwB,SAAgCC,EAAQC,GAC7E,IAAIzF,EAAMnhC,GAASK,KAEnB,GADA8gC,EAAMxlD,KAAKinD,OAAOjnB,YAAYirB,IACzBD,EAAOr4B,OAAOs4B,GAAW,CAC5B,IAAIC,EAAOF,EAAOhrB,YAAYirB,GAC1BzF,IAAQnhC,GAASG,WAAYghC,EAAM0F,GAEzC,OAAO1F,GAETpnD,EAAK0G,UAAUulD,SAAW,WACxB,GAAyB,IAArB/0C,UAAU7U,OAML,OAAOiqD,EAAkB5lD,UAAUulD,SAAS70B,MAAMx1B,KAAMsV,WAL/D,IAAI61C,EAAW71C,UAAU,GACrB81C,EAAa91C,UAAU,GACP,OAAhBtV,KAAKinD,OACPjnD,KAAKinD,OAAS,IAAIxB,GAAM0F,EAAUC,GAC3BprD,KAAKinD,OAAO9B,YAAYgG,EAAUC,IAG/ChtD,EAAK0G,UAAUq8C,SAAW,WACxB,OAAOnhD,KAAK+mD,QAEd3oD,EAAK0G,UAAU6iD,WAAa,WAG1B,GAAIryC,UAAU,aAAclX,EAAM,CAChC,IAAIgF,EAAIkS,UAAU,GAClBtV,KAAK2nD,WAAWvkD,EAAE6jD,aACb,GAAI3xC,UAAU,aAAcmwC,GAEjC,IADA,IAAIuF,EAAS11C,UAAU,GACdzW,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAI2mD,EARKxlD,KAQQ+qD,sBAAsBC,EAAQnsD,GARtCmB,KASYinD,OAAOjnB,YAAYnhC,KACxBwlB,GAASK,MAVhB1kB,KAU+BinD,OAAO9B,YAAYtmD,EAAG2mD,KAIpEpnD,EAAK0G,UAAU7E,IAAM,SAAcyb,GACjC1b,KAAK+mD,OAAO1nD,OAAOqc,GACnBA,EAAE2vC,QAAQrrD,OAEZ5B,EAAK0G,UAAUwmD,iBAAmB,SAA2BH,GAC3D,GAAoB,OAAhBnrD,KAAKinD,OAAmB,OAAO,KACnC,IAAIzB,EAAMnhC,GAASK,KACC,OAAhB1kB,KAAKinD,SAAmBzB,EAAMxlD,KAAKinD,OAAOjnB,YAAYmrB,IAC1D,IAAIxG,EAAS,KACb,OAAQa,GACN,KAAKnhC,GAASG,SACZmgC,EAAStgC,GAASE,SAClB,MACF,KAAKF,GAASE,SAGd,QACEogC,EAAStgC,GAASG,SAGtBxkB,KAAKinD,OAAO9B,YAAYgG,EAAUxG,IAEpCvmD,EAAK0G,UAAUyb,YAAc,WAC3B,MAAO,IAETniB,EAAK0G,UAAU0b,SAAW,WACxB,OAAOpiB,GAGFA,GACP0rD,IAEEyB,GAAU,WACZvrD,KAAKwrD,QAAU,IAAI/d,GACnBztC,KAAKyrD,SAAW,KAChB,IAAIA,EAAWn2C,UAAU,GACzBtV,KAAKyrD,SAAWA,GAElBF,GAAQzmD,UAAUyQ,KAAO,SAAetN,GACtC,OAAOjI,KAAKwrD,QAAQx/C,IAAI/D,IAE1BsjD,GAAQzmD,UAAU4mD,QAAU,WAC1B,GAAIp2C,UAAU,aAAcyM,GAAY,CACtC,IAAI9Z,EAAQqN,UAAU,GAClB/V,EAAOS,KAAKwrD,QAAQx/C,IAAI/D,GAK5B,OAJa,OAAT1I,IACFA,EAAOS,KAAKyrD,SAASE,WAAW1jD,GAChCjI,KAAKwrD,QAAQhf,IAAIvkC,EAAO1I,IAEnBA,EACF,GAAI+V,UAAU,aAAclX,GAAM,CACvC,IAAIgF,EAAIkS,UAAU,GACds2C,EAAS5rD,KAAKwrD,QAAQx/C,IAAI5I,EAAEusB,iBAChC,OAAe,OAAXi8B,GACF5rD,KAAKwrD,QAAQhf,IAAIppC,EAAEusB,gBAAiBvsB,GAC7BA,IAETwoD,EAAOjE,WAAWvkD,GACXwoD,KAGXL,GAAQzmD,UAAUgmD,MAAQ,SAAgBznD,GACxC,IAAK,IAAI2vC,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CACpCsN,EAAGtxC,OACTopD,MAAMznD,KAGZkoD,GAAQzmD,UAAU2gC,SAAW,WAC3B,OAAOzlC,KAAKwrD,QAAQvqD,SAASwkC,YAE/B8lB,GAAQzmD,UAAU7D,OAAS,WACzB,OAAOjB,KAAKwrD,QAAQvqD,UAEtBsqD,GAAQzmD,UAAU+mD,iBAAmB,SAA2BhG,GAE9D,IADA,IAAIiG,EAAW,IAAItkB,GACV3oC,EAAImB,KAAKylC,WAAY5mC,EAAE6mC,WAAY,CAC1C,IAAInmC,EAAOV,EAAE6C,OACTnC,EAAKmoD,WAAW1nB,YAAY6lB,KAAexhC,GAASG,UAAYsnC,EAAS7rD,IAAIV,GAEnF,OAAOusD,GAETP,GAAQzmD,UAAU7E,IAAM,SAAcyb,GACpC,IAAI/Z,EAAI+Z,EAAEiU,gBACF3vB,KAAK0rD,QAAQ/pD,GACnB1B,IAAIyb,IAER6vC,GAAQzmD,UAAUyb,YAAc,WAC9B,MAAO,IAETgrC,GAAQzmD,UAAU0b,SAAW,WAC3B,OAAO+qC,IAGT,IAAIQ,GAAW,aAEXC,GAAqB,CAAEC,GAAI,CAAE1nD,cAAc,GAAO2nD,GAAI,CAAE3nD,cAAc,GAAO4nD,GAAI,CAAE5nD,cAAc,GAAO6nD,GAAI,CAAE7nD,cAAc,IAEhIwnD,GAASjnD,UAAUyb,YAAc,WAC/B,MAAO,IAETwrC,GAASjnD,UAAU0b,SAAW,WAC5B,OAAOurC,IAETA,GAASM,WAAa,SAAqBC,GACzC,OAAOA,IAASP,GAASE,IAAMK,IAASP,GAASG,IAEnDH,GAASQ,WAAa,SAAqBC,EAAOC,GAChD,OAAID,IAAUC,GAED,KADDD,EAAQC,EAAQ,GAAK,GAInCV,GAASW,gBAAkB,SAA0BF,EAAOC,GAC1D,GAAID,IAAUC,EAAS,OAAOD,EAE9B,GAAa,KADDA,EAAQC,EAAQ,GAAK,EACf,OAAQ,EAC1B,IAAIzwC,EAAMwwC,EAAQC,EAAQD,EAAQC,EAElC,OAAY,IAARzwC,GAAqB,KADfwwC,EAAQC,EAAQD,EAAQC,GACG,EAC9BzwC,GAET+vC,GAASY,cAAgB,SAAwBL,EAAMM,GACrD,OAAIA,IAAcb,GAASK,GAClBE,IAASP,GAASK,IAAME,IAASP,GAASI,GAE5CG,IAASM,GAAaN,IAASM,EAAY,GAEpDb,GAASc,SAAW,WAClB,GAA4B,iBAAjBv3C,UAAU,IAA2C,iBAAjBA,UAAU,GAAiB,CACxE,IAAI6N,EAAK7N,UAAU,GACf8N,EAAK9N,UAAU,GACnB,GAAW,IAAP6N,GAAqB,IAAPC,EAAc,MAAM,IAAIvC,GAAyB,2CAA6CsC,EAAK,KAAOC,EAAK,MACjI,OAAID,GAAM,EACJC,GAAM,EAAc2oC,GAASE,GAAoBF,GAASK,GAE1DhpC,GAAM,EAAc2oC,GAASG,GAAoBH,GAASI,GAE3D,GAAI72C,UAAU,aAAcyM,IAAczM,UAAU,aAAcyM,GAAY,CACnF,IAAI5H,EAAK7E,UAAU,GACfzS,EAAKyS,UAAU,GACnB,GAAIzS,EAAGnD,IAAMya,EAAGza,GAAKmD,EAAG3D,IAAMib,EAAGjb,EAAK,MAAM,IAAI2hB,GAAyB,wDAA0D1G,GACnI,OAAItX,EAAGnD,GAAKya,EAAGza,EACTmD,EAAG3D,GAAKib,EAAGjb,EAAY6sD,GAASE,GAAoBF,GAASK,GAE7DvpD,EAAG3D,GAAKib,EAAGjb,EAAY6sD,GAASG,GAAoBH,GAASI,KAIvEH,GAAmBC,GAAGjgD,IAAM,WAAc,OAAO,GACjDggD,GAAmBE,GAAGlgD,IAAM,WAAc,OAAO,GACjDggD,GAAmBG,GAAGngD,IAAM,WAAc,OAAO,GACjDggD,GAAmBI,GAAGpgD,IAAM,WAAc,OAAO,GAEjDvH,OAAOid,iBAAkBqqC,GAAUC,IAEnC,IAAIc,GAAU,WASZ,GARA9sD,KAAK+sD,MAAQ,KACb/sD,KAAKinD,OAAS,KACdjnD,KAAKgtD,MAAQ,KACbhtD,KAAKitD,IAAM,KACXjtD,KAAKktD,IAAM,KACXltD,KAAKmtD,IAAM,KACXntD,KAAKotD,IAAM,KACXptD,KAAKqtD,UAAY,KACQ,IAArB/3C,UAAU7U,OAAc,CAC1B,IAAI0nD,EAAO7yC,UAAU,GACrBtV,KAAK+sD,MAAQ5E,OACR,GAAyB,IAArB7yC,UAAU7U,OAAc,CACjC,IAAI6sD,EAASh4C,UAAU,GACnB6E,EAAK7E,UAAU,GACfzS,EAAKyS,UAAU,GAEnBtV,KAAK+sD,MAAQO,EACbttD,KAAK4mB,KAAKzM,EAAItX,GACd7C,KAAKinD,OAHO,UAIP,GAAyB,IAArB3xC,UAAU7U,OAAc,CACjC,IAAI8sD,EAASj4C,UAAU,GACnBk4C,EAAOl4C,UAAU,GACjB4b,EAAO5b,UAAU,GACjBm4C,EAAUn4C,UAAU,GACxBtV,KAAK+sD,MAAQQ,EACbvtD,KAAK4mB,KAAK4mC,EAAMt8B,GAChBlxB,KAAKinD,OAASwG,IAGlBX,GAAQhoD,UAAU4oD,iBAAmB,SAA2BhyC,GAC9D,OAAI1b,KAAKmtD,MAAQzxC,EAAEyxC,KAAOntD,KAAKotD,MAAQ1xC,EAAE0xC,IAAc,EACnDptD,KAAKqtD,UAAY3xC,EAAE2xC,UAAoB,EACvCrtD,KAAKqtD,UAAY3xC,EAAE2xC,WAAqB,EACrC/wB,GAAa6F,mBAAmBzmB,EAAEuxC,IAAKvxC,EAAEwxC,IAAKltD,KAAKktD,MAE5DJ,GAAQhoD,UAAU6oD,MAAQ,WACxB,OAAO3tD,KAAKotD,KAEdN,GAAQhoD,UAAU6qB,cAAgB,WAChC,OAAO3vB,KAAKitD,KAEdH,GAAQhoD,UAAUumD,QAAU,SAAkB9rD,GAC5CS,KAAKgtD,MAAQztD,GAEfutD,GAAQhoD,UAAUgmD,MAAQ,SAAgBznD,GACxC,IAAIuqD,EAAQprD,KAAKqrD,MAAM7tD,KAAKotD,IAAKptD,KAAKmtD,KAClCW,EAAY9tD,KAAKwgB,WAAW24B,UAC5B4U,EAAaD,EAAUE,YAAY,KACnCjtC,EAAO+sC,EAAUphC,UAAUqhC,EAAa,GAC5C1qD,EAAIynD,MAAM,KAAO/pC,EAAO,KAAO/gB,KAAKitD,IAAM,MAAQjtD,KAAKktD,IAAM,IAAMltD,KAAKqtD,UAAY,IAAMO,EAAQ,MAAQ5tD,KAAKinD,SAEjH6F,GAAQhoD,UAAUge,UAAY,SAAoB+lB,GAChD,IAAIntB,EAAImtB,EACR,OAAO7oC,KAAK0tD,iBAAiBhyC,IAE/BoxC,GAAQhoD,UAAUmpD,sBAAwB,WACxC,OAAOjuD,KAAKktD,KAEdJ,GAAQhoD,UAAUopD,MAAQ,WACxB,OAAOluD,KAAKmtD,KAEdL,GAAQhoD,UAAU4iD,SAAW,WAC3B,OAAO1nD,KAAKinD,QAEd6F,GAAQhoD,UAAU67C,QAAU,WAC1B,OAAO3gD,KAAK+sD,OAEdD,GAAQhoD,UAAUqpD,YAAc,WAC9B,OAAOnuD,KAAKqtD,WAEdP,GAAQhoD,UAAUo8C,QAAU,WAC1B,OAAOlhD,KAAKgtD,OAEdF,GAAQhoD,UAAUme,SAAW,WAC3B,IAAI2qC,EAAQprD,KAAKqrD,MAAM7tD,KAAKotD,IAAKptD,KAAKmtD,KAClCW,EAAY9tD,KAAKwgB,WAAW24B,UAC5B4U,EAAaD,EAAUE,YAAY,KAEvC,MAAO,KADIF,EAAUphC,UAAUqhC,EAAa,GACvB,KAAO/tD,KAAKitD,IAAM,MAAQjtD,KAAKktD,IAAM,IAAMltD,KAAKqtD,UAAY,IAAMO,EAAQ,MAAQ5tD,KAAKinD,QAE9G6F,GAAQhoD,UAAUspD,aAAe,SAAuBC,KACxDvB,GAAQhoD,UAAU8hB,KAAO,SAAezM,EAAItX,GAC1C7C,KAAKitD,IAAM9yC,EACXna,KAAKktD,IAAMrqD,EACX7C,KAAKmtD,IAAMtqD,EAAGnD,EAAIya,EAAGza,EACrBM,KAAKotD,IAAMvqD,EAAG3D,EAAIib,EAAGjb,EACrBc,KAAKqtD,UAAYtB,GAASc,SAAS7sD,KAAKmtD,IAAKntD,KAAKotD,KAClDv0B,GAAOE,SAAsB,IAAb/4B,KAAKmtD,KAA0B,IAAbntD,KAAKotD,KAAY,2CAErDN,GAAQhoD,UAAUyb,YAAc,WAC9B,MAAO,CAACoB,KAEVmrC,GAAQhoD,UAAU0b,SAAW,WAC3B,OAAOssC,IAGT,IAAIwB,GAAgB,SAAUC,GAC5B,SAASD,IACP,IAAInG,EAAO7yC,UAAU,GACjB+rC,EAAY/rC,UAAU,GAY1B,GAXAi5C,EAAW5tD,KAAKX,KAAMmoD,GACtBnoD,KAAKwuD,WAAa,KAClBxuD,KAAK+pD,aAAc,EACnB/pD,KAAKkqD,YAAa,EAClBlqD,KAAKyuD,KAAO,KACZzuD,KAAK0uD,MAAQ,KACb1uD,KAAK2uD,SAAW,KAChB3uD,KAAK4uD,UAAY,KACjB5uD,KAAK6uD,aAAe,KACpB7uD,KAAK8uD,OAAS,CAAC,GAAI,KAAM,KACzB9uD,KAAKwuD,WAAanN,EACdA,EACFrhD,KAAK4mB,KAAKuhC,EAAKx4B,cAAc,GAAIw4B,EAAKx4B,cAAc,QAC/C,CACL,IAAIvsB,EAAI+kD,EAAKjY,eAAiB,EAC9BlwC,KAAK4mB,KAAKuhC,EAAKx4B,cAAcvsB,GAAI+kD,EAAKx4B,cAAcvsB,EAAI,IAE1DpD,KAAK+uD,uBA8HP,OA3HKR,IAAaD,EAAartC,UAAYstC,GAC3CD,EAAaxpD,UAAYL,OAAOyc,OAAQqtC,GAAcA,EAAWzpD,WACjEwpD,EAAaxpD,UAAUqc,YAAcmtC,EACrCA,EAAaxpD,UAAUwkD,WAAa,WAClC,OAAOtpD,KAAK2uD,UAEdL,EAAaxpD,UAAUq+C,SAAW,SAAmBrD,GACnD,OAAO9/C,KAAK8uD,OAAOhP,IAErBwO,EAAaxpD,UAAUw9C,WAAa,SAAqBI,GACvD1iD,KAAKkqD,WAAaxH,GAEpB4L,EAAaxpD,UAAUiqD,qBAAuB,WAC5C/uD,KAAKinD,OAAS,IAAIxB,GAAMzlD,KAAK+sD,MAAMrF,YAC9B1nD,KAAKwuD,YAAcxuD,KAAKinD,OAAOpC,QAEtCyJ,EAAaxpD,UAAUgjD,QAAU,WAC/B,OAAO9nD,KAAK0uD,OAEdJ,EAAaxpD,UAAUg/C,SAAW,SAAmBhE,EAAUkP,GAC7D,IAA+B,MAA3BhvD,KAAK8uD,OAAOhP,IACV9/C,KAAK8uD,OAAOhP,KAAckP,EAAY,MAAM,IAAIvN,GAAkB,+BAAgCzhD,KAAK2vB,iBAE7G3vB,KAAK8uD,OAAOhP,GAAYkP,GAE1BV,EAAaxpD,UAAUs+C,mBAAqB,WAI1C,IAHA,IAEIA,GAAqB,EAChBvkD,EAAI,EAAGA,EAAI,EAAGA,IAHVmB,KAIEinD,OAAOhC,OAAOpmD,IAJhBmB,KAI6BinD,OAAOjnB,YAAYnhC,EAAG2gD,GAAS5e,QAAUvc,GAASE,UAJ/EvkB,KAIkGinD,OAAOjnB,YAAYnhC,EAAG2gD,GAAS9e,SAAWrc,GAASE,WAC9J6+B,GAAqB,GAGzB,OAAOA,GAETkL,EAAaxpD,UAAUmqD,WAAa,SAAqBC,GACvDlvD,KAAK2uD,SAAWO,GAElBZ,EAAaxpD,UAAUgmD,MAAQ,SAAgBznD,GAC7CkrD,EAAWzpD,UAAUgmD,MAAMnqD,KAAKX,KAAMqD,GACtCA,EAAIynD,MAAM,IAAM9qD,KAAK8uD,OAAOtP,GAAS5e,MAAQ,IAAM5gC,KAAK8uD,OAAOtP,GAAS9e,QACxEr9B,EAAIynD,MAAM,KAAO9qD,KAAKmvD,gBAAkB,KACpCnvD,KAAK+pD,aAAe1mD,EAAIynD,MAAM,cAEpCwD,EAAaxpD,UAAUukD,eAAiB,SAAyB+F,GAC/DpvD,KAAK6uD,aAAeO,GAEtBd,EAAaxpD,UAAUuqD,WAAa,WAClC,IAAI3K,EAAS1kD,KAAKinD,OAAOvC,OAAO,IAAM1kD,KAAKinD,OAAOvC,OAAO,GACrD4K,GAAqBtvD,KAAKinD,OAAOhC,OAAO,IAAMjlD,KAAKinD,OAAO1B,kBAAkB,EAAGlhC,GAASI,UACxF8qC,GAAqBvvD,KAAKinD,OAAOhC,OAAO,IAAMjlD,KAAKinD,OAAO1B,kBAAkB,EAAGlhC,GAASI,UAC5F,OAAOigC,GAAU4K,GAAqBC,GAExCjB,EAAaxpD,UAAU+iD,YAAc,SAAsB2H,GACzDxvD,KAAK4uD,UAAYY,GAEnBlB,EAAaxpD,UAAU4kD,eAAiB,WACtC,OAAO1pD,KAAK6uD,cAEdP,EAAaxpD,UAAUqqD,cAAgB,WACrC,IAAIM,EAAazvD,KAAK+sD,MAAMoC,gBAE5B,OADKnvD,KAAKwuD,aAAciB,GAAcA,GAC/BA,GAETnB,EAAaxpD,UAAUu+C,YAAc,SAAsBl4C,GACzDnL,KAAK+pD,YAAc5+C,GAErBmjD,EAAaxpD,UAAUw8C,OAAS,WAC9B,OAAOthD,KAAKyuD,MAEdH,EAAaxpD,UAAUu8C,UAAY,WACjC,OAAOrhD,KAAKwuD,YAEdF,EAAaxpD,UAAU67C,QAAU,WAC/B,OAAO3gD,KAAK+sD,OAEduB,EAAaxpD,UAAU4qD,UAAY,SAAoBrsD,GACrDrD,KAAK8qD,MAAMznD,GACXA,EAAIynD,MAAM,KACN9qD,KAAKwuD,WAAcxuD,KAAK+sD,MAAMjC,MAAMznD,GAAerD,KAAK+sD,MAAM4C,aAAatsD,IAEjFirD,EAAaxpD,UAAU8qD,OAAS,SAAiBtP,GAC/CtgD,KAAKyuD,KAAOnO,GAEdgO,EAAaxpD,UAAU+qD,eAAiB,SAAyBnN,GAC/D1iD,KAAKsiD,WAAWI,GAChB1iD,KAAKyuD,KAAKnM,WAAWI,IAEvB4L,EAAaxpD,UAAUk+C,cAAgB,SAAwBlD,EAAU1hC,GACvE,IAAIqxC,EAAazvD,KAAK2gD,UAAUwO,gBAC3BnvD,KAAKwuD,aAAciB,GAAcA,GACtC,IAAIK,EAAkB,EAClBhQ,IAAaN,GAAS5e,OAAQkvB,GAAmB,GACrD,IAAIC,EAAcvQ,GAASK,SAASC,GAEhCkQ,EAAgB5xC,EADRqxC,EAAaK,EAEzB9vD,KAAK8jD,SAAShE,EAAU1hC,GACxBpe,KAAK8jD,SAASiM,EAAaC,IAE7B1B,EAAaxpD,UAAU2iD,YAAc,WACnC,OAAOznD,KAAK4uD,WAEdN,EAAaxpD,UAAUqG,WAAa,WAClC,OAAOnL,KAAK+pD,aAEduE,EAAaxpD,UAAUmrD,QAAU,SAAkBvuD,GACjD1B,KAAK0uD,MAAQhtD,GAEf4sD,EAAaxpD,UAAU49C,UAAY,WACjC,OAAO1iD,KAAKkqD,YAEdoE,EAAaxpD,UAAUyb,YAAc,WACnC,MAAO,IAET+tC,EAAaxpD,UAAU0b,SAAW,WAChC,OAAO8tC,GAETA,EAAa4B,YAAc,SAAsBC,EAAcC,GAC7D,OAAID,IAAiB9rC,GAASI,UAAY2rC,IAAiB/rC,GAASE,SAAmB,EAAc4rC,IAAiB9rC,GAASE,UAAY6rC,IAAiB/rC,GAASI,UAAoB,EAClL,GAGF6pC,GACPxB,IAEEuD,GAAc,aAElBA,GAAYvrD,UAAU6mD,WAAa,SAAqB1jD,GACtD,OAAO,IAAI7J,GAAK6J,EAAO,OAEzBooD,GAAYvrD,UAAUyb,YAAc,WAClC,MAAO,IAET8vC,GAAYvrD,UAAU0b,SAAW,WAC/B,OAAO6vC,IAGT,IAAIC,GAAc,WAIhB,GAHAtwD,KAAK+mD,OAAS,IAAIvf,GAClBxnC,KAAKkiD,OAAS,KACdliD,KAAKuwD,aAAe,IAAI/oB,GACC,IAArBlyB,UAAU7U,OACZT,KAAKkiD,OAAS,IAAIqJ,GAAQ,IAAI8E,SACzB,GAAyB,IAArB/6C,UAAU7U,OAAc,CACjC,IAAIgrD,EAAWn2C,UAAU,GACzBtV,KAAKkiD,OAAS,IAAIqJ,GAAQE,KAG9B6E,GAAYxrD,UAAU0rD,WAAa,SAAqBntD,GAGtDA,EAAIm6B,QAAQ,UACZ,IAAK,IAAI3+B,EAAI,EAAGA,EAAImB,KAAK+mD,OAAOjlD,OAAQjD,IAAK,CAC3CwE,EAAIm6B,QAAQ,QAAU3+B,EAAI,KAC1B,IAAI6c,EALS1b,KAKE+mD,OAAO/6C,IAAInN,GAC1B6c,EAAEovC,MAAMznD,GACRqY,EAAE+0C,OAAO3F,MAAMznD,KAGnBitD,GAAYxrD,UAAUyQ,KAAO,SAAetN,GAC1C,OAAOjI,KAAKkiD,OAAO3sC,KAAKtN,IAE1BqoD,GAAYxrD,UAAU4mD,QAAU,WAC9B,GAAIp2C,UAAU,aAAclX,GAAM,CAChC,IAAImB,EAAO+V,UAAU,GACrB,OAAOtV,KAAKkiD,OAAOwJ,QAAQnsD,GACtB,GAAI+V,UAAU,aAAcyM,GAAY,CAC7C,IAAI9Z,EAAQqN,UAAU,GACtB,OAAOtV,KAAKkiD,OAAOwJ,QAAQzjD,KAG/BqoD,GAAYxrD,UAAU4rD,gBAAkB,WACtC,OAAO1wD,KAAKkiD,OAAOzc,YAErB6qB,GAAYxrD,UAAU6rD,wBAA0B,WAC9C,IAAK,IAAIC,EAAS5wD,KAAKkiD,OAAOzc,WAAYmrB,EAAOlrB,WAAY,CAChDkrB,EAAOlvD,OACby/C,WAAWwP,4BAGpBL,GAAYxrD,UAAU+rD,aAAe,SAAuB9tC,GAC1DuN,GAAOjtB,IAAIm6B,QAAQza,IAErButC,GAAYxrD,UAAUgsD,eAAiB,SAAyBjL,EAAW59C,GACzE,IAAI1I,EAAOS,KAAKkiD,OAAO3sC,KAAKtN,GAC5B,GAAa,OAAT1I,EAAiB,OAAO,EAC5B,IAAImnD,EAAQnnD,EAAKmoD,WACjB,OAAc,OAAVhB,GAAkBA,EAAM1mB,YAAY6lB,KAAexhC,GAASG,UAGlE8rC,GAAYxrD,UAAUisD,qBAAuB,WAC3C,IAAK,IAAIH,EAAS5wD,KAAKkiD,OAAOzc,WAAYmrB,EAAOlrB,WAAY,CAChDkrB,EAAOlvD,OACby/C,WAAW4P,yBAGpBT,GAAYxrD,UAAUksD,qBAAuB,SAA+B72C,EAAItX,EAAIouD,EAAKC,GACvF,QAAK/2C,EAAGG,OAAO22C,KACX30B,GAAa6F,mBAAmBhoB,EAAItX,EAAIquD,KAAS50B,GAAatC,WAAa+xB,GAASc,SAAS1yC,EAAItX,KAAQkpD,GAASc,SAASoE,EAAKC,KAGtIZ,GAAYxrD,UAAUqsD,YAAc,WAClC,OAAOnxD,KAAKuwD,cAEdD,GAAYxrD,UAAUssD,WAAa,SAAqBruC,GACtDuN,GAAOjtB,IAAIynD,MAAM/nC,IAEnButC,GAAYxrD,UAAUusD,gBAAkB,WACtC,OAAOrxD,KAAK+mD,OAAOthB,YAErB6qB,GAAYxrD,UAAUwsD,wBAA0B,SAAkCn3C,EAAItX,GAGpF,IAFE,IAEOhE,EAAI,EAAGA,EAAImB,KAAK+mD,OAAOjlD,OAAQjD,IAAK,CAC3C,IAAI6c,EAHS1b,KAGE+mD,OAAO/6C,IAAInN,GACtB0yD,EAAS71C,EAAEu0B,iBACf,GALajwC,KAKFgxD,qBAAqB72C,EAAItX,EAAI0uD,EAAO,GAAIA,EAAO,IAAO,OAAO71C,EACxE,GANa1b,KAMFgxD,qBAAqB72C,EAAItX,EAAI0uD,EAAOA,EAAO9wD,OAAS,GAAI8wD,EAAOA,EAAO9wD,OAAS,IAAO,OAAOib,EAE1G,OAAO,MAET40C,GAAYxrD,UAAU0sD,WAAa,SAAqB91C,GACtD1b,KAAK+mD,OAAO9mD,IAAIyb,IAElB40C,GAAYxrD,UAAU2sD,YAAc,SAAsB/1C,GACxD,IAAK,IAAI7c,EAAImB,KAAKmxD,cAAc1rB,WAAY5mC,EAAE6mC,WAAY,CACxD,IAAIgsB,EAAK7yD,EAAE6C,OACX,GAAIgwD,EAAG/Q,YAAcjlC,EAAK,OAAOg2C,EAEnC,OAAO,MAETpB,GAAYxrD,UAAU6sD,SAAW,SAAmBC,GAGlD,IAFE,IAEO5e,EAAK4e,EAAWnsB,WAAYuN,EAAGtN,WAAY,CAClD,IAAIhqB,EAAIs3B,EAAGtxC,OAHE1B,KAIN+mD,OAAO9mD,IAAIyb,GAClB,IAAIm2C,EAAM,IAAIvD,GAAa5yC,GAAG,GAC1Bo2C,EAAM,IAAIxD,GAAa5yC,GAAG,GAC9Bm2C,EAAIjC,OAAOkC,GACXA,EAAIlC,OAAOiC,GARE7xD,KASNC,IAAI4xD,GATE7xD,KAUNC,IAAI6xD,KAGfxB,GAAYxrD,UAAU7E,IAAM,SAAcyb,GACxC1b,KAAKkiD,OAAOjiD,IAAIyb,GAChB1b,KAAKuwD,aAAatwD,IAAIyb,IAExB40C,GAAYxrD,UAAUk/C,SAAW,WAC/B,OAAOhkD,KAAKkiD,OAAOjhD,UAErBqvD,GAAYxrD,UAAUy8C,SAAW,SAAmBpnC,EAAItX,GAGtD,IAFE,IAEOhE,EAAI,EAAGA,EAAImB,KAAK+mD,OAAOjlD,OAAQjD,IAAK,CAC3C,IAAI6c,EAHS1b,KAGE+mD,OAAO/6C,IAAInN,GACtB0yD,EAAS71C,EAAEu0B,iBACf,GAAI91B,EAAGG,OAAOi3C,EAAO,KAAO1uD,EAAGyX,OAAOi3C,EAAO,IAAO,OAAO71C,EAE7D,OAAO,MAET40C,GAAYxrD,UAAUyb,YAAc,WAClC,MAAO,IAET+vC,GAAYxrD,UAAU0b,SAAW,WAC/B,OAAO8vC,IAETA,GAAYK,wBAA0B,SAAkCoB,GACtE,IAAK,IAAInB,EAASmB,EAAMtsB,WAAYmrB,EAAOlrB,WAAY,CAC1CkrB,EAAOlvD,OACby/C,WAAWwP,4BAIpB,IAAIqB,GAAiB,WACnBhyD,KAAKonD,iBAAmB,KACxBpnD,KAAKiyD,WAAa,IAAIzqB,GACtB,IAAI1S,EAAkBxf,UAAU,GAChCtV,KAAKonD,iBAAmBtyB,GAE1Bk9B,GAAeltD,UAAUotD,mBAAqB,SAA6BC,EAAWC,EAAWC,GAC/F,IAAK,IAAIrf,EAAKmf,EAAU1sB,WAAYuN,EAAGtN,WAAY,CACjD,IAAI0jB,EAAKpW,EAAGtxC,OACR0nD,EAAGb,SACL8J,EAAapyD,IAAImpD,GAEjBgJ,EAAUnyD,IAAImpD,KAIpB4I,GAAeltD,UAAUwtD,gBAAkB,SAA0BF,GAInE,IAHE,IAEEG,EAAiB,IAAI/qB,GAChBwL,EAAKof,EAAU3sB,WAAYuN,EAAGtN,WAAY,CACjD,IACIr8B,EADK2pC,EAAGtxC,OACEsnD,UALDhpD,KAKkBonD,kBAC/BmL,EAAetyD,IAAIoJ,GAErB,OAAOkpD,GAETP,GAAeltD,UAAU0tD,eAAiB,SAAyBJ,EAAWC,GAG5E,IAFE,IAEOrf,EAAKqf,EAAa5sB,WAAYuN,EAAGtN,WAAY,CACpD,IAAI4T,EAAOtG,EAAGtxC,OACd,GAAwB,OAApB43C,EAAKsP,WAAqB,CAC5B,IAAI3wB,EALOj4B,KAKQyyD,uBAAuBnZ,EAAM8Y,GAChD,GAAc,OAAVn6B,EAAkB,MAAM,IAAIwpB,GAAkB,mCAAoCnI,EAAK3pB,cAAc,IACzG2pB,EAAKyP,SAAS9wB,MAIpB+5B,GAAeltD,UAAU4tD,sBAAwB,SAAgCC,EAAcP,EAAWC,GAIxG,IAHE,IAEEF,EAAY,IAAI3qB,GACXwL,EAAK2f,EAAaltB,WAAYuN,EAAGtN,WAAY,CACpD,IAAI0jB,EAAKpW,EAAGtxC,OACZ,GAAI0nD,EAAGT,mBAAqB,EAAG,CAC7BS,EAAGQ,uCACH,IAAIH,EAAeL,EAAGI,oBAClBvxB,EAROj4B,KAQQ4yD,UAAUnJ,GACf,OAAVxxB,GATOj4B,KAUF6yD,kBAAkB56B,EAAOwxB,GAChC2I,EAAUnyD,IAAIg4B,IAEdo6B,EAAanrB,OAAOuiB,QAGtB0I,EAAUlyD,IAAImpD,GAGlB,OAAO+I,GAETH,GAAeltD,UAAU0jD,cAAgB,SAAwB7mD,GAC/D,IAAK,IAAIqxC,EAAKhzC,KAAKiyD,WAAWxsB,WAAYuN,EAAGtN,WAAY,CAEvD,GADSsN,EAAGtxC,OACL8mD,cAAc7mD,GAAM,OAAO,EAEpC,OAAO,GAETqwD,GAAeltD,UAAUguD,sBAAwB,SAAgCC,GAI/E,IAHE,IAEEJ,EAAe,IAAInrB,GACdwL,EAAK+f,EAASttB,WAAYuN,EAAGtN,WAAY,CAChD,IAAI4a,EAAKtN,EAAGtxC,OACZ,GAAI4+C,EAAGn1C,cAAgBm1C,EAAGoH,WAAWzC,UACV,OAArB3E,EAAGmH,cAAwB,CAC7B,IAAI2B,EAAK,IAAIG,GAAgBjJ,EAPpBtgD,KAO+BonD,kBACxCuL,EAAa1yD,IAAImpD,GACjBA,EAAG/F,eAIT,OAAOsP,GAETX,GAAeltD,UAAU+tD,kBAAoB,SAA4B56B,EAAOwxB,GAC9E,IAAK,IAAIzW,EAAKyW,EAAahkB,WAAYuN,EAAGtN,WAAY,CACpD,IAAI0jB,EAAKpW,EAAGtxC,OACR0nD,EAAGb,UACLa,EAAGL,SAAS9wB,KAIlB+5B,GAAeltD,UAAUkuD,YAAc,WAErC,OADqBhzD,KAAKsyD,gBAAgBtyD,KAAKiyD,aAGjDD,GAAeltD,UAAU2tD,uBAAyB,SAAiCQ,EAAQb,GAMzF,IALA,IAAIc,EAAWD,EAAOlL,gBAClBoL,EAAUD,EAASnuB,sBACnBgF,EAASmpB,EAASngB,eAAe,GACjCqgB,EAAW,KACXC,EAAS,KACJrgB,EAAKof,EAAU3sB,WAAYuN,EAAGtN,WAAY,CACjD,IAAI4tB,EAAWtgB,EAAGtxC,OACd6xD,EAAUD,EAASvL,gBACnByL,EAASD,EAAQxuB,sBACJ,OAAbquB,IAAqBC,EAASD,EAASrL,gBAAgBhjB,uBAC3D,IAAI0uB,GAAc,EACdD,EAAOx/B,SAASm/B,IAAY72B,GAAakF,cAAcuI,EAAQwpB,EAAQtjB,oBAAqBwjB,GAAc,GAC1GA,IACe,OAAbL,GAAqBC,EAAOr/B,SAASw/B,MACvCJ,EAAWE,GAIjB,OAAOF,GAETpB,GAAeltD,UAAU8tD,UAAY,SAAoBnJ,GAGvD,IAFA,IAAIiK,EAAa,EACbz7B,EAAQ,KACH+a,EAAKyW,EAAahkB,WAAYuN,EAAGtN,WAAY,CACpD,IAAI0jB,EAAKpW,EAAGtxC,OACP0nD,EAAGb,WACNtwB,EAAQmxB,EACRsK,KAIJ,OADA76B,GAAOE,OAAO26B,GAAc,EAAG,4CACxBz7B,GAET+5B,GAAeltD,UAAU7E,IAAM,WAC7B,GAAyB,IAArBqV,UAAU7U,OAAc,CAC1B,IAAIkjD,EAAQruC,UAAU,GACtBtV,KAAKC,IAAI0jD,EAAMwN,cAAexN,EAAMK,iBAC/B,GAAyB,IAArB1uC,UAAU7U,OAAc,CACjC,IAAIsyD,EAAWz9C,UAAU,GACrBy8C,EAAQz8C,UAAU,GACtBg7C,GAAYK,wBAAwBoB,GACpC,IAAIY,EAAe3yD,KAAK8yD,sBAAsBC,GAC1CV,EAAe,IAAI7qB,GACnB2qB,EAAYnyD,KAAK0yD,sBAAsBC,EAAc3yD,KAAKiyD,WAAYI,GAC1EryD,KAAKkyD,mBAAmBC,EAAWnyD,KAAKiyD,WAAYI,GACpDryD,KAAKwyD,eAAexyD,KAAKiyD,WAAYI,KAGzCL,GAAeltD,UAAUyb,YAAc,WACrC,MAAO,IAETyxC,GAAeltD,UAAU0b,SAAW,WAClC,OAAOwxC,IAGT,IAAI2B,GAAY,aAEhBA,GAAU7uD,UAAU8uD,UAAY,aAChCD,GAAU7uD,UAAUyb,YAAc,WAChC,MAAO,IAETozC,GAAU7uD,UAAU0b,SAAW,WAC7B,OAAOmzC,IAGT,IAAIE,GAAgB,WAClB7zD,KAAK8zD,QAAU,KACf9zD,KAAK+zD,MAAQ,KACb,IAAIC,EAAS1+C,UAAU,GACnBsI,EAAOtI,UAAU,GACrBtV,KAAK8zD,QAAUE,EACfh0D,KAAK+zD,MAAQn2C,GAEfi2C,GAAc/uD,UAAUmvD,QAAU,WAChC,OAAOj0D,KAAK+zD,OAEdF,GAAc/uD,UAAU8uD,UAAY,WAClC,OAAO5zD,KAAK8zD,SAEdD,GAAc/uD,UAAUyb,YAAc,WACpC,MAAO,CAACozC,GAAW7xC,KAErB+xC,GAAc/uD,UAAU0b,SAAW,WACjC,OAAOqzC,IAGT,IAAIK,GAAgB,WAClBl0D,KAAKR,MAAQ,KACbQ,KAAKm0D,OAAS,KACdn0D,KAAKR,MAAQ,EACbQ,KAAKm0D,OAAS,IAAI3sB,GAClBxnC,KAAKm0D,OAAOl0D,IAAI,OAElBi0D,GAAcpvD,UAAUsvD,KAAO,WAC7B,GAAIp0D,KAAK81B,UAAa,OAAO,KAC7B,IAAIu+B,EAAUr0D,KAAKm0D,OAAOnoD,IAAI,GAI9B,OAHAhM,KAAKm0D,OAAOxoD,IAAI,EAAG3L,KAAKm0D,OAAOnoD,IAAIhM,KAAKR,QACxCQ,KAAKR,OAAS,EACdQ,KAAKs0D,QAAQ,GACND,GAETH,GAAcpvD,UAAUhD,KAAO,WAC7B,OAAO9B,KAAKR,OAEd00D,GAAcpvD,UAAUwvD,QAAU,SAAkBhb,GAKlD,IAJE,IAEEib,EAAQ,KACRryD,EAAMlC,KAAKm0D,OAAOnoD,IAAIstC,GACZ,EAAPA,GAAYt5C,KAAKR,SACtB+0D,EAAe,EAAPjb,KALKt5C,KAMQR,OANRQ,KAMwBm0D,OAAOnoD,IAAIuoD,EAAQ,GAAGzxC,UAN9C9iB,KAM+Dm0D,OAAOnoD,IAAIuoD,IAAU,GAAKA,IANzFv0D,KAOFm0D,OAAOnoD,IAAIuoD,GAAOzxC,UAAU5gB,GAAO,GAHjBo3C,EAAOib,EAJvBv0D,KAO6Cm0D,OAAOxoD,IAAI2tC,EAPxDt5C,KAOqEm0D,OAAOnoD,IAAIuoD,IAE/Fv0D,KAAKm0D,OAAOxoD,IAAI2tC,EAAMp3C,IAExBgyD,GAAcpvD,UAAU8iC,MAAQ,WAC9B5nC,KAAKR,MAAQ,EACbQ,KAAKm0D,OAAOvsB,SAEdssB,GAAcpvD,UAAUgxB,QAAU,WAChC,OAAsB,IAAf91B,KAAKR,OAEd00D,GAAcpvD,UAAU7E,IAAM,SAAcP,GAG1CM,KAAKm0D,OAAOl0D,IAAI,MAChBD,KAAKR,OAAS,EACd,IAAI85C,EAAOt5C,KAAKR,MAEhB,IADAQ,KAAKm0D,OAAOxoD,IAAI,EAAGjM,GACZA,EAAEojB,UAAU9iB,KAAKm0D,OAAOnoD,IAAIxJ,KAAK4d,MAAMk5B,EAAO,KAAO,EAAGA,GAAQ,EANxDt5C,KAONm0D,OAAOxoD,IAAI2tC,EAPLt5C,KAOkBm0D,OAAOnoD,IAAIxJ,KAAK4d,MAAMk5B,EAAO,KAE9Dt5C,KAAKm0D,OAAOxoD,IAAI2tC,EAAM55C,IAExBw0D,GAAcpvD,UAAUyb,YAAc,WACpC,MAAO,IAET2zC,GAAcpvD,UAAU0b,SAAW,WACjC,OAAO0zC,IAGT,IAAIM,GAAc,aAElBA,GAAY1vD,UAAU2vD,UAAY,SAAoB72C,KACtD42C,GAAY1vD,UAAUyb,YAAc,WAClC,MAAO,IAETi0C,GAAY1vD,UAAU0b,SAAW,WAC/B,OAAOg0C,IAGT,IAAIE,GAAe,aAEnBA,GAAa5vD,UAAUzF,OAAS,SAAiBs1D,EAAS/2C,KAC1D82C,GAAa5vD,UAAUrF,OAAS,SAAiBk1D,EAAS/2C,KAC1D82C,GAAa5vD,UAAU8vD,MAAQ,aAQ/BF,GAAa5vD,UAAUyb,YAAc,WACnC,MAAO,IAETm0C,GAAa5vD,UAAU0b,SAAW,WAChC,OAAOk0C,IAGT,IAAIG,GAAe,WAIjB,GAHA70D,KAAK80D,iBAAmB,IAAIttB,GAC5BxnC,KAAK8zD,QAAU,KACf9zD,KAAK+0D,OAAS,KACW,IAArBz/C,UAAU7U,aAAsB,GAAyB,IAArB6U,UAAU7U,OAAc,CAC9D,IAAIu0D,EAAQ1/C,UAAU,GACtBtV,KAAK+0D,OAASC,IAIdC,GAAqB,CAAE7yC,iBAAkB,CAAE7d,cAAc,IAC7DswD,GAAa/vD,UAAUowD,SAAW,WAChC,OAAOl1D,KAAK+0D,QAEdF,GAAa/vD,UAAUhD,KAAO,WAC5B,OAAO9B,KAAK80D,iBAAiBhzD,QAE/B+yD,GAAa/vD,UAAUqwD,mBAAqB,WAC1C,OAAOn1D,KAAK80D,kBAEdD,GAAa/vD,UAAUswD,kBAAoB,SAA4BC,GACrEx8B,GAAOE,OAAwB,OAAjB/4B,KAAK8zD,SACnB9zD,KAAK80D,iBAAiB70D,IAAIo1D,IAE5BR,GAAa/vD,UAAUgxB,QAAU,WAC/B,OAAO91B,KAAK80D,iBAAiBh/B,WAE/B++B,GAAa/vD,UAAU8uD,UAAY,WAIjC,OAHqB,OAAjB5zD,KAAK8zD,UACP9zD,KAAK8zD,QAAU9zD,KAAKs1D,iBAEft1D,KAAK8zD,SAEde,GAAa/vD,UAAUyb,YAAc,WACnC,MAAO,CAACozC,GAAW7xC,KAErB+yC,GAAa/vD,UAAU0b,SAAW,WAChC,OAAOq0C,IAETI,GAAmB7yC,iBAAiBpW,IAAM,WAAc,OAAO,oBAE/DvH,OAAOid,iBAAkBmzC,GAAcI,IAEvC,IAAIM,GAAc,aAElBA,GAAYC,aAAe,WACzB,MAAO,CACLr1D,QAAS,SAAkBzB,EAAGC,GAC5B,OAAOA,EAAEmkB,UAAUpkB,MAIzB62D,GAAYv5C,IAAM,SAAchd,GAE9B,OADAu2D,GAAYxzD,KAAK/C,GACVA,EAAEgN,IAAI,IAEfupD,GAAYxzD,KAAO,SAAe/C,EAAGijB,GACnC,IAAIvjB,EAAIM,EAAEmoC,UACNllB,EACFssB,GAAOxsC,KAAKrD,EAAGujB,GAEfssB,GAAOxsC,KAAKrD,GAGd,IADA,IAAIG,EAAIG,EAAEymC,WACD9oB,EAAM,EAAG84C,EAAO/2D,EAAE+B,OAAQkc,EAAM84C,EAAM94C,IAC7C9d,EAAE6C,OACF7C,EAAE8M,IAAIjN,EAAEie,KAGZ44C,GAAYG,cAAgB,SAAwB3yC,GAClD,IAAImlB,EAAY,IAAIV,GAEpB,OADAU,EAAUjoC,IAAI8iB,GACPmlB,GAGT,IAAIytB,GAAgB,WAClB31D,KAAK41D,YAAc,KACnB51D,KAAK61D,YAAc,KACnB71D,KAAK81D,UAAY,KACjB91D,KAAK+1D,cAAgB,KACrB,IAAIC,EAAa1gD,UAAU,GACvB2gD,EAAa3gD,UAAU,GACvB4gD,EAAe5gD,UAAU,GAC7BtV,KAAK41D,YAAcI,EACnBh2D,KAAK61D,YAAcI,EACnBj2D,KAAK+1D,cAAgBG,EACrBl2D,KAAK81D,UAAY91D,KAAKsjB,YAExBqyC,GAAc7wD,UAAUqxD,cAAgB,SAAwBC,EAAM9zB,GACpE,IAAI+zB,EAAUV,GAAcW,YAAYt2D,KAAK41D,aACzCW,EAAUZ,GAAcW,YAAYt2D,KAAK61D,aAC7C,GAAIQ,GAAWE,EACb,OAAIZ,GAAcvlB,KAAKpwC,KAAK41D,aAAeD,GAAcvlB,KAAKpwC,KAAK61D,cACjE71D,KAAKw2D,OAAOx2D,KAAK41D,YAAa51D,KAAK61D,YAAaO,EAAM9zB,GAC/C,OAEPtiC,KAAKw2D,OAAOx2D,KAAK61D,YAAa71D,KAAK41D,YAAaQ,EAAM9zB,GAC/C,MAEJ,GAAI+zB,EAET,OADAr2D,KAAKw2D,OAAOx2D,KAAK41D,YAAa51D,KAAK61D,YAAaO,EAAM9zB,GAC/C,KACF,GAAIi0B,EAET,OADAv2D,KAAKw2D,OAAOx2D,KAAK61D,YAAa71D,KAAK41D,YAAaQ,EAAM9zB,GAC/C,KAET,MAAM,IAAIzhB,GAAyB,mCAErC80C,GAAc7wD,UAAU2xD,SAAW,WACjC,QAASd,GAAcW,YAAYt2D,KAAK41D,cAAgBD,GAAcW,YAAYt2D,KAAK61D,eAEzFF,GAAc7wD,UAAUge,UAAY,SAAoBC,GACtD,IAAI2zC,EAAK3zC,EACT,OAAI/iB,KAAK81D,UAAYY,EAAGZ,WAAqB,EACzC91D,KAAK81D,UAAYY,EAAGZ,UAAoB,EACrC,GAETH,GAAc7wD,UAAU0xD,OAAS,SAAiBG,EAAcC,EAAUR,EAAM9zB,GAI9E,IAHE,IAGOzjC,EADM83D,EAAaxB,qBACN1vB,WAAY5mC,EAAE6mC,WAAY,CAC9C,IAAI6uB,EAAQ11D,EAAE6C,OACVm1D,EAAK,IAAIlB,GAAcpB,EAAOqC,EALrB52D,KAKsC+1D,eAC/Cc,EAAGC,cAAgBx0B,GACrB8zB,EAAKn2D,IAAI42D,KAIflB,GAAc7wD,UAAUiyD,aAAe,SAAuBl4D,GAC5D,OAAU,IAANA,EAAkBmB,KAAK41D,YACpB51D,KAAK61D,aAEdF,GAAc7wD,UAAUgyD,YAAc,WACpC,OAAO92D,KAAK81D,WAEdH,GAAc7wD,UAAUwe,SAAW,WACjC,OAAItjB,KAAKy2D,WACAz2D,KAAK+1D,cAAczyC,SAAStjB,KAAK41D,YAAa51D,KAAK61D,aAErD71D,KAAK41D,YAAYhC,YAAYtwC,SAAStjB,KAAK61D,YAAYjC,cAEhE+B,GAAc7wD,UAAUyb,YAAc,WACpC,MAAO,CAACoB,KAEVg0C,GAAc7wD,UAAU0b,SAAW,WACjC,OAAOm1C,IAETA,GAAcvlB,KAAO,SAAezxC,GAClC,OAAOA,EAAEi1D,YAAYrhC,WAEvBojC,GAAcW,YAAc,SAAsB14C,GAChD,OAAOA,aAAgBi3C,IAGzB,IAAImC,GAAkB,SAASA,IAK7B,GAJAh3D,KAAKD,MAAQ,KACbC,KAAKi3D,QAAS,EACdj3D,KAAKk3D,gBAAkB,IAAI1vB,GAC3BxnC,KAAKm3D,cAAgB,KACI,IAArB7hD,UAAU7U,OAAc,CAC1B,IAAI22D,EAAeJ,EAAgBK,sBACnCr3D,KAAKm3D,cAAgBC,OAChB,GAAyB,IAArB9hD,UAAU7U,OAAc,CACjC,IAAI62D,EAAiBhiD,UAAU,GAC/BujB,GAAOE,OAAOu+B,EAAiB,EAAG,wCAClCt3D,KAAKm3D,cAAgBG,IAIrBC,GAAqB,CAAEC,aAAc,CAAEjzD,cAAc,GAAO6d,iBAAkB,CAAE7d,cAAc,GAAO8yD,sBAAuB,CAAE9yD,cAAc,IAChJyyD,GAAgBlyD,UAAU2yD,gBAAkB,WAC1C,OAAOz3D,KAAKm3D,eAEdH,GAAgBlyD,UAAU4yD,SAAW,SAAmB3F,GACtD,OAAOA,EAAM/lD,IAAI+lD,EAAMjwD,OAAS,IAElCk1D,GAAgBlyD,UAAUhD,KAAO,WAG/B,GAAyB,IAArBwT,UAAU7U,OACZ,OAAIT,KAAK81B,UACA,GAET91B,KAAK23D,QACE33D,KAAK8B,KAAK9B,KAAKD,QACjB,GAAyB,IAArBuV,UAAU7U,OAAc,CAGjC,IAFA,IACIqB,EAAO,EACFjD,EAFEyW,UAAU,GAEH6/C,qBAAqB1vB,WAAY5mC,EAAE6mC,WAAY,CAC/D,IAAI2vB,EAAiBx2D,EAAE6C,OACnB2zD,aAA0BR,GAC5B/yD,GAdS9B,KAcM8B,KAAKuzD,GACXA,aAA0BxB,KACnC/xD,GAAQ,GAGZ,OAAOA,IAGXk1D,GAAgBlyD,UAAU8yD,WAAa,SAAqBr4D,EAAMqe,GAEhE,IADA,IAAIi6C,EAAgB,KACXh5D,EAAIU,EAAK41D,qBAAqB1vB,WAAY5mC,EAAE6mC,WAAY,CAC/D,IAAI2vB,EAAiBx2D,EAAE6C,OACnB2zD,aAA0BxB,IACxBwB,EAAepB,YAAcr2C,IAAQi6C,EAAgBxC,GAG7D,OAAsB,OAAlBwC,IACFt4D,EAAK41D,qBAAqB11D,OAAOo4D,IAC1B,IAIXb,GAAgBlyD,UAAUgzD,UAAY,WAGpC,GAAyB,IAArBxiD,UAAU7U,OAAc,CAC1BT,KAAK23D,QACL,IAAII,EAAa/3D,KAAK83D,UAAU93D,KAAKD,OACrC,OAAmB,OAAfg4D,EAA8B,IAAIvwB,GAC/BuwB,EACF,GAAyB,IAArBziD,UAAU7U,OAAc,CAGjC,IAFA,IAAIlB,EAAO+V,UAAU,GACjB0iD,EAAoB,IAAIxwB,GACnB3oC,EAAIU,EAAK41D,qBAAqB1vB,WAAY5mC,EAAE6mC,WAAY,CAC/D,IAAI2vB,EAAiBx2D,EAAE6C,OACvB,GAAI2zD,aAA0BR,GAAc,CAC1C,IAAIoD,EAbKj4D,KAauB83D,UAAUzC,GACf,OAAvB4C,GAA+BD,EAAkB/3D,IAAIg4D,QAChD5C,aAA0BxB,GACnCmE,EAAkB/3D,IAAIo1D,EAAepB,WAErCp7B,GAAOC,uBAGX,OAAIk/B,EAAkBl2D,QAAU,EAAY,KACrCk2D,IAGXhB,GAAgBlyD,UAAUzF,OAAS,SAAiB20D,EAAQp2C,GAC1Dib,GAAOE,QAAQ/4B,KAAKi3D,OAAQ,0EAC5Bj3D,KAAKk3D,gBAAgBj3D,IAAI,IAAI4zD,GAAcG,EAAQp2C,KAErDo5C,GAAgBlyD,UAAUozD,kBAAoB,WAG5C,GAAyB,IAArB5iD,UAAU7U,OAAc,CAC1B,IAAIu0D,EAAQ1/C,UAAU,GAClB6iD,EAAa,IAAI3wB,GAErB,OADAxnC,KAAKk4D,kBAAkBlD,EAAOh1D,KAAKD,MAAOo4D,GACnCA,EACF,GAAyB,IAArB7iD,UAAU7U,OAAc,CACjC,IAAI23D,EAAU9iD,UAAU,GACpBwI,EAAMxI,UAAU,GAChB+iD,EAAe/iD,UAAU,GAE7B,GADAujB,GAAOE,OAAOq/B,GAAW,GACrBt6C,EAAIo3C,aAAekD,EAErB,OADAC,EAAap4D,IAAI6d,GACV,KAET,IAAK,IAAIjf,EAAIif,EAAIq3C,qBAAqB1vB,WAAY5mC,EAAE6mC,WAAY,CAC9D,IAAI4yB,EAAYz5D,EAAE6C,OACd42D,aAAqBzD,GAlBd70D,KAmBFk4D,kBAAkBE,EAASE,EAAWD,IAE7Cx/B,GAAOE,OAAOu/B,aAAqBzE,KAClB,IAAbuE,GACFC,EAAap4D,IAAIq4D,IAIvB,OAAO,OAGXtB,GAAgBlyD,UAAU8vD,MAAQ,WAGhC,GAAyB,IAArBt/C,UAAU7U,OAAc,CAC1B,IAAI83D,EAAejjD,UAAU,GAC7BtV,KAAK23D,QACL,IAAIxiC,EAAU,IAAIqS,GAClB,OAAIxnC,KAAK81B,UACAX,GAELn1B,KAAKw4D,kBAAkBxlC,WAAWhzB,KAAKD,MAAM6zD,YAAa2E,IAC5Dv4D,KAAK40D,MAAM2D,EAAcv4D,KAAKD,MAAOo1B,GAEhCA,GACF,GAAyB,IAArB7f,UAAU7U,OAAc,CACjC,IAAIg4D,EAAiBnjD,UAAU,GAC3BlV,EAAUkV,UAAU,GAExB,GADAtV,KAAK23D,QACD33D,KAAK81B,UACP,OAAO,KAEL91B,KAAKw4D,kBAAkBxlC,WAAWhzB,KAAKD,MAAM6zD,YAAa6E,IAC5Dz4D,KAAK40D,MAAM6D,EAAgBz4D,KAAKD,MAAOK,QAEpC,GAAyB,IAArBkV,UAAU7U,OACnB,GAAIokB,GAAavP,UAAU,GAAIk/C,KAAiBl/C,UAAU,aAAc7Q,QAAU6Q,UAAU,aAAcu/C,GAKxG,IAJA,IAAI6D,EAAiBpjD,UAAU,GAC3B/V,EAAO+V,UAAU,GACjBqjD,EAAYrjD,UAAU,GACtBsjD,EAAkBr5D,EAAK41D,qBAClBt2D,EAAI,EAAGA,EAAI+5D,EAAgB92D,OAAQjD,IAAK,CAC/C,IAAIw2D,EAAiBuD,EAAgB5sD,IAAInN,GA9BhCmB,KA+BGw4D,kBAAkBxlC,WAAWqiC,EAAezB,YAAa8E,KAGjErD,aAA0BR,GAlCrB70D,KAmCA40D,MAAM8D,EAAgBrD,EAAgBsD,GACpCtD,aAA0BxB,GACnC8E,EAAUlE,UAAUY,EAAepB,WAEnCp7B,GAAOC,6BAGN,GAAIjU,GAAavP,UAAU,GAAI+xB,KAAU/xB,UAAU,aAAc7Q,QAAU6Q,UAAU,aAAcu/C,GAKxG,IAJA,IAAIgE,EAAiBvjD,UAAU,GAC3Bs2C,EAASt2C,UAAU,GACnBwjD,EAAYxjD,UAAU,GACtByjD,EAAoBnN,EAAOuJ,qBACtB50B,EAAM,EAAGA,EAAMw4B,EAAkBj3D,OAAQy+B,IAAO,CACvD,IAAIy4B,EAAmBD,EAAkB/sD,IAAIu0B,GAhDpCvgC,KAiDGw4D,kBAAkBxlC,WAAWgmC,EAAiBpF,YAAaiF,KAGnEG,aAA4BnE,GApDvB70D,KAqDA40D,MAAMiE,EAAgBG,EAAkBF,GACtCE,aAA4BnF,GACrCiF,EAAU74D,IAAI+4D,EAAiB/E,WAE/Bp7B,GAAOC,0BAMjBk+B,GAAgBlyD,UAAU6yD,MAAQ,WAChC,GAAI33D,KAAKi3D,OAAU,OAAO,KAC1Bj3D,KAAKD,MAAQC,KAAKk3D,gBAAgBphC,UAAY91B,KAAK2rD,WAAW,GAAK3rD,KAAKi5D,mBAAmBj5D,KAAKk3D,iBAAkB,GAClHl3D,KAAKk3D,gBAAkB,KACvBl3D,KAAKi3D,QAAS,GAEhBD,GAAgBlyD,UAAUo0D,QAAU,WAElC,OADAl5D,KAAK23D,QACE33D,KAAKD,OAEdi3D,GAAgBlyD,UAAUrF,OAAS,WAGjC,GAAyB,IAArB6V,UAAU7U,OAAc,CAC1B,IAAI83D,EAAejjD,UAAU,GACzBsI,EAAOtI,UAAU,GAErB,OADAtV,KAAK23D,UACD33D,KAAKw4D,kBAAkBxlC,WAAWhzB,KAAKD,MAAM6zD,YAAa2E,IACrDv4D,KAAKP,OAAO84D,EAAcv4D,KAAKD,MAAO6d,GAG1C,GAAyB,IAArBtI,UAAU7U,OAAc,CACjC,IAAIg4D,EAAiBnjD,UAAU,GAC3B/V,EAAO+V,UAAU,GACjB6jD,EAAS7jD,UAAU,GACnB0yB,EAAQhoC,KAAK43D,WAAWr4D,EAAM45D,GAClC,GAAInxB,EAAS,OAAO,EAEpB,IADA,IAAIoxB,EAAe,KACVv6D,EAAIU,EAAK41D,qBAAqB1vB,WAAY5mC,EAAE6mC,WAAY,CAC/D,IAAI2vB,EAAiBx2D,EAAE6C,OACvB,GAnBW1B,KAmBCw4D,kBAAkBxlC,WAAWqiC,EAAezB,YAAa6E,KAGjEpD,aAA0BR,KAC5B7sB,EAvBShoC,KAuBMP,OAAOg5D,EAAgBpD,EAAgB8D,KAC3C,CACTC,EAAe/D,EACf,OASN,OALqB,OAAjB+D,GACEA,EAAajE,qBAAqBr/B,WACpCv2B,EAAK41D,qBAAqB11D,OAAO25D,GAG9BpxB,IAGXgvB,GAAgBlyD,UAAUm0D,mBAAqB,SAA6BI,EAAoBrE,GAC9Fn8B,GAAOE,QAAQsgC,EAAmBvjC,WAClC,IAAIwjC,EAAmBt5D,KAAKu5D,uBAAuBF,EAAoBrE,EAAQ,GAC/E,OAAgC,IAA5BsE,EAAiBx3D,OACZw3D,EAAiBttD,IAAI,GAEvBhM,KAAKi5D,mBAAmBK,EAAkBtE,EAAQ,IAE3DgC,GAAgBlyD,UAAUsZ,MAAQ,WAGhC,GAAyB,IAArB9I,UAAU7U,OACZ,OAAIT,KAAK81B,UACA,GAET91B,KAAK23D,QACE33D,KAAKoe,MAAMpe,KAAKD,QAClB,GAAyB,IAArBuV,UAAU7U,OAAc,CAGjC,IAFA,IACI+4D,EAAgB,EACX36D,EAFEyW,UAAU,GAEH6/C,qBAAqB1vB,WAAY5mC,EAAE6mC,WAAY,CAC/D,IAAI2vB,EAAiBx2D,EAAE6C,OACvB,GAAI2zD,aAA0BR,GAAc,CAC1C,IAAI4E,EAdKz5D,KAceoe,MAAMi3C,GAC1BoE,EAAaD,IAAiBA,EAAgBC,IAGtD,OAAOD,EAAgB,IAG3BxC,GAAgBlyD,UAAUy0D,uBAAyB,SAAiCX,EAAiBc,GAGnG7gC,GAAOE,QAAQ6/B,EAAgB9iC,WAC/B,IAAIwjC,EAAmB,IAAI9xB,GAC3B8xB,EAAiBr5D,IAAID,KAAK2rD,WAAW+N,IACrC,IAAIC,EAAwB,IAAInyB,GAAUoxB,GAC1CrD,GAAYxzD,KAAK43D,EAAuB35D,KAAK45D,iBAC7C,IAAK,IAAI/6D,EAAI86D,EAAsBl0B,WAAY5mC,EAAE6mC,WAAY,CAC3D,IAAI2vB,EAAiBx2D,EAAE6C,OARV1B,KASF03D,SAAS4B,GAAkBnE,qBAAqBrzD,SAT9C9B,KASgEy3D,mBAC3E6B,EAAiBr5D,IAVND,KAUiB2rD,WAAW+N,IAV5B15D,KAYN03D,SAAS4B,GAAkBlE,kBAAkBC,GAEtD,OAAOiE,GAETtC,GAAgBlyD,UAAUgxB,QAAU,WAClC,OAAK91B,KAAKi3D,OACHj3D,KAAKD,MAAM+1B,UADS91B,KAAKk3D,gBAAgBphC,WAGlDkhC,GAAgBlyD,UAAUyb,YAAc,WACtC,MAAO,CAACuB,KAEVk1C,GAAgBlyD,UAAU0b,SAAW,WACnC,OAAOw2C,IAETA,GAAgB6C,eAAiB,SAAyBn7D,EAAGC,GAC3D,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,GAElC44D,GAAmBC,aAAaxrD,IAAM,WAAc,OAAOwrD,IAC3DD,GAAmBn1C,iBAAiBpW,IAAM,WAAc,OAAQ,oBAChEurD,GAAmBF,sBAAsBrrD,IAAM,WAAc,OAAO,IAEpEvH,OAAOid,iBAAkBs1C,GAAiBO,IAE1C,IAAIC,GAAe,aAEfsC,GAAe,aAEnBA,GAAah1D,UAAUwe,SAAW,SAAmBy2C,EAAOC,KAC5DF,GAAah1D,UAAUyb,YAAc,WACnC,MAAO,IAETu5C,GAAah1D,UAAU0b,SAAW,WAChC,OAAOs5C,IAGT,IAAIG,GAAW,SAAUC,GACvB,SAASD,EAAS7C,GAChBA,EAAeA,GAAgB6C,EAAQ5C,sBACvC6C,EAAmBv5D,KAAKX,KAAMo3D,GAG3B8C,IAAqBD,EAAQh5C,UAAYi5C,GAC9CD,EAAQn1D,UAAYL,OAAOyc,OAAQg5C,GAAsBA,EAAmBp1D,WAC5Em1D,EAAQn1D,UAAUqc,YAAc84C,EAEhC,IAAI/3C,EAAkB,CAAEi4C,YAAa,CAAE51D,cAAc,GAAO6d,iBAAkB,CAAE7d,cAAc,GAAO61D,YAAa,CAAE71D,cAAc,GAAO81D,YAAa,CAAE91D,cAAc,GAAO+1D,aAAc,CAAE/1D,cAAc,GAAO8yD,sBAAuB,CAAE9yD,cAAc,IA+LzP,OA9LA01D,EAAQn1D,UAAUy1D,yCAA2C,SAAmDC,EAAgBd,GAG9H7gC,GAAOE,OAAOyhC,EAAe/5D,OAAS,GAEtC,IADA,IAAI64D,EAAmB,IAAI9xB,GAClB3oC,EAAI,EAAGA,EAAI27D,EAAe/5D,OAAQ5B,IACzCy6D,EAAiBpyB,OALNlnC,KAKoBy6D,wCAAwCD,EAAe37D,GAAI66D,IAE5F,OAAOJ,GAETW,EAAQn1D,UAAU6mD,WAAa,SAAqBqJ,GAClD,OAAO,IAAImF,GAAYnF,IAEzBiF,EAAQn1D,UAAUhD,KAAO,WACvB,OAAyB,IAArBwT,UAAU7U,OACLy5D,EAAmBp1D,UAAUhD,KAAKnB,KAAKX,MAChCk6D,EAAmBp1D,UAAUhD,KAAK0zB,MAAMx1B,KAAMsV,YAEhE2kD,EAAQn1D,UAAUzF,OAAS,WACzB,GAAyB,IAArBiW,UAAU7U,OAOL,OAAOy5D,EAAmBp1D,UAAUzF,OAAOm2B,MAAMx1B,KAAMsV,WAN9D,IAAIq/C,EAAUr/C,UAAU,GACpBsI,EAAOtI,UAAU,GACrB,GAAIq/C,EAAQhiC,SACV,OAAO,KAETunC,EAAmBp1D,UAAUzF,OAAOsB,KAAKX,KAAM20D,EAAS/2C,IAG5Dq8C,EAAQn1D,UAAU0zD,gBAAkB,WAClC,OAAOyB,EAAQK,cAEjBL,EAAQn1D,UAAU01D,eAAiB,SAAyB5B,EAAiB8B,GAI3E,IAHA,IAAIC,EAAgBn4D,KAAK4d,MAAM5d,KAAK6d,KAAKu4C,EAAgB92D,OAAS44D,IAC9DE,EAAS,IAAInyD,MAAMiyD,GAAYzuC,KAAK,MACpCptB,EAAI+5D,EAAgBnzB,WACfxjC,EAAI,EAAGA,EAAIy4D,EAAYz4D,IAAK,CACnC24D,EAAO34D,GAAK,IAAIulC,GAEhB,IADA,IAAIqzB,EAAyB,EACtBh8D,EAAE6mC,WAAam1B,EAAyBF,GAAe,CAC5D,IAAItF,EAAiBx2D,EAAE6C,OACvBk5D,EAAO34D,GAAGhC,IAAIo1D,GACdwF,KAGJ,OAAOD,GAETX,EAAQn1D,UAAU8vD,MAAQ,WACxB,GAAyB,IAArBt/C,UAAU7U,OAAc,CAC1B,IAAIq6D,EAAYxlD,UAAU,GAC1B,OAAO4kD,EAAmBp1D,UAAU8vD,MAAMj0D,KAAKX,KAAM86D,GAChD,GAAyB,IAArBxlD,UAAU7U,OAAc,CACjC,IAAIs6D,EAAczlD,UAAU,GACxBlV,EAAUkV,UAAU,GACxB4kD,EAAmBp1D,UAAU8vD,MAAMj0D,KAAKX,KAAM+6D,EAAa36D,QACtD,GAAyB,IAArBkV,UAAU7U,OACnB,GAAIokB,GAAavP,UAAU,GAAIk/C,KAAiBl/C,UAAU,aAAc7Q,QAAU6Q,UAAU,aAAcu/C,GAAe,CACvH,IAAI0D,EAAejjD,UAAU,GACzB/V,EAAO+V,UAAU,GACjBqjD,EAAYrjD,UAAU,GAC1B4kD,EAAmBp1D,UAAU8vD,MAAMj0D,KAAKX,KAAMu4D,EAAch5D,EAAMo5D,QAC7D,GAAI9zC,GAAavP,UAAU,GAAI+xB,KAAU/xB,UAAU,aAAc7Q,QAAU6Q,UAAU,aAAcu/C,GAAe,CACvH,IAAI4D,EAAiBnjD,UAAU,GAC3Bs2C,EAASt2C,UAAU,GACnB6f,EAAU7f,UAAU,GACxB4kD,EAAmBp1D,UAAU8vD,MAAMj0D,KAAKX,KAAMy4D,EAAgB7M,EAAQz2B,KAI5E8kC,EAAQn1D,UAAU80D,cAAgB,WAChC,OAAOK,EAAQI,aAEjBJ,EAAQn1D,UAAU21D,wCAA0C,SAAkD7B,EAAiBc,GAC7H,OAAOQ,EAAmBp1D,UAAUy0D,uBAAuB54D,KAAKX,KAAM44D,EAAiBc,IAEzFO,EAAQn1D,UAAUrF,OAAS,WACzB,GAAyB,IAArB6V,UAAU7U,OAAc,CAC1B,IAAIk0D,EAAUr/C,UAAU,GACpBsI,EAAOtI,UAAU,GACrB,OAAO4kD,EAAmBp1D,UAAUrF,OAAOkB,KAAKX,KAAM20D,EAAS/2C,GACxD,OAAOs8C,EAAmBp1D,UAAUrF,OAAO+1B,MAAMx1B,KAAMsV,YAElE2kD,EAAQn1D,UAAUsZ,MAAQ,WACxB,OAAyB,IAArB9I,UAAU7U,OACLy5D,EAAmBp1D,UAAUsZ,MAAMzd,KAAKX,MACjCk6D,EAAmBp1D,UAAUsZ,MAAMoX,MAAMx1B,KAAMsV,YAEjE2kD,EAAQn1D,UAAUy0D,uBAAyB,SAAiCX,EAAiBc,GAC3F7gC,GAAOE,QAAQ6/B,EAAgB9iC,WAC/B,IAAIklC,EAAex4D,KAAK4d,MAAM5d,KAAK6d,KAAKu4C,EAAgB92D,OAAS9B,KAAKy3D,oBAClEkC,EAAwB,IAAInyB,GAAUoxB,GAC1CrD,GAAYxzD,KAAK43D,EAAuBM,EAAQG,aAChD,IAAII,EAAiBx6D,KAAKw6D,eAAeb,EAAuBn3D,KAAK4d,MAAM5d,KAAK6d,KAAK7d,KAAK8D,KAAK00D,MAC/F,OAAOh7D,KAAKu6D,yCAAyCC,EAAgBd,IAEvEO,EAAQn1D,UAAUm2D,iBAAmB,WACnC,GAAyB,IAArB3lD,UAAU7U,OAAc,CAC1B,GAAIokB,GAAavP,UAAU,GAAIwkD,IAAe,CAC5C,IAAIoB,EAAW5lD,UAAU,GACrBuhD,EAAK,IAAIlB,GAAc31D,KAAKk5D,UAAWl5D,KAAKk5D,UAAWgC,GAC3D,OAAOl7D,KAAKi7D,iBAAiBpE,GACxB,GAAIvhD,UAAU,aAAcqgD,GAAe,CAChD,IAAIwF,EAAc7lD,UAAU,GAC5B,OAAOtV,KAAKi7D,iBAAiBE,EAAa/5C,GAAOg6C,yBAE9C,GAAyB,IAArB9lD,UAAU7U,OAAc,CACjC,GAAI6U,UAAU,aAAc2kD,GAAWp1C,GAAavP,UAAU,GAAIwkD,IAAe,CAC/E,IAAIx6D,EAAOgW,UAAU,GACjB+lD,EAAa/lD,UAAU,GACvBgmD,EAAO,IAAI3F,GAAc31D,KAAKk5D,UAAW55D,EAAK45D,UAAWmC,GAC7D,OAAOr7D,KAAKi7D,iBAAiBK,GACxB,GAAIhmD,UAAU,aAAcqgD,IAAyC,iBAAjBrgD,UAAU,GAAiB,CACpF,IAAIimD,EAAgBjmD,UAAU,GAE1BkmD,EADclmD,UAAU,GAExBmmD,EAAU,KACVrF,EAAO,IAAIlC,GAEf,IADAkC,EAAKn2D,IAAIs7D,IACDnF,EAAKtgC,WAAa0lC,EAAqB,GAAK,CAClD,IAAIE,EAAUtF,EAAKhC,OACfuH,EAAkBD,EAAQ5E,cAC9B,GAAI6E,GAAmBH,EAAsB,MACzCE,EAAQjF,YACV+E,EAAqBG,EACrBF,EAAUC,GAEVA,EAAQvF,cAAcC,EAAMoF,GAGhC,MAAO,CAACC,EAAQ1E,aAAa,GAAG9C,UAAWwH,EAAQ1E,aAAa,GAAG9C,iBAEhE,GAAyB,IAArB3+C,UAAU7U,OAAc,CACjC,IAAIuvB,EAAM1a,UAAU,GAChBsI,EAAOtI,UAAU,GACjBsmD,EAAatmD,UAAU,GACvBumD,EAAM,IAAIhI,GAAc7jC,EAAKpS,GAC7Bk+C,EAAO,IAAInG,GAAc31D,KAAKk5D,UAAW2C,EAAKD,GAClD,OAAO57D,KAAKi7D,iBAAiBa,GAAM,KAGvC7B,EAAQn1D,UAAUyb,YAAc,WAC9B,MAAO,CAACm0C,GAAc5yC,KAExBm4C,EAAQn1D,UAAU0b,SAAW,WAC3B,OAAOy5C,GAETA,EAAQ8B,QAAU,SAAkBrgD,GAClC,OAAOu+C,EAAQ+B,IAAItgD,EAAEoX,UAAWpX,EAAEkX,YAEpCqnC,EAAQ+B,IAAM,SAAct9D,EAAGC,GAC7B,OAAQD,EAAIC,GAAK,GAEnBs7D,EAAQgC,QAAU,SAAkBvgD,GAClC,OAAOu+C,EAAQ+B,IAAItgD,EAAEqX,UAAWrX,EAAEmX,YAEpC3Q,EAAgBi4C,YAAYnuD,IAAM,WAAc,OAAOmuD,IACvDj4C,EAAgBE,iBAAiBpW,IAAM,WAAc,OAAO,mBAC5DkW,EAAgBk4C,YAAYpuD,IAAM,WAChC,MAAO,CACLuU,YAAa,WACX,MAAO,CAACsB,KAEV1hB,QAAS,SAAU2jB,EAAIC,GACrB,OAAOm2C,EAAmBL,eAAeI,EAAQ8B,QAAQj4C,EAAG8vC,aAAcqG,EAAQ8B,QAAQh4C,EAAG6vC,iBAInG1xC,EAAgBm4C,YAAYruD,IAAM,WAChC,MAAO,CACLuU,YAAa,WACX,MAAO,CAACsB,KAEV1hB,QAAS,SAAU2jB,EAAIC,GACrB,OAAOm2C,EAAmBL,eAAeI,EAAQgC,QAAQn4C,EAAG8vC,aAAcqG,EAAQgC,QAAQl4C,EAAG6vC,iBAInG1xC,EAAgBo4C,aAAatuD,IAAM,WACjC,MAAO,CACLuU,YAAa,WACX,MAAO,CAAC25C,EAAmB1C,eAE7BxkC,WAAY,SAAUkpC,EAASC,GAC7B,OAAOD,EAAQlpC,WAAWmpC,MAIhCj6C,EAAgBm1C,sBAAsBrrD,IAAM,WAAc,OAAO,IAEjEvH,OAAOid,iBAAkBu4C,EAAS/3C,GAE3B+3C,GACPjD,IAEEmD,GAAe,SAAUiC,GAC3B,SAASjC,IACP,IAAInF,EAAQ1/C,UAAU,GACtB8mD,EAAgBz7D,KAAKX,KAAMg1D,GAyB7B,OAtBKoH,IAAkBjC,EAAYl5C,UAAYm7C,GAC/CjC,EAAYr1D,UAAYL,OAAOyc,OAAQk7C,GAAmBA,EAAgBt3D,WAC1Eq1D,EAAYr1D,UAAUqc,YAAcg5C,EACpCA,EAAYr1D,UAAUwwD,cAAgB,WAEpC,IADA,IAAItB,EAAS,KACJn1D,EAAImB,KAAKm1D,qBAAqB1vB,WAAY5mC,EAAE6mC,WAAY,CAC/D,IAAI2vB,EAAiBx2D,EAAE6C,OACR,OAAXsyD,EACFA,EAAS,IAAI/hC,GAASojC,EAAezB,aAErCI,EAAO1gC,gBAAgB+hC,EAAezB,aAG1C,OAAOI,GAETmG,EAAYr1D,UAAUyb,YAAc,WAClC,MAAO,IAET45C,EAAYr1D,UAAU0b,SAAW,WAC/B,OAAO25C,GAGFA,GACPtF,IAEEwH,GAAyB,aAE7BA,GAAuBv3D,UAAUyb,YAAc,WAC7C,MAAO,IAET87C,GAAuBv3D,UAAU0b,SAAW,WAC1C,OAAO67C,IAETA,GAAuBC,aAAe,SAAuBv7B,EAAIrgB,GAC/D,OAAIqgB,EAAKrgB,GAAc,EACnBqgB,EAAKrgB,EAAa,EACf,GAET27C,GAAuBl8D,QAAU,SAAkBo8D,EAAQpiD,EAAItX,GAC7D,GAAIsX,EAAGuI,SAAS7f,GAAO,OAAO,EAC9B,IAAI25D,EAAQH,GAAuBC,aAAaniD,EAAGza,EAAGmD,EAAGnD,GACrD+8D,EAAQJ,GAAuBC,aAAaniD,EAAGjb,EAAG2D,EAAG3D,GACzD,OAAQq9D,GACN,KAAK,EACH,OAAOF,GAAuBK,aAAaF,EAAOC,GACpD,KAAK,EACH,OAAOJ,GAAuBK,aAAaD,EAAOD,GACpD,KAAK,EACH,OAAOH,GAAuBK,aAAaD,GAAQD,GACrD,KAAK,EACH,OAAOH,GAAuBK,cAAcF,EAAOC,GACrD,KAAK,EACH,OAAOJ,GAAuBK,cAAcF,GAAQC,GACtD,KAAK,EACH,OAAOJ,GAAuBK,cAAcD,GAAQD,GACtD,KAAK,EACH,OAAOH,GAAuBK,cAAcD,EAAOD,GACrD,KAAK,EACH,OAAOH,GAAuBK,aAAaF,GAAQC,GAIvD,OADA5jC,GAAOC,qBAAqB,wBACrB,GAETujC,GAAuBK,aAAe,SAAuBC,EAAcC,GACzE,OAAID,EAAe,GAAa,EAC5BA,EAAe,EAAY,EAC3BC,EAAe,GAAa,EAC5BA,EAAe,EAAY,EACxB,GAGT,IAAIC,GAAc,WAChB78D,KAAK88D,WAAa,KAClB98D,KAAKiI,MAAQ,KACbjI,KAAKq6B,aAAe,KACpBr6B,KAAK+8D,eAAiB,KACtB/8D,KAAKg9D,YAAc,KACnB,IAAIC,EAAY3nD,UAAU,GACtBrN,EAAQqN,UAAU,GAClB+kB,EAAe/kB,UAAU,GACzB4nD,EAAgB5nD,UAAU,GAC9BtV,KAAK88D,WAAaG,EAClBj9D,KAAKiI,MAAQ,IAAI8Z,GAAW9Z,GAC5BjI,KAAKq6B,aAAeA,EACpBr6B,KAAK+8D,eAAiBG,EACtBl9D,KAAKg9D,aAAe/0D,EAAMya,SAASu6C,EAAUttC,cAAc0K,KAE7DwiC,GAAY/3D,UAAU6qB,cAAgB,WACpC,OAAO3vB,KAAKiI,OAEd40D,GAAY/3D,UAAUgmD,MAAQ,SAAgBznD,GAC5CA,EAAIynD,MAAM9qD,KAAKiI,OACf5E,EAAIynD,MAAM,YAAc9qD,KAAKq6B,eAE/BwiC,GAAY/3D,UAAUge,UAAY,SAAoB+lB,GACpD,IAAIr+B,EAAQq+B,EACZ,OAAI7oC,KAAKq6B,aAAe7vB,EAAM6vB,cAAwB,EAClDr6B,KAAKq6B,aAAe7vB,EAAM6vB,aAAuB,EACjDr6B,KAAKiI,MAAMya,SAASlY,EAAMvC,OAAiB,EACxCo0D,GAAuBl8D,QAAQH,KAAK+8D,eAAgB/8D,KAAKiI,MAAOuC,EAAMvC,QAE/E40D,GAAY/3D,UAAU41B,WAAa,SAAqByiC,GACtD,OAA0B,IAAtBn9D,KAAKq6B,eAAuBr6B,KAAKg9D,aACjCh9D,KAAKq6B,eAAiB8iC,GAG5BN,GAAY/3D,UAAUs4D,WAAa,WACjC,OAAOp9D,KAAKg9D,aAEdH,GAAY/3D,UAAUyb,YAAc,WAClC,MAAO,CAACoB,KAEVk7C,GAAY/3D,UAAU0b,SAAW,WAC/B,OAAOq8C,IAIT,IAAIQ,GAAkB,WACpBr9D,KAAKs9D,SAAW,IAAI7vB,GACpBztC,KAAK+sD,MAAQ,KACb,IAAI5E,EAAO7yC,UAAU,GACrBtV,KAAK+sD,MAAQ5E,GAEfkV,GAAgBv4D,UAAUy4D,oBAAsB,WAC5C,IAEE9yB,EAAY,IAAIpC,GACpBroC,KAAKw9D,eAGL,IAFA,IAAIxqB,EAAKhzC,KAAKylC,WACVg4B,EAASzqB,EAAGtxC,OACTsxC,EAAGtN,WAAW,CACnB,IAAIg4B,EAAK1qB,EAAGtxC,OAPC1B,KAQN29D,mBAAmBF,EAAQC,EAAIjzB,GACtCgzB,EAASC,EAEX,OAAOjzB,EAAUva,qBAEnBmtC,GAAgBv4D,UAAU84D,kBAAoB,WAC1C,IAEEC,EAAyB,IAAIr2B,GACjCxnC,KAAK89D,+BAA+BD,GACpC79D,KAAK+9D,kCAAkCF,GACvC,IAAK,IAAI7qB,EAAK6qB,EAAuBp4B,WAAYuN,EAAGtN,WAAY,CAC9D,IAAIs4B,EAAchrB,EAAGtxC,OAAO2kB,WANfrmB,KAONC,IAPMD,KAOK+sD,MAAMp9B,cAAcquC,GAAcA,KAGxDX,GAAgBv4D,UAAUgmD,MAAQ,SAAgBznD,GAChDA,EAAIm6B,QAAQ,kBACZ,IAAK,IAAIwV,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CACnCsN,EAAGtxC,OACTopD,MAAMznD,KAGbg6D,GAAgBv4D,UAAUi5D,kCAAoC,SAA4CF,GAGxG,IAFE,IAEOh/D,EAAI,EAAGA,EAAImB,KAAK+sD,MAAMjrD,OAAS,EAAGjD,IAAK,CAC9C,IAAIsb,EAHSna,KAGG+sD,MAAMp9B,cAAc9wB,GAEhCiE,EALS9C,KAKG+sD,MAAMp9B,cAAc9wB,EAAI,GACpCsb,EAAGuI,SAAS5f,IACd+6D,EAAuB59D,IAAI,IAAImmB,GAAQvnB,EAAI,MAIjDw+D,GAAgBv4D,UAAU64D,mBAAqB,SAA6BM,EAAKC,EAAKzzB,GAClF,IAGE0zB,EAAiBn+D,KAAK+sD,MAAMp9B,cAAcuuC,EAAI7jC,cAC9C+jC,EAAYF,EAAId,eAAiBc,EAAIj2D,MAAMya,SAASy7C,GAKxD1zB,EAAUxqC,IAAI,IAAI8hB,GAAWk8C,EAAIh2D,QAAQ,GACzC,IAAK,IAAIpJ,EAAIo/D,EAAI5jC,aAAe,EAAGx7B,GAAKq/D,EAAI7jC,aAAcx7B,IACxD4rC,EAAUxqC,IAXGD,KAWQ+sD,MAAMp9B,cAAc9wB,IAEvCu/D,GACF3zB,EAAUxqC,IAAI,IAAI8hB,GAAWm8C,EAAIj2D,SAGrCo1D,GAAgBv4D,UAAU2gC,SAAW,WACnC,OAAOzlC,KAAKs9D,SAASr8D,SAASwkC,YAEhC43B,GAAgBv4D,UAAUu5D,cAAgB,SAAwBC,GAGhEt+D,KAAKw9D,eACLx9D,KAAK49D,oBAGL,IAFA,IAAI5qB,EAAKhzC,KAAKylC,WACVg4B,EAASzqB,EAAGtxC,OACTsxC,EAAGtN,WAAW,CACnB,IAAIg4B,EAAK1qB,EAAGtxC,OACR68D,EARSv+D,KAQQw+D,gBAAgBf,EAAQC,GAC7CY,EAASr+D,IAAIs+D,GACbd,EAASC,IAGbL,GAAgBv4D,UAAU25D,kBAAoB,SAA4BR,EAAKC,EAAKQ,GAClF,IAAKT,EAAIh2D,MAAMya,SAASw7C,EAAIj2D,OAAU,OAAO,EAC7C,IAAI02D,EAAqBT,EAAI7jC,aAAe4jC,EAAI5jC,aAIhD,OAHK6jC,EAAId,cACPuB,IAEyB,IAAvBA,IACFD,EAAqB,GAAKT,EAAI5jC,aAAe,GACtC,IAIXgjC,GAAgBv4D,UAAUg5D,+BAAiC,SAAyCD,GAMlG,IALE,IAEEa,EAAuB,IAAIj2D,MAAM,GAAGwjB,KAAK,MACzC+mB,EAAKhzC,KAAKylC,WACVg4B,EAASzqB,EAAGtxC,OACTsxC,EAAGtN,WAAW,CACnB,IAAIg4B,EAAK1qB,EAAGtxC,OANC1B,KAOYy+D,kBAAkBhB,EAAQC,EAAIgB,IACpCb,EAAuB59D,IAAI,IAAImmB,GAAQs4C,EAAqB,KAC/EjB,EAASC,IAGbL,GAAgBv4D,UAAU67C,QAAU,WAClC,OAAO3gD,KAAK+sD,OAEdsQ,GAAgBv4D,UAAU04D,aAAe,WACvC,IAAIoB,EAAc5+D,KAAK+sD,MAAMjrD,OAAS,EACtC9B,KAAKC,IAAID,KAAK+sD,MAAMp9B,cAAc,GAAI,GACtC3vB,KAAKC,IAAID,KAAK+sD,MAAMp9B,cAAcivC,GAAcA,IAElDvB,GAAgBv4D,UAAU05D,gBAAkB,SAA0BP,EAAKC,GACvE,IAEEryB,EAAOqyB,EAAI7jC,aAAe4jC,EAAI5jC,aAAe,EAC7C8jC,EAAiBn+D,KAAK+sD,MAAMp9B,cAAcuuC,EAAI7jC,cAC9C+jC,EAAYF,EAAId,eAAiBc,EAAIj2D,MAAMya,SAASy7C,GACnDC,GACHvyB,IAEF,IAAInK,EAAM,IAAIj5B,MAAMojC,GAAM5f,KAAK,MAC3B4yC,EAAM,EACVn9B,EAAIm9B,KAAS,IAAI98C,GAAWk8C,EAAIh2D,OAChC,IAAK,IAAIpJ,EAAIo/D,EAAI5jC,aAAe,EAAGx7B,GAAKq/D,EAAI7jC,aAAcx7B,IACxD6iC,EAAIm9B,KAZS7+D,KAYO+sD,MAAMp9B,cAAc9wB,GAG1C,OADIu/D,IAAa18B,EAAIm9B,GAAO,IAAI98C,GAAWm8C,EAAIj2D,QACxC,IAAI62D,GAAmBp9B,EAAK1hC,KAAK+sD,MAAMgS,YAEhD1B,GAAgBv4D,UAAU7E,IAAM,SAAck8B,EAAO9B,GACnD,IAAI2kC,EAAQ,IAAInC,GAAY78D,KAAK+sD,MAAO5wB,EAAO9B,EAAcr6B,KAAK+sD,MAAMkS,iBAAiB5kC,IACrFqjC,EAAK19D,KAAKs9D,SAAStxD,IAAIgzD,GAC3B,OAAW,OAAPtB,GACF7kC,GAAOE,OAAO2kC,EAAGz1D,MAAMya,SAASyZ,GAAQ,gDACjCuhC,IAET19D,KAAKs9D,SAAS9wB,IAAIwyB,EAAOA,GAClBA,IAET3B,GAAgBv4D,UAAUo6D,2BAA6B,SAAqCC,GAC1F,IAAI/W,EAAUpoD,KAAK+sD,MAAM9c,iBAErBmvB,EADSD,EAAWnzD,IAAI,GACX2jB,cAAc,GAC/B,IAAKyvC,EAAI18C,SAAS0lC,EAAQ,IAAO,MAAM,IAAI1vB,GAAiB,iCAAmC0mC,GAC/F,IACIC,EADSF,EAAWnzD,IAAImzD,EAAWr9D,OAAS,GACzBmuC,iBACnBqvB,EAAMD,EAAUA,EAAU5+D,OAAS,GACvC,IAAK6+D,EAAI58C,SAAS0lC,EAAQA,EAAQ3nD,OAAS,IAAO,MAAM,IAAIi4B,GAAiB,+BAAiC4mC,IAEhHjC,GAAgBv4D,UAAUyb,YAAc,WACtC,MAAO,IAET88C,GAAgBv4D,UAAU0b,SAAW,WACnC,OAAO68C,IAsDT,IAAIkC,GAAS,aAEbA,GAAOz6D,UAAUyb,YAAc,WAC7B,MAAO,IAETg/C,GAAOz6D,UAAU0b,SAAW,WAC1B,OAAO++C,IAETA,GAAOhD,OAAS,WACd,GAA4B,iBAAjBjnD,UAAU,IAA2C,iBAAjBA,UAAU,GAAiB,CACxE,IAAI6N,EAAK7N,UAAU,GACf8N,EAAK9N,UAAU,GACnB,GAAW,IAAP6N,GAAqB,IAAPC,EAAc,MAAM,IAAIvC,GAAyB,yCAA2CsC,EAAK,KAAOC,EAAK,MAC/H,IAAIo8C,EAAMh9D,KAAKiP,IAAI0R,GACfs8C,EAAMj9D,KAAKiP,IAAI2R,GACnB,OAAID,GAAM,EACJC,GAAM,EACJo8C,GAAOC,EAAc,EAAmB,EAExCD,GAAOC,EAAc,EAAmB,EAG1Cr8C,GAAM,EACJo8C,GAAOC,EAAc,EAAmB,EAExCD,GAAOC,EAAc,EAAmB,EAG3C,GAAInqD,UAAU,aAAcyM,IAAczM,UAAU,aAAcyM,GAAY,CACnF,IAAI5H,EAAK7E,UAAU,GACfzS,EAAKyS,UAAU,GACfoqD,EAAO78D,EAAGnD,EAAIya,EAAGza,EACjBigE,EAAO98D,EAAG3D,EAAIib,EAAGjb,EACrB,GAAa,IAATwgE,GAAyB,IAATC,EAAgB,MAAM,IAAI9+C,GAAyB,sDAAwD1G,GAC/H,OAAOolD,GAAOhD,OAAOmD,EAAMC,KAI/B,IAAIC,GAAgB,aAEpBA,GAAc96D,UAAUmrC,eAAiB,aACzC2vB,GAAc96D,UAAUhD,KAAO,aAC/B89D,GAAc96D,UAAU6qB,cAAgB,SAAwB9wB,KAChE+gE,GAAc96D,UAAU0sC,SAAW,aACnCouB,GAAc96D,UAAU+6D,QAAU,SAAkBvhE,KACpDshE,GAAc96D,UAAUi6D,QAAU,aAClCa,GAAc96D,UAAUyb,YAAc,WACpC,MAAO,IAETq/C,GAAc96D,UAAU0b,SAAW,WACjC,OAAOo/C,IAGT,IAAIE,GAAuB,aAE3BA,GAAqBh7D,UAAUi7D,gBAAkB,SAA0B5jC,EAAO9B,KAClFylC,GAAqBh7D,UAAUyb,YAAc,WAC3C,MAAO,CAACq/C,KAEVE,GAAqBh7D,UAAU0b,SAAW,WACxC,OAAOs/C,IAGT,IAAIhB,GAAqB,WACvB9+D,KAAKggE,UAAY,IAAI3C,GAAgBr9D,MACrCA,KAAKgnD,KAAO,KACZhnD,KAAKigE,MAAQ,KACb,IAAIv+B,EAAMpsB,UAAU,GAChBhX,EAAOgX,UAAU,GACrBtV,KAAKgnD,KAAOtlB,EACZ1hC,KAAKigE,MAAQ3hE,GAEfwgE,GAAmBh6D,UAAUmrC,eAAiB,WAC5C,OAAOjwC,KAAKgnD,MAEd8X,GAAmBh6D,UAAUhD,KAAO,WAClC,OAAO9B,KAAKgnD,KAAKvmD,QAEnBq+D,GAAmBh6D,UAAU6qB,cAAgB,SAAwB9wB,GACnE,OAAOmB,KAAKgnD,KAAKnoD,IAEnBigE,GAAmBh6D,UAAU0sC,SAAW,WACtC,OAAOxxC,KAAKgnD,KAAK,GAAG1sC,OAAOta,KAAKgnD,KAAKhnD,KAAKgnD,KAAKvmD,OAAS,KAE1Dq+D,GAAmBh6D,UAAUm6D,iBAAmB,SAA2B79D,GACzE,OAAIA,IAAUpB,KAAKgnD,KAAKvmD,OAAS,GAAa,EACvCT,KAAKkgE,WAAWlgE,KAAK2vB,cAAcvuB,GAAQpB,KAAK2vB,cAAcvuB,EAAQ,KAE/E09D,GAAmBh6D,UAAU+6D,QAAU,SAAkBvhE,GACvD0B,KAAKigE,MAAQ3hE,GAEfwgE,GAAmBh6D,UAAUo7D,WAAa,SAAqB/lD,EAAItX,GACjE,OAAIsX,EAAGuI,SAAS7f,GAAc,EACvB08D,GAAOhD,OAAOpiD,EAAItX,IAE3Bi8D,GAAmBh6D,UAAUi6D,QAAU,WACrC,OAAO/+D,KAAKigE,OAEdnB,GAAmBh6D,UAAUi7D,gBAAkB,WAC7C,GAAyB,IAArBzqD,UAAU7U,OAAc,CAC1B,IAAI0/D,EAAU7qD,UAAU,GACpB+kB,EAAe/kB,UAAU,GAC7BtV,KAAKogE,oBAAoBD,EAAS9lC,QAC7B,GAAyB,IAArB/kB,UAAU7U,OAAc,CACjC,IAAI4/D,EAAK/qD,UAAU,GACfgrD,EAAiBhrD,UAAU,GAE3BglB,EAAWhlB,UAAU,GACrB6mB,EAAQ,IAAIpa,GAAWs+C,EAAG1qD,gBAAgB2kB,IAC9Ct6B,KAAK+/D,gBAAgB5jC,EAAOmkC,KAGhCxB,GAAmBh6D,UAAUme,SAAW,WACtC,OAAOsV,GAAUE,aAAa,IAAIghB,GAAwBz5C,KAAKgnD,QAEjE8X,GAAmBh6D,UAAUy7D,YAAc,WACzC,OAAOvgE,KAAKggE,WAEdlB,GAAmBh6D,UAAUs7D,oBAAsB,SAA8BjkC,EAAO9B,GACtF,IAAImmC,EAAyBnmC,EACzBomC,EAAeD,EAAyB,EAC5C,GAAIC,EAAezgE,KAAKgnD,KAAKvmD,OAAQ,CACnC,IAAIoJ,EAAS7J,KAAKgnD,KAAKyZ,GACnBtkC,EAAMzZ,SAAS7Y,KACjB22D,EAAyBC,GAI7B,OADSzgE,KAAKggE,UAAU//D,IAAIk8B,EAAOqkC,IAGrC1B,GAAmBh6D,UAAU47D,iBAAmB,SAA2BL,EAAIhmC,EAAcwrB,GAG3F,IAFE,IAEOhnD,EAAI,EAAGA,EAAIwhE,EAAGrlC,qBAAsBn8B,IAF9BmB,KAGN+/D,gBAAgBM,EAAIhmC,EAAcwrB,EAAWhnD,IAGxDigE,GAAmBh6D,UAAUyb,YAAc,WACzC,MAAO,CAACu/C,KAEVhB,GAAmBh6D,UAAU0b,SAAW,WACtC,OAAOs+C,IAETA,GAAmB6B,mBAAqB,WACtC,GAAyB,IAArBrrD,UAAU7U,OAAc,CAC1B,IAAImgE,EAAatrD,UAAU,GACvBurD,EAAiB,IAAIr5B,GAEzB,OADAs3B,GAAmB6B,mBAAmBC,EAAYC,GAC3CA,EACF,GAAyB,IAArBvrD,UAAU7U,OAGnB,IAFA,IAAIqgE,EAAexrD,UAAU,GACzByrD,EAAmBzrD,UAAU,GACxBzW,EAAIiiE,EAAar7B,WAAY5mC,EAAE6mC,WAAY,CACzC7mC,EAAE6C,OACR6+D,cAAclC,cAAc0C,KAKrC,IAAIC,GAAc,WAGhB,GAFAhhE,KAAKma,GAAK,KACVna,KAAK6C,GAAK,KACe,IAArByS,UAAU7U,OACZT,KAAKma,GAAK,IAAI4H,GACd/hB,KAAK6C,GAAK,IAAIkf,QACT,GAAyB,IAArBzM,UAAU7U,OAAc,CACjC,IAAIy1C,EAAK5gC,UAAU,GACnBtV,KAAKma,GAAK,IAAI4H,GAAWm0B,EAAG/7B,IAC5Bna,KAAK6C,GAAK,IAAIkf,GAAWm0B,EAAGrzC,SACvB,GAAyB,IAArByS,UAAU7U,OACnBT,KAAKma,GAAK7E,UAAU,GACpBtV,KAAK6C,GAAKyS,UAAU,QACf,GAAyB,IAArBA,UAAU7U,OAAc,CACjC,IAAIsgC,EAAKzrB,UAAU,GACfqsB,EAAKrsB,UAAU,GACfoL,EAAKpL,UAAU,GACf1H,EAAK0H,UAAU,GACnBtV,KAAKma,GAAK,IAAI4H,GAAWgf,EAAIY,GAC7B3hC,KAAK6C,GAAK,IAAIkf,GAAWrB,EAAI9S,KAI7BqzD,GAAqB,CAAE7+C,iBAAkB,CAAE7d,cAAc,IAC7Dy8D,GAAYl8D,UAAUo8D,KAAO,WAC3B,OAAO1+D,KAAKwZ,IAAIhc,KAAKma,GAAGza,EAAGM,KAAK6C,GAAGnD,IAErCshE,GAAYl8D,UAAU+oB,iBAAmB,WACvC,GAAIvY,UAAU,aAAc0rD,GAAa,CACvC,IAAInqD,EAAMvB,UAAU,GAChB6rD,EAAU7kC,GAAazO,iBAAiB7tB,KAAKma,GAAIna,KAAK6C,GAAIgU,EAAIsD,IAC9DinD,EAAU9kC,GAAazO,iBAAiB7tB,KAAKma,GAAIna,KAAK6C,GAAIgU,EAAIhU,IAClE,OAAIs+D,GAAW,GAAKC,GAAW,EAAY5+D,KAAK0Z,IAAIilD,EAASC,GACzDD,GAAW,GAAKC,GAAW,EAAY5+D,KAAK0Z,IAAIilD,EAASC,GACtD,EACF,GAAI9rD,UAAU,aAAcyM,GAAY,CAC7C,IAAIpgB,EAAI2T,UAAU,GAClB,OAAOgnB,GAAazO,iBAAiB7tB,KAAKma,GAAIna,KAAK6C,GAAIlB,KAG3Dq/D,GAAYl8D,UAAUggC,WAAa,SAAqBu8B,GACtD,OAAOA,EAAY1pC,iBAAiB,CAAC33B,KAAKma,GAAIna,KAAK6C,MAErDm+D,GAAYl8D,UAAUgV,WAAa,WACjC,OAAO9Z,KAAKma,GAAGza,IAAMM,KAAK6C,GAAGnD,GAE/BshE,GAAYl8D,UAAUwV,OAAS,SAAiByI,GAC9C,KAAMA,aAAai+C,IACjB,OAAO,EAET,IAAIx2D,EAAQuY,EACZ,OAAO/iB,KAAKma,GAAGG,OAAO9P,EAAM2P,KAAOna,KAAK6C,GAAGyX,OAAO9P,EAAM3H,KAE1Dm+D,GAAYl8D,UAAUwK,aAAe,SAAuBuoB,GAC1D,IAAIwoC,EAAK,IAAIrkC,GAEb,OADAqkC,EAAGzlC,oBAAoB56B,KAAKma,GAAIna,KAAK6C,GAAIg1B,EAAK1d,GAAI0d,EAAKh1B,IACnDw9D,EAAGllC,kBAA4BklC,EAAG1qD,gBAAgB,GAC/C,MAETqrD,GAAYl8D,UAAUw8D,QAAU,WAC9B,GAAIhsD,UAAU,aAAcyM,GAAY,CACtC,IAAIpgB,EAAI2T,UAAU,GAClB,GAAI3T,EAAE2Y,OAAOta,KAAKma,KAAOxY,EAAE2Y,OAAOta,KAAK6C,IAAO,OAAO,IAAIkf,GAAWpgB,GACpE,IAAI1C,EAAIe,KAAKuhE,iBAAiB5/D,GAC1BsG,EAAQ,IAAI8Z,GAGhB,OAFA9Z,EAAMvI,EAAIM,KAAKma,GAAGza,EAAIT,GAAKe,KAAK6C,GAAGnD,EAAIM,KAAKma,GAAGza,GAC/CuI,EAAM/I,EAAIc,KAAKma,GAAGjb,EAAID,GAAKe,KAAK6C,GAAG3D,EAAIc,KAAKma,GAAGjb,GACxC+I,EACF,GAAIqN,UAAU,aAAc0rD,GAAa,CAC9C,IAAInqD,EAAMvB,UAAU,GAChBksD,EAAMxhE,KAAKuhE,iBAAiB1qD,EAAIsD,IAChCsnD,EAAMzhE,KAAKuhE,iBAAiB1qD,EAAIhU,IACpC,GAAI2+D,GAAO,GAAOC,GAAO,EAAO,OAAO,KACvC,GAAID,GAAO,GAAOC,GAAO,EAAO,OAAO,KACvC,IAAIC,EAAQ1hE,KAAKshE,QAAQzqD,EAAIsD,IACzBqnD,EAAM,IAAOE,EAAQ1hE,KAAKma,IAC1BqnD,EAAM,IAAOE,EAAQ1hE,KAAK6C,IAC9B,IAAI8+D,EAAQ3hE,KAAKshE,QAAQzqD,EAAIhU,IAG7B,OAFI4+D,EAAM,IAAOE,EAAQ3hE,KAAKma,IAC1BsnD,EAAM,IAAOE,EAAQ3hE,KAAK6C,IACvB,IAAIm+D,GAAYU,EAAOC,KAGlCX,GAAYl8D,UAAUogC,UAAY,WAC5BllC,KAAK6C,GAAGigB,UAAU9iB,KAAKma,IAAM,GAAKna,KAAK2T,WAE7CqtD,GAAYl8D,UAAU8oD,MAAQ,WAC5B,OAAOprD,KAAKqrD,MAAM7tD,KAAK6C,GAAG3D,EAAIc,KAAKma,GAAGjb,EAAGc,KAAK6C,GAAGnD,EAAIM,KAAKma,GAAGza,IAE/DshE,GAAYl8D,UAAU6qB,cAAgB,SAAwB9wB,GAC5D,OAAU,IAANA,EAAkBmB,KAAKma,GACpBna,KAAK6C,IAEdm+D,GAAYl8D,UAAU88D,sBAAwB,SAAgCjgE,GAC5E,OAAO26B,GAAa8F,+BAA+BzgC,EAAG3B,KAAKma,GAAIna,KAAK6C,KAEtEm+D,GAAYl8D,UAAU+8D,KAAO,WAC3B,OAAOr/D,KAAKwZ,IAAIhc,KAAKma,GAAGjb,EAAGc,KAAK6C,GAAG3D,IAErC8hE,GAAYl8D,UAAUg9D,SAAW,WAC/B,OAAOd,GAAYc,SAAS9hE,KAAKma,GAAIna,KAAK6C,KAE5Cm+D,GAAYl8D,UAAUy8D,iBAAmB,SAA2B5/D,GAClE,GAAIA,EAAE2Y,OAAOta,KAAKma,IAAO,OAAO,EAChC,GAAIxY,EAAE2Y,OAAOta,KAAK6C,IAAO,OAAO,EAChC,IAAIsgB,EAAKnjB,KAAK6C,GAAGnD,EAAIM,KAAKma,GAAGza,EACzB0jB,EAAKpjB,KAAK6C,GAAG3D,EAAIc,KAAKma,GAAGjb,EACzBge,EAAMiG,EAAKA,EAAKC,EAAKA,EACzB,OAAIlG,GAAO,EAAckE,GAAOsC,MACtB/hB,EAAEjC,EAAIM,KAAKma,GAAGza,GAAKyjB,GAAMxhB,EAAEzC,EAAIc,KAAKma,GAAGjb,GAAKkkB,GAAMlG,GAG9D8jD,GAAYl8D,UAAUi9D,cAAgB,SAAwBlqC,GAC5D,IAAIsE,EAAQn8B,KAAKsP,aAAauoB,GAC9B,GAAc,OAAVsE,EACF,MAAO,CAACA,EAAOA,GAEjB,IAAI6lC,EAAY,IAAIv5D,MAAM,GAAGwjB,KAAK,MAC9BqW,EAAclhB,GAAOE,UACrBja,EAAO,KACP46D,EAAUjiE,KAAK6G,aAAagxB,EAAK1d,IACrCmoB,EAAc2/B,EAAQ3+C,SAASuU,EAAK1d,IACpC6nD,EAAU,GAAKC,EACfD,EAAU,GAAKnqC,EAAK1d,GACpB,IAAI+nD,EAAUliE,KAAK6G,aAAagxB,EAAKh1B,KACrCwE,EAAO66D,EAAQ5+C,SAASuU,EAAKh1B,KAClBy/B,IACTA,EAAcj7B,EACd26D,EAAU,GAAKE,EACfF,EAAU,GAAKnqC,EAAKh1B,IAEtB,IAAIs/D,EAAUtqC,EAAKhxB,aAAa7G,KAAKma,KACrC9S,EAAO86D,EAAQ7+C,SAAStjB,KAAKma,KAClBmoB,IACTA,EAAcj7B,EACd26D,EAAU,GAAKhiE,KAAKma,GACpB6nD,EAAU,GAAKG,GAEjB,IAAIC,EAAUvqC,EAAKhxB,aAAa7G,KAAK6C,IAOrC,OANAwE,EAAO+6D,EAAQ9+C,SAAStjB,KAAK6C,KAClBy/B,IACTA,EAAcj7B,EACd26D,EAAU,GAAKhiE,KAAK6C,GACpBm/D,EAAU,GAAKI,GAEVJ,GAEThB,GAAYl8D,UAAU+B,aAAe,SAAuBlF,GAC1D,IAAI0gE,EAASriE,KAAKuhE,iBAAiB5/D,GACnC,OAAI0gE,EAAS,GAAKA,EAAS,EAClBriE,KAAKshE,QAAQ3/D,GAEV3B,KAAKma,GAAGmJ,SAAS3hB,GACjB3B,KAAK6C,GAAGygB,SAAS3hB,GACD3B,KAAKma,GAC1Bna,KAAK6C,IAEdm+D,GAAYl8D,UAAUw9D,KAAO,WAC3B,OAAO9/D,KAAK0Z,IAAIlc,KAAKma,GAAGza,EAAGM,KAAK6C,GAAGnD,IAErCshE,GAAYl8D,UAAU0/B,UAAY,WAChC,OAAOxkC,KAAKma,GAAGmJ,SAAStjB,KAAK6C,KAE/Bm+D,GAAYl8D,UAAUge,UAAY,SAAoBC,GACpD,IAAIvY,EAAQuY,EACRw/C,EAAQviE,KAAKma,GAAG2I,UAAUtY,EAAM2P,IACpC,OAAc,IAAVooD,EAAsBA,EACnBviE,KAAK6C,GAAGigB,UAAUtY,EAAM3H,KAEjCm+D,GAAYl8D,UAAU6O,QAAU,WAC9B,IAAImxC,EAAO9kD,KAAKma,GAChBna,KAAKma,GAAKna,KAAK6C,GACf7C,KAAK6C,GAAKiiD,GAEZkc,GAAYl8D,UAAUm/B,WAAa,SAAqBz5B,GACtD,OAAOxK,KAAKma,GAAGG,OAAO9P,EAAM2P,MACrBna,KAAK6C,GAAGyX,OAAO9P,EAAM3H,KAAO7C,KAAKma,GAAGG,OAAO9P,EAAM3H,MACjD7C,KAAK6C,GAAGyX,OAAO9P,EAAM2P,KAE9B6mD,GAAYl8D,UAAU09D,iBAAmB,SAA2B3qC,GAClE,IAEE,OADY/G,GAAYxhB,aAAatP,KAAKma,GAAIna,KAAK6C,GAAIg1B,EAAK1d,GAAI0d,EAAKh1B,IAErE,MAAOsqB,GACP,KAAIA,aAAciD,IAAqC,MAAMjD,EAE/D,OAAO,MAET6zC,GAAYl8D,UAAU29D,KAAO,WAC3B,OAAOjgE,KAAK0Z,IAAIlc,KAAKma,GAAGjb,EAAGc,KAAK6C,GAAG3D,IAErC8hE,GAAYl8D,UAAU49D,iBAAmB,SAA2BC,EAAuBC,GACzF,IAAIC,EAAO7iE,KAAKma,GAAGza,EAAIijE,GAAyB3iE,KAAK6C,GAAGnD,EAAIM,KAAKma,GAAGza,GAChEojE,EAAO9iE,KAAKma,GAAGjb,EAAIyjE,GAAyB3iE,KAAK6C,GAAG3D,EAAIc,KAAKma,GAAGjb,GAChEikB,EAAKnjB,KAAK6C,GAAGnD,EAAIM,KAAKma,GAAGza,EACzB0jB,EAAKpjB,KAAK6C,GAAG3D,EAAIc,KAAKma,GAAGjb,EACzBge,EAAM1a,KAAK8D,KAAK6c,EAAKA,EAAKC,EAAKA,GAC/B2/C,EAAK,EACLC,EAAK,EACT,GAAuB,IAAnBJ,EAAwB,CAC1B,GAAI1lD,GAAO,EAAO,MAAM,IAAIvU,MAAM,uDAClCo6D,EAAKH,EAAiBz/C,EAAKjG,EAC3B8lD,EAAKJ,EAAiBx/C,EAAKlG,EAK7B,OADY,IAAI6E,GAFF8gD,EAAOG,EACPF,EAAOC,IAIvB/B,GAAYl8D,UAAUm+D,eAAiB,WACrC,GAAyB,IAArB3tD,UAAU7U,OAAc,CAC1B,IAAIy1C,EAAK5gC,UAAU,GACnBtV,KAAKijE,eAAe/sB,EAAG/7B,GAAI+7B,EAAGrzC,SACzB,GAAyB,IAArByS,UAAU7U,OAAc,CACjC,IAAI0Z,EAAK7E,UAAU,GACfzS,EAAKyS,UAAU,GACnBtV,KAAKma,GAAGza,EAAIya,EAAGza,EACfM,KAAKma,GAAGjb,EAAIib,EAAGjb,EACfc,KAAK6C,GAAGnD,EAAImD,EAAGnD,EACfM,KAAK6C,GAAG3D,EAAI2D,EAAG3D,IAGnB8hE,GAAYl8D,UAAUo+D,gBAAkB,SAA0BC,GAChE,IAAIC,EAAUpjE,KAAKuhE,iBAAiB4B,GAEpC,OADIC,EAAU,EAAOA,EAAU,GAAgBA,EAAU,GAAOhiD,GAAOjB,MAAMijD,MAAYA,EAAU,GAC5FA,GAETpC,GAAYl8D,UAAUme,SAAW,WAC/B,MAAO,eAAiBjjB,KAAKma,GAAGza,EAAI,IAAMM,KAAKma,GAAGjb,EAAI,KAAOc,KAAK6C,GAAGnD,EAAI,IAAMM,KAAK6C,GAAG3D,EAAI,KAE7F8hE,GAAYl8D,UAAUu+D,aAAe,WACnC,OAAOrjE,KAAKma,GAAGjb,IAAMc,KAAK6C,GAAG3D,GAE/B8hE,GAAYl8D,UAAUwe,SAAW,WAC/B,GAAIhO,UAAU,aAAc0rD,GAAa,CACvC,IAAI9qB,EAAK5gC,UAAU,GACnB,OAAOgnB,GAAa4E,iBAAiBlhC,KAAKma,GAAIna,KAAK6C,GAAIqzC,EAAG/7B,GAAI+7B,EAAGrzC,IAC5D,GAAIyS,UAAU,aAAcyM,GAAY,CAC7C,IAAIpgB,EAAI2T,UAAU,GAClB,OAAOgnB,GAAa6C,kBAAkBx9B,EAAG3B,KAAKma,GAAIna,KAAK6C,MAG3Dm+D,GAAYl8D,UAAUw+D,WAAa,SAAqBX,GACtD,IAAI16D,EAAQ,IAAI8Z,GAGhB,OAFA9Z,EAAMvI,EAAIM,KAAKma,GAAGza,EAAIijE,GAAyB3iE,KAAK6C,GAAGnD,EAAIM,KAAKma,GAAGza,GACnEuI,EAAM/I,EAAIc,KAAKma,GAAGjb,EAAIyjE,GAAyB3iE,KAAK6C,GAAG3D,EAAIc,KAAKma,GAAGjb,GAC5D+I,GAET+4D,GAAYl8D,UAAUye,SAAW,WAC/B,IAAIggD,EAAQniD,GAAOG,iBAAiBvhB,KAAKma,GAAGza,GAC5C6jE,GAA8C,GAArCniD,GAAOG,iBAAiBvhB,KAAKma,GAAGjb,GACzC,IAAIskE,EAAQhhE,KAAK4d,MAAMmjD,GAAS/gE,KAAK4d,MAAMmjD,GAAS,IAChDE,EAAQriD,GAAOG,iBAAiBvhB,KAAK6C,GAAGnD,GAG5C,OAFA+jE,GAA8C,GAArCriD,GAAOG,iBAAiBvhB,KAAK6C,GAAG3D,GAElCskE,GADKhhE,KAAK4d,MAAMqjD,GAASjhE,KAAK4d,MAAMqjD,GAAS,MAGtDzC,GAAYl8D,UAAUyb,YAAc,WAClC,MAAO,CAACoB,GAAYG,KAEtBk/C,GAAYl8D,UAAU0b,SAAW,WAC/B,OAAOwgD,IAETA,GAAYc,SAAW,SAAmB3nD,EAAItX,GAC5C,OAAO,IAAIkf,IAAY5H,EAAGza,EAAImD,EAAGnD,GAAK,GAAIya,EAAGjb,EAAI2D,EAAG3D,GAAK,IAE3D+hE,GAAmB7+C,iBAAiBpW,IAAM,WAAc,OAAO,oBAE/DvH,OAAOid,iBAAkBs/C,GAAaC,IAEtC,IAAIyC,GAA6B,WAC/B1jE,KAAK2jE,SAAW,IAAI1xC,GACpBjyB,KAAK4jE,SAAW,IAAI3xC,GACpBjyB,KAAK6jE,aAAe,IAAI7C,GACxBhhE,KAAK8jE,aAAe,IAAI9C,IAE1B0C,GAA2B5+D,UAAUi/D,QAAU,WAC7C,GAAyB,IAArBzuD,UAAU7U,aAGP,GAAyB,IAArB6U,UAAU7U,OAAc,CACjC,IAAIujE,EAAM1uD,UAAU,GAChB2uD,EAAS3uD,UAAU,GACnB4uD,EAAM5uD,UAAU,GAChB6uD,EAAS7uD,UAAU,GACvB0uD,EAAII,eAAeH,EAAQjkE,KAAK6jE,cAChCK,EAAIE,eAAeD,EAAQnkE,KAAK8jE,cAChC9jE,KAAK+jE,QAAQ/jE,KAAK6jE,aAAc7jE,KAAK8jE,gBAGzCJ,GAA2B5+D,UAAUyb,YAAc,WACjD,MAAO,IAETmjD,GAA2B5+D,UAAU0b,SAAW,WAC9C,OAAOkjD,IAGT,IAAIW,GAAgB,WAClBrkE,KAAKgnD,KAAO,KACZhnD,KAAKskE,OAAS,KACdtkE,KAAKukE,KAAO,KACZvkE,KAAKoiD,KAAO,KACZpiD,KAAKwkE,SAAW,KAChBxkE,KAAKykE,IAAM,KACX,IAAI/iC,EAAMpsB,UAAU,GAChBjT,EAAQiT,UAAU,GAClBhT,EAAMgT,UAAU,GAChBovD,EAAUpvD,UAAU,GACxBtV,KAAKgnD,KAAOtlB,EACZ1hC,KAAKskE,OAASjiE,EACdrC,KAAKukE,KAAOjiE,EACZtC,KAAKwkE,SAAWE,GAElBL,GAAcv/D,UAAUs/D,eAAiB,SAAyBhjE,EAAO80C,GACvEA,EAAG/7B,GAAKna,KAAKgnD,KAAK5lD,GAClB80C,EAAGrzC,GAAK7C,KAAKgnD,KAAK5lD,EAAQ,IAE5BijE,GAAcv/D,UAAU6/D,cAAgB,SAAwB7J,EAAW8J,EAAQC,EAAMC,GACvF,IAAI3qD,EAAKna,KAAKgnD,KAAK4d,GACf/hE,EAAK7C,KAAKgnD,KAAK6d,GAEnB,GADAC,EAAInB,SAAS/8C,KAAKzM,EAAItX,GAClBgiE,EAAOD,GAAW,EAEpB,OADAE,EAAIC,OAAO/kE,KAAM4kE,GACV,KAET,IAAK9J,EAAU9nC,WAAW8xC,EAAInB,UAAa,OAAO,KAClD,IAAI94B,EAAMroC,KAAK4d,OAAOwkD,EAASC,GAAQ,GACnCD,EAAS/5B,GACX7qC,KAAK2kE,cAAc7J,EAAW8J,EAAQ/5B,EAAKi6B,GAEzCj6B,EAAMg6B,GACR7kE,KAAK2kE,cAAc7J,EAAWjwB,EAAKg6B,EAAMC,IAG7CT,GAAcv/D,UAAUmrC,eAAiB,WAKvC,IAJE,IAEEhoC,EAAQ,IAAIQ,MAAMzI,KAAKukE,KAAOvkE,KAAKskE,OAAS,GAAGr4C,KAAK,MACpD7qB,EAAQ,EACHvC,EAAImB,KAAKskE,OAAQzlE,GAAKmB,KAAKukE,KAAM1lE,IACxCoJ,EAAM7G,KALOpB,KAKWgnD,KAAKnoD,GAE/B,OAAOoJ,GAETo8D,GAAcv/D,UAAUkgE,gBAAkB,SAA0BC,EAAIC,GACtEllE,KAAKmlE,wBAAwBnlE,KAAKskE,OAAQtkE,KAAKukE,KAAMU,EAAIA,EAAGX,OAAQW,EAAGV,KAAMW,IAE/Eb,GAAcv/D,UAAUsgE,MAAQ,SAAgB14D,GAC9C1M,KAAKykE,IAAM/3D,GAEb23D,GAAcv/D,UAAUigE,OAAS,SAAiBjK,EAAWgK,GAC3D9kE,KAAK2kE,cAAc7J,EAAW96D,KAAKskE,OAAQtkE,KAAKukE,KAAMO,IAExDT,GAAcv/D,UAAU+/B,YAAc,WACpC,GAAkB,OAAd7kC,KAAKoiD,KAAe,CACtB,IAAIjoC,EAAKna,KAAKgnD,KAAKhnD,KAAKskE,QACpBzhE,EAAK7C,KAAKgnD,KAAKhnD,KAAKukE,MACxBvkE,KAAKoiD,KAAO,IAAInwB,GAAS9X,EAAItX,GAE/B,OAAO7C,KAAKoiD,MAEdiiB,GAAcv/D,UAAUugE,YAAc,WACpC,OAAOrlE,KAAKukE,MAEdF,GAAcv/D,UAAUwgE,cAAgB,WACtC,OAAOtlE,KAAKskE,QAEdD,GAAcv/D,UAAUygE,WAAa,WACnC,OAAOvlE,KAAKwkE,UAEdH,GAAcv/D,UAAU0gE,MAAQ,WAC9B,OAAOxlE,KAAKykE,KAEdJ,GAAcv/D,UAAUqgE,wBAA0B,SAAkCP,EAAQC,EAAMI,EAAIhB,EAAQwB,EAAMP,GAClH,IAAIQ,EAAM1lE,KAAKgnD,KAAK4d,GAChBe,EAAM3lE,KAAKgnD,KAAK6d,GAChBe,EAAMX,EAAGje,KAAKid,GACd4B,EAAMZ,EAAGje,KAAKye,GAClB,GAAIZ,EAAOD,GAAW,GAAKa,EAAOxB,GAAW,EAE3C,OADAiB,EAAInB,QAAQ/jE,KAAM4kE,EAAQK,EAAIhB,GACvB,KAIT,GAFAiB,EAAIvB,SAAS/8C,KAAK8+C,EAAKC,GACvBT,EAAItB,SAASh9C,KAAKg/C,EAAKC,IAClBX,EAAIvB,SAAS3wC,WAAWkyC,EAAItB,UAAa,OAAO,KACrD,IAAIkC,EAAOtjE,KAAK4d,OAAOwkD,EAASC,GAAQ,GACpCkB,EAAOvjE,KAAK4d,OAAO6jD,EAASwB,GAAQ,GACpCb,EAASkB,IACP7B,EAAS8B,GAAQ/lE,KAAKmlE,wBAAwBP,EAAQkB,EAAMb,EAAIhB,EAAQ8B,EAAMb,GAC9Ea,EAAON,GAAQzlE,KAAKmlE,wBAAwBP,EAAQkB,EAAMb,EAAIc,EAAMN,EAAMP,IAE5EY,EAAOjB,IACLZ,EAAS8B,GAAQ/lE,KAAKmlE,wBAAwBW,EAAMjB,EAAMI,EAAIhB,EAAQ8B,EAAMb,GAC5Ea,EAAON,GAAQzlE,KAAKmlE,wBAAwBW,EAAMjB,EAAMI,EAAIc,EAAMN,EAAMP,KAGhFb,GAAcv/D,UAAUyb,YAAc,WACpC,MAAO,IAET8jD,GAAcv/D,UAAU0b,SAAW,WACjC,OAAO6jD,IAGT,IAAI2B,GAAuB,aAE3BA,GAAqBlhE,UAAUyb,YAAc,WAC3C,MAAO,IAETylD,GAAqBlhE,UAAU0b,SAAW,WACxC,OAAOwlD,IAETA,GAAqBC,qBAAuB,SAA+BvkC,GACzE,IAAIr/B,EAAQ,EACR6jE,EAAiB,IAAI1+B,GACzB0+B,EAAejmE,IAAI,IAAImmB,GAAQ/jB,IAC/B,EAAG,CACD,IAAIuoC,EAAOo7B,GAAqBG,aAAazkC,EAAKr/B,GAClD6jE,EAAejmE,IAAI,IAAImmB,GAAQwkB,IAC/BvoC,EAAQuoC,QACDvoC,EAAQq/B,EAAIjhC,OAAS,GAE9B,OADiBulE,GAAqBI,WAAWF,IAGnDF,GAAqBG,aAAe,SAAuBzkC,EAAKr/B,GAE9D,IADA,IAAIgkE,EAAYhkE,EACTgkE,EAAY3kC,EAAIjhC,OAAS,GAAKihC,EAAI2kC,GAAW3jD,SAASgf,EAAI2kC,EAAY,KAC3EA,IAEF,GAAIA,GAAa3kC,EAAIjhC,OAAS,EAC5B,OAAOihC,EAAIjhC,OAAS,EAItB,IAFA,IAAI6lE,EAAYva,GAASc,SAASnrB,EAAI2kC,GAAY3kC,EAAI2kC,EAAY,IAC9Dz7B,EAAOvoC,EAAQ,EACZuoC,EAAOlJ,EAAIjhC,QAAQ,CACxB,IAAKihC,EAAIkJ,EAAO,GAAGloB,SAASgf,EAAIkJ,IAE9B,GADWmhB,GAASc,SAASnrB,EAAIkJ,EAAO,GAAIlJ,EAAIkJ,MACnC07B,EAAa,MAE5B17B,IAEF,OAAOA,EAAO,GAEhBo7B,GAAqBO,UAAY,WAC/B,GAAyB,IAArBjxD,UAAU7U,OAAc,CAC1B,IAAIihC,EAAMpsB,UAAU,GACpB,OAAO0wD,GAAqBO,UAAU7kC,EAAK,MACtC,GAAyB,IAArBpsB,UAAU7U,OAAc,CAKjC,IAJA,IAAI+lE,EAAQlxD,UAAU,GAClBovD,EAAUpvD,UAAU,GACpBmxD,EAAS,IAAIj/B,GACb6gB,EAAa2d,GAAqBC,qBAAqBO,GAClD3nE,EAAI,EAAGA,EAAIwpD,EAAW5nD,OAAS,EAAG5B,IAAK,CAC9C,IAAIomE,EAAK,IAAIZ,GAAcmC,EAAOne,EAAWxpD,GAAIwpD,EAAWxpD,EAAI,GAAI6lE,GACpE+B,EAAOxmE,IAAIglE,GAEb,OAAOwB,IAGXT,GAAqBI,WAAa,SAAqBljE,GAErD,IADA,IAAImzB,EAAQ,IAAI5tB,MAAMvF,EAAKpB,QAAQmqB,KAAK,MAC/BptB,EAAI,EAAGA,EAAIw3B,EAAM51B,OAAQ5B,IAChCw3B,EAAMx3B,GAAKqE,EAAK8I,IAAInN,GAAGwnB,WAEzB,OAAOgQ,GAGT,IAAIqwC,GAAQ,aAEZA,GAAM5hE,UAAU6hE,aAAe,SAAuB/F,KACtD8F,GAAM5hE,UAAU67D,mBAAqB,aACrC+F,GAAM5hE,UAAUyb,YAAc,WAC5B,MAAO,IAETmmD,GAAM5hE,UAAU0b,SAAW,WACzB,OAAOkmD,IAGT,IAAIE,GAAkB,WAEpB,GADA5mE,KAAK6mE,QAAU,KACU,IAArBvxD,UAAU7U,aAAsB,GAAyB,IAArB6U,UAAU7U,OAAc,CAC9D,IAAIqmE,EAASxxD,UAAU,GACvBtV,KAAK+mE,sBAAsBD,KAG/BF,GAAgB9hE,UAAUiiE,sBAAwB,SAAgCD,GAChF9mE,KAAK6mE,QAAUC,GAEjBF,GAAgB9hE,UAAUyb,YAAc,WACtC,MAAO,CAACmmD,KAEVE,GAAgB9hE,UAAU0b,SAAW,WACnC,OAAOomD,IAGT,IAAII,GAAgB,SAAUC,GAC5B,SAASD,EAAcE,GACjBA,EAAMD,EAAmBtmE,KAAKX,KAAMknE,GACjCD,EAAmBtmE,KAAKX,MAC/BA,KAAKmnE,YAAc,IAAI3/B,GACvBxnC,KAAKonE,OAAS,IAAInN,GAClBj6D,KAAKqnE,WAAa,EAClBrnE,KAAKsnE,iBAAmB,KACxBtnE,KAAKunE,WAAa,EAGfN,IAAqBD,EAAa/lD,UAAYgmD,GACnDD,EAAaliE,UAAYL,OAAOyc,OAAQ+lD,GAAsBA,EAAmBniE,WACjFkiE,EAAaliE,UAAUqc,YAAc6lD,EAErC,IAAI9kD,EAAkB,CAAEslD,qBAAsB,CAAEjjE,cAAc,IAyD9D,OAxDAyiE,EAAaliE,UAAU2iE,kBAAoB,WACzC,OAAOznE,KAAKmnE,aAEdH,EAAaliE,UAAU67D,mBAAqB,WAC1C,OAAO7B,GAAmB6B,mBAAmB3gE,KAAKsnE,mBAEpDN,EAAaliE,UAAU4iE,SAAW,WAChC,OAAO1nE,KAAKonE,QAEdJ,EAAaliE,UAAU7E,IAAM,SAAc0nE,GAIzC,IAHA,IAGS9oE,EADOmnE,GAAqBO,UAAUoB,EAAO13B,iBAAkB03B,GACjDliC,WAAY5mC,EAAE6mC,WAAY,CAC/C,IAAIu/B,EAAKpmE,EAAE6C,OACXujE,EAAGG,MALQplE,KAKKqnE,cALLrnE,KAMJonE,OAAO/nE,OAAO4lE,EAAGpgC,cAAeogC,GAN5BjlE,KAOJmnE,YAAYlnE,IAAIglE,KAG3B+B,EAAaliE,UAAU6hE,aAAe,SAAuBiB,GAG3D5nE,KAAKsnE,iBAAmBM,EACxB,IAAK,IAAI/oE,EAAI+oE,EAAgBniC,WAAY5mC,EAAE6mC,WAH9B1lC,KAIJC,IAAIpB,EAAE6C,QAEf1B,KAAK6nE,mBAEPb,EAAaliE,UAAU+iE,gBAAkB,WAIvC,IAHA,IAEIC,EAAgB,IAAIN,GAAqBxnE,KAAK6mE,SACzChoE,EAAImB,KAAKmnE,YAAY1hC,WAAY5mC,EAAE6mC,WAG1C,IAFA,IAAIqiC,EAAalpE,EAAE6C,OAEVO,EANEjC,KAKgBonE,OAAOxS,MAAMmT,EAAWljC,eACxBY,WAAYxjC,EAAEyjC,WAAY,CACnD,IAAIsiC,EAAY/lE,EAAEP,OAKlB,GAJIsmE,EAAUxC,QAAUuC,EAAWvC,UACjCuC,EAAW/C,gBAAgBgD,EAAWF,GAT/B9nE,KAUAunE,cAVAvnE,KAYE6mE,QAAQh3B,SAAY,OAAO,OAI5Cm3B,EAAaliE,UAAUyb,YAAc,WACnC,MAAO,IAETymD,EAAaliE,UAAU0b,SAAW,WAChC,OAAOwmD,GAET9kD,EAAgBslD,qBAAqBx7D,IAAM,WAAc,OAAOw7D,IAEhE/iE,OAAOid,iBAAkBslD,EAAc9kD,GAEhC8kD,GACPJ,IAEEY,GAAwB,SAAUS,GACpC,SAAST,IACPS,EAA8BtnE,KAAKX,MACnCA,KAAKkoE,IAAM,KACX,IAAIhB,EAAK5xD,UAAU,GACnBtV,KAAKkoE,IAAMhB,EAwBb,OArBKe,IAAgCT,EAAqBvmD,UAAYgnD,GACtET,EAAqB1iE,UAAYL,OAAOyc,OAAQ+mD,GAAiCA,EAA8BnjE,WAC/G0iE,EAAqB1iE,UAAUqc,YAAcqmD,EAC7CA,EAAqB1iE,UAAUi/D,QAAU,WACvC,GAAyB,IAArBzuD,UAAU7U,OAQL,OAAOwnE,EAA8BnjE,UAAUi/D,QAAQvuC,MAAMx1B,KAAMsV,WAP1E,IAAI0uD,EAAM1uD,UAAU,GAChB2uD,EAAS3uD,UAAU,GACnB4uD,EAAM5uD,UAAU,GAChB6uD,EAAS7uD,UAAU,GACnB6yD,EAAMnE,EAAIuB,aACV6C,EAAMlE,EAAIqB,aACdvlE,KAAKkoE,IAAIG,qBAAqBF,EAAKlE,EAAQmE,EAAKjE,IAGpDqD,EAAqB1iE,UAAUyb,YAAc,WAC3C,MAAO,IAETinD,EAAqB1iE,UAAU0b,SAAW,WACxC,OAAOgnD,GAGFA,GACP9D,IAEE4E,GAAmB,SAASA,IAQ9B,GAPAtoE,KAAKuoE,kBAAoBD,EAAiBE,0BAC1CxoE,KAAKyoE,aAAeH,EAAiBI,UACrC1oE,KAAK2oE,WAAaL,EAAiBM,WACnC5oE,KAAK6oE,YAAcP,EAAiBQ,oBACpC9oE,KAAK+oE,gBAAiB,EACtB/oE,KAAKgpE,gBAAkBV,EAAiBW,wBAEf,IAArB3zD,UAAU7U,aAAsB,GAAyB,IAArB6U,UAAU7U,OAAc,CAC9D,IAAIyoE,EAAmB5zD,UAAU,GACjCtV,KAAKmpE,oBAAoBD,QACpB,GAAyB,IAArB5zD,UAAU7U,OAAc,CACjC,IAAI2oE,EAAqB9zD,UAAU,GAC/B+zD,EAAc/zD,UAAU,GAC5BtV,KAAKmpE,oBAAoBC,GACzBppE,KAAKspE,eAAeD,QACf,GAAyB,IAArB/zD,UAAU7U,OAAc,CACjC,IAAI8oE,EAAqBj0D,UAAU,GAC/Bk0D,EAAgBl0D,UAAU,GAC1Bm0D,EAAYn0D,UAAU,GACtBo0D,EAAap0D,UAAU,GAC3BtV,KAAKmpE,oBAAoBI,GACzBvpE,KAAKspE,eAAeE,GACpBxpE,KAAK2pE,aAAaF,GAClBzpE,KAAK4pE,cAAcF,KAInBG,GAAqB,CAAEnB,UAAW,CAAEnkE,cAAc,GAAOulE,SAAU,CAAEvlE,cAAc,GAAOwlE,WAAY,CAAExlE,cAAc,GAAOqkE,WAAY,CAAErkE,cAAc,GAAOylE,WAAY,CAAEzlE,cAAc,GAAO0lE,WAAY,CAAE1lE,cAAc,GAAOikE,0BAA2B,CAAEjkE,cAAc,GAAOukE,oBAAqB,CAAEvkE,cAAc,GAAO0kE,wBAAyB,CAAE1kE,cAAc,IACjX+jE,GAAiBxjE,UAAUolE,eAAiB,WAC1C,OAAOlqE,KAAKyoE,cAEdH,GAAiBxjE,UAAUqlE,cAAgB,WACzC,OAAOnqE,KAAK+oE,gBAEdT,GAAiBxjE,UAAUqkE,oBAAsB,SAA8BiB,GAC7EpqE,KAAKuoE,kBAAoB6B,EACM,IAA3BpqE,KAAKuoE,oBAA2BvoE,KAAK2oE,WAAaL,GAAiB2B,YACnEjqE,KAAKuoE,kBAAoB,IAC3BvoE,KAAK2oE,WAAaL,GAAiB0B,WACnChqE,KAAK6oE,YAAcrmE,KAAKiP,IAAIzR,KAAKuoE,oBAE/B6B,GAAY,IACdpqE,KAAKuoE,kBAAoB,GAEvBvoE,KAAK2oE,aAAeL,GAAiBM,aACvC5oE,KAAKuoE,kBAAoBD,GAAiBE,4BAG9CF,GAAiBxjE,UAAUulE,aAAe,WACxC,OAAOrqE,KAAK2oE,YAEdL,GAAiBxjE,UAAU6kE,aAAe,SAAuBF,GAC/DzpE,KAAK2oE,WAAac,GAEpBnB,GAAiBxjE,UAAUwlE,kBAAoB,SAA4BC,GACzEvqE,KAAKgpE,gBAAkBuB,EAAiB,EAAI,EAAIA,GAElDjC,GAAiBxjE,UAAU0lE,kBAAoB,WAC7C,OAAOxqE,KAAKgpE,iBAEdV,GAAiBxjE,UAAU2lE,oBAAsB,WAC/C,OAAOzqE,KAAKuoE,mBAEdD,GAAiBxjE,UAAUwkE,eAAiB,SAAyBD,GACnErpE,KAAKyoE,aAAeY,GAEtBf,GAAiBxjE,UAAU4lE,cAAgB,WACzC,OAAO1qE,KAAK6oE,aAEdP,GAAiBxjE,UAAU8kE,cAAgB,SAAwBF,GACjE1pE,KAAK6oE,YAAca,GAErBpB,GAAiBxjE,UAAU6lE,eAAiB,SAAyBR,GACnEnqE,KAAK+oE,eAAiBoB,GAExB7B,GAAiBxjE,UAAUyb,YAAc,WACvC,MAAO,IAET+nD,GAAiBxjE,UAAU0b,SAAW,WACpC,OAAO8nD,IAETA,GAAiBsC,oBAAsB,SAA8BR,GACnE,IAAIS,EAAQroE,KAAK0kB,GAAK,EAAMkjD,EAC5B,OAAO,EAAI5nE,KAAKsoE,IAAID,EAAQ,IAE9BhB,GAAmBnB,UAAU18D,IAAM,WAAc,OAAO,GACxD69D,GAAmBC,SAAS99D,IAAM,WAAc,OAAO,GACvD69D,GAAmBE,WAAW/9D,IAAM,WAAc,OAAO,GACzD69D,GAAmBjB,WAAW58D,IAAM,WAAc,OAAO,GACzD69D,GAAmBG,WAAWh+D,IAAM,WAAc,OAAO,GACzD69D,GAAmBI,WAAWj+D,IAAM,WAAc,OAAO,GACzD69D,GAAmBrB,0BAA0Bx8D,IAAM,WAAc,OAAO,GACxE69D,GAAmBf,oBAAoB98D,IAAM,WAAc,OAAO,GAClE69D,GAAmBZ,wBAAwBj9D,IAAM,WAAc,MAAO,KAEtEvH,OAAOid,iBAAkB4mD,GAAkBuB,IAE3C,IAAIkB,GAA4B,SAAoCC,GAClEhrE,KAAKirE,aAAe,KACpBjrE,KAAKkrE,WAAa,KAClBlrE,KAAKmrE,kBAAoB7uC,GAAaqE,iBACtC3gC,KAAKorE,WAAaJ,GAAa,MAG7BK,GAAqB,CAAEC,KAAM,CAAE/mE,cAAc,GAAOgnE,OAAQ,CAAEhnE,cAAc,GAAOinE,KAAM,CAAEjnE,cAAc,GAAOknE,iBAAkB,CAAElnE,cAAc,IACtJwmE,GAA0BjmE,UAAU4mE,YAAc,SAAsBC,EAAIv/B,EAAIC,EAAIu/B,GAClF,IAAIzxD,EAAKna,KAAKorE,WAAWO,GACrB9oE,EAAK7C,KAAKorE,WAAWh/B,GACrBtpC,EAAK9C,KAAKorE,WAAW/+B,GACzB,QAAKrsC,KAAK6rE,UAAU1xD,EAAItX,EAAIC,OACvB9C,KAAK8rE,UAAU3xD,EAAItX,EAAIC,EAAI8oE,IACzB5rE,KAAK+rE,iBAAiB5xD,EAAItX,EAAI8oE,EAAIt/B,EAAIu/B,KAE/Cb,GAA0BjmE,UAAUknE,yBAA2B,WAQ7D,IAPE,IAEE5qE,EAAQ,EAER6qE,EAAWjsE,KAAKksE,wBAAwB9qE,GACxC+qE,EAAYnsE,KAAKksE,wBAAwBD,GACzCtjC,GAAY,EACTwjC,EAAYnsE,KAAKorE,WAAW3qE,QAAQ,CACzC,IAAI2rE,GAAwB,EARfpsE,KASF0rE,YAAYtqE,EAAO6qE,EAAUE,EAT3BnsE,KAS6CirE,gBAT7CjrE,KAUJkrE,WAAWe,GAAYlB,GAA0BQ,OACxDa,GAAwB,EACxBzjC,GAAY,GAEevnC,EAAzBgrE,EAAiCD,EAA4BF,EACjEA,EAfajsE,KAeKksE,wBAAwB9qE,GAC1C+qE,EAhBansE,KAgBMksE,wBAAwBD,GAE7C,OAAOtjC,GAEToiC,GAA0BjmE,UAAUunE,mBAAqB,SAA6BlyD,EAAItX,EAAIC,EAAI8oE,GAGhG,OAFkBtvC,GAAa6F,mBAAmBhoB,EAAItX,EAAIC,KAClB9C,KAAKmrE,mBAElC7uC,GAAa6C,kBAAkBt8B,EAAIsX,EAAIrX,GACpC8oE,GAEhBb,GAA0BjmE,UAAUinE,iBAAmB,SAA2B5xD,EAAIrX,EAAI6oE,EAAIt/B,EAAIu/B,GAC9F,IAEEtiC,EAAM9mC,KAAK4d,OAAOisB,EAAKs/B,GAAMZ,GAA0BU,kBACvDniC,GAAO,IAAKA,EAAM,GACtB,IAAK,IAAIzqC,EAAI8sE,EAAI9sE,EAAIwtC,EAAIxtC,GAAKyqC,EAC5B,IALatpC,KAKD8rE,UAAU3xD,EAAIrX,EALb9C,KAKwBorE,WAAWvsE,GAAI+sE,GAAgB,OAAO,EAE7E,OAAO,GAETb,GAA0BjmE,UAAU+mE,UAAY,SAAoB1xD,EAAItX,EAAIC,GAC1E,IACI+oE,EADcvvC,GAAa6F,mBAAmBhoB,EAAItX,EAAIC,KAC1B9C,KAAKmrE,kBACrC,OAAOU,GAETd,GAA0BjmE,UAAUwnE,SAAW,SAAmBV,GAGhE5rE,KAAKirE,aAAezoE,KAAKiP,IAAIm6D,GACzBA,EAAc,IAAK5rE,KAAKmrE,kBAAoB7uC,GAAamE,WAC7DzgC,KAAKkrE,WAAa,IAAIziE,MAAMzI,KAAKorE,WAAW3qE,QAAQwrB,KAAK,MACzD,IAAI0c,GAAY,EAChB,GACEA,EAPa3oC,KAOMgsE,iCACZrjC,GACT,OAAO3oC,KAAKusE,gBAEdxB,GAA0BjmE,UAAUonE,wBAA0B,SAAkC9qE,GAE9F,IADA,IAAIM,EAAON,EAAQ,EACZM,EAAO1B,KAAKorE,WAAW3qE,QAAUT,KAAKkrE,WAAWxpE,KAAUqpE,GAA0BQ,QAAU7pE,IACtG,OAAOA,GAETqpE,GAA0BjmE,UAAUgnE,UAAY,SAAoB3xD,EAAItX,EAAIC,EAAI8oE,GAE9E,OADWtvC,GAAa6C,kBAAkBt8B,EAAIsX,EAAIrX,GACpC8oE,GAEhBb,GAA0BjmE,UAAUynE,aAAe,WAIjD,IAHE,IAEE9hC,EAAY,IAAIpC,GACXxpC,EAAI,EAAGA,EAAImB,KAAKorE,WAAW3qE,OAAQ5B,IAH7BmB,KAIFkrE,WAAWrsE,KAAOksE,GAA0BQ,QAAU9gC,EAAUxqC,IAJ9DD,KAIyEorE,WAAWvsE,IAEnG,OAAO4rC,EAAUva,qBAEnB66C,GAA0BjmE,UAAUyb,YAAc,WAChD,MAAO,IAETwqD,GAA0BjmE,UAAU0b,SAAW,WAC7C,OAAOuqD,IAETA,GAA0BuB,SAAW,SAAmBtB,EAAWY,GAEjE,OADW,IAAIb,GAA0BC,GAC7BsB,SAASV,IAEvBP,GAAmBC,KAAKt/D,IAAM,WAAc,OAAO,GACnDq/D,GAAmBE,OAAOv/D,IAAM,WAAc,OAAO,GACrDq/D,GAAmBG,KAAKx/D,IAAM,WAAc,OAAO,GACnDq/D,GAAmBI,iBAAiBz/D,IAAM,WAAc,OAAO,IAE/DvH,OAAOid,iBAAkBqpD,GAA2BM,IAEpD,IAAImB,GAAsB,WACxBxsE,KAAKysE,QAAU,KACfzsE,KAAK45B,gBAAkB,KACvB55B,KAAK0sE,uBAAyB,EAC9B1sE,KAAKysE,QAAU,IAAIjlC,IAGjBmlC,GAAqB,CAAEC,sBAAuB,CAAEroE,cAAc,IAClEioE,GAAoB1nE,UAAUmrC,eAAiB,WAE7C,OADYjwC,KAAKysE,QAAQtlC,QAAQqlC,GAAoBI,wBAGvDJ,GAAoB1nE,UAAUs2B,kBAAoB,SAA4BC,GAC5Er7B,KAAK45B,gBAAkByB,GAEzBmxC,GAAoB1nE,UAAU+nE,MAAQ,SAAgBtlE,GACpD,IAAIulE,EAAQ,IAAI/qD,GAAWxa,GAE3B,GADAvH,KAAK45B,gBAAgBqD,YAAY6vC,GAC7B9sE,KAAK+sE,YAAYD,GAAU,OAAO,KACtC9sE,KAAKysE,QAAQxsE,IAAI6sE,IAEnBN,GAAoB1nE,UAAUkoE,OAAS,aACvCR,GAAoB1nE,UAAUmoE,OAAS,SAAiB1lE,EAAI85C,GAG1D,GAAIA,EACF,IAAK,IAAIxiD,EAAI,EAAGA,EAAI0I,EAAG9G,OAAQ5B,IAHlBmB,KAIJ6sE,MAAMtlE,EAAG1I,SAGlB,IAAK,IAAI0hC,EAAMh5B,EAAG9G,OAAS,EAAG8/B,GAAO,EAAGA,IAP3BvgC,KAQJ6sE,MAAMtlE,EAAGg5B,KAItBisC,GAAoB1nE,UAAUioE,YAAc,SAAsBxlE,GAChE,GAAIvH,KAAKysE,QAAQ3qE,OAAS,EAAK,OAAO,EACtC,IAAI6H,EAAS3J,KAAKysE,QAAQzgE,IAAIhM,KAAKysE,QAAQ3qE,OAAS,GAEpD,OADayF,EAAG+b,SAAS3Z,GACZ3J,KAAK0sE,wBAGpBF,GAAoB1nE,UAAUme,SAAW,WAGvC,OAFW,IAAI8R,IACC4C,iBAAiB33B,KAAKiwC,kBAC1BhtB,YAEdupD,GAAoB1nE,UAAUykC,UAAY,WACxC,GAAIvpC,KAAKysE,QAAQ3qE,OAAS,EAAK,OAAO,KACtC,IAAIorE,EAAU,IAAInrD,GAAW/hB,KAAKysE,QAAQzgE,IAAI,IAC1CrC,EAAS3J,KAAKysE,QAAQzgE,IAAIhM,KAAKysE,QAAQ3qE,OAAS,GAGpD,GAAIorE,EAAQ5yD,OAAO3Q,GAAW,OAAO,KACrC3J,KAAKysE,QAAQxsE,IAAIitE,IAEnBV,GAAoB1nE,UAAUqoE,yBAA2B,SAAmCC,GAC1FptE,KAAK0sE,uBAAyBU,GAEhCZ,GAAoB1nE,UAAUyb,YAAc,WAC1C,MAAO,IAETisD,GAAoB1nE,UAAU0b,SAAW,WACvC,OAAOgsD,IAETG,GAAmBC,sBAAsB5gE,IAAM,WAAc,OAAO,IAAIvD,MAAM,GAAGwjB,KAAK,OAEtFxnB,OAAOid,iBAAkB8qD,GAAqBG,IAE9C,IAAIU,GAAQ,aAERC,GAAqB,CAAEC,WAAY,CAAEhpE,cAAc,GAAOipE,UAAW,CAAEjpE,cAAc,GAAOkpE,UAAW,CAAElpE,cAAc,GAAOo8B,iBAAkB,CAAEp8B,cAAc,GAAOk8B,UAAW,CAAEl8B,cAAc,GAAOmgB,KAAM,CAAEngB,cAAc,IAEnO8oE,GAAMvoE,UAAUyb,YAAc,WAC5B,MAAO,IAET8sD,GAAMvoE,UAAU0b,SAAW,WACzB,OAAO6sD,IAETA,GAAMK,UAAY,SAAoBC,GACpC,OAAiB,IAAVA,EAAgBnrE,KAAK0kB,IAE9BmmD,GAAMnoC,UAAY,SAAoB0oB,GACpC,KAAOA,EAAQprD,KAAK0kB,IAAM0mC,GAASyf,GAAME,WACzC,KAAO3f,IAAUprD,KAAK0kB,IAAM0mC,GAASyf,GAAME,WAC3C,OAAO3f,GAETyf,GAAMzf,MAAQ,WACZ,GAAyB,IAArBt4C,UAAU7U,OAAc,CAC1B,IAAIkB,EAAI2T,UAAU,GAClB,OAAO9S,KAAKqrD,MAAMlsD,EAAEzC,EAAGyC,EAAEjC,GACpB,GAAyB,IAArB4V,UAAU7U,OAAc,CACjC,IAAI0Z,EAAK7E,UAAU,GACfzS,EAAKyS,UAAU,GACf6N,EAAKtgB,EAAGnD,EAAIya,EAAGza,EACf0jB,EAAKvgB,EAAG3D,EAAIib,EAAGjb,EACnB,OAAOsD,KAAKqrD,MAAMzqC,EAAID,KAG1BkqD,GAAMO,QAAU,SAAkBzzD,EAAItX,EAAIC,GACxC,IAAI+qE,EAAM1zD,EAAGza,EAAImD,EAAGnD,EAChBouE,EAAM3zD,EAAGjb,EAAI2D,EAAG3D,EAIpB,OADc2uE,GAFJ/qE,EAAGpD,EAAImD,EAAGnD,GAEMouE,GADhBhrE,EAAG5D,EAAI2D,EAAG3D,GAEH,GAEnBmuE,GAAMU,SAAW,SAAmB5zD,EAAItX,EAAIC,GAC1C,IAAI+qE,EAAM1zD,EAAGza,EAAImD,EAAGnD,EAChBouE,EAAM3zD,EAAGjb,EAAI2D,EAAG3D,EAIpB,OADc2uE,GAFJ/qE,EAAGpD,EAAImD,EAAGnD,GAEMouE,GADhBhrE,EAAG5D,EAAI2D,EAAG3D,GAEH,GAEnBmuE,GAAMW,cAAgB,SAAwB7zD,EAAItX,EAAIC,GACpD,IAAImrE,EAAYZ,GAAMzf,MAAM/qD,EAAIsX,GAC5B+zD,EAAYb,GAAMzf,MAAM/qD,EAAIC,GAChC,OAAON,KAAKiP,IAAIy8D,EAAYD,IAE9BZ,GAAMc,kBAAoB,SAA4BvgB,GACpD,GAAIA,EAAQ,EAAK,CACf,KAAOA,EAAQ,GAAOA,GAASyf,GAAME,WACjC3f,GAASyf,GAAME,aAAc3f,EAAQ,OACpC,CACL,KAAOA,GAASyf,GAAME,YAAc3f,GAASyf,GAAME,WAC/C3f,EAAQ,IAAOA,EAAQ,GAE7B,OAAOA,GAETyf,GAAMe,aAAe,SAAuBC,EAAMC,EAAMC,GACtD,IAAInzD,EAAKiyD,GAAMzf,MAAM0gB,EAAMD,GACvBhzD,EAAKgyD,GAAMzf,MAAM0gB,EAAMC,GAC3B,OAAOlB,GAAMmB,KAAKpzD,EAAIC,IAExBgyD,GAAMmB,KAAO,SAAeC,EAAMC,GAChC,IAAIC,EAAW,KASf,OAPEA,EADEF,EAAOC,EACEA,EAAOD,EAEPA,EAAOC,GAELlsE,KAAK0kB,KAClBynD,EAAW,EAAInsE,KAAK0kB,GAAKynD,GAEpBA,GAETtB,GAAMuB,UAAY,SAAoBC,GACpC,OAAOA,EAAersE,KAAK0kB,GAAK,KAElCmmD,GAAMyB,QAAU,SAAkBL,EAAMC,GACtC,IAAIK,EAAevsE,KAAKwsE,IAAIN,EAAOD,GACnC,OAAIM,EAAe,EACV1B,GAAM1sC,iBAEXouC,EAAe,EACV1B,GAAM5sC,UAER4sC,GAAM3oD,MAEf2oD,GAAM4B,qBAAuB,SAA+BZ,EAAMC,EAAMC,GACtE,IAAInzD,EAAKiyD,GAAMzf,MAAM0gB,EAAMD,GAEvBa,EADK7B,GAAMzf,MAAM0gB,EAAMC,GACTnzD,EAClB,OAAI8zD,IAAW1sE,KAAK0kB,GAAagoD,EAAS7B,GAAME,WAC5C2B,EAAS1sE,KAAK0kB,GAAagoD,EAAS7B,GAAME,WACvC2B,GAET5B,GAAmBC,WAAWvhE,IAAM,WAAc,OAAO,EAAMxJ,KAAK0kB,IACpEomD,GAAmBE,UAAUxhE,IAAM,WAAc,OAAOxJ,KAAK0kB,GAAK,GAClEomD,GAAmBG,UAAUzhE,IAAM,WAAc,OAAOxJ,KAAK0kB,GAAK,GAClEomD,GAAmB3sC,iBAAiB30B,IAAM,WAAc,OAAOswB,GAAaqE,kBAC5E2sC,GAAmB7sC,UAAUz0B,IAAM,WAAc,OAAOswB,GAAamE,WACrE6sC,GAAmB5oD,KAAK1Y,IAAM,WAAc,OAAOswB,GAAatC,WAEhEv1B,OAAOid,iBAAkB2rD,GAAOC,IAEhC,IAAI6B,GAAyB,SAASA,IACpCnvE,KAAKovE,sBAAwB,EAC7BpvE,KAAKqvE,oBAAsB,KAC3BrvE,KAAKsvE,wBAA0B,EAC/BtvE,KAAKuvE,SAAW,KAChBvvE,KAAK81D,UAAY,EACjB91D,KAAK45B,gBAAkB,KACvB55B,KAAKwvE,WAAa,KAClBxvE,KAAKyvE,IAAM,KACXzvE,KAAK0vE,IAAM,KACX1vE,KAAK2vE,IAAM,KACX3vE,KAAK4vE,IAAM,KACX5vE,KAAK6vE,MAAQ,IAAI7O,GACjBhhE,KAAK8vE,MAAQ,IAAI9O,GACjBhhE,KAAK+vE,SAAW,IAAI/O,GACpBhhE,KAAKgwE,SAAW,IAAIhP,GACpBhhE,KAAKiwE,MAAQ,EACbjwE,KAAKkwE,wBAAyB,EAC9B,IAAI70C,EAAiB/lB,UAAU,GAC3B66D,EAAY76D,UAAU,GACtBgO,EAAWhO,UAAU,GACzBtV,KAAK45B,gBAAkByB,EACvBr7B,KAAKwvE,WAAaW,EAClBnwE,KAAKyvE,IAAM,IAAIzzC,GACfh8B,KAAKqvE,oBAAsB7sE,KAAK0kB,GAAK,EAAMipD,EAAU1F,sBACjD0F,EAAU1F,uBAAyB,GAAK0F,EAAU9F,iBAAmB/B,GAAiBM,aAAc5oE,KAAKsvE,wBAA0BH,EAAuBiB,4BAC9JpwE,KAAK4mB,KAAKtD,IAGR+sD,GAAqB,CAAEC,iCAAkC,CAAE/rE,cAAc,GAAOgsE,wCAAyC,CAAEhsE,cAAc,GAAOisE,kCAAmC,CAAEjsE,cAAc,GAAO6rE,2BAA4B,CAAE7rE,cAAc,IAC1P4qE,GAAuBrqE,UAAU2rE,eAAiB,SAAyB9uE,EAAG+uE,GAQ5E,GAPA1wE,KAAK0vE,IAAM1vE,KAAK2vE,IAChB3vE,KAAK2vE,IAAM3vE,KAAK4vE,IAChB5vE,KAAK4vE,IAAMjuE,EACX3B,KAAK6vE,MAAM5M,eAAejjE,KAAK0vE,IAAK1vE,KAAK2vE,KACzC3vE,KAAK2wE,qBAAqB3wE,KAAK6vE,MAAO7vE,KAAKiwE,MAAOjwE,KAAK81D,UAAW91D,KAAK+vE,UACvE/vE,KAAK8vE,MAAM7M,eAAejjE,KAAK2vE,IAAK3vE,KAAK4vE,KACzC5vE,KAAK2wE,qBAAqB3wE,KAAK8vE,MAAO9vE,KAAKiwE,MAAOjwE,KAAK81D,UAAW91D,KAAKgwE,UACnEhwE,KAAK2vE,IAAIr1D,OAAOta,KAAK4vE,KAAQ,OAAO,KACxC,IAAI9uB,EAAcxkB,GAAa6F,mBAAmBniC,KAAK0vE,IAAK1vE,KAAK2vE,IAAK3vE,KAAK4vE,KACvEgB,EAAe9vB,IAAgBxkB,GAAamE,WAAazgC,KAAKiwE,QAAUzwB,GAAS5e,MAAUkgB,IAAgBxkB,GAAaqE,kBAAoB3gC,KAAKiwE,QAAUzwB,GAAS9e,MACpJ,IAAhBogB,EACF9gD,KAAK6wE,aAAaH,GACTE,EACT5wE,KAAK8wE,eAAehwB,EAAa4vB,GAEjC1wE,KAAK+wE,cAAcjwB,EAAa4vB,IAGpCvB,GAAuBrqE,UAAUksE,cAAgB,SAAwB72D,EAAItX,GAC3E,IAAIgU,EAAM,IAAImqD,GAAY7mD,EAAItX,GAC1BouE,EAAU,IAAIjQ,GAClBhhE,KAAK2wE,qBAAqB95D,EAAK2oC,GAAS5e,KAAM5gC,KAAK81D,UAAWmb,GAC9D,IAAIC,EAAU,IAAIlQ,GAClBhhE,KAAK2wE,qBAAqB95D,EAAK2oC,GAAS9e,MAAO1gC,KAAK81D,UAAWob,GAC/D,IAAI/tD,EAAKtgB,EAAGnD,EAAIya,EAAGza,EACf0jB,EAAKvgB,EAAG3D,EAAIib,EAAGjb,EACf0uD,EAAQprD,KAAKqrD,MAAMzqC,EAAID,GAC3B,OAAQnjB,KAAKwvE,WAAWtF,kBACtB,KAAK5B,GAAiBI,UACpB1oE,KAAKuvE,SAAS1C,MAAMoE,EAAQpuE,IAC5B7C,KAAKmxE,aAAatuE,EAAI+qD,EAAQprD,KAAK0kB,GAAK,EAAG0mC,EAAQprD,KAAK0kB,GAAK,EAAGoV,GAAamE,UAAWzgC,KAAK81D,WAC7F91D,KAAKuvE,SAAS1C,MAAMqE,EAAQruE,IAC5B,MACF,KAAKylE,GAAiBwB,SACpB9pE,KAAKuvE,SAAS1C,MAAMoE,EAAQpuE,IAC5B7C,KAAKuvE,SAAS1C,MAAMqE,EAAQruE,IAC5B,MACF,KAAKylE,GAAiByB,WACpB,IAAIqH,EAAsB,IAAIrvD,GAC9BqvD,EAAoB1xE,EAAI8C,KAAKiP,IAAIzR,KAAK81D,WAAatzD,KAAKsoE,IAAIld,GAC5DwjB,EAAoBlyE,EAAIsD,KAAKiP,IAAIzR,KAAK81D,WAAatzD,KAAKwsE,IAAIphB,GAC5D,IAAIyjB,EAAmB,IAAItvD,GAAWkvD,EAAQpuE,GAAGnD,EAAI0xE,EAAoB1xE,EAAGuxE,EAAQpuE,GAAG3D,EAAIkyE,EAAoBlyE,GAC3GoyE,EAAmB,IAAIvvD,GAAWmvD,EAAQruE,GAAGnD,EAAI0xE,EAAoB1xE,EAAGwxE,EAAQruE,GAAG3D,EAAIkyE,EAAoBlyE,GAC/Gc,KAAKuvE,SAAS1C,MAAMwE,GACpBrxE,KAAKuvE,SAAS1C,MAAMyE,KAK1BnC,GAAuBrqE,UAAUmrC,eAAiB,WAEhD,OADUjwC,KAAKuvE,SAASt/B,kBAG1Bk/B,GAAuBrqE,UAAUysE,aAAe,SAAuB5vE,EAAG6vE,EAASC,EAASnuD,GAC1F,IAAIouD,GAAqB,EACrBv1C,EAAQ,KACZ,IACEA,EAAQrL,GAAYxhB,aAAakiE,EAAQr3D,GAAIq3D,EAAQ3uE,GAAI4uE,EAAQt3D,GAAIs3D,EAAQ5uE,KAC5DygB,GAAY,EAAM,EAAM6Y,EAAM7Y,SAAS3hB,GAAKa,KAAKiP,IAAI6R,IACrDtjB,KAAKwvE,WAAW9E,kBAAmBgH,GAAqB,GACzE,MAAOvkD,GACP,KAAIA,aAAciD,IAGT,MAAMjD,EAFbgP,EAAQ,IAAIpa,GAAW,EAAG,GAC1B2vD,GAAqB,EAGrBA,EACF1xE,KAAKuvE,SAAS1C,MAAM1wC,GAEpBn8B,KAAK2xE,oBAAoBH,EAASC,EAASnuD,EAAUtjB,KAAKwvE,WAAW9E,kBAGzEyE,GAAuBrqE,UAAU8sE,gBAAkB,SAA0BjwE,EAAGwY,EAAItX,EAAIgvE,EAAWC,GACjG,IAAIjE,EAAM1zD,EAAGza,EAAIiC,EAAEjC,EACfouE,EAAM3zD,EAAGjb,EAAIyC,EAAEzC,EACf6yE,EAAavvE,KAAKqrD,MAAMigB,EAAKD,GAC7B7/C,EAAMnrB,EAAGnD,EAAIiC,EAAEjC,EACfuuB,EAAMprB,EAAG3D,EAAIyC,EAAEzC,EACf8yE,EAAWxvE,KAAKqrD,MAAM5/B,EAAKD,GAC3B6jD,IAAcv1C,GAAamE,UACzBsxC,GAAcC,IAAYD,GAAc,EAAMvvE,KAAK0kB,IAEnD6qD,GAAcC,IAAYD,GAAc,EAAMvvE,KAAK0kB,IAEzDlnB,KAAKuvE,SAAS1C,MAAM1yD,GACpBna,KAAKmxE,aAAaxvE,EAAGowE,EAAYC,EAAUH,EAAWC,GACtD9xE,KAAKuvE,SAAS1C,MAAMhqE,IAEtBssE,GAAuBrqE,UAAUgsE,eAAiB,SAAyBhwB,EAAa4vB,GACtF,GAAI1wE,KAAK+vE,SAASltE,GAAGygB,SAAStjB,KAAKgwE,SAAS71D,IAAMna,KAAK81D,UAAYqZ,GAAuBmB,iCAExF,OADAtwE,KAAKuvE,SAAS1C,MAAM7sE,KAAK+vE,SAASltE,IAC3B,KAEL7C,KAAKwvE,WAAWnF,iBAAmB/B,GAAiB0B,WACtDhqE,KAAKuxE,aAAavxE,KAAK2vE,IAAK3vE,KAAK+vE,SAAU/vE,KAAKgwE,SAAUhwE,KAAK81D,WACtD91D,KAAKwvE,WAAWnF,iBAAmB/B,GAAiB2B,WAC7DjqE,KAAKiyE,aAAajyE,KAAK+vE,SAAU/vE,KAAKgwE,WAElCU,GAAiB1wE,KAAKuvE,SAAS1C,MAAM7sE,KAAK+vE,SAASltE,IACvD7C,KAAK4xE,gBAAgB5xE,KAAK2vE,IAAK3vE,KAAK+vE,SAASltE,GAAI7C,KAAKgwE,SAAS71D,GAAI2mC,EAAa9gD,KAAK81D,WACrF91D,KAAKuvE,SAAS1C,MAAM7sE,KAAKgwE,SAAS71D,MAGtCg1D,GAAuBrqE,UAAUotE,aAAe,SAAuBvwE,GACrE3B,KAAKuvE,SAAS1C,MAAM,IAAI9qD,GAAWpgB,EAAEjC,EAAIM,KAAK81D,UAAWn0D,EAAEzC,EAAIc,KAAK81D,YACpE91D,KAAKuvE,SAAS1C,MAAM,IAAI9qD,GAAWpgB,EAAEjC,EAAIM,KAAK81D,UAAWn0D,EAAEzC,EAAIc,KAAK81D,YACpE91D,KAAKuvE,SAAS1C,MAAM,IAAI9qD,GAAWpgB,EAAEjC,EAAIM,KAAK81D,UAAWn0D,EAAEzC,EAAIc,KAAK81D,YACpE91D,KAAKuvE,SAAS1C,MAAM,IAAI9qD,GAAWpgB,EAAEjC,EAAIM,KAAK81D,UAAWn0D,EAAEzC,EAAIc,KAAK81D,YACpE91D,KAAKuvE,SAAShmC,aAEhB4lC,GAAuBrqE,UAAUqtE,YAAc,SAAsB5qE,EAAI85C,GACvErhD,KAAKuvE,SAAStC,OAAO1lE,EAAI85C,IAE3B8tB,GAAuBrqE,UAAUstE,gBAAkB,WACjDpyE,KAAKuvE,SAAS1C,MAAM7sE,KAAKgwE,SAAS71D,KAEpCg1D,GAAuBrqE,UAAUutE,eAAiB,WAChDryE,KAAKuvE,SAAS1C,MAAM7sE,KAAKgwE,SAASntE,KAEpCssE,GAAuBrqE,UAAUwtE,iBAAmB,SAA2Bj0D,EAAIC,EAAIiiC,GACrFvgD,KAAK2vE,IAAMtxD,EACXre,KAAK4vE,IAAMtxD,EACXte,KAAKiwE,MAAQ1vB,EACbvgD,KAAK8vE,MAAM7M,eAAe5kD,EAAIC,GAC9Bte,KAAK2wE,qBAAqB3wE,KAAK8vE,MAAOvvB,EAAMvgD,KAAK81D,UAAW91D,KAAKgwE,WAEnEb,GAAuBrqE,UAAU6sE,oBAAsB,SAA8BH,EAASC,EAASnuD,EAAUomD,GAC/G,IAAI1jE,EAAShG,KAAK6vE,MAAMhtE,GACpB0vE,EAAOlF,GAAMzf,MAAM5nD,EAAQhG,KAAK6vE,MAAM11D,IAGtCq4D,EADUnF,GAAM4B,qBAAqBjvE,KAAK6vE,MAAM11D,GAAInU,EAAQhG,KAAK8vE,MAAMjtE,IAC/C,EACxB4vE,EAASpF,GAAMnoC,UAAUqtC,EAAOC,GAChCE,EAAcrF,GAAMnoC,UAAUutC,EAASjwE,KAAK0kB,IAC5CyrD,EAAYjJ,EAAapmD,EAEzBsvD,EAAetvD,EADFqvD,EAAYnwE,KAAKiP,IAAIjP,KAAKwsE,IAAIwD,IAE3CK,EAAY7sE,EAAOtG,EAAIizE,EAAYnwE,KAAKsoE,IAAI4H,GAC5CI,EAAY9sE,EAAO9G,EAAIyzE,EAAYnwE,KAAKwsE,IAAI0D,GAC5CK,EAAa,IAAIhxD,GAAW8wD,EAAWC,GACvCE,EAAe,IAAIhS,GAAYh7D,EAAQ+sE,GACvCE,EAAeD,EAAatQ,iBAAiB,EAAKkQ,GAClDM,EAAgBF,EAAatQ,iBAAiB,GAAMkQ,GACpD5yE,KAAKiwE,QAAUzwB,GAAS5e,MAC1B5gC,KAAKuvE,SAAS1C,MAAMoG,GACpBjzE,KAAKuvE,SAAS1C,MAAMqG,KAEpBlzE,KAAKuvE,SAAS1C,MAAMqG,GACpBlzE,KAAKuvE,SAAS1C,MAAMoG,KAGxB9D,GAAuBrqE,UAAU6rE,qBAAuB,SAA+B95D,EAAK0pC,EAAMj9B,EAAU6vD,GAC1G,IAAIC,EAAW7yB,IAASf,GAAS5e,KAAO,GAAK,EACzCzd,EAAKtM,EAAIhU,GAAGnD,EAAImX,EAAIsD,GAAGza,EACvB0jB,EAAKvM,EAAIhU,GAAG3D,EAAI2X,EAAIsD,GAAGjb,EACvBge,EAAM1a,KAAK8D,KAAK6c,EAAKA,EAAKC,EAAKA,GAC/B2/C,EAAKqQ,EAAW9vD,EAAWH,EAAKjG,EAChC8lD,EAAKoQ,EAAW9vD,EAAWF,EAAKlG,EACpCi2D,EAAOh5D,GAAGza,EAAImX,EAAIsD,GAAGza,EAAIsjE,EACzBmQ,EAAOh5D,GAAGjb,EAAI2X,EAAIsD,GAAGjb,EAAI6jE,EACzBoQ,EAAOtwE,GAAGnD,EAAImX,EAAIhU,GAAGnD,EAAIsjE,EACzBmQ,EAAOtwE,GAAG3D,EAAI2X,EAAIhU,GAAG3D,EAAI6jE,GAE3BoM,GAAuBrqE,UAAUqsE,aAAe,SAAuBxvE,EAAGowE,EAAYC,EAAUH,EAAWC,GACvG,IAEEhiB,EAAkB+hB,IAAcv1C,GAAamE,WAAa,EAAI,EAC9D4yC,EAAa7wE,KAAKiP,IAAIsgE,EAAaC,GACnCsB,EAAQ9wE,KAAK4d,MAAMizD,EAAarzE,KAAKqvE,oBAAsB,IAC/D,GAAIiE,EAAQ,EAAK,OAAO,KAKxB,IAJA,IACIC,EAAeF,EAAaC,EAC5BE,EAFY,EAGZjsE,EAAK,IAAIwa,GACNyxD,EAAYH,GAAY,CAC7B,IAAIzlB,EAAQmkB,EAAajiB,EAAkB0jB,EAC3CjsE,EAAG7H,EAAIiC,EAAEjC,EAAIoyE,EAAStvE,KAAKsoE,IAAIld,GAC/BrmD,EAAGrI,EAAIyC,EAAEzC,EAAI4yE,EAAStvE,KAAKwsE,IAAIphB,GAblB5tD,KAcNuvE,SAAS1C,MAAMtlE,GACtBisE,GAAaD,IAGjBpE,GAAuBrqE,UAAUisE,cAAgB,SAAwBjwB,EAAa4vB,GAEpF,GADA1wE,KAAKyvE,IAAI70C,oBAAoB56B,KAAK+vE,SAAS51D,GAAIna,KAAK+vE,SAASltE,GAAI7C,KAAKgwE,SAAS71D,GAAIna,KAAKgwE,SAASntE,IAC7F7C,KAAKyvE,IAAIt0C,kBACXn7B,KAAKuvE,SAAS1C,MAAM7sE,KAAKyvE,IAAI95D,gBAAgB,SAG7C,GADA3V,KAAKkwE,wBAAyB,EAC1BlwE,KAAK+vE,SAASltE,GAAGygB,SAAStjB,KAAKgwE,SAAS71D,IAAMna,KAAK81D,UAAYqZ,GAAuBoB,wCACxFvwE,KAAKuvE,SAAS1C,MAAM7sE,KAAK+vE,SAASltE,QAC7B,CAEL,GADA7C,KAAKuvE,SAAS1C,MAAM7sE,KAAK+vE,SAASltE,IAC9B7C,KAAKsvE,wBAA0B,EAAG,CACpC,IAAIxJ,EAAO,IAAI/jD,IAAY/hB,KAAKsvE,wBAA0BtvE,KAAK+vE,SAASltE,GAAGnD,EAAIM,KAAK2vE,IAAIjwE,IAAMM,KAAKsvE,wBAA0B,IAAKtvE,KAAKsvE,wBAA0BtvE,KAAK+vE,SAASltE,GAAG3D,EAAIc,KAAK2vE,IAAIzwE,IAAMc,KAAKsvE,wBAA0B,IACpOtvE,KAAKuvE,SAAS1C,MAAM/G,GACpB,IAAIC,EAAO,IAAIhkD,IAAY/hB,KAAKsvE,wBAA0BtvE,KAAKgwE,SAAS71D,GAAGza,EAAIM,KAAK2vE,IAAIjwE,IAAMM,KAAKsvE,wBAA0B,IAAKtvE,KAAKsvE,wBAA0BtvE,KAAKgwE,SAAS71D,GAAGjb,EAAIc,KAAK2vE,IAAIzwE,IAAMc,KAAKsvE,wBAA0B,IACpOtvE,KAAKuvE,SAAS1C,MAAM9G,QAEpB/lE,KAAKuvE,SAAS1C,MAAM7sE,KAAK2vE,KAE3B3vE,KAAKuvE,SAAS1C,MAAM7sE,KAAKgwE,SAAS71D,MAIxCg1D,GAAuBrqE,UAAU2uE,aAAe,SAAuB9xE,GACrE,IAAI4F,EAAK,IAAIwa,GAAWpgB,EAAEjC,EAAIM,KAAK81D,UAAWn0D,EAAEzC,GAChDc,KAAKuvE,SAAS1C,MAAMtlE,GACpBvH,KAAKmxE,aAAaxvE,EAAG,EAAK,EAAMa,KAAK0kB,IAAK,EAAGlnB,KAAK81D,WAClD91D,KAAKuvE,SAAShmC,aAEhB4lC,GAAuBrqE,UAAUmtE,aAAe,SAAuBT,EAASC,GAC9EzxE,KAAKuvE,SAAS1C,MAAM2E,EAAQ3uE,IAC5B7C,KAAKuvE,SAAS1C,MAAM4E,EAAQt3D,KAE9Bg1D,GAAuBrqE,UAAU8hB,KAAO,SAAetD,GACrDtjB,KAAK81D,UAAYxyC,EACjBtjB,KAAKovE,sBAAwB9rD,GAAY,EAAI9gB,KAAKsoE,IAAI9qE,KAAKqvE,oBAAsB,IACjFrvE,KAAKuvE,SAAW,IAAI/C,GACpBxsE,KAAKuvE,SAASn0C,kBAAkBp7B,KAAK45B,iBACrC55B,KAAKuvE,SAASpC,yBAAyB7pD,EAAW6rD,GAAuBqB,oCAE3ErB,GAAuBrqE,UAAU+rE,aAAe,SAAuBH,GACrE1wE,KAAKyvE,IAAI70C,oBAAoB56B,KAAK0vE,IAAK1vE,KAAK2vE,IAAK3vE,KAAK2vE,IAAK3vE,KAAK4vE,KACnD5vE,KAAKyvE,IAAIz0C,sBACR,IACRh7B,KAAKwvE,WAAWnF,iBAAmB/B,GAAiB2B,YAAcjqE,KAAKwvE,WAAWnF,iBAAmB/B,GAAiB0B,YACpH0G,GAAiB1wE,KAAKuvE,SAAS1C,MAAM7sE,KAAK+vE,SAASltE,IACvD7C,KAAKuvE,SAAS1C,MAAM7sE,KAAKgwE,SAAS71D,KAElCna,KAAK4xE,gBAAgB5xE,KAAK2vE,IAAK3vE,KAAK+vE,SAASltE,GAAI7C,KAAKgwE,SAAS71D,GAAImiB,GAAamE,UAAWzgC,KAAK81D,aAItGqZ,GAAuBrqE,UAAUykC,UAAY,WAC3CvpC,KAAKuvE,SAAShmC,aAEhB4lC,GAAuBrqE,UAAU4uE,sBAAwB,WACvD,OAAO1zE,KAAKkwE,wBAEdf,GAAuBrqE,UAAUyb,YAAc,WAC7C,MAAO,IAET4uD,GAAuBrqE,UAAU0b,SAAW,WAC1C,OAAO2uD,IAETkB,GAAmBC,iCAAiCtkE,IAAM,WAAc,MAAO,MAC/EqkE,GAAmBE,wCAAwCvkE,IAAM,WAAc,MAAO,MACtFqkE,GAAmBG,kCAAkCxkE,IAAM,WAAc,OAAO,MAChFqkE,GAAmBD,2BAA2BpkE,IAAM,WAAc,OAAO,IAEzEvH,OAAOid,iBAAkBytD,GAAwBkB,IAEjD,IAAIsD,GAAqB,WACvB3zE,KAAK81D,UAAY,EACjB91D,KAAK45B,gBAAkB,KACvB55B,KAAKwvE,WAAa,KAClB,IAAIn0C,EAAiB/lB,UAAU,GAC3B66D,EAAY76D,UAAU,GAC1BtV,KAAK45B,gBAAkByB,EACvBr7B,KAAKwvE,WAAaW,GAEpBwD,GAAmB7uE,UAAU8uE,eAAiB,SAAyBC,EAAUvwD,GAE/E,GADAtjB,KAAK81D,UAAYxyC,EACA,IAAbA,EAAoB,OAAO,KAC/B,IAAIwwD,EAAcxwD,EAAW,EACzBywD,EAAcvxE,KAAKiP,IAAI6R,GACvB0wD,EAASh0E,KAAKi0E,UAAUF,GACxBF,EAASpzE,QAAU,EACrBT,KAAKk0E,kBAAkBL,EAAS,GAAIG,GAEpCh0E,KAAKm0E,mBAAmBN,EAAUC,EAAaE,GAEjD,IAAII,EAAWJ,EAAO/jC,iBAEtB,OADI6jC,GAAetqC,GAAiB71B,QAAQygE,GACrCA,GAETT,GAAmB7uE,UAAUuvE,8BAAgC,SAAwCR,EAAUC,EAAaE,GAC1H,IAAIM,EAAUt0E,KAAKu0E,kBAAkBv0E,KAAK81D,WAC1C,GAAIge,EAAa,CACfE,EAAO7B,YAAY0B,GAAU,GAC7B,IAAIW,EAAQzJ,GAA0BuB,SAASuH,GAAWS,GACtD73C,EAAK+3C,EAAM/zE,OAAS,EACxBuzE,EAAO1B,iBAAiBkC,EAAM/3C,GAAK+3C,EAAM/3C,EAAK,GAAI+iB,GAAS5e,MAC3DozC,EAAO5B,kBACP,IAAK,IAAIvzE,EAAI49B,EAAK,EAAG59B,GAAK,EAAGA,IAC3Bm1E,EAAOvD,eAAe+D,EAAM31E,IAAI,OAE7B,CACLm1E,EAAO7B,YAAY0B,GAAU,GAC7B,IAAIY,EAAQ1J,GAA0BuB,SAASuH,EAAUS,GACrD93C,EAAKi4C,EAAMh0E,OAAS,EACxBuzE,EAAO1B,iBAAiBmC,EAAM,GAAIA,EAAM,GAAIj1B,GAAS5e,MACrDozC,EAAO5B,kBACP,IAAK,IAAI7xC,EAAM,EAAGA,GAAO/D,EAAI+D,IAC3ByzC,EAAOvD,eAAegE,EAAMl0C,IAAM,GAGtCyzC,EAAO3B,iBACP2B,EAAOzqC,aAEToqC,GAAmB7uE,UAAU4vE,uBAAyB,SAAiCb,EAAUtzB,EAAMyzB,GACrG,IAAIM,EAAUt0E,KAAKu0E,kBAAkBv0E,KAAK81D,WACtCvV,IAASf,GAAS9e,QAAS4zC,GAAWA,GAC1C,IAAIK,EAAO5J,GAA0BuB,SAASuH,EAAUS,GACpDlxE,EAAIuxE,EAAKl0E,OAAS,EACtBuzE,EAAO1B,iBAAiBqC,EAAKvxE,EAAI,GAAIuxE,EAAK,GAAIp0B,GAC9C,IAAK,IAAI1hD,EAAI,EAAGA,GAAKuE,EAAGvE,IAAK,CAC3B,IAAI6xE,EAAsB,IAAN7xE,EACpBm1E,EAAOvD,eAAekE,EAAK91E,GAAI6xE,GAEjCsD,EAAOzqC,aAEToqC,GAAmB7uE,UAAU8vE,uBAAyB,SAAiCf,EAAUG,GAC/F,IAAIM,EAAUt0E,KAAKu0E,kBAAkBv0E,KAAK81D,WACtC2e,EAAQ1J,GAA0BuB,SAASuH,EAAUS,GACrD93C,EAAKi4C,EAAMh0E,OAAS,EACxBuzE,EAAO1B,iBAAiBmC,EAAM,GAAIA,EAAM,GAAIj1B,GAAS5e,MACrD,IAAK,IAAI/hC,EAAI,EAAGA,GAAK29B,EAAI39B,IACvBm1E,EAAOvD,eAAegE,EAAM51E,IAAI,GAElCm1E,EAAO3B,iBACP2B,EAAOhD,cAAcyD,EAAMj4C,EAAK,GAAIi4C,EAAMj4C,IAC1C,IAAIg4C,EAAQzJ,GAA0BuB,SAASuH,GAAWS,GACtD73C,EAAK+3C,EAAM/zE,OAAS,EACxBuzE,EAAO1B,iBAAiBkC,EAAM/3C,GAAK+3C,EAAM/3C,EAAK,GAAI+iB,GAAS5e,MAC3D,IAAK,IAAIL,EAAM9D,EAAK,EAAG8D,GAAO,EAAGA,IAC/ByzC,EAAOvD,eAAe+D,EAAMj0C,IAAM,GAEpCyzC,EAAO3B,iBACP2B,EAAOhD,cAAcwD,EAAM,GAAIA,EAAM,IACrCR,EAAOzqC,aAEToqC,GAAmB7uE,UAAUovE,kBAAoB,SAA4B3sE,EAAIysE,GAC/E,OAAQh0E,KAAKwvE,WAAWtF,kBACtB,KAAK5B,GAAiBI,UACpBsL,EAAOP,aAAalsE,GACpB,MACF,KAAK+gE,GAAiByB,WACpBiK,EAAO9B,aAAa3qE,KAK1BosE,GAAmB7uE,UAAU+vE,aAAe,SAAuBhB,EAAUvwD,GAE3E,GADAtjB,KAAK81D,UAAYxyC,EACbA,EAAW,IAAQtjB,KAAKwvE,WAAWrF,gBAAmB,OAAO,KACjE,GAAiB,IAAb7mD,EAAoB,OAAO,KAC/B,IAAIywD,EAAcvxE,KAAKiP,IAAI6R,GACvB0wD,EAASh0E,KAAKi0E,UAAUF,GAC5B,GAAIF,EAASpzE,QAAU,EACrBT,KAAKk0E,kBAAkBL,EAAS,GAAIG,QAEpC,GAAIh0E,KAAKwvE,WAAWrF,gBAAiB,CACnC,IAAI2J,EAAcxwD,EAAW,EAC7BtjB,KAAKq0E,8BAA8BR,EAAUC,EAAaE,QACnDh0E,KAAK40E,uBAAuBf,EAAUG,GAGjD,OADgBA,EAAO/jC,kBAGzB0jC,GAAmB7uE,UAAUgwE,oBAAsB,WACjD,OAAO90E,KAAKwvE,YAEdmE,GAAmB7uE,UAAUyvE,kBAAoB,SAA4BQ,GAC3E,OAAOA,EAAc/0E,KAAKwvE,WAAWhF,qBAEvCmJ,GAAmB7uE,UAAUkwE,aAAe,SAAuBnB,EAAUtzB,EAAMj9B,GAEjF,GADAtjB,KAAK81D,UAAYxyC,EACbuwD,EAASpzE,QAAU,EAAK,OAAOT,KAAK60E,aAAahB,EAAUvwD,GAC/D,GAAiB,IAAbA,EACF,OAAOqwD,GAAmBsB,gBAAgBpB,GAE5C,IAAIG,EAASh0E,KAAKi0E,UAAU3wD,GAE5B,OADAtjB,KAAK00E,uBAAuBb,EAAUtzB,EAAMyzB,GACrCA,EAAO/jC,kBAEhB0jC,GAAmB7uE,UAAUqvE,mBAAqB,SAA6BN,EAAUC,EAAaE,GACpG,IAAIM,EAAUt0E,KAAKu0E,kBAAkBv0E,KAAK81D,WAC1C,GAAIge,EAAa,CACf,IAAIU,EAAQzJ,GAA0BuB,SAASuH,GAAWS,GACtD73C,EAAK+3C,EAAM/zE,OAAS,EACxBuzE,EAAO1B,iBAAiBkC,EAAM/3C,GAAK+3C,EAAM/3C,EAAK,GAAI+iB,GAAS5e,MAC3DozC,EAAO5B,kBACP,IAAK,IAAIvzE,EAAI49B,EAAK,EAAG59B,GAAK,EAAGA,IAC3Bm1E,EAAOvD,eAAe+D,EAAM31E,IAAI,OAE7B,CACL,IAAI41E,EAAQ1J,GAA0BuB,SAASuH,EAAUS,GACrD93C,EAAKi4C,EAAMh0E,OAAS,EACxBuzE,EAAO1B,iBAAiBmC,EAAM,GAAIA,EAAM,GAAIj1B,GAAS5e,MACrDozC,EAAO5B,kBACP,IAAK,IAAI7xC,EAAM,EAAGA,GAAO/D,EAAI+D,IAC3ByzC,EAAOvD,eAAegE,EAAMl0C,IAAM,GAGtCyzC,EAAO3B,kBAETsB,GAAmB7uE,UAAUmvE,UAAY,SAAoB3wD,GAC3D,OAAO,IAAI6rD,GAAuBnvE,KAAK45B,gBAAiB55B,KAAKwvE,WAAYlsD,IAE3EqwD,GAAmB7uE,UAAUyb,YAAc,WACzC,MAAO,IAETozD,GAAmB7uE,UAAU0b,SAAW,WACtC,OAAOmzD,IAETA,GAAmBsB,gBAAkB,SAA0BvzC,GAE7D,IADA,IAAIrnB,EAAO,IAAI5R,MAAMi5B,EAAIjhC,QAAQwrB,KAAK,MAC7BptB,EAAI,EAAGA,EAAIwb,EAAK5Z,OAAQ5B,IAC/Bwb,EAAKxb,GAAK,IAAIkjB,GAAW2f,EAAI7iC,IAE/B,OAAOwb,GAGT,IAAI66D,GAAuB,WACzBl1E,KAAKm1E,WAAa,KAClBn1E,KAAKo1E,KAAO,IAAIpU,GAChBhhE,KAAKq1E,KAAO,IAAI/4C,GAChB,IAAIg5C,EAAYhgE,UAAU,GAC1BtV,KAAKm1E,WAAaG,GAGhBC,GAAqB,CAAEC,aAAc,CAAEjxE,cAAc,IACzD2wE,GAAqBpwE,UAAU2wE,oBAAsB,WAGnD,GAAyB,IAArBngE,UAAU7U,OAAc,CAG1B,IAFA,IAAIi1E,EAAoBpgE,UAAU,GAC9BqgE,EAAkB,IAAInuC,GACjB3oC,EAAImB,KAAKm1E,WAAW1vC,WAAY5mC,EAAE6mC,WAAY,CACrD,IAAIkwC,EAAM/2E,EAAE6C,OACRsuB,EAAM4lD,EAAI/wC,cACV6wC,EAAkBx2E,EAAI8wB,EAAI+C,WAAa2iD,EAAkBx2E,EAAI8wB,EAAI6C,WAR1D7yB,KASJy1E,oBAAoBC,EAAmBE,EAAI3xB,mBAAoB0xB,GAExE,OAAOA,EACF,GAAyB,IAArBrgE,UAAU7U,OACnB,GAAIokB,GAAavP,UAAU,GAAI+xB,KAAU/xB,UAAU,aAAcyM,IAAczM,UAAU,aAAcg5C,GAKrG,IAJA,IAAIunB,EAAsBvgE,UAAU,GAChCwgE,EAAUxgE,UAAU,GACpBygE,EAAoBzgE,UAAU,GAC9BosB,EAAMo0C,EAAQn1B,UAAU1Q,iBACnB1P,EAAM,EAAGA,EAAMmB,EAAIjhC,OAAS,EAAG8/B,IAAO,CAK7C,GAvBSvgC,KAmBFo1E,KAAKj7D,GAAKunB,EAAInB,GAnBZvgC,KAoBFo1E,KAAKvyE,GAAK6+B,EAAInB,EAAM,GApBlBvgC,KAqBEo1E,KAAKj7D,GAAGjb,EArBVc,KAqBqBo1E,KAAKvyE,GAAG3D,GArB7Bc,KAqByCo1E,KAAKzhE,YAC5CnR,KAAK0Z,IAtBPlc,KAsBkBo1E,KAAKj7D,GAAGza,EAtB1BM,KAsBoCo1E,KAAKvyE,GAAGnD,GAC1Cm2E,EAAoBn2E,GAvBtBM,KAwBEo1E,KAAK/R,gBACZwS,EAAoB32E,EAzBfc,KAyB0Bo1E,KAAKj7D,GAAGjb,GAAK22E,EAAoB32E,EAzB3Dc,KAyBsEo1E,KAAKvyE,GAAG3D,GACnFo9B,GAAa6F,mBA1BRniC,KA0BkCo1E,KAAKj7D,GA1BvCna,KA0BkDo1E,KAAKvyE,GAAIgzE,KAAyBv5C,GAAaoE,OAA1G,CACA,IAAItiB,EAAQ03D,EAAQ3yB,SAAS3D,GAAS5e,MA3B7B5gC,KA4BGo1E,KAAKj7D,GAAGG,OAAOonB,EAAInB,MAASniB,EAAQ03D,EAAQ3yB,SAAS3D,GAAS9e,QAC1E,IAAIs1C,EAAK,IAAIR,GA7BJx1E,KA6BwBo1E,KAAMh3D,GACvC23D,EAAkB91E,IAAI+1E,SAEnB,GAAInxD,GAAavP,UAAU,GAAI+xB,KAAU/xB,UAAU,aAAcyM,IAAc8C,GAAavP,UAAU,GAAI+xB,IAI/G,IAHA,IAAI4uC,EAAsB3gE,UAAU,GAChCy9C,EAAWz9C,UAAU,GACrB4gE,EAAoB5gE,UAAU,GACzB2zB,EAAM8pB,EAASttB,WAAYwD,EAAIvD,WAAY,CAClD,IAAI4a,EAAKrX,EAAIvnC,OACR4+C,EAAGe,aAtCCrhD,KAuCFy1E,oBAAoBQ,EAAqB31B,EAAI41B,KAK5DhB,GAAqBpwE,UAAUq+C,SAAW,SAAmBxhD,GAC3D,IAAIg0E,EAAkB31E,KAAKy1E,oBAAoB9zE,GAC/C,OAA+B,IAA3Bg0E,EAAgB7zE,OAAuB,EAClCyzD,GAAYv5C,IAAI25D,GACfQ,YAEZjB,GAAqBpwE,UAAUyb,YAAc,WAC3C,MAAO,IAET20D,GAAqBpwE,UAAU0b,SAAW,WACxC,OAAO00D,IAETK,GAAmBC,aAAaxpE,IAAM,WAAc,OAAOwpE,IAE3D/wE,OAAOid,iBAAkBwzD,GAAsBK,IAE/C,IAAIC,GAAe,WACjBx1E,KAAKo2E,WAAa,KAClBp2E,KAAKm2E,WAAa,KAClB,IAAIt/D,EAAMvB,UAAU,GAChB8I,EAAQ9I,UAAU,GACtBtV,KAAKo2E,WAAa,IAAIpV,GAAYnqD,GAClC7W,KAAKm2E,WAAa/3D,GAEpBo3D,GAAa1wE,UAAUge,UAAY,SAAoB+lB,GACrD,IAAIr+B,EAAQq+B,EACZ,GAAI7oC,KAAKo2E,WAAWlV,QAAU12D,EAAM4rE,WAAW9T,OAAU,OAAO,EAChE,GAAItiE,KAAKo2E,WAAW9T,QAAU93D,EAAM4rE,WAAWlV,OAAU,OAAQ,EACjE,IAAImV,EAAcr2E,KAAKo2E,WAAWvoD,iBAAiBrjB,EAAM4rE,YACzD,OAAoB,IAAhBC,EAA4BA,EAEZ,KADpBA,GAAe,EAAI7rE,EAAM4rE,WAAWvoD,iBAAiB7tB,KAAKo2E,aAC1BC,EACzBr2E,KAAKo2E,WAAWtzD,UAAUtY,EAAM4rE,aAEzCZ,GAAa1wE,UAAUwxE,SAAW,SAAmBC,EAAMC,GACzD,IAAIC,EAAWF,EAAKp8D,GAAG2I,UAAU0zD,EAAKr8D,IACtC,OAAiB,IAAbs8D,EAAyBA,EACtBF,EAAK1zE,GAAGigB,UAAU0zD,EAAK3zE,KAEhC2yE,GAAa1wE,UAAUme,SAAW,WAChC,OAAOjjB,KAAKo2E,WAAWnzD,YAEzBuyD,GAAa1wE,UAAUyb,YAAc,WACnC,MAAO,CAACoB,KAEV6zD,GAAa1wE,UAAU0b,SAAW,WAChC,OAAOg1D,IAGT,IAAIkB,GAAW,SAAmBv8D,EAAItX,EAAIC,GACxC9C,KAAKma,GAAKA,GAAM,KAChBna,KAAK6C,GAAKA,GAAM,KAChB7C,KAAK8C,GAAKA,GAAM,MAElB4zE,GAAS5xE,UAAUsrC,KAAO,WACxB,OAAOsmC,GAAStmC,KAAKpwC,KAAKma,GAAIna,KAAK6C,GAAI7C,KAAK8C,KAE9C4zE,GAAS5xE,UAAUyV,WAAa,WAC9B,OAAOm8D,GAASn8D,WAAWva,KAAKma,GAAIna,KAAK6C,GAAI7C,KAAK8C,KAEpD4zE,GAAS5xE,UAAU6xE,aAAe,SAAuBh1E,GACvD,GAAU,OAANA,EAAc,MAAM,IAAIkf,GAAyB,2BACrD,OAAO61D,GAASC,aAAah1E,EAAG3B,KAAKma,GAAIna,KAAK6C,GAAI7C,KAAK8C,KAEzD4zE,GAAS5xE,UAAU8xE,kBAAoB,WACrC,OAAOF,GAASE,kBAAkB52E,KAAKma,GAAIna,KAAK6C,GAAI7C,KAAK8C,KAE3D4zE,GAAS5xE,UAAU8oE,QAAU,WAC3B,OAAO8I,GAAS9I,QAAQ5tE,KAAKma,GAAIna,KAAK6C,GAAI7C,KAAK8C,KAEjD4zE,GAAS5xE,UAAU+xE,aAAe,WAChC,OAAOH,GAASG,aAAa72E,KAAKma,GAAIna,KAAK6C,GAAI7C,KAAK8C,KAEtD4zE,GAAS5xE,UAAUgyE,OAAS,WAC1B,OAAOJ,GAASI,OAAO92E,KAAKma,GAAIna,KAAK6C,GAAI7C,KAAK8C,KAEhD4zE,GAAS5xE,UAAUiyE,SAAW,WAC5B,OAAOL,GAASK,SAAS/2E,KAAKma,GAAIna,KAAK6C,GAAI7C,KAAK8C,KAElD4zE,GAAS5xE,UAAUkyE,SAAW,WAC5B,OAAON,GAASM,SAASh3E,KAAKma,GAAIna,KAAK6C,GAAI7C,KAAK8C,KAElD4zE,GAAS5xE,UAAUyb,YAAc,WAC/B,MAAO,IAETm2D,GAAS5xE,UAAU0b,SAAW,WAC5B,OAAOk2D,IAETA,GAAStmC,KAAO,SAAe1xC,EAAGC,EAAGsjB,GACnC,OAAOzf,KAAKiP,MAAMwQ,EAAEviB,EAAIhB,EAAEgB,IAAMf,EAAEO,EAAIR,EAAEQ,IAAMP,EAAEe,EAAIhB,EAAEgB,IAAMuiB,EAAE/iB,EAAIR,EAAEQ,IAAM,IAE5Ew3E,GAASn8D,WAAa,SAAqB7b,EAAGC,EAAGsjB,GAC/C,QAASA,EAAEviB,EAAIhB,EAAEgB,IAAMf,EAAEO,EAAIR,EAAEQ,IAAMP,EAAEe,EAAIhB,EAAEgB,IAAMuiB,EAAE/iB,EAAIR,EAAEQ,IAAM,GAEnEw3E,GAASpnD,IAAM,SAAc2nD,EAAKC,EAAKC,EAAKC,GAC1C,OAAOH,EAAMG,EAAMF,EAAMC,GAE3BT,GAASC,aAAe,SAAuBh1E,EAAG01E,EAAIlxE,EAAIC,GACxD,IAAI26B,EAAKs2C,EAAG33E,EACRiiC,EAAK01C,EAAGn4E,EACRR,EAAIyH,EAAGzG,EAAIqhC,EACXpiC,EAAIyH,EAAG1G,EAAIqhC,EACX9e,EAAI9b,EAAGjH,EAAIyiC,EACXtgC,EAAI+E,EAAGlH,EAAIyiC,EACXrS,EAAM5wB,EAAI2C,EAAI1C,EAAIsjB,EAClBkB,EAAKxhB,EAAEjC,EAAIqhC,EACX3d,EAAKzhB,EAAEzC,EAAIyiC,EACX7iC,GAAKuC,EAAI8hB,EAAKxkB,EAAIykB,GAAMkM,EACxB5W,IAAMuJ,EAAIkB,EAAKzkB,EAAI0kB,GAAMkM,EAE7B,OADQ+nD,EAAG1+D,EAAI7Z,GAAKqH,EAAGwS,EAAI0+D,EAAG1+D,GAAKD,GAAKtS,EAAGuS,EAAI0+D,EAAG1+D,IAGpD+9D,GAASE,kBAAoB,SAA4Bl4E,EAAGC,EAAGsjB,GAC7D,IAAIq1D,EAAQ54E,EAAE4kB,SAAS3kB,GACnB44E,EAAQ54E,EAAE2kB,SAASrB,GACnBu1D,EAAQv1D,EAAEqB,SAAS5kB,GACnB+4E,EAASH,EAGb,OAFIC,EAAQE,IAAUA,EAASF,GAC3BC,EAAQC,IAAUA,EAASD,GACxBC,GAETf,GAAS9I,QAAU,SAAkBlvE,EAAGC,EAAGsjB,GACzC,QAAKorD,GAAMO,QAAQlvE,EAAGC,EAAGsjB,OACpBorD,GAAMO,QAAQjvE,EAAGsjB,EAAGvjB,MACpB2uE,GAAMO,QAAQ3rD,EAAGvjB,EAAGC,KAG3B+3E,GAASG,aAAe,SAAuBn4E,EAAGC,EAAGsjB,GACnD,IAAIy1D,EAAKz1D,EAAEviB,EACPi4E,EAAK11D,EAAE/iB,EACP4rB,EAAKpsB,EAAEgB,EAAIg4E,EACXE,EAAKl5E,EAAEQ,EAAIy4E,EACXE,EAAKl5E,EAAEe,EAAIg4E,EACXI,EAAKn5E,EAAEO,EAAIy4E,EACXlpD,EAAQ,EAAIioD,GAASpnD,IAAIxE,EAAI8sD,EAAIC,EAAIC,GACrCC,EAAOrB,GAASpnD,IAAIsoD,EAAI9sD,EAAKA,EAAK8sD,EAAKA,EAAIE,EAAID,EAAKA,EAAKC,EAAKA,GAC9DE,EAAOtB,GAASpnD,IAAIxE,EAAIA,EAAKA,EAAK8sD,EAAKA,EAAIC,EAAIA,EAAKA,EAAKC,EAAKA,GAGlE,OAAO,IAAI/1D,GAFD21D,EAAKK,EAAOtpD,EACZkpD,EAAKK,EAAOvpD,IAGxBioD,GAASuB,sBAAwB,SAAgCv5E,EAAGC,GAClE,IAAIwkB,EAAKxkB,EAAEe,EAAIhB,EAAEgB,EACb0jB,EAAKzkB,EAAEO,EAAIR,EAAEQ,EACbyD,EAAK,IAAImuB,GAAYpyB,EAAEgB,EAAIyjB,EAAK,EAAKzkB,EAAEQ,EAAIkkB,EAAK,EAAK,GACrDxgB,EAAK,IAAIkuB,GAAYpyB,EAAEgB,EAAI0jB,EAAKD,EAAK,EAAKzkB,EAAEQ,EAAIikB,EAAKC,EAAK,EAAK,GACnE,OAAO,IAAI0N,GAAYnuB,EAAIC,IAE7B8zE,GAASwB,cAAgB,SAAwBx5E,EAAGC,EAAGsjB,GACrD,IAAIk2D,EAAOx5E,EAAE2kB,SAAS5kB,GAElB05E,EAAOD,GAAQA,EADRx5E,EAAE2kB,SAASrB,IAElBkB,EAAKlB,EAAEviB,EAAIhB,EAAEgB,EACb0jB,EAAKnB,EAAE/iB,EAAIR,EAAEQ,EAEjB,OADc,IAAI6iB,GAAWrjB,EAAEgB,EAAI04E,EAAOj1D,EAAIzkB,EAAEQ,EAAIk5E,EAAOh1D,IAG7DszD,GAASI,OAAS,SAAiBp4E,EAAGC,EAAGsjB,GACvC,IAAI8gD,EAAKpkE,EAAEe,EAAIhB,EAAEgB,EACbsjE,EAAKrkE,EAAEO,EAAIR,EAAEQ,EACbm5E,EAAK15E,EAAEga,EAAIja,EAAEia,EACb2/D,EAAKr2D,EAAEviB,EAAIhB,EAAEgB,EACb64E,EAAKt2D,EAAE/iB,EAAIR,EAAEQ,EACbs5E,EAAKv2D,EAAEtJ,EAAIja,EAAEia,EACb8/D,EAASzV,EAAKwV,EAAKH,EAAKE,EACxBG,EAASL,EAAKC,EAAKvV,EAAKyV,EACxBG,EAAS5V,EAAKwV,EAAKvV,EAAKsV,EACxBM,EAAQH,EAASA,EAASC,EAASA,EAASC,EAASA,EACrD7B,EAASt0E,KAAK8D,KAAKsyE,GAAS,EAChC,OAAO9B,GAETJ,GAASK,SAAW,SAAmBr4E,EAAGC,EAAGsjB,GAC3C,IAAIviB,GAAKhB,EAAEgB,EAAIf,EAAEe,EAAIuiB,EAAEviB,GAAK,EACxBR,GAAKR,EAAEQ,EAAIP,EAAEO,EAAI+iB,EAAE/iB,GAAK,EAC5B,OAAO,IAAI6iB,GAAWriB,EAAGR,IAE3Bw3E,GAASM,SAAW,SAAmBt4E,EAAGC,EAAGsjB,GAC3C,IAAIk2D,EAAOx5E,EAAE2kB,SAASrB,GAClB42D,EAAOn6E,EAAE4kB,SAASrB,GAClBogB,EAAO3jC,EAAE4kB,SAAS3kB,GAClBm6E,EAASX,EAAOU,EAAOx2C,EACvB02C,GAAaZ,EAAOz5E,EAAEgB,EAAIm5E,EAAOl6E,EAAEe,EAAI2iC,EAAOpgB,EAAEviB,GAAKo5E,EACrDE,GAAab,EAAOz5E,EAAEQ,EAAI25E,EAAOl6E,EAAEO,EAAImjC,EAAOpgB,EAAE/iB,GAAK45E,EACzD,OAAO,IAAI/2D,GAAWg3D,EAAWC,IAGnC,IAAIC,GAAwB,WAC1Bj5E,KAAKk5E,WAAa,KAClBl5E,KAAK81D,UAAY,KACjB91D,KAAKm5E,cAAgB,KACrBn5E,KAAKo5E,WAAa,IAAI5xC,GACtB,IAAI6xC,EAAY/jE,UAAU,GACtBgO,EAAWhO,UAAU,GACrBgkE,EAAehkE,UAAU,GAC7BtV,KAAKk5E,WAAaG,EAClBr5E,KAAK81D,UAAYxyC,EACjBtjB,KAAKm5E,cAAgBG,GAEvBL,GAAsBn0E,UAAUy0E,SAAW,SAAmB53E,GAC5D,GAAI3B,KAAK81D,WAAa,EAAO,OAAO,KACpC,IAAI7tD,EAAQtG,EAAEsuC,iBACVupC,EAAQx5E,KAAKm5E,cAActE,aAAa5sE,EAAOjI,KAAK81D,WACxD91D,KAAKy5E,SAASD,EAAOn1D,GAASI,SAAUJ,GAASE,WAEnD00D,GAAsBn0E,UAAU40E,WAAa,SAAqB/3E,GAC9D,IAEEihE,EAAiB5iE,KAAK81D,UACtB6jB,EAAan6B,GAAS5e,KACtB5gC,KAAK81D,UAAY,IACnB8M,GAAkB5iE,KAAK81D,UACvB6jB,EAAan6B,GAAS9e,OAExB,IAAIzI,EAAQt2B,EAAEy1C,kBACVwiC,EAAapwC,GAAiBmB,qBAAqB1S,EAAMgY,kBAC7D,GAAIjwC,KAAK81D,UAAY,GAAO91D,KAAK65E,mBAAmB5hD,EAAOj4B,KAAK81D,WAAc,OAAO,KACrF,GAAI91D,KAAK81D,WAAa,GAAO8jB,EAAWn5E,OAAS,EAAK,OAAO,KAC7DT,KAAK85E,eAAeF,EAAYhX,EAAgB+W,EAAYt1D,GAASI,SAAUJ,GAASE,UACxF,IAAK,IAAI1lB,EAAI,EAAGA,EAAI8C,EAAEg1C,qBAAsB93C,IAAK,CAC/C,IAAIy6C,EAAO33C,EAAEi2C,iBAAiB/4C,GAC1Bk7E,EAAYvwC,GAAiBmB,qBAAqB2O,EAAKrJ,kBAf9CjwC,KAgBF81D,UAAY,GAhBV91D,KAgBwB65E,mBAAmBvgC,GAhB3Ct5C,KAgByD81D,YAhBzD91D,KAiBN85E,eAAeC,EAAWnX,EAAgBpjB,GAASK,SAAS85B,GAAat1D,GAASE,SAAUF,GAASI,YAGhHw0D,GAAsBn0E,UAAUk1E,2BAA6B,SAAqCC,EAAeC,GAC/G,IAAIC,EAAM,IAAIzD,GAASuD,EAAc,GAAIA,EAAc,GAAIA,EAAc,IACrEjD,EAAWmD,EAAInD,WAEnB,OADmB16C,GAAa6C,kBAAkB63C,EAAUmD,EAAIhgE,GAAIggE,EAAIt3E,IAClDL,KAAKiP,IAAIyoE,IAEjCjB,GAAsBn0E,UAAUs1E,cAAgB,SAAwBviD,GACtE,GAAI73B,KAAK81D,WAAa,IAAQ91D,KAAKm5E,cAAcrE,sBAAsB3K,gBAAmB,OAAO,KACjG,IAAIliE,EAAQuhC,GAAiBmB,qBAAqB9S,EAAKoY,kBACnDupC,EAAQx5E,KAAKm5E,cAActE,aAAa5sE,EAAOjI,KAAK81D,WACxD91D,KAAKy5E,SAASD,EAAOn1D,GAASI,SAAUJ,GAASE,WAEnD00D,GAAsBn0E,UAAU20E,SAAW,SAAmBxxE,EAAO+9C,EAASC,GAC5E,GAAc,OAAVh+C,GAAkBA,EAAMxH,OAAS,EAAK,OAAO,KACjD,IAAIib,EAAI,IAAIojD,GAAmB72D,EAAO,IAAIw9C,GAAM,EAAGphC,GAASG,SAAUwhC,EAASC,IAC/EjmD,KAAKo5E,WAAWn5E,IAAIyb,IAEtBu9D,GAAsBn0E,UAAUu1E,UAAY,WAE1C,OADAr6E,KAAKC,IAAID,KAAKk5E,YACPl5E,KAAKo5E,YAEdH,GAAsBn0E,UAAUg1E,eAAiB,SAAyB7xE,EAAO26D,EAAgBriB,EAAM+5B,EAAWC,GAChH,GAAuB,IAAnB3X,GAA0B36D,EAAMxH,OAASu3C,GAAWG,mBAAsB,OAAO,KACrF,IAAI6N,EAAUs0B,EACVr0B,EAAWs0B,EACXtyE,EAAMxH,QAAUu3C,GAAWG,oBAAsB7b,GAAasF,MAAM35B,KACtE+9C,EAAUu0B,EACVt0B,EAAWq0B,EACX/5B,EAAOf,GAASK,SAASU,IAE3B,IAAIi5B,EAAQx5E,KAAKm5E,cAAcnE,aAAa/sE,EAAOs4C,EAAMqiB,GACzD5iE,KAAKy5E,SAASD,EAAOxzB,EAASC,IAEhCgzB,GAAsBn0E,UAAU7E,IAAM,SAAcikC,GAClD,GAAIA,EAAEpO,UAAa,OAAO,KACtBoO,aAAauS,GAAWz2C,KAAK05E,WAAWx1C,GACnCA,aAAawO,GAAc1yC,KAAKo6E,cAAcl2C,GAC9CA,aAAaqS,GAASv2C,KAAKu5E,SAASr1C,GACpCA,aAAa4T,GAAc93C,KAAKw6E,cAAct2C,GAC9CA,aAAaoN,GAAmBtxC,KAAKw6E,cAAct2C,GACnDA,aAAakU,GAAgBp4C,KAAKw6E,cAAct2C,GAChDA,aAAa6L,IAAsB/vC,KAAKw6E,cAAct2C,IAGjE+0C,GAAsBn0E,UAAU+0E,mBAAqB,SAA6BpwE,EAAMywE,GACtF,IAAIO,EAAYhxE,EAAKwmC,iBAErB,GAAIwqC,EAAUh6E,OAAS,EAAK,OAAOy5E,EAAiB,EACpD,GAAyB,IAArBO,EAAUh6E,OAAgB,OAAOT,KAAKg6E,2BAA2BS,EAAWP,GAChF,IAAIlqD,EAAMvmB,EAAKs7B,sBACX21C,EAAkBl4E,KAAKwZ,IAAIgU,EAAIyC,YAAazC,EAAIwC,YACpD,OAAI0nD,EAAiB,GAAO,EAAI13E,KAAKiP,IAAIyoE,GAAkBQ,GAG7DzB,GAAsBn0E,UAAU01E,cAAgB,SAAwB1pC,GAGtE,IAFE,IAEOjyC,EAAI,EAAGA,EAAIiyC,EAAGrM,mBAAoB5lC,IAAK,CAC9C,IAAIqlC,EAAI4M,EAAGhN,aAAajlC,GAHXmB,KAINC,IAAIikC,KAGf+0C,GAAsBn0E,UAAUyb,YAAc,WAC5C,MAAO,IAET04D,GAAsBn0E,UAAU0b,SAAW,WACzC,OAAOy4D,IAGT,IAAI0B,GAAyB,aAE7BA,GAAuB71E,UAAU81E,OAAS,SAAiBj5E,KAC3Dg5E,GAAuB71E,UAAUyb,YAAc,WAC7C,MAAO,IAETo6D,GAAuB71E,UAAU0b,SAAW,WAC1C,OAAOm6D,IAGT,IAAIE,GAA6B,WAC/B76E,KAAK86E,QAAU,KACf96E,KAAK+6E,SAAW,KAChB/6E,KAAKg7E,KAAO,KACZh7E,KAAKonE,OAAS,KACdpnE,KAAKi7E,uBAAyB,KAC9B,IAAI74E,EAASkT,UAAU,GACvBtV,KAAK86E,QAAU14E,EACfpC,KAAK+6E,UAAW,EAChB/6E,KAAKonE,OAAS,EACdpnE,KAAKg7E,KAAO54E,EAAOqiC,oBAErBo2C,GAA2B/1E,UAAUpD,KAAO,WAC1C,GAAI1B,KAAK+6E,SAGP,OAFA/6E,KAAK+6E,UAAW,EACZF,GAA2BK,SAASl7E,KAAK86E,UAAY96E,KAAKonE,SACvDpnE,KAAK86E,QAEd,GAAoC,OAAhC96E,KAAKi7E,uBAAiC,CACxC,GAAIj7E,KAAKi7E,uBAAuBv1C,UAC9B,OAAO1lC,KAAKi7E,uBAAuBv5E,OAEnC1B,KAAKi7E,uBAAyB,KAGlC,GAAIj7E,KAAKonE,QAAUpnE,KAAKg7E,KACtB,MAAM,IAAIzzC,GAEZ,IAAIsB,EAAM7oC,KAAK86E,QAAQh3C,aAAa9jC,KAAKonE,UACzC,OAAIv+B,aAAekH,IACjB/vC,KAAKi7E,uBAAyB,IAAIJ,GAA2BhyC,GACtD7oC,KAAKi7E,uBAAuBv5E,QAE9BmnC,GAETgyC,GAA2B/1E,UAAUrF,OAAS,WAC5C,MAAM,IAAIkJ,MAAM3I,KAAKwgB,WAAW24B,YAElC0hC,GAA2B/1E,UAAU4gC,QAAU,WAC7C,GAAI1lC,KAAK+6E,SACP,OAAO,EAET,GAAoC,OAAhC/6E,KAAKi7E,uBAAiC,CACxC,GAAIj7E,KAAKi7E,uBAAuBv1C,UAC9B,OAAO,EAET1lC,KAAKi7E,uBAAyB,KAEhC,QAAIj7E,KAAKonE,QAAUpnE,KAAKg7E,OAK1BH,GAA2B/1E,UAAUyb,YAAc,WACjD,MAAO,CAAC6mB,KAEVyzC,GAA2B/1E,UAAU0b,SAAW,WAC9C,OAAOq6D,IAETA,GAA2BK,SAAW,SAAmB3yE,GACvD,QAASA,aAAgBwnC,KAG3B,IAAIorC,GAA2B,WAC7Bn7E,KAAK6xC,MAAQ,KACb,IAAItpC,EAAO+M,UAAU,GACrBtV,KAAK6xC,MAAQtpC,GAEf4yE,GAAyBr2E,UAAU81E,OAAS,SAAiBj5E,GAC3D,OAAOw5E,GAAyBP,OAAOj5E,EAAG3B,KAAK6xC,QAEjDspC,GAAyBr2E,UAAUyb,YAAc,WAC/C,MAAO,CAACo6D,KAEVQ,GAAyBr2E,UAAU0b,SAAW,WAC5C,OAAO26D,IAETA,GAAyB35C,cAAgB,SAAwB7/B,EAAG8H,GAClE,QAAKA,EAAKs7B,sBAAsB/R,WAAWrxB,IACpC26B,GAAakF,cAAc7/B,EAAG8H,EAAKwmC,mBAE5CkrC,GAAyBC,uBAAyB,SAAiCz5E,EAAG0H,GACpF,GAAIA,EAAKysB,UAAa,OAAO,EAC7B,IAAImC,EAAQ5uB,EAAK+tC,kBACjB,IAAK+jC,GAAyB35C,cAAc7/B,EAAGs2B,GAAU,OAAO,EAChE,IAAK,IAAIp5B,EAAI,EAAGA,EAAIwK,EAAKstC,qBAAsB93C,IAAK,CAClD,IAAIy6C,EAAOjwC,EAAKuuC,iBAAiB/4C,GACjC,GAAIs8E,GAAyB35C,cAAc7/B,EAAG23C,GAAS,OAAO,EAEhE,OAAO,GAET6hC,GAAyB3yB,cAAgB,SAAwB7mD,EAAG4G,GAClE,GAAIA,aAAgBkuC,GAClB,OAAO0kC,GAAyBC,uBAAuBz5E,EAAG4G,GACrD,GAAIA,aAAgBwnC,GAEzB,IADA,IAAIsrC,EAAQ,IAAIR,GAA2BtyE,GACpC8yE,EAAM31C,WAAW,CACtB,IAAI41C,EAAKD,EAAM35E,OACf,GAAI45E,IAAO/yE,GAAY4yE,GAAyB3yB,cAAc7mD,EAAG25E,GAAO,OAAO,EAGnF,OAAO,GAETH,GAAyBP,OAAS,SAAiBj5E,EAAG4G,GACpD,OAAIA,EAAKutB,UAAoBzR,GAASI,SAClC02D,GAAyB3yB,cAAc7mD,EAAG4G,GAAgB8b,GAASE,SAChEF,GAASI,UAGlB,IAAI82D,GAAc,WAChBv7E,KAAKw7E,SAAW,IAAI/tC,GACpBztC,KAAKy7E,UAAY,KACjBz7E,KAAK07E,kBAAoB,CAACr3D,GAASK,KAAML,GAASK,OAEpD62D,GAAYz2E,UAAU62E,UAAY,SAAoBjqB,GACpD1xD,KAAKmhD,WACL,IAAItiD,EAAImB,KAAKy7E,UAAUlrE,QAAQmhD,GAC3BkqB,EAAU/8E,EAAI,EAElB,OADU,IAANA,IAAW+8E,EAAU57E,KAAKy7E,UAAU35E,OAAS,GAC1C9B,KAAKy7E,UAAUzvE,IAAI4vE,IAE5BL,GAAYz2E,UAAU+2E,oBAAsB,SAA8Bh2B,GAExE,IADA,IAAIi2B,EAAWz3D,GAASK,KACfsuB,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CAC5C,IACIghB,EADI1T,EAAGtxC,OACGgmD,WACVhB,EAAMzB,OAAOY,IAAca,EAAM1mB,YAAY6lB,EAAWrG,GAAS5e,QAAUvc,GAASK,OAAQo3D,EAAWp1B,EAAM1mB,YAAY6lB,EAAWrG,GAAS5e,OAEnJ,GAAIk7C,IAAaz3D,GAASK,KAAQ,OAAO,KAEzC,IADA,IAAIq3D,EAAUD,EACLE,EAAOh8E,KAAKylC,WAAYu2C,EAAKt2C,WAAY,CAChD,IAAIla,EAAMwwD,EAAKt6E,OACX+rD,EAAUjiC,EAAIk8B,WAElB,GADI+F,EAAQztB,YAAY6lB,EAAWrG,GAASE,MAAQr7B,GAASK,MAAQ+oC,EAAQtI,YAAYU,EAAWrG,GAASE,GAAIq8B,GAC7GtuB,EAAQxI,OAAOY,GAAY,CAC7B,IAAIG,EAAUyH,EAAQztB,YAAY6lB,EAAWrG,GAAS5e,MAClDqlB,EAAWwH,EAAQztB,YAAY6lB,EAAWrG,GAAS9e,OACvD,GAAIulB,IAAa5hC,GAASK,KAAM,CAC9B,GAAIuhC,IAAa81B,EAAW,MAAM,IAAIt6B,GAAkB,yBAA0Bj2B,EAAImE,iBAClFq2B,IAAY3hC,GAASK,MACvBmU,GAAOC,qBAAqB,8BAAgCtN,EAAImE,gBAAkB,KAEpFosD,EAAU/1B,OAEVntB,GAAOE,OAAO00B,EAAQztB,YAAY6lB,EAAWrG,GAAS5e,QAAUvc,GAASK,KAAM,0BAC/E+oC,EAAQtI,YAAYU,EAAWrG,GAAS9e,MAAOq7C,GAC/CtuB,EAAQtI,YAAYU,EAAWrG,GAAS5e,KAAMm7C,MAKtDR,GAAYz2E,UAAU6qB,cAAgB,WACpC,IAAIqjB,EAAKhzC,KAAKylC,WACd,OAAKuN,EAAGtN,UACAsN,EAAGtxC,OACFiuB,gBAFmB,MAI9B4rD,GAAYz2E,UAAUgmD,MAAQ,SAAgBznD,GAC5CitB,GAAOjtB,IAAIm6B,QAAQ,kBAAoBx9B,KAAK2vB,iBAC5C,IAAK,IAAIqjB,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CACpCsN,EAAGtxC,OACTopD,MAAMznD,KAGZk4E,GAAYz2E,UAAUm3E,uBAAyB,SAAiCC,GAE9E,OADAl8E,KAAKm8E,qBAAqBD,EAAUE,uBAC7Bp8E,KAAKq8E,0BAA0B,IAExCd,GAAYz2E,UAAUu3E,0BAA4B,SAAoCx2B,GACpF,IAAI+E,EAAQ5qD,KAAKmhD,WACjB,GAAIyJ,EAAM9oD,QAAU,EAAK,OAAO,EAChC,IAAIw6E,EAAgB1xB,EAAM9oD,OAAS,EAE/Bg6E,EADalxB,EAAM5+C,IAAIswE,GAAe50B,WAChB1nB,YAAY6lB,EAAWrG,GAAS5e,MAC1D/H,GAAOE,OAAO+iD,IAAaz3D,GAASK,KAAM,8BAE1C,IADA,IAAIq3D,EAAUD,EACL9oC,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CAC5C,IACIghB,EADI1T,EAAGtxC,OACGgmD,WACd7uB,GAAOE,OAAO2tB,EAAMzB,OAAOY,GAAY,uBACvC,IAAIG,EAAUU,EAAM1mB,YAAY6lB,EAAWrG,GAAS5e,MAChDqlB,EAAWS,EAAM1mB,YAAY6lB,EAAWrG,GAAS9e,OACrD,GAAIslB,IAAYC,EACd,OAAO,EAET,GAAIA,IAAa81B,EACf,OAAO,EAETA,EAAU/1B,EAEZ,OAAO,GAETu1B,GAAYz2E,UAAUy3E,UAAY,SAAoBC,GAGpDx8E,KAAKylC,WACL,IAAK,IAAI5mC,EAAI,EAAGA,EAAImB,KAAKy7E,UAAU35E,OAAQjD,IAAK,CAE9C,GALamB,KAIEy7E,UAAUzvE,IAAInN,KACnB29E,EAAW,OAAO39E,EAE9B,OAAQ,GAEV08E,GAAYz2E,UAAU2gC,SAAW,WAC/B,OAAOzlC,KAAKmhD,WAAW1b,YAEzB81C,GAAYz2E,UAAUq8C,SAAW,WAI/B,OAHuB,OAAnBnhD,KAAKy7E,YACPz7E,KAAKy7E,UAAY,IAAIj0C,GAAUxnC,KAAKw7E,SAASv6E,WAExCjB,KAAKy7E,WAEdF,GAAYz2E,UAAUk7B,YAAc,SAAsB6lB,EAAWlkD,EAAG4G,GAItE,OAHIvI,KAAK07E,kBAAkB71B,KAAexhC,GAASK,OACjD1kB,KAAK07E,kBAAkB71B,GAAas1B,GAAyBP,OAAOj5E,EAAG4G,EAAKs9C,GAAW42B,gBAElFz8E,KAAK07E,kBAAkB71B,IAEhC01B,GAAYz2E,UAAUme,SAAW,WAC/B,IAAIuF,EAAM,IAAIzC,GACdyC,EAAIvC,OAAO,kBAAoBjmB,KAAK2vB,iBACpCnH,EAAIvC,OAAO,MACX,IAAK,IAAI+sB,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CAC5C,IAAIhqB,EAAIs3B,EAAGtxC,OACX8mB,EAAIvC,OAAOvK,GACX8M,EAAIvC,OAAO,MAEb,OAAOuC,EAAIvF,YAEbs4D,GAAYz2E,UAAUq3E,qBAAuB,SAA+B9tB,GAC1E,IAAK,IAAIrb,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CACnCsN,EAAGtxC,OACT0sD,aAAaC,KAGpBktB,GAAYz2E,UAAU43E,iBAAmB,SAA2BR,GAGlEl8E,KAAKm8E,qBAAqBD,EAAU,GAAGE,uBACvCp8E,KAAK67E,oBAAoB,GACzB77E,KAAK67E,oBAAoB,GAEzB,IADA,IAAIc,EAA6B,EAAC,GAAO,GAChC3pC,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAGhC,IAFA,IACIghB,EADI1T,EAAGtxC,OACGgmD,WACL2zB,EAAQ,EAAGA,EAAQ,EAAGA,IACzB30B,EAAMhC,OAAO22B,IAAU30B,EAAM1mB,YAAYq7C,KAAWh3D,GAASG,WAAYm4D,EAA2BtB,IAAS,GAGrH,IAAK,IAAIW,EAAOh8E,KAAKylC,WAAYu2C,EAAKt2C,WAGpC,IAFA,IAAIla,EAAMwwD,EAAKt6E,OACX+rD,EAAUjiC,EAAIk8B,WACTk1B,EAAU,EAAGA,EAAU,EAAGA,IACjC,GAAInvB,EAAQvI,UAAU03B,GAAU,CAC9B,IAAIp3B,EAAMnhC,GAASK,KACnB,GAAIi4D,EAA2BC,GAC7Bp3B,EAAMnhC,GAASI,aACV,CACL,IAAI9iB,EAAI6pB,EAAImE,gBACZ61B,EAvBOxlD,KAuBMggC,YAAY48C,EAASj7E,EAAGu6E,GAEvCzuB,EAAQhJ,sBAAsBm4B,EAASp3B,KAK/C+1B,GAAYz2E,UAAU+3E,UAAY,WAChC,OAAO78E,KAAKw7E,SAAS15E,QAEvBy5E,GAAYz2E,UAAUg4E,cAAgB,SAAwBphE,EAAGmtB,GAC/D7oC,KAAKw7E,SAAShvC,IAAI9wB,EAAGmtB,GACrB7oC,KAAKy7E,UAAY,MAEnBF,GAAYz2E,UAAUyb,YAAc,WAClC,MAAO,IAETg7D,GAAYz2E,UAAU0b,SAAW,WAC/B,OAAO+6D,IAGT,IAAIwB,GAAoB,SAAUC,GAChC,SAASD,IACPC,EAAer8E,KAAKX,MACpBA,KAAKi9E,oBAAsB,KAC3Bj9E,KAAKinD,OAAS,KACdjnD,KAAKk9E,uBAAyB,EAC9Bl9E,KAAKm9E,qBAAuB,EA+O9B,OA5OKH,IAAiBD,EAAiB97D,UAAY+7D,GACnDD,EAAiBj4E,UAAYL,OAAOyc,OAAQ87D,GAAkBA,EAAel4E,WAC7Ei4E,EAAiBj4E,UAAUqc,YAAc47D,EACzCA,EAAiBj4E,UAAU6rD,wBAA0B,WAGnD3wD,KAAKo9E,qBAIL,IAHA,IAAIC,EAAW,KACXC,EAAW,KACXC,EAAQv9E,KAAKk9E,uBACRr+E,EAAI,EAAGA,EAAImB,KAAKi9E,oBAAoBn7E,OAAQjD,IAAK,CACxD,IAAI2+E,EAPOx9E,KAOUi9E,oBAAoBjxE,IAAInN,GACzC4+E,EAASD,EAAQl8B,SACrB,GAAKk8B,EAAQ91B,WAAWzC,SAExB,OADiB,OAAbo4B,GAAqBG,EAAQryE,eAAgBkyE,EAAWG,GACpDD,GACN,KAZSv9E,KAYGk9E,uBACV,IAAKO,EAAOtyE,aAAgB,SAC5BmyE,EAAWG,EACXF,EAfOv9E,KAeQm9E,qBACf,MACF,KAjBSn9E,KAiBGm9E,qBACV,IAAKK,EAAQryE,aAAgB,SAC7BmyE,EAASrtB,QAAQutB,GACjBD,EApBOv9E,KAoBQk9E,wBAKrB,GAAIK,IAAUv9E,KAAKm9E,qBAAsB,CACvC,GAAiB,OAAbE,EAAqB,MAAM,IAAI57B,GAAkB,4BAA6BzhD,KAAK2vB,iBACvFkJ,GAAOE,OAAOskD,EAASlyE,aAAc,wCACrCmyE,EAASrtB,QAAQotB,KAGrBN,EAAiBj4E,UAAUzF,OAAS,SAAiBqyD,GACnD,IAAIpR,EAAKoR,EACT1xD,KAAK88E,cAAcx8B,EAAIA,IAEzBy8B,EAAiBj4E,UAAUs8C,iBAAmB,WAC5C,IAAIwJ,EAAQ5qD,KAAKmhD,WACbr/C,EAAO8oD,EAAM9oD,OACjB,GAAIA,EAAO,EAAK,OAAO,KACvB,IAAI47E,EAAM9yB,EAAM5+C,IAAI,GACpB,GAAa,IAATlK,EAAc,OAAO47E,EACzB,IAAIC,EAAS/yB,EAAM5+C,IAAIlK,EAAO,GAC1B87E,EAAQF,EAAIvvB,cACZ3B,EAAQmxB,EAAOxvB,cACnB,OAAIpC,GAASM,WAAWuxB,IAAU7xB,GAASM,WAAWG,GAAiBkxB,EAAiB3xB,GAASM,WAAWuxB,IAAW7xB,GAASM,WAAWG,GAErH,IAAhBkxB,EAAI/vB,QAAwB+vB,EAAmC,IAAnBC,EAAOhwB,QAAwBgwB,GAEjF9kD,GAAOC,qBAAqB,+CACrB,MALqJ6kD,GAO9JZ,EAAiBj4E,UAAUgmD,MAAQ,SAAgBznD,GACjDitB,GAAOjtB,IAAIm6B,QAAQ,qBAAuBx9B,KAAK2vB,iBAC/C,IAAK,IAAIqjB,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CAC5C,IAAI4a,EAAKtN,EAAGtxC,OACZ2B,EAAIynD,MAAM,QACVxK,EAAGwK,MAAMznD,GACTA,EAAIm6B,UACJn6B,EAAIynD,MAAM,OACVxK,EAAGgB,SAASwJ,MAAMznD,GAClBA,EAAIm6B,YAGRu/C,EAAiBj4E,UAAUs4E,mBAAqB,WAG9C,GAAiC,OAA7Bp9E,KAAKi9E,oBAAgC,OAAOj9E,KAAKi9E,oBACrDj9E,KAAKi9E,oBAAsB,IAAIz1C,GAC/B,IAAK,IAAIwL,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CAC5C,IAAI4a,EAAKtN,EAAGtxC,QACR4+C,EAAGn1C,cAAgBm1C,EAAGgB,SAASn2C,eANxBnL,KAM+Ci9E,oBAAoBh9E,IAAIqgD,GAEpF,OAAOtgD,KAAKi9E,qBAEdF,EAAiBj4E,UAAU+4E,gBAAkB,SAA0BC,GACrE,IAAK,IAAI9qC,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CAC5C,IACIghB,EADK1T,EAAGtxC,OACGgmD,WACfhB,EAAMjC,sBAAsB,EAAGq5B,EAAU99C,YAAY,IACrD0mB,EAAMjC,sBAAsB,EAAGq5B,EAAU99C,YAAY,MAGzD+8C,EAAiBj4E,UAAUisD,qBAAuB,WAGhD/wD,KAAKmhD,WAGL,IAFA,IAAI48B,EAAU,KACVC,EAAU,KACLn/E,EAAImB,KAAKy7E,UAAU35E,OAAS,EAAGjD,GAAK,EAAGA,IAAK,CACnD,IAAI2+E,EANOx9E,KAMUy7E,UAAUzvE,IAAInN,GAC/B4+E,EAASD,EAAQl8B,SACL,OAAZ08B,IAAoBA,EAAUP,GAClB,OAAZM,GAAoBN,EAAOxtB,QAAQ8tB,GACvCA,EAAUP,EAEZQ,EAAQ/tB,QAAQ8tB,IAElBhB,EAAiBj4E,UAAU69C,cAAgB,WAGzC,GAAyB,IAArBrtC,UAAU7U,OAAc,CAC1B,IAAI6/C,EAAKhrC,UAAU,GACf2oE,EAAYj+E,KAAKu8E,UAAUj8B,GAE3B49B,EAAa59B,EAAG6C,SAAS3D,GAAS5e,MAClCu9C,EAAkB79B,EAAG6C,SAAS3D,GAAS9e,OACvC09C,EAAYp+E,KAAK2iD,cAAcs7B,EAAY,EAAGj+E,KAAKy7E,UAAU35E,OAAQo8E,GAEzE,GADgBl+E,KAAK2iD,cAAc,EAAGs7B,EAAWG,KAC/BD,EAAmB,MAAM,IAAI18B,GAAkB,qBAAuBnB,EAAG3wB,sBACtF,GAAyB,IAArBra,UAAU7U,OAAc,CAKjC,IAJA,IAAI4nD,EAAa/yC,UAAU,GACvB+oE,EAAW/oE,UAAU,GAErBgpE,EADehpE,UAAU,GAEpBzW,EAAIwpD,EAAYxpD,EAAIw/E,EAAUx/E,IAAK,CAC1C,IAAI0/E,EAjBKv+E,KAiBWy7E,UAAUzvE,IAAInN,GAElC0/E,EAAOv7B,cAAcxD,GAAS9e,MAAO49C,GACrCA,EAAYC,EAAOp7B,SAAS3D,GAAS5e,MAEvC,OAAO09C,IAGXvB,EAAiBj4E,UAAU05E,eAAiB,WAC1C,IAAK,IAAIxrC,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CAC5C,IAAI4a,EAAKtN,EAAGtxC,OACA4+C,EAAGoH,WACT7jD,MAAMy8C,EAAGgB,SAASoG,cAG5Bq1B,EAAiBj4E,UAAU+kD,yBAA2B,SAAmCT,GAMvF,IALA,IAEIi0B,EAAW,KACXC,EAAW,KACXC,EAAQv9E,KAAKk9E,uBACRr+E,EAAImB,KAAKi9E,oBAAoBn7E,OAAS,EAAGjD,GAAK,EAAGA,IAAK,CAC7D,IAAI2+E,EANOx9E,KAMUi9E,oBAAoBjxE,IAAInN,GACzC4+E,EAASD,EAAQl8B,SAErB,OADiB,OAAb+7B,GAAqBG,EAAQ/1B,gBAAkB2B,IAAMi0B,EAAWG,GAC5DD,GACN,KAVSv9E,KAUGk9E,uBACV,GAAIO,EAAOh2B,gBAAkB2B,EAAM,SACnCk0B,EAAWG,EACXF,EAbOv9E,KAaQm9E,qBACf,MACF,KAfSn9E,KAeGm9E,qBACV,GAAIK,EAAQ/1B,gBAAkB2B,EAAM,SACpCk0B,EAASruB,WAAWuuB,GACpBD,EAlBOv9E,KAkBQk9E,wBAKjBK,IAAUv9E,KAAKm9E,uBACjBtkD,GAAOE,OAAoB,OAAbskD,EAAmB,yCACjCxkD,GAAOE,OAAOskD,EAAS51B,gBAAkB2B,EAAI,wCAC7Ck0B,EAASruB,WAAWouB,KAGxBN,EAAiBj4E,UAAUojD,kBAAoB,WAC7C,GAAyB,IAArB5yC,UAAU7U,OAAc,CAE1B,IADA,IAAIwnD,EAAS,EACJjV,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CACnCsN,EAAGtxC,OACLyJ,cAAgB88C,IAEzB,OAAOA,EACF,GAAyB,IAArB3yC,UAAU7U,OAAc,CAGjC,IAFA,IAAI2oD,EAAK9zC,UAAU,GACfmpE,EAAW,EACNzC,EAAOh8E,KAAKylC,WAAYu2C,EAAKt2C,WAAY,CACrCs2C,EAAKt6E,OACP+lD,gBAAkB2B,GAAMq1B,IAEnC,OAAOA,IAGX1B,EAAiBj4E,UAAU4iD,SAAW,WACpC,OAAO1nD,KAAKinD,QAEd81B,EAAiBj4E,UAAU45E,qBAAuB,WAEhD,IADA,IAAI5C,EAAWz3D,GAASK,KACfsuB,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CAC5C,IAAI83C,EAAUxqC,EAAGtxC,OACb+7E,EAASD,EAAQl8B,SACrB,IAAKk8B,EAAQnuB,aAAc,CACzB,GAAImuB,EAAQryE,aAAc,CACxB2wE,EAAWz3D,GAASE,SACpB,MAEF,GAAIk5D,EAAOtyE,aAAc,CACvB2wE,EAAWz3D,GAASI,SACpB,QAIN,GAAIq3D,IAAaz3D,GAASK,KAAQ,OAAO,KAEzC,IADA,IAAIq3D,EAAUD,EACLE,EAAOh8E,KAAKylC,WAAYu2C,EAAKt2C,WAAY,CAChD,IAAIi5C,EAAY3C,EAAKt6E,OACjBk9E,EAAWD,EAAUr9B,SACrBq9B,EAAUtvB,aACZsvB,EAAUh+B,UAAU2J,WAAWyxB,IAAY13D,GAASE,WAEhDo6D,EAAUxzE,eAAgB4wE,EAAU13D,GAASI,UAC7Cm6D,EAASzzE,eAAgB4wE,EAAU13D,GAASE,aAItDw4D,EAAiBj4E,UAAU43E,iBAAmB,SAA2Bn0E,GAGvEy0E,EAAel4E,UAAU43E,iBAAiB/7E,KAAKX,KAAMuI,GACrDvI,KAAKinD,OAAS,IAAIxB,GAAMphC,GAASK,MACjC,IAAK,IAAIsuB,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAIhC,IAHA,IAEIm5C,EAFK7rC,EAAGtxC,OACDi/C,UACI+G,WACN7oD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIigF,EAAOD,EAAO7+C,YAAYnhC,GAC1BigF,IAASz6D,GAASE,UAAYu6D,IAASz6D,GAASG,UAV3CxkB,KAU8DinD,OAAO9B,YAAYtmD,EAAGwlB,GAASE,YAI5Gw4D,EAAiBj4E,UAAUyb,YAAc,WACvC,MAAO,IAETw8D,EAAiBj4E,UAAU0b,SAAW,WACpC,OAAOu8D,GAGFA,GACPxB,IAEEwD,GAAsB,SAAUC,GAClC,SAASD,IACPC,EAAexpD,MAAMx1B,KAAMsV,WAiB7B,OAdK0pE,IAAiBD,EAAmB99D,UAAY+9D,GACrDD,EAAmBj6E,UAAYL,OAAOyc,OAAQ89D,GAAkBA,EAAel6E,WAC/Ei6E,EAAmBj6E,UAAUqc,YAAc49D,EAE3CA,EAAmBj6E,UAAU6mD,WAAa,SAAqB1jD,GAC7D,OAAO,IAAI7J,GAAK6J,EAAO,IAAI80E,KAE7BgC,EAAmBj6E,UAAUyb,YAAc,WACzC,MAAO,IAETw+D,EAAmBj6E,UAAU0b,SAAW,WACtC,OAAOu+D,GAGFA,GACP1uB,IAEE4uB,GAA0B,SAASA,IACrCj/E,KAAKgnD,KAAO,KACZhnD,KAAKk/E,aAAe,KACpB,IAAIx9C,EAAMpsB,UAAU,GACpBtV,KAAKgnD,KAAOtlB,EACZ1hC,KAAKk/E,aAAeD,EAAwBn+B,YAAYpf,IAE1Du9C,GAAwBn6E,UAAUge,UAAY,SAAoBgB,GAChE,IAAIq7D,EAAMr7D,EAEV,OADWm7D,GAAwBG,gBAAgBp/E,KAAKgnD,KAAMhnD,KAAKk/E,aAAcC,EAAIn4B,KAAMm4B,EAAID,eAGjGD,GAAwBn6E,UAAUyb,YAAc,WAC9C,MAAO,CAACoB,KAEVs9D,GAAwBn6E,UAAU0b,SAAW,WAC3C,OAAOy+D,IAETA,GAAwBn+B,YAAc,SAAsBpf,GAC1D,OAAqD,IAA9C8H,GAAiBiC,oBAAoB/J,IAE9Cu9C,GAAwBG,gBAAkB,SAA0B/zC,EAAMg0C,EAAc/zC,EAAMg0C,GAQ5F,IAPA,IAAIpzC,EAAOmzC,EAAe,GAAK,EAC3BlzC,EAAOmzC,EAAe,GAAK,EAC3BC,EAASF,EAAeh0C,EAAK5qC,QAAU,EACvC++E,EAASF,EAAeh0C,EAAK7qC,QAAU,EACvC2rC,EAAKizC,EAAe,EAAIh0C,EAAK5qC,OAAS,EACtC4rC,EAAKizC,EAAe,EAAIh0C,EAAK7qC,OAAS,IAE7B,CACX,IAAIg/E,EAASp0C,EAAKe,GAAItpB,UAAUwoB,EAAKe,IACrC,GAAe,IAAXozC,EAAgB,OAAOA,EAG3B,IAAIC,GAFJtzC,GAAMF,KAEaqzC,EACfI,GAFJtzC,GAAMF,KAEaqzC,EACnB,GAAIE,IAAUC,EAAS,OAAQ,EAC/B,IAAKD,GAASC,EAAS,OAAO,EAC9B,GAAID,GAASC,EAAS,OAAO,IAIjC,IAAIC,GAAW,WACb5/E,KAAK+mD,OAAS,IAAIvf,GAClBxnC,KAAK6/E,QAAU,IAAIpyC,IAErBmyC,GAAS96E,UAAUgmD,MAAQ,SAAgBznD,GAGzCA,EAAIynD,MAAM,sBACV,IAAK,IAAI7oD,EAAI,EAAGA,EAAIjC,KAAK+mD,OAAOjlD,OAAQG,IAAK,CAC3C,IAAIyZ,EAJS1b,KAIE+mD,OAAO/6C,IAAI/J,GACtBA,EAAI,GAAKoB,EAAIynD,MAAM,KACvBznD,EAAIynD,MAAM,KAEV,IADA,IAAIppB,EAAMhmB,EAAEu0B,iBACHpxC,EAAI,EAAGA,EAAI6iC,EAAIjhC,OAAQ5B,IAC1BA,EAAI,GAAKwE,EAAIynD,MAAM,KACvBznD,EAAIynD,MAAMppB,EAAI7iC,GAAGa,EAAI,IAAMgiC,EAAI7iC,GAAGK,GAEpCmE,EAAIm6B,QAAQ,KAEdn6B,EAAIynD,MAAM,QAEZ80B,GAAS96E,UAAUoiC,OAAS,SAAiB44C,GAG3C,IAFE,IAEOjhF,EAAIihF,EAASr6C,WAAY5mC,EAAE6mC,WAFrB1lC,KAGNC,IAAIpB,EAAE6C,SAGjBk+E,GAAS96E,UAAUi7E,cAAgB,SAAwBrkE,GAGzD,IAFE,IAEO7c,EAAI,EAAGA,EAAImB,KAAK+mD,OAAOjlD,OAAQjD,IACtC,GAHamB,KAGF+mD,OAAO/6C,IAAInN,GAAGyb,OAAOoB,GAAM,OAAO7c,EAE/C,OAAQ,GAEV+gF,GAAS96E,UAAU2gC,SAAW,WAC5B,OAAOzlC,KAAK+mD,OAAOthB,YAErBm6C,GAAS96E,UAAUq8C,SAAW,WAC5B,OAAOnhD,KAAK+mD,QAEd64B,GAAS96E,UAAUkH,IAAM,SAAcnN,GACrC,OAAOmB,KAAK+mD,OAAO/6C,IAAInN,IAEzB+gF,GAAS96E,UAAUk7E,cAAgB,SAAwBtkE,GACzD,IAAIyjE,EAAM,IAAIF,GAAwBvjE,EAAEu0B,kBAExC,OADgBjwC,KAAK6/E,QAAQ7zE,IAAImzE,IAGnCS,GAAS96E,UAAU7E,IAAM,SAAcyb,GACrC1b,KAAK+mD,OAAO9mD,IAAIyb,GAChB,IAAIyjE,EAAM,IAAIF,GAAwBvjE,EAAEu0B,kBACxCjwC,KAAK6/E,QAAQrzC,IAAI2yC,EAAKzjE,IAExBkkE,GAAS96E,UAAUyb,YAAc,WAC/B,MAAO,IAETq/D,GAAS96E,UAAU0b,SAAW,WAC5B,OAAOo/D,IAGT,IAAIK,GAAqB,aAEzBA,GAAmBn7E,UAAUujE,qBAAuB,SAA+B6X,EAAIC,EAAW1lE,EAAI2lE,KACtGH,GAAmBn7E,UAAU+qC,OAAS,aACtCowC,GAAmBn7E,UAAUyb,YAAc,WACzC,MAAO,IAET0/D,GAAmBn7E,UAAU0b,SAAW,WACtC,OAAOy/D,IAGT,IAAII,GAAoB,WACtBrgF,KAAKsgF,kBAAmB,EACxBtgF,KAAKugF,YAAa,EAClBvgF,KAAKwgF,oBAAqB,EAC1BxgF,KAAKygF,cAAe,EACpBzgF,KAAK0gF,yBAA2B,KAChC1gF,KAAKyvE,IAAM,KACXzvE,KAAK2gF,oBAAsB,KAC3B3gF,KAAK4gF,iBAAmB,EACxB5gF,KAAK6gF,yBAA2B,EAChC7gF,KAAK8gF,uBAAyB,EAC9B9gF,KAAK+gF,SAAW,EAChB,IAAI1gB,EAAK/qD,UAAU,GACnBtV,KAAKyvE,IAAMpP,GAEbggB,GAAkBv7E,UAAUk8E,sBAAwB,SAAgCd,EAAIC,EAAW1lE,EAAI2lE,GACrG,GAAIF,IAAOzlE,GAC6B,IAAlCza,KAAKyvE,IAAIz0C,qBAA4B,CACvC,GAAIqlD,GAAkBY,mBAAmBd,EAAWC,GAAc,OAAO,EACzE,GAAIF,EAAG1uC,WAAY,CACjB,IAAIotB,EAAcshB,EAAGp+E,OAAS,EAC9B,GAAmB,IAAdq+E,GAAmBC,IAAcxhB,GACnB,IAAdwhB,GAAmBD,IAAcvhB,EACpC,OAAO,GAKf,OAAO,GAETyhB,GAAkBv7E,UAAUo8E,2BAA6B,WACvD,OAAOlhF,KAAK0gF,0BAEdL,GAAkBv7E,UAAUq8E,8BAAgC,WAC1D,OAAOnhF,KAAKwgF,oBAEdH,GAAkBv7E,UAAUs8E,mBAAqB,WAC/C,OAAOphF,KAAKyvE,KAEd4Q,GAAkBv7E,UAAUu8E,sBAAwB,WAClD,OAAOrhF,KAAKugF,YAEdF,GAAkBv7E,UAAUujE,qBAAuB,SAA+B6X,EAAIC,EAAW1lE,EAAI2lE,GACnG,GAAIF,IAAOzlE,GAAM0lE,IAAcC,EAAa,OAAO,KACnDpgF,KAAK+gF,WACL,IAAIrb,EAAMwa,EAAGjwC,iBAAiBkwC,GAC1Bxa,EAAMua,EAAGjwC,iBAAiBkwC,EAAY,GACtCva,EAAMnrD,EAAGw1B,iBAAiBmwC,GAC1Bva,EAAMprD,EAAGw1B,iBAAiBmwC,EAAY,GAC1CpgF,KAAKyvE,IAAI70C,oBAAoB8qC,EAAKC,EAAKC,EAAKC,GACxC7lE,KAAKyvE,IAAIt0C,oBACXn7B,KAAK4gF,mBACD5gF,KAAKyvE,IAAIn0C,2BACXt7B,KAAK6gF,2BACL7gF,KAAKygF,cAAe,GAEjBzgF,KAAKghF,sBAAsBd,EAAIC,EAAW1lE,EAAI2lE,KACjDpgF,KAAKsgF,kBAAmB,EACxBJ,EAAGxf,iBAAiB1gE,KAAKyvE,IAAK0Q,EAAW,GACzC1lE,EAAGimD,iBAAiB1gE,KAAKyvE,IAAK2Q,EAAW,GACrCpgF,KAAKyvE,IAAIv0C,aACXl7B,KAAK8gF,yBACL9gF,KAAKugF,YAAa,EAClBvgF,KAAKwgF,oBAAqB,MAKlCH,GAAkBv7E,UAAUq2B,gBAAkB,WAC5C,OAAOn7B,KAAKsgF,kBAEdD,GAAkBv7E,UAAU+qC,OAAS,WACnC,OAAO,GAETwwC,GAAkBv7E,UAAUw8E,wBAA0B,WACpD,OAAOthF,KAAKygF,cAEdJ,GAAkBv7E,UAAUyb,YAAc,WACxC,MAAO,CAAC0/D,KAEVI,GAAkBv7E,UAAU0b,SAAW,WACrC,OAAO6/D,IAETA,GAAkBY,mBAAqB,SAA6B70C,EAAIC,GACtE,OAA6B,IAAtB7pC,KAAKiP,IAAI26B,EAAKC,IAGvB,IAAIk1C,GAAmB,WACrBvhF,KAAKiI,MAAQ,KACbjI,KAAKq6B,aAAe,KACpBr6B,KAAKqH,KAAO,KACZ,IAAIY,EAAQqN,UAAU,GAClB+kB,EAAe/kB,UAAU,GACzBjO,EAAOiO,UAAU,GACrBtV,KAAKiI,MAAQ,IAAI8Z,GAAW9Z,GAC5BjI,KAAKq6B,aAAeA,EACpBr6B,KAAKqH,KAAOA,GAEdk6E,GAAiBz8E,UAAU08E,gBAAkB,WAC3C,OAAOxhF,KAAKq6B,cAEdknD,GAAiBz8E,UAAU6qB,cAAgB,WACzC,OAAO3vB,KAAKiI,OAEds5E,GAAiBz8E,UAAUgmD,MAAQ,SAAgBznD,GACjDA,EAAIynD,MAAM9qD,KAAKiI,OACf5E,EAAIynD,MAAM,YAAc9qD,KAAKq6B,cAC7Bh3B,EAAIm6B,QAAQ,WAAax9B,KAAKqH,OAEhCk6E,GAAiBz8E,UAAUge,UAAY,SAAoB+lB,GACzD,IAAIr+B,EAAQq+B,EACZ,OAAO7oC,KAAKG,QAAQqK,EAAM6vB,aAAc7vB,EAAMnD,OAEhDk6E,GAAiBz8E,UAAU41B,WAAa,SAAqByiC,GAC3D,OAA0B,IAAtBn9D,KAAKq6B,cAAoC,IAAdr6B,KAAKqH,MAChCrH,KAAKq6B,eAAiB8iC,GAG5BokB,GAAiBz8E,UAAUme,SAAW,WACpC,OAAOjjB,KAAKiI,MAAQ,YAAcjI,KAAKq6B,aAAe,WAAar6B,KAAKqH,MAE1Ek6E,GAAiBz8E,UAAUgyD,YAAc,WACvC,OAAO92D,KAAKqH,MAEdk6E,GAAiBz8E,UAAU3E,QAAU,SAAkBk6B,EAAchzB,GACnE,OAAIrH,KAAKq6B,aAAeA,GAAwB,EAC5Cr6B,KAAKq6B,aAAeA,EAAuB,EAC3Cr6B,KAAKqH,KAAOA,GAAgB,EAC5BrH,KAAKqH,KAAOA,EAAe,EACxB,GAETk6E,GAAiBz8E,UAAUyb,YAAc,WACvC,MAAO,CAACoB,KAEV4/D,GAAiBz8E,UAAU0b,SAAW,WACpC,OAAO+gE,IAGT,IAAIE,GAAuB,WACzBzhF,KAAKs9D,SAAW,IAAI7vB,GACpBztC,KAAKmoD,KAAO,KACZ,IAAIA,EAAO7yC,UAAU,GACrBtV,KAAKmoD,KAAOA,GAEds5B,GAAqB38E,UAAUgmD,MAAQ,SAAgBznD,GACrDA,EAAIm6B,QAAQ,kBACZ,IAAK,IAAIwV,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CACnCsN,EAAGtxC,OACTopD,MAAMznD,KAGbo+E,GAAqB38E,UAAU2gC,SAAW,WACxC,OAAOzlC,KAAKs9D,SAASr8D,SAASwkC,YAEhCg8C,GAAqB38E,UAAUu5D,cAAgB,SAAwBC,GAGrEt+D,KAAKw9D,eAGL,IAFA,IAAIxqB,EAAKhzC,KAAKylC,WACVg4B,EAASzqB,EAAGtxC,OACTsxC,EAAGtN,WAAW,CACnB,IAAIg4B,EAAK1qB,EAAGtxC,OACR68D,EAPSv+D,KAOQw+D,gBAAgBf,EAAQC,GAC7CY,EAASr+D,IAAIs+D,GACbd,EAASC,IAGb+jB,GAAqB38E,UAAU04D,aAAe,WAC5C,IAAIoB,EAAc5+D,KAAKmoD,KAAKzmB,IAAIjhC,OAAS,EACzCT,KAAKC,IAAID,KAAKmoD,KAAKzmB,IAAI,GAAI,EAAG,GAC9B1hC,KAAKC,IAAID,KAAKmoD,KAAKzmB,IAAIk9B,GAAcA,EAAa,IAEpD6iB,GAAqB38E,UAAU05D,gBAAkB,SAA0BP,EAAKC,GAC5E,IAEEryB,EAAOqyB,EAAI7jC,aAAe4jC,EAAI5jC,aAAe,EAC7C8jC,EAAiBn+D,KAAKmoD,KAAKzmB,IAAIw8B,EAAI7jC,cACnC+jC,EAAYF,EAAI72D,KAAO,IAAQ62D,EAAIj2D,MAAMya,SAASy7C,GACjDC,GACHvyB,IAEF,IAAInK,EAAM,IAAIj5B,MAAMojC,GAAM5f,KAAK,MAC3B4yC,EAAM,EACVn9B,EAAIm9B,KAAS,IAAI98C,GAAWk8C,EAAIh2D,OAChC,IAAK,IAAIpJ,EAAIo/D,EAAI5jC,aAAe,EAAGx7B,GAAKq/D,EAAI7jC,aAAcx7B,IACxD6iC,EAAIm9B,KAZS7+D,KAYOmoD,KAAKzmB,IAAI7iC,GAG/B,OADIu/D,IAAa18B,EAAIm9B,GAAOX,EAAIj2D,OACzB,IAAIy5E,GAAKhgD,EAAK,IAAI+jB,GAAMzlD,KAAKmoD,KAAKlB,UAE3Cw6B,GAAqB38E,UAAU7E,IAAM,SAAck8B,EAAO9B,EAAchzB,GACtE,IAAI23D,EAAQ,IAAIuiB,GAAiBplD,EAAO9B,EAAchzB,GAClDq2D,EAAK19D,KAAKs9D,SAAStxD,IAAIgzD,GAC3B,OAAW,OAAPtB,EACKA,GAET19D,KAAKs9D,SAAS9wB,IAAIwyB,EAAOA,GAClBA,IAETyiB,GAAqB38E,UAAU62B,eAAiB,SAAyBp0B,GACvE,IAAK,IAAIyrC,EAAKhzC,KAAKylC,WAAYuN,EAAGtN,WAAY,CAE5C,GADSsN,EAAGtxC,OACLuG,MAAMqS,OAAO/S,GAAO,OAAO,EAEpC,OAAO,GAETk6E,GAAqB38E,UAAUyb,YAAc,WAC3C,MAAO,IAETkhE,GAAqB38E,UAAU0b,SAAW,WACxC,OAAOihE,IAGT,IAAIE,GAAuB,aAE3BA,GAAqB78E,UAAUmhE,qBAAuB,SAA+BvkC,GACjF,IAEEr/B,EAAQ,EACR6jE,EAAiB,IAAI1+B,GACzB0+B,EAAejmE,IAAI,IAAImmB,GAAQ/jB,IAC/B,EAAG,CACD,IAAIuoC,EANS5qC,KAMKmmE,aAAazkC,EAAKr/B,GACpC6jE,EAAejmE,IAAI,IAAImmB,GAAQwkB,IAC/BvoC,EAAQuoC,QACDvoC,EAAQq/B,EAAIjhC,OAAS,GAE9B,OADiBkhF,GAAqBvb,WAAWF,IAGnDyb,GAAqB78E,UAAUqhE,aAAe,SAAuBzkC,EAAKr/B,GAGxE,IAFA,IAAIikE,EAAYva,GAASc,SAASnrB,EAAIr/B,GAAQq/B,EAAIr/B,EAAQ,IACtDuoC,EAAOvoC,EAAQ,EACZuoC,EAAOlJ,EAAIjhC,QAAQ,CAExB,GADWsrD,GAASc,SAASnrB,EAAIkJ,EAAO,GAAIlJ,EAAIkJ,MACnC07B,EAAa,MAC1B17B,IAEF,OAAOA,EAAO,GAEhB+2C,GAAqB78E,UAAUyb,YAAc,WAC3C,MAAO,IAETohE,GAAqB78E,UAAU0b,SAAW,WACxC,OAAOmhE,IAETA,GAAqBvb,WAAa,SAAqBljE,GAErD,IADA,IAAImzB,EAAQ,IAAI5tB,MAAMvF,EAAKpB,QAAQmqB,KAAK,MAC/BptB,EAAI,EAAGA,EAAIw3B,EAAM51B,OAAQ5B,IAChCw3B,EAAMx3B,GAAKqE,EAAK8I,IAAInN,GAAGwnB,WAEzB,OAAOgQ,GAGT,IAAIurD,GAAoB,WACtB5hF,KAAK0b,EAAI,KACT1b,KAAK0hC,IAAM,KACX1hC,KAAKqoD,WAAa,KAClBroD,KAAKq8B,KAAO,IAAIpK,GAChBjyB,KAAK6hF,KAAO,IAAI5vD,GAChB,IAAIvW,EAAIpG,UAAU,GAClBtV,KAAK0b,EAAIA,EACT1b,KAAK0hC,IAAMhmB,EAAEu0B,iBACb,IAAI6xC,EAAM,IAAIH,GACd3hF,KAAKqoD,WAAay5B,EAAI7b,qBAAqBjmE,KAAK0hC,MAElDkgD,GAAkB98E,UAAUmrC,eAAiB,WAC3C,OAAOjwC,KAAK0hC,KAEdkgD,GAAkB98E,UAAU8tB,QAAU,SAAkBmvD,GACtD,IAAIrhE,EAAK1gB,KAAK0hC,IAAI1hC,KAAKqoD,WAAW05B,IAAariF,EAC3CihB,EAAK3gB,KAAK0hC,IAAI1hC,KAAKqoD,WAAW05B,EAAa,IAAIriF,EACnD,OAAOghB,EAAKC,EAAKD,EAAKC,GAExBihE,GAAkB98E,UAAUguB,QAAU,SAAkBivD,GACtD,IAAIrhE,EAAK1gB,KAAK0hC,IAAI1hC,KAAKqoD,WAAW05B,IAAariF,EAC3CihB,EAAK3gB,KAAK0hC,IAAI1hC,KAAKqoD,WAAW05B,EAAa,IAAIriF,EACnD,OAAOghB,EAAKC,EAAKD,EAAKC,GAExBihE,GAAkB98E,UAAUk9E,0BAA4B,WACtD,GAAyB,IAArB1sE,UAAU7U,OAAc,CAC1B,IAAIwhF,EAAc3sE,UAAU,GACxB4sE,EAAM5sE,UAAU,GAChB6sE,EAAc7sE,UAAU,GACxB4xD,EAAK5xD,UAAU,GACnBtV,KAAKgiF,0BAA0BhiF,KAAKqoD,WAAW45B,GAAcjiF,KAAKqoD,WAAW45B,EAAc,GAAIC,EAAKA,EAAI75B,WAAW85B,GAAcD,EAAI75B,WAAW85B,EAAc,GAAIjb,QAC7J,GAAyB,IAArB5xD,UAAU7U,OAAc,CACjC,IAAImkE,EAAStvD,UAAU,GACnBuvD,EAAOvvD,UAAU,GACjB8sE,EAAQ9sE,UAAU,GAClB2uD,EAAS3uD,UAAU,GACnBmwD,EAAOnwD,UAAU,GACjBooD,EAAKpoD,UAAU,GACfowD,EAAM1lE,KAAK0hC,IAAIkjC,GACfe,EAAM3lE,KAAK0hC,IAAImjC,GACfe,EAAMwc,EAAM1gD,IAAIuiC,GAChB4B,EAAMuc,EAAM1gD,IAAI+jC,GACpB,GAAIZ,EAAOD,GAAW,GAAKa,EAAOxB,GAAW,EAE3C,OADAvG,EAAGgD,iBAAiB1gE,KAAK0b,EAAGkpD,EAAQwd,EAAM1mE,EAAGuoD,GACtC,KAIT,GAFAjkE,KAAKq8B,KAAKzV,KAAK8+C,EAAKC,GACpB3lE,KAAK6hF,KAAKj7D,KAAKg/C,EAAKC,IACf7lE,KAAKq8B,KAAKrJ,WAAWhzB,KAAK6hF,MAAS,OAAO,KAC/C,IAAI/b,EAAOtjE,KAAK4d,OAAOwkD,EAASC,GAAQ,GACpCkB,EAAOvjE,KAAK4d,OAAO6jD,EAASwB,GAAQ,GACpCb,EAASkB,IACP7B,EAAS8B,GAAQ/lE,KAAKgiF,0BAA0Bpd,EAAQkB,EAAMsc,EAAOne,EAAQ8B,EAAMrI,GACnFqI,EAAON,GAAQzlE,KAAKgiF,0BAA0Bpd,EAAQkB,EAAMsc,EAAOrc,EAAMN,EAAM/H,IAEjFoI,EAAOjB,IACLZ,EAAS8B,GAAQ/lE,KAAKgiF,0BAA0Blc,EAAMjB,EAAMud,EAAOne,EAAQ8B,EAAMrI,GACjFqI,EAAON,GAAQzlE,KAAKgiF,0BAA0Blc,EAAMjB,EAAMud,EAAOrc,EAAMN,EAAM/H,MAIvFkkB,GAAkB98E,UAAUu9E,gBAAkB,WAC5C,OAAOriF,KAAKqoD,YAEdu5B,GAAkB98E,UAAUw9E,kBAAoB,SAA4BJ,EAAKhb,GAG/E,IAFE,IAEOroE,EAAI,EAAGA,EAAImB,KAAKqoD,WAAW5nD,OAAS,EAAG5B,IAC9C,IAAK,IAAIoD,EAAI,EAAGA,EAAIigF,EAAI75B,WAAW5nD,OAAS,EAAGwB,IAHlCjC,KAIJgiF,0BAA0BnjF,EAAGqjF,EAAKjgF,EAAGilE,IAIlD0a,GAAkB98E,UAAUyb,YAAc,WACxC,MAAO,IAETqhE,GAAkB98E,UAAU0b,SAAW,WACrC,OAAOohE,IAGT,IAAIW,GAAQ,SAASA,IAGnBviF,KAAK8uD,OAASrmD,MAAM,GAAGwjB,OAAOqN,IAAI,WAAc,OAAO7wB,MAAM,KAC7D,IAAK,IAAI5J,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIoD,EAAI,EAAGA,EAAI,EAAGA,IAJZjC,KAKF8uD,OAAOjwD,GAAGoD,GAAKsgF,EAAMC,YAK9BC,GAAqB,CAAED,WAAY,CAAEj+E,cAAc,IACvDg+E,GAAMz9E,UAAUq+C,SAAW,SAAmB0C,EAAWb,GACvD,OAAOhlD,KAAK8uD,OAAOjJ,GAAWb,IAEhCu9B,GAAMz9E,UAAUg/C,SAAW,SAAmB+B,EAAWb,EAAU09B,GACjE1iF,KAAK8uD,OAAOjJ,GAAWb,GAAY09B,GAErCH,GAAMz9E,UAAU6tB,OAAS,WAGvB,GAAyB,IAArBrd,UAAU7U,OAAc,CAC1B,IAAK,IAAI5B,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIoD,EAAI,EAAGA,EAAI,EAAGA,IACrB,GALSjC,KAKE8uD,OAAOjwD,GAAGoD,KAAOsgF,GAAMC,WAAc,OAAO,EAG3D,OAAO,EACF,GAAyB,IAArBltE,UAAU7U,OAAc,CACjC,IAAIolD,EAAYvwC,UAAU,GAC1B,OAAOtV,KAAK8uD,OAAOjJ,GAAW,KAAO08B,GAAMC,WACtC,GAAyB,IAArBltE,UAAU7U,OAAc,CACjC,IAAIylD,EAAc5wC,UAAU,GACxB0vC,EAAW1vC,UAAU,GACzB,OAAOtV,KAAK8uD,OAAO5I,GAAalB,KAAcu9B,GAAMC,aAGxDD,GAAMz9E,UAAUogC,UAAY,WAG1B,IAFE,IAEOrmC,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAHamB,KAGD2yB,OAAO9zB,GAAI,CACrB,IAAI8jF,EAJO3iF,KAIW8uD,OAAOjwD,GAAG,GAJrBmB,KAKA8uD,OAAOjwD,GAAG,GAAK8jF,IAAYA,EAL3B3iF,KAK6C8uD,OAAOjwD,GAAG,IAC9D8jF,EAAW,IAAKA,EAAW,GAC/B,IAAK,IAAI1gF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAI2gF,EAAW,EARN5iF,KASE8uD,OAAOjwD,GAAGoD,GAAK0gF,IAAYC,EAAW,GATxC5iF,KAUF8uD,OAAOjwD,GAAGoD,GAAK2gF,KAK9BL,GAAMz9E,UAAU+9E,SAAW,SAAmBh9B,GAC5C,OAAO7lD,KAAK8uD,OAAOjJ,GAAWrG,GAAS9e,OAAS1gC,KAAK8uD,OAAOjJ,GAAWrG,GAAS5e,OAElF2hD,GAAMz9E,UAAUk7B,YAAc,SAAsB6lB,EAAWb,GAC7D,OAAIhlD,KAAK8uD,OAAOjJ,GAAWb,IAAa,EAAY3gC,GAASI,SACtDJ,GAASE,UAElBg+D,GAAMz9E,UAAUme,SAAW,WACzB,MAAO,MAAQjjB,KAAK8uD,OAAO,GAAG,GAAK,IAAM9uD,KAAK8uD,OAAO,GAAG,GAAK,OAAS9uD,KAAK8uD,OAAO,GAAG,GAAK,IAAM9uD,KAAK8uD,OAAO,GAAG,IAEjHyzB,GAAMz9E,UAAU7E,IAAM,WAGpB,GAAyB,IAArBqV,UAAU7U,OAEZ,IADA,IAAImlD,EAAMtwC,UAAU,GACXzW,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIoD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIujD,EAAMI,EAAI5lB,YAAYnhC,EAAGoD,GACzBujD,IAAQnhC,GAASI,UAAY+gC,IAAQnhC,GAASE,WAPzCvkB,KAQI2yB,OAAO9zB,EAAGoD,GARdjC,KASE8uD,OAAOjwD,GAAGoD,GAAKsgF,GAAMO,gBAAgBt9B,GATvCxlD,KAUS8uD,OAAOjwD,GAAGoD,IAAMsgF,GAAMO,gBAAgBt9B,SAIvD,GAAyB,IAArBlwC,UAAU7U,OAAc,CACjC,IAAIolD,EAAYvwC,UAAU,GACtB0vC,EAAW1vC,UAAU,GACVA,UAAU,KACR+O,GAASE,UAAYvkB,KAAK8uD,OAAOjJ,GAAWb,OAGjEu9B,GAAMz9E,UAAUyb,YAAc,WAC5B,MAAO,IAETgiE,GAAMz9E,UAAU0b,SAAW,WACzB,OAAO+hE,IAETA,GAAMO,gBAAkB,SAA0B3+B,GAChD,OAAIA,IAAa9/B,GAASI,SAAmB,EACzC0/B,IAAa9/B,GAASE,SAAmB,EACtCg+D,GAAMC,YAEfC,GAAmBD,WAAWx2E,IAAM,WAAc,OAAQ,GAE1DvH,OAAOid,iBAAkB6gE,GAAOE,IAEhC,IAAIf,GAAQ,SAAUh3B,GACpB,SAASg3B,IAUP,GATAh3B,EAAkB/pD,KAAKX,MACvBA,KAAK0hC,IAAM,KACX1hC,KAAKoiD,KAAO,KACZpiD,KAAKywD,OAAS,IAAIgxB,GAAqBzhF,MACvCA,KAAKg8C,MAAQ,KACbh8C,KAAK+iF,KAAO,KACZ/iF,KAAKgjF,aAAc,EACnBhjF,KAAK8uD,OAAS,IAAIyzB,GAClBviF,KAAKijF,YAAc,EACM,IAArB3tE,UAAU7U,OAAc,CAC1B,IAAIihC,EAAMpsB,UAAU,GACpBosE,EAAK/gF,KAAKX,KAAM0hC,EAAK,WAChB,GAAyB,IAArBpsB,UAAU7U,OAAc,CACjC,IAAI+lE,EAAQlxD,UAAU,GAClBoxC,EAAQpxC,UAAU,GACtBtV,KAAK0hC,IAAM8kC,EACXxmE,KAAKinD,OAASP,GAuLlB,OAnLKgE,IAAoBg3B,EAAKzgE,UAAYypC,GAC1Cg3B,EAAK58E,UAAYL,OAAOyc,OAAQwpC,GAAqBA,EAAkB5lD,WACvE48E,EAAK58E,UAAUqc,YAAcugE,EAC7BA,EAAK58E,UAAUq+C,SAAW,WACxB,OAAOnjD,KAAK8uD,QAEd4yB,EAAK58E,UAAUo+E,iBAAmB,WAChC,IAAIC,EAAS,IAAI16E,MAAM,GAAGwjB,KAAK,MAI/B,OAHAk3D,EAAO,GAAKnjF,KAAK0hC,IAAI,GACrByhD,EAAO,GAAKnjF,KAAK0hC,IAAI,GACV,IAAIggD,EAAKyB,EAAQ19B,GAAMgB,YAAYzmD,KAAKinD,UAGrDy6B,EAAK58E,UAAUyiD,WAAa,WAC1B,OAAOvnD,KAAKgjF,aAEdtB,EAAK58E,UAAUmrC,eAAiB,WAC9B,OAAOjwC,KAAK0hC,KAEdggD,EAAK58E,UAAUs+E,YAAc,SAAsB77B,GACjDvnD,KAAKgjF,YAAcz7B,GAErBm6B,EAAK58E,UAAUu+E,QAAU,SAAkBtiE,GACzC/gB,KAAKg8C,MAAQj7B,GAEf2gE,EAAK58E,UAAUwV,OAAS,SAAiByI,GAGvC,KAAMA,aAAa2+D,GAAS,OAAO,EACnC,IAAIhmE,EAAIqH,EACR,GAAI/iB,KAAK0hC,IAAIjhC,SAAWib,EAAEgmB,IAAIjhC,OAAU,OAAO,EAI/C,IAHA,IAAI6iF,GAAiB,EACjBC,GAAiB,EACjBC,EAAOxjF,KAAK0hC,IAAIjhC,OACX5B,EAAI,EAAGA,EAAImB,KAAK0hC,IAAIjhC,OAAQ5B,IAOnC,GAfWmB,KASC0hC,IAAI7iC,GAAG6jB,SAAShH,EAAEgmB,IAAI7iC,MAChCykF,GAAiB,GAVRtjF,KAYC0hC,IAAI7iC,GAAG6jB,SAAShH,EAAEgmB,MAAM8hD,MAClCD,GAAiB,IAEdD,IAAmBC,EAAkB,OAAO,EAEnD,OAAO,GAET7B,EAAK58E,UAAU6qB,cAAgB,WAC7B,GAAyB,IAArBra,UAAU7U,OACZ,OAAIT,KAAK0hC,IAAIjhC,OAAS,EAAYT,KAAK0hC,IAAI,GACpC,KACF,GAAyB,IAArBpsB,UAAU7U,OAAc,CACjC,IAAI5B,EAAIyW,UAAU,GAClB,OAAOtV,KAAK0hC,IAAI7iC,KAGpB6iF,EAAK58E,UAAUgmD,MAAQ,SAAgBznD,GAGrCA,EAAIynD,MAAM,QAAU9qD,KAAKg8C,MAAQ,MACjC34C,EAAIynD,MAAM,gBACV,IAAK,IAAIjsD,EAAI,EAAGA,EAAImB,KAAK0hC,IAAIjhC,OAAQ5B,IAC/BA,EAAI,GAAKwE,EAAIynD,MAAM,KACvBznD,EAAIynD,MANO9qD,KAMM0hC,IAAI7iC,GAAGa,EAAI,IANjBM,KAM8B0hC,IAAI7iC,GAAGK,GAElDmE,EAAIynD,MAAM,MAAQ9qD,KAAKinD,OAAS,IAAMjnD,KAAKijF,cAE7CvB,EAAK58E,UAAU2lD,UAAY,SAAoBD,GAC7Ck3B,EAAKn3B,SAASvqD,KAAKinD,OAAQuD,IAE7Bk3B,EAAK58E,UAAU2+E,YAAc,WAC3B,QAAKzjF,KAAKinD,OAAOhC,WACO,IAApBjlD,KAAK0hC,IAAIjhC,UACTT,KAAK0hC,IAAI,GAAGpnB,OAAOta,KAAK0hC,IAAI,MAGlCggD,EAAK58E,UAAU0sC,SAAW,WACxB,OAAOxxC,KAAK0hC,IAAI,GAAGpnB,OAAOta,KAAK0hC,IAAI1hC,KAAK0hC,IAAIjhC,OAAS,KAEvDihF,EAAK58E,UAAU4+E,uBAAyB,WACtC,OAAO1jF,KAAK0hC,IAAIjhC,OAAS,GAE3BihF,EAAK58E,UAAUqqD,cAAgB,WAC7B,OAAOnvD,KAAKijF,aAEdvB,EAAK58E,UAAUorC,aAAe,WAC5B,OAAOlwC,KAAK0hC,IAAIjhC,QAElBihF,EAAK58E,UAAU6qD,aAAe,SAAuBtsD,GAGnDA,EAAIynD,MAAM,QAAU9qD,KAAKg8C,MAAQ,MACjC,IAAK,IAAIn9C,EAAImB,KAAK0hC,IAAIjhC,OAAS,EAAG5B,GAAK,EAAGA,IACxCwE,EAAIynD,MAJO9qD,KAIM0hC,IAAI7iC,GAAK,KAE5BwE,EAAIm6B,QAAQ,KAEdkkD,EAAK58E,UAAU6+E,qBAAuB,WAEpC,OADkB,OAAd3jF,KAAK+iF,OAAiB/iF,KAAK+iF,KAAO,IAAInB,GAAkB5hF,OACrDA,KAAK+iF,MAEdrB,EAAK58E,UAAU+/B,YAAc,WAG3B,GAAkB,OAAd7kC,KAAKoiD,KAAe,CACtBpiD,KAAKoiD,KAAO,IAAInwB,GAChB,IAAK,IAAIpzB,EAAI,EAAGA,EAAImB,KAAK0hC,IAAIjhC,OAAQ5B,IAJ1BmB,KAKFoiD,KAAK9uB,gBALHtzB,KAK0B0hC,IAAI7iC,IAG3C,OAAOmB,KAAKoiD,MAEds/B,EAAK58E,UAAUi7D,gBAAkB,SAA0BM,EAAIhmC,EAAcwrB,EAAWvrB,GACtF,IAAI6B,EAAQ,IAAIpa,GAAWs+C,EAAG1qD,gBAAgB2kB,IAC1CkmC,EAAyBnmC,EACzBhzB,EAAOg5D,EAAGplC,gBAAgB4qB,EAAWvrB,GACrCmmC,EAAeD,EAAyB,EAC5C,GAAIC,EAAezgE,KAAK0hC,IAAIjhC,OAAQ,CAClC,IAAIoJ,EAAS7J,KAAK0hC,IAAI++B,GAClBtkC,EAAMzZ,SAAS7Y,KACjB22D,EAAyBC,EACzBp5D,EAAO,GAGXrH,KAAKywD,OAAOxwD,IAAIk8B,EAAOqkC,EAAwBn5D,IAEjDq6E,EAAK58E,UAAUme,SAAW,WACxB,IAEIuF,EAAM,IAAIzC,GACdyC,EAAIvC,OAAO,QAAUjmB,KAAKg8C,MAAQ,MAClCxzB,EAAIvC,OAAO,gBACX,IAAK,IAAIpnB,EAAI,EAAGA,EAAImB,KAAK0hC,IAAIjhC,OAAQ5B,IAC/BA,EAAI,GAAK2pB,EAAIvC,OAAO,KACxBuC,EAAIvC,OAPOjmB,KAOO0hC,IAAI7iC,GAAGa,EAAI,IAPlBM,KAO+B0hC,IAAI7iC,GAAGK,GAGnD,OADAspB,EAAIvC,OAAO,MAAQjmB,KAAKinD,OAAS,IAAMjnD,KAAKijF,aACrCz6D,EAAIvF,YAEby+D,EAAK58E,UAAU8+E,iBAAmB,SAA2BloE,GAG3D,GAAI1b,KAAK0hC,IAAIjhC,SAAWib,EAAEgmB,IAAIjhC,OAAU,OAAO,EAC/C,IAAK,IAAI5B,EAAI,EAAGA,EAAImB,KAAK0hC,IAAIjhC,OAAQ5B,IACnC,IAJWmB,KAIC0hC,IAAI7iC,GAAG6jB,SAAShH,EAAEgmB,IAAI7iC,IAChC,OAAO,EAGX,OAAO,GAET6iF,EAAK58E,UAAU++E,cAAgB,SAAwBp0B,GACrDzvD,KAAKijF,YAAcxzB,GAErBiyB,EAAK58E,UAAUg/E,wBAA0B,WACvC,OAAO9jF,KAAKywD,QAEdixB,EAAK58E,UAAU47D,iBAAmB,SAA2BL,EAAIhmC,EAAcwrB,GAG7E,IAFA,IAEShnD,EAAI,EAAGA,EAAIwhE,EAAGrlC,qBAAsBn8B,IAFhCmB,KAGJ+/D,gBAAgBM,EAAIhmC,EAAcwrB,EAAWhnD,IAGxD6iF,EAAK58E,UAAUyb,YAAc,WAC3B,MAAO,IAETmhE,EAAK58E,UAAU0b,SAAW,WACxB,OAAOkhE,GAETA,EAAKn3B,SAAW,WACd,GAAyB,IAArBj1C,UAAU7U,OAQL,OAAOiqD,EAAkB5lD,UAAUylD,SAAS/0B,MAAMx1B,KAAMsV,WAP/D,IAAIoxC,EAAQpxC,UAAU,GAClBk1C,EAAKl1C,UAAU,GACnBk1C,EAAGu5B,kBAAkBr9B,EAAM1mB,YAAY,EAAGwf,GAASE,IAAKgH,EAAM1mB,YAAY,EAAGwf,GAASE,IAAK,GACvFgH,EAAMzB,WACRuF,EAAGu5B,kBAAkBr9B,EAAM1mB,YAAY,EAAGwf,GAAS5e,MAAO8lB,EAAM1mB,YAAY,EAAGwf,GAAS5e,MAAO,GAC/F4pB,EAAGu5B,kBAAkBr9B,EAAM1mB,YAAY,EAAGwf,GAAS9e,OAAQgmB,EAAM1mB,YAAY,EAAGwf,GAAS9e,OAAQ,KAKhGghD,GACP53B,IAEEk6B,GAAgB,SAAwB7T,GAC1CnwE,KAAKikF,uBAAyB,KAC9BjkF,KAAKkkF,cAAgB,KACrBlkF,KAAK8xC,UAAY,KACjB9xC,KAAKmkF,OAAS,KACdnkF,KAAKy7E,UAAY,IAAImE,GACrB5/E,KAAKwvE,WAAaW,GAAa,MAEjC6T,GAAcl/E,UAAUs/E,yBAA2B,SAAmCnpC,GACpFj7C,KAAKikF,uBAAyBhpC,GAEhC+oC,GAAcl/E,UAAUu/E,iBAAmB,SAA2B3oE,GACpE,IAAI4oE,EAAetkF,KAAKy7E,UAAUuE,cAActkE,GAChD,GAAqB,OAAjB4oE,EAAuB,CACzB,IAAIC,EAAgBD,EAAa58B,WAC7B88B,EAAe9oE,EAAEgsC,WAChB48B,EAAaV,iBAAiBloE,KACjC8oE,EAAe,IAAI/+B,GAAM/pC,EAAEgsC,aACd7C,OAEf0/B,EAAc1gF,MAAM2gF,GACpB,IAAIC,EAAaT,GAAcv0B,WAAW+0B,GAEtCE,EADgBJ,EAAan1B,gBACFs1B,EAC/BH,EAAaT,cAAca,QAE3B1kF,KAAKy7E,UAAUx7E,IAAIyb,GACnBA,EAAEmoE,cAAcG,GAAcv0B,WAAW/zC,EAAEgsC,cAG/Cs8B,GAAcl/E,UAAU6/E,eAAiB,SAAyBC,EAAcC,GAE9E,IADA,IAAIC,EAAkB,IAAIt9C,GACjB3oC,EAAI+lF,EAAan/C,WAAY5mC,EAAE6mC,WAAY,CAClD,IAAIq/C,EAAWlmF,EAAE6C,OACbC,EAAIojF,EAASxiC,yBAEbQ,EADU,IAAImyB,GAAqB4P,GACZ3hC,SAASxhD,GACpCojF,EAASjiC,aAAaC,GACtBgiC,EAAS7hC,kBACT4hC,EAAgB7kF,IAAI8kF,GACpBF,EAAY5kF,IAAI8kF,EAAS9gC,mBAAoB8gC,EAAS/gC,cAG1DggC,GAAcl/E,UAAUkgF,gBAAkB,SAA0BrhC,GAElE,IADA,IAAIihC,EAAe,IAAIp9C,GACd3oC,EAAI8kD,EAAMK,WAAWve,WAAY5mC,EAAE6mC,WAAY,CACtD,IAAInmC,EAAOV,EAAE6C,OACb,IAAKnC,EAAKmjD,YAAa,CACrB,IAAIqiC,EAAW,IAAIhjC,GACnBgjC,EAAS7jE,OAAO3hB,GAChBqlF,EAAa3kF,IAAI8kF,IAIrB,OADAxvB,GAAYxzD,KAAK6iF,EAAcrvB,GAAYC,gBACpCovB,GAETZ,GAAcl/E,UAAUmgF,0BAA4B,WAElD,OADgBjlF,KAAK8xC,UAAU9Z,iBAGjCgsD,GAAcl/E,UAAUogF,SAAW,SAAmB7pD,GACpD,GAA2B,OAAvBr7B,KAAKkkF,cAA0B,OAAOlkF,KAAKkkF,cAC/C,IAAIiB,EAAQ,IAAIne,GACZ3G,EAAK,IAAIrkC,GAGb,OAFAqkC,EAAGjlC,kBAAkBC,GACrB8pD,EAAMpe,sBAAsB,IAAIsZ,GAAkBhgB,IAC3C8kB,GAETnB,GAAcl/E,UAAUsgF,OAAS,SAAiBlhD,EAAG5gB,GACnD,IAAI+X,EAAiBr7B,KAAKikF,uBACH,OAAnB5oD,IAA2BA,EAAiB6I,EAAEiB,qBAClDnlC,KAAK8xC,UAAY5N,EAAEL,aACnB,IAAIy1C,EAAe,IAAI3F,GAAmBt4C,EAAgBr7B,KAAKwvE,YAE3D6V,EADkB,IAAIpM,GAAsB/0C,EAAG5gB,EAAUg2D,GACtBe,YACvC,GAAIgL,EAAiBvjF,QAAU,EAC7B,OAAO9B,KAAKilF,4BAEdjlF,KAAKslF,kBAAkBD,EAAkBhqD,GACzCr7B,KAAKmkF,OAAS,IAAI7zB,GAAY,IAAIyuB,IAClC/+E,KAAKmkF,OAAOxyB,SAAS3xD,KAAKy7E,UAAUt6B,YACpC,IAAIyjC,EAAe5kF,KAAKglF,gBAAgBhlF,KAAKmkF,QACzCU,EAAc,IAAI7yB,GAAehyD,KAAK8xC,WAC1C9xC,KAAK2kF,eAAeC,EAAcC,GAClC,IAAItyB,EAAiBsyB,EAAY7xB,cACjC,OAAIT,EAAezwD,QAAU,EACpB9B,KAAKilF,4BAEGjlF,KAAK8xC,UAAUwK,cAAciW,IAGhDyxB,GAAcl/E,UAAUwgF,kBAAoB,SAA4BD,EAAkBhqD,GACtF,IAEE8pD,EAAQnlF,KAAKklF,SAAS7pD,GAC1B8pD,EAAMxe,aAAa0e,GAEnB,IADA,IACSxmF,EADasmF,EAAMxkB,qBACCl7B,WAAY5mC,EAAE6mC,WAAY,CACrD,IAAIiiC,EAAS9oE,EAAE6C,OACXggC,EAAMimC,EAAO13B,iBACjB,GAAmB,IAAfvO,EAAIjhC,SAAgBihC,EAAI,GAAGhf,SAASgf,EAAI,IAA5C,CACA,IAAI6jD,EAAW5d,EAAO5I,UAClB5W,EAAO,IAAIu5B,GAAK/Z,EAAO13B,iBAAkB,IAAIwV,GAAM8/B,IAV1CvlF,KAWNqkF,iBAAiBl8B,MAG5B67B,GAAcl/E,UAAU0gF,SAAW,SAAmBL,GACpDnlF,KAAKkkF,cAAgBiB,GAEvBnB,GAAcl/E,UAAUyb,YAAc,WACpC,MAAO,IAETyjE,GAAcl/E,UAAU0b,SAAW,WACjC,OAAOwjE,IAETA,GAAcv0B,WAAa,SAAqB/I,GAC9C,IAAI++B,EAAO/+B,EAAM1mB,YAAY,EAAGwf,GAAS5e,MACrC8kD,EAAOh/B,EAAM1mB,YAAY,EAAGwf,GAAS9e,OACzC,OAAI+kD,IAASphE,GAASE,UAAYmhE,IAASrhE,GAASI,SAAmB,EAAcghE,IAASphE,GAASI,UAAYihE,IAASrhE,GAASE,UAAoB,EAClJ,GAETy/D,GAAc2B,kBAAoB,SAA4B3yC,GAG5D,IAFA,IAAIyC,EAAO,IAAI1gB,GACXgD,EAAQ,IAAIyP,GACTwL,EAAGtN,WAAW,CACnB,IAAIkgD,EAAK5yC,EAAGtxC,OACRm2B,EAAO4d,EAAK9d,iBAAiBiuD,EAAG31C,kBACpClY,EAAM93B,IAAI43B,GAEZ,OAAO4d,EAAK6G,cAAcvkB,IAG5B,IAAI8tD,GAAc,WAMhB,GALA7lF,KAAK8lF,OAAS,KACd9lF,KAAK+lF,aAAe,KACpB/lF,KAAKgmF,SAAW,KAChBhmF,KAAKimF,SAAW,KAChBjmF,KAAKkmF,WAAY,EACQ,IAArB5wE,UAAU7U,OAAc,CAC1B,IAAI0kF,EAAQ7vE,UAAU,GAClB6wE,EAAc7wE,UAAU,GAC5BtV,KAAK8lF,OAASX,EACdnlF,KAAK+lF,aAAeI,EACpBnmF,KAAKgmF,SAAW,EAChBhmF,KAAKimF,SAAW,EAChBjmF,KAAKkmF,WAAalmF,KAAKomF,0BAClB,GAAyB,IAArB9wE,UAAU7U,OAAc,CACjC,IAAI4lF,EAAU/wE,UAAU,GACpBgxE,EAAgBhxE,UAAU,GAC1BixE,EAAUjxE,UAAU,GACpBkxE,EAAUlxE,UAAU,GACxBtV,KAAK8lF,OAASO,EACdrmF,KAAK+lF,aAAeO,EACpBtmF,KAAKgmF,SAAWO,EAChBvmF,KAAKimF,SAAWO,EAChBxmF,KAAKkmF,WAAalmF,KAAKomF,uBAG3BP,GAAY/gF,UAAU2hF,QAAU,WAG9B,GAAI5hE,GAAavP,UAAU,GAAI0xB,IAE7B,IADA,IACSnoC,EADQyW,UAAU,GACHmwB,WAAY5mC,EAAE6mC,WAAY,CAChD,IAAIkgD,EAAK/mF,EAAE6C,OALA1B,KAMJymF,QAAQb,EAAG31C,uBAEf,GAAI36B,UAAU,aAAc7M,MAAO,CAQxC,IAPA,IAAIi5B,EAAMpsB,UAAU,GAOXirB,EAAM,EAAGA,EAAMmB,EAAIjhC,OAAQ8/B,IAClCmB,EAAInB,GAAK7gC,EAAIgiC,EAAInB,GAAK7gC,EAjBXM,KAiBsB+lF,aAjBtB/lF,KAiB4CgmF,SACvDtkD,EAAInB,GAAKrhC,EAAIwiC,EAAInB,GAAKrhC,EAlBXc,KAkBsB+lF,aAlBtB/lF,KAkB4CimF,SAEtC,IAAfvkD,EAAIjhC,QAAgBihC,EAAI,GAAGhf,SAASgf,EAAI,KAC1CpR,GAAOjtB,IAAIm6B,QAAQkE,KAIzBmkD,GAAY/gF,UAAUojB,MAAQ,WAG5B,GAAIrD,GAAavP,UAAU,GAAI0xB,IAAa,CAG1C,IAFA,IAAI45B,EAAatrD,UAAU,GACvBoxE,EAAsB,IAAIl/C,GACrB3oC,EAAI+hE,EAAWn7B,WAAY5mC,EAAE6mC,WAAY,CAChD,IAAIkgD,EAAK/mF,EAAE6C,OACXglF,EAAoBzmF,IAAI,IAAI6+D,GAPjB9+D,KAO2CkoB,MAAM09D,EAAG31C,kBAAmB21C,EAAG7mB,YAEvF,OAAO2nB,EACF,GAAIpxE,UAAU,aAAc7M,MAAO,CAGxC,IAFA,IAAIi5B,EAAMpsB,UAAU,GAChBqxE,EAAW,IAAIl+E,MAAMi5B,EAAIjhC,QAAQwrB,KAAK,MACjCsU,EAAM,EAAGA,EAAMmB,EAAIjhC,OAAQ8/B,IAClComD,EAASpmD,GAAO,IAAIxe,GAAWvf,KAAKuF,OAAO25B,EAAInB,GAAK7gC,EAdzCM,KAcoDgmF,UAdpDhmF,KAcuE+lF,cAAevjF,KAAKuF,OAAO25B,EAAInB,GAAKrhC,EAd3Gc,KAcsHimF,UAdtHjmF,KAcyI+lF,cAAerkD,EAAInB,GAAK5nB,GAG9K,OADoB6wB,GAAiBmB,qBAAqBg8C,KAI9Dd,GAAY/gF,UAAUshF,mBAAqB,WACzC,OAA6B,IAAtBpmF,KAAK+lF,cAEdF,GAAY/gF,UAAU67D,mBAAqB,WACzC,IAAIimB,EAAU5mF,KAAK8lF,OAAOnlB,qBAE1B,OADI3gE,KAAKkmF,WAAalmF,KAAKymF,QAAQG,GAC5BA,GAETf,GAAY/gF,UAAU6hE,aAAe,SAAuBiB,GAC1D,IAAIif,EAAgBjf,EAChB5nE,KAAKkmF,YAAaW,EAAgB7mF,KAAKkoB,MAAM0/C,IACjD5nE,KAAK8lF,OAAOnf,aAAakgB,IAE3BhB,GAAY/gF,UAAUyb,YAAc,WAClC,MAAO,CAACmmD,KAEVmf,GAAY/gF,UAAU0b,SAAW,WAC/B,OAAOqlE,IAGT,IAAIiB,GAAkB,WACpB9mF,KAAKyvE,IAAM,IAAIzzC,GACfh8B,KAAK+mF,YAAc,KACnB,IAAInmB,EAAatrD,UAAU,GAC3BtV,KAAK+mF,YAAcnmB,GAGjBomB,GAAqB,CAAEvxC,KAAM,CAAElxC,cAAc,IACjDuiF,GAAgBhiF,UAAUmiF,8BAAgC,WAGxD,GAAyB,IAArB3xE,UAAU7U,OACZ,IAAK,IAAI5B,EAAImB,KAAK+mF,YAAYthD,WAAY5mC,EAAE6mC,WAAY,CACtD,IACIhE,EADK7iC,EAAE6C,OACEuuC,iBALFjwC,KAMJinF,8BAA8BvlD,EAAI,GAN9B1hC,KAMyC+mF,aANzC/mF,KAOJinF,8BAA8BvlD,EAAIA,EAAIjhC,OAAS,GAP3CT,KAOsD+mF,kBAE9D,GAAyB,IAArBzxE,UAAU7U,OAGnB,IAFA,IAAIspC,EAASz0B,UAAU,GAEdirB,EADQjrB,UAAU,GACDmwB,WAAYlF,EAAImF,WAGxC,IAFA,IACI8gC,EADOjmC,EAAI7+B,OACEuuC,iBACRhuC,EAAI,EAAGA,EAAIukE,EAAM/lE,OAAS,EAAGwB,IACpC,GAAIukE,EAAMvkE,GAAGqY,OAAOyvB,GAAW,MAAM,IAAIrR,GAAiB,iDAAmDz2B,EAAI,QAAU8nC,IAKnI+8C,GAAgBhiF,UAAUoiF,2BAA6B,WAGrD,GAAyB,IAArB5xE,UAAU7U,OACZ,IAAK,IAAI5B,EAAImB,KAAK+mF,YAAYthD,WAAY5mC,EAAE6mC,WAE1C,IADA,IAAIyhD,EAAMtoF,EAAE6C,OACHO,EAAIjC,KAAK+mF,YAAYthD,WAAYxjC,EAAEyjC,WAAY,CACtD,IAAIyiC,EAAMlmE,EAAEP,OANH1B,KAOFknF,2BAA2BC,EAAKhf,QAGtC,GAAyB,IAArB7yD,UAAU7U,OAKnB,IAJA,IAAI2mF,EAAQ9xE,UAAU,GAClB+xE,EAAQ/xE,UAAU,GAClBgyE,EAAOF,EAAMn3C,iBACb5E,EAAOg8C,EAAMp3C,iBACR07B,EAAK,EAAGA,EAAK2b,EAAK7mF,OAAS,EAAGkrE,IACrC,IAAK,IAAIv/B,EAAK,EAAGA,EAAKf,EAAK5qC,OAAS,EAAG2rC,IAhB5BpsC,KAiBFknF,2BAA2BE,EAAOzb,EAAI0b,EAAOj7C,QAGnD,GAAyB,IAArB92B,UAAU7U,OAAc,CACjC,IAAIy/E,EAAK5qE,UAAU,GACf6qE,EAAY7qE,UAAU,GACtBmF,EAAKnF,UAAU,GACf8qE,EAAY9qE,UAAU,GAC1B,GAAI4qE,IAAOzlE,GAAM0lE,IAAcC,EAAa,OAAO,KACnD,IAAI1a,EAAMwa,EAAGjwC,iBAAiBkwC,GAC1Bxa,EAAMua,EAAGjwC,iBAAiBkwC,EAAY,GACtCva,EAAMnrD,EAAGw1B,iBAAiBmwC,GAC1Bva,EAAMprD,EAAGw1B,iBAAiBmwC,EAAY,GAE1C,GADApgF,KAAKyvE,IAAI70C,oBAAoB8qC,EAAKC,EAAKC,EAAKC,GACxC7lE,KAAKyvE,IAAIt0C,oBACPn7B,KAAKyvE,IAAIv0C,YAAcl7B,KAAKshF,wBAAwBthF,KAAKyvE,IAAK/J,EAAKC,IAAQ3lE,KAAKshF,wBAAwBthF,KAAKyvE,IAAK7J,EAAKC,IACzH,MAAM,IAAIntC,GAAiB,mCAAqCgtC,EAAM,IAAMC,EAAM,QAAUC,EAAM,IAAMC,KAKhHihB,GAAgBhiF,UAAUyiF,WAAa,WACrCvnF,KAAKinF,gCACLjnF,KAAKknF,6BACLlnF,KAAKwnF,kBAEPV,GAAgBhiF,UAAU0iF,eAAiB,WAGzC,GAAyB,IAArBlyE,UAAU7U,OACZ,IAAK,IAAI5B,EAAImB,KAAK+mF,YAAYthD,WAAY5mC,EAAE6mC,WAAY,CACtD,IAAIkgD,EAAK/mF,EAAE6C,OAJA1B,KAKJwnF,eAAe5B,QAEnB,GAAyB,IAArBtwE,UAAU7U,OAGnB,IAFA,IACIihC,EADOpsB,UAAU,GACN26B,iBACN1P,EAAM,EAAGA,EAAMmB,EAAIjhC,OAAS,EAAG8/B,IAV3BvgC,KAWJynF,cAAc/lD,EAAInB,GAAMmB,EAAInB,EAAM,GAAImB,EAAInB,EAAM,KAI7DumD,GAAgBhiF,UAAUw8E,wBAA0B,SAAkCjhB,EAAIlmD,EAAItX,GAC5F,IAAK,IAAIhE,EAAI,EAAGA,EAAIwhE,EAAGrlC,qBAAsBn8B,IAAK,CAChD,IAAIs9B,EAAQkkC,EAAG1qD,gBAAgB9W,GAC/B,IAAMs9B,EAAM7hB,OAAOH,KAAOgiB,EAAM7hB,OAAOzX,GAAQ,OAAO,EAExD,OAAO,GAETikF,GAAgBhiF,UAAU2iF,cAAgB,SAAwBttE,EAAItX,EAAIC,GACxE,GAAIqX,EAAGG,OAAOxX,GAAO,MAAM,IAAI41B,GAAiB,+BAAiCouD,GAAgBrxC,KAAK9d,iBAAiB,CAACxd,EAAItX,EAAIC,MAElIgkF,GAAgBhiF,UAAUyb,YAAc,WACtC,MAAO,IAETumE,GAAgBhiF,UAAU0b,SAAW,WACnC,OAAOsmE,IAETE,GAAmBvxC,KAAKzpC,IAAM,WAAc,OAAO,IAAI+oB,IAEvDtwB,OAAOid,iBAAkBolE,GAAiBE,IAE1C,IAAIU,GAAW,WACb1nF,KAAKyvE,IAAM,KACXzvE,KAAK6T,IAAM,KACX7T,KAAK2nF,YAAc,KACnB3nF,KAAK4nF,UAAY,KACjB5nF,KAAK6nF,UAAY,KACjB7nF,KAAK8nF,UAAY,KACjB9nF,KAAK+lF,aAAe,KACpB/lF,KAAKkyB,MAAQ,KACblyB,KAAKmyB,MAAQ,KACbnyB,KAAKoyB,MAAQ,KACbpyB,KAAKqyB,MAAQ,KACbryB,KAAK+nF,QAAU,IAAIt/E,MAAM,GAAGwjB,KAAK,MACjCjsB,KAAKgoF,SAAW,KAChB,IAAIzgF,EAAK+N,UAAU,GACf6wE,EAAc7wE,UAAU,GACxB+qD,EAAK/qD,UAAU,GAKnB,GAJAtV,KAAK2nF,YAAcpgF,EACnBvH,KAAK6T,IAAMtM,EACXvH,KAAK+lF,aAAeI,EACpBnmF,KAAKyvE,IAAMpP,EACP8lB,GAAe,EAAK,MAAM,IAAItlE,GAAyB,iCACvC,IAAhBslE,IACFnmF,KAAK6T,IAAM,IAAIkO,GAAW/hB,KAAKkoB,MAAM3gB,EAAG7H,GAAIM,KAAKkoB,MAAM3gB,EAAGrI,IAC1Dc,KAAK6nF,UAAY,IAAI9lE,GACrB/hB,KAAK8nF,UAAY,IAAI/lE,IAEvB/hB,KAAKioF,YAAYjoF,KAAK6T,MAGpBq0E,GAAqB,CAAEC,0BAA2B,CAAE5jF,cAAc,IACtEmjF,GAAS5iF,UAAUsjF,iBAAmB,SAA2BjuE,EAAItX,GACnE,IAAIwlF,EAAU7lF,KAAKwZ,IAAI7B,EAAGza,EAAGmD,EAAGnD,GAC5B4oF,EAAU9lF,KAAK0Z,IAAI/B,EAAGza,EAAGmD,EAAGnD,GAC5B6oF,EAAU/lF,KAAKwZ,IAAI7B,EAAGjb,EAAG2D,EAAG3D,GAC5BspF,EAAUhmF,KAAK0Z,IAAI/B,EAAGjb,EAAG2D,EAAG3D,GAC5BupF,EAAoBzoF,KAAKmyB,MAAQk2D,GAAWroF,KAAKkyB,MAAQo2D,GAAWtoF,KAAKqyB,MAAQk2D,GAAWvoF,KAAKoyB,MAAQo2D,EAC7G,GAAIC,EAAqB,OAAO,EAChC,IAAIz1D,EAAahzB,KAAK0oF,0BAA0BvuE,EAAItX,GAEpD,OADAg2B,GAAOE,SAAS0vD,GAAqBz1D,GAAa,2BAC3CA,GAET00D,GAAS5iF,UAAUmjF,YAAc,SAAsB1gF,GAErDvH,KAAKkyB,MAAQ3qB,EAAG7H,EADA,GAEhBM,KAAKmyB,MAAQ5qB,EAAG7H,EAFA,GAGhBM,KAAKoyB,MAAQ7qB,EAAGrI,EAHA,GAIhBc,KAAKqyB,MAAQ9qB,EAAGrI,EAJA,GAKhBc,KAAK+nF,QAAQ,GAAK,IAAIhmE,GAAW/hB,KAAKmyB,MAAOnyB,KAAKqyB,OAClDryB,KAAK+nF,QAAQ,GAAK,IAAIhmE,GAAW/hB,KAAKkyB,MAAOlyB,KAAKqyB,OAClDryB,KAAK+nF,QAAQ,GAAK,IAAIhmE,GAAW/hB,KAAKkyB,MAAOlyB,KAAKoyB,OAClDpyB,KAAK+nF,QAAQ,GAAK,IAAIhmE,GAAW/hB,KAAKmyB,MAAOnyB,KAAKoyB,QAEpDs1D,GAAS5iF,UAAUkuB,WAAa,SAAqB7Y,EAAItX,GACvD,OAA0B,IAAtB7C,KAAK+lF,aAA+B/lF,KAAKooF,iBAAiBjuE,EAAItX,IAClE7C,KAAK2oF,WAAWxuE,EAAIna,KAAK6nF,WACzB7nF,KAAK2oF,WAAW9lF,EAAI7C,KAAK8nF,WAClB9nF,KAAKooF,iBAAiBpoF,KAAK6nF,UAAW7nF,KAAK8nF,aAEpDJ,GAAS5iF,UAAUojB,MAAQ,SAAgBjI,GACzC,OAAOzd,KAAKuF,MAAMkY,EAAMjgB,KAAK+lF,eAE/B2B,GAAS5iF,UAAU6qB,cAAgB,WACjC,OAAO3vB,KAAK2nF,aAEdD,GAAS5iF,UAAU6jF,WAAa,SAAqBhnF,EAAGinF,GACtDA,EAAQlpF,EAAIM,KAAKkoB,MAAMvmB,EAAEjC,GACzBkpF,EAAQ1pF,EAAIc,KAAKkoB,MAAMvmB,EAAEzC,IAE3BwoF,GAAS5iF,UAAU+jF,gBAAkB,WACnC,GAAsB,OAAlB7oF,KAAKgoF,SAAmB,CAC1B,IAAIc,EAAgBpB,GAASS,0BAA4BnoF,KAAK+lF,aAC9D/lF,KAAKgoF,SAAW,IAAI/1D,GAASjyB,KAAK2nF,YAAYjoF,EAAIopF,EAAe9oF,KAAK2nF,YAAYjoF,EAAIopF,EAAe9oF,KAAK2nF,YAAYzoF,EAAI4pF,EAAe9oF,KAAK2nF,YAAYzoF,EAAI4pF,GAEhK,OAAO9oF,KAAKgoF,UAEdN,GAAS5iF,UAAUikF,uBAAyB,SAAiC5uE,EAAItX,GAE/E,OADA7C,KAAKyvE,IAAI70C,oBAAoBzgB,EAAItX,EAAI7C,KAAK+nF,QAAQ,GAAI/nF,KAAK+nF,QAAQ,MAC/D/nF,KAAKyvE,IAAIt0C,oBACbn7B,KAAKyvE,IAAI70C,oBAAoBzgB,EAAItX,EAAI7C,KAAK+nF,QAAQ,GAAI/nF,KAAK+nF,QAAQ,MAC/D/nF,KAAKyvE,IAAIt0C,oBACbn7B,KAAKyvE,IAAI70C,oBAAoBzgB,EAAItX,EAAI7C,KAAK+nF,QAAQ,GAAI/nF,KAAK+nF,QAAQ,MAC/D/nF,KAAKyvE,IAAIt0C,oBACbn7B,KAAKyvE,IAAI70C,oBAAoBzgB,EAAItX,EAAI7C,KAAK+nF,QAAQ,GAAI/nF,KAAK+nF,QAAQ,MAC/D/nF,KAAKyvE,IAAIt0C,sBAGfusD,GAAS5iF,UAAU4jF,0BAA4B,SAAoCvuE,EAAItX,GACrF,IAAImmF,GAAiB,EACjBC,GAAmB,EAEvB,OADAjpF,KAAKyvE,IAAI70C,oBAAoBzgB,EAAItX,EAAI7C,KAAK+nF,QAAQ,GAAI/nF,KAAK+nF,QAAQ,MAC/D/nF,KAAKyvE,IAAIv0C,aACbl7B,KAAKyvE,IAAI70C,oBAAoBzgB,EAAItX,EAAI7C,KAAK+nF,QAAQ,GAAI/nF,KAAK+nF,QAAQ,MAC/D/nF,KAAKyvE,IAAIv0C,aACTl7B,KAAKyvE,IAAIt0C,oBAAqB6tD,GAAiB,GACnDhpF,KAAKyvE,IAAI70C,oBAAoBzgB,EAAItX,EAAI7C,KAAK+nF,QAAQ,GAAI/nF,KAAK+nF,QAAQ,MAC/D/nF,KAAKyvE,IAAIv0C,aACTl7B,KAAKyvE,IAAIt0C,oBAAqB8tD,GAAmB,GACrDjpF,KAAKyvE,IAAI70C,oBAAoBzgB,EAAItX,EAAI7C,KAAK+nF,QAAQ,GAAI/nF,KAAK+nF,QAAQ,MAC/D/nF,KAAKyvE,IAAIv0C,gBACT8tD,IAAkBC,OAClB9uE,EAAGG,OAAOta,KAAK6T,QACfhR,EAAGyX,OAAOta,KAAK6T,WAGrB6zE,GAAS5iF,UAAUokF,eAAiB,SAAyBvhB,EAAQwhB,GACnE,IAAIhvE,EAAKwtD,EAAOh4C,cAAcw5D,GAC1BtmF,EAAK8kE,EAAOh4C,cAAcw5D,EAAW,GACzC,QAAInpF,KAAKgzB,WAAW7Y,EAAItX,KACtB8kE,EAAO5H,gBAAgB//D,KAAK2vB,gBAAiBw5D,IACtC,IAIXzB,GAAS5iF,UAAUyb,YAAc,WAC/B,MAAO,IAETmnE,GAAS5iF,UAAU0b,SAAW,WAC5B,OAAOknE,IAETQ,GAAmBC,0BAA0Bn8E,IAAM,WAAc,MAAO,KAExEvH,OAAOid,iBAAkBgmE,GAAUQ,IAEnC,IAAIkB,GAA4B,WAC9BppF,KAAK2jE,SAAW,IAAI1xC,GACpBjyB,KAAKqpF,gBAAkB,IAAIroB,IAE7BooB,GAA0BtkF,UAAUigE,OAAS,WAC3C,GAAyB,IAArBzvD,UAAU7U,aAEP,GAAyB,IAArB6U,UAAU7U,OAAc,CACjC,IAAIwkE,EAAK3vD,UAAU,GACf+yC,EAAa/yC,UAAU,GAC3B2vD,EAAGb,eAAe/b,EAAYroD,KAAKqpF,iBACnCrpF,KAAK+kE,OAAO/kE,KAAKqpF,mBAGrBD,GAA0BtkF,UAAUyb,YAAc,WAChD,MAAO,IAET6oE,GAA0BtkF,UAAU0b,SAAW,WAC7C,OAAO4oE,IAGT,IAAIE,GAAsB,WACxBtpF,KAAKonE,OAAS,KACd,IAAIhmE,EAAQkU,UAAU,GACtBtV,KAAKonE,OAAShmE,GAGZmoF,GAAqB,CAAEC,mBAAoB,CAAEjlF,cAAc,IAC/D+kF,GAAoBxkF,UAAU2kF,KAAO,WACnC,GAAyB,IAArBn0E,UAAU7U,OAAc,CAC1B,IAAIipF,EAAWp0E,UAAU,GACzB,OAAOtV,KAAKypF,KAAKC,EAAU,MAAO,GAC7B,GAAyB,IAArBp0E,UAAU7U,OAAc,CACjC,IAAIkpF,EAAar0E,UAAU,GACvBs0E,EAAat0E,UAAU,GACvBu0E,EAAsBv0E,UAAU,GAChCw0E,EAAWH,EAAWd,kBACtBkB,EAAqB,IAAIP,GAAmBG,EAAYC,EAAYC,GAUxE,OATA7pF,KAAKonE,OAAOxS,MAAMk1B,EAAU,CAC1BvpE,YAAa,WACX,MAAO,CAACi0C,KAEVC,UAAW,SAAU72C,GACHA,EACNmnD,OAAO+kB,EAAUC,MAGxBA,EAAmBC,gBAG9BV,GAAoBxkF,UAAUyb,YAAc,WAC1C,MAAO,IAET+oE,GAAoBxkF,UAAU0b,SAAW,WACvC,OAAO8oE,IAETC,GAAmBC,mBAAmBx9E,IAAM,WAAc,OAAOw9E,IAEjE/kF,OAAOid,iBAAkB4nE,GAAqBC,IAE9C,IAAIC,GAAsB,SAAUS,GAClC,SAAST,IACPS,EAA6BtpF,KAAKX,MAClCA,KAAKkqF,UAAY,KACjBlqF,KAAKmqF,YAAc,KACnBnqF,KAAKoqF,qBAAuB,KAC5BpqF,KAAKqqF,cAAe,EACpB,IAAIX,EAAWp0E,UAAU,GACrBs0E,EAAat0E,UAAU,GACvBu0E,EAAsBv0E,UAAU,GACpCtV,KAAKkqF,UAAYR,EACjB1pF,KAAKmqF,YAAcP,EACnB5pF,KAAKoqF,qBAAuBP,EA2B9B,OAxBKI,IAA+BT,EAAmBvoE,UAAYgpE,GACnET,EAAmB1kF,UAAYL,OAAOyc,OAAQ+oE,GAAgCA,EAA6BnlF,WAC3G0kF,EAAmB1kF,UAAUqc,YAAcqoE,EAC3CA,EAAmB1kF,UAAUklF,YAAc,WACzC,OAAOhqF,KAAKqqF,cAEdb,EAAmB1kF,UAAUigE,OAAS,WACpC,GAAyB,IAArBzvD,UAAU7U,OAQL,OAAOwpF,EAA6BnlF,UAAUigE,OAAOvvC,MAAMx1B,KAAMsV,WAPxE,IAAI2vD,EAAK3vD,UAAU,GACf+yC,EAAa/yC,UAAU,GACvBswE,EAAK3gB,EAAGM,aACZ,GAAyB,OAArBvlE,KAAKmqF,aACHvE,IAAO5lF,KAAKmqF,aAAe9hC,IAAeroD,KAAKoqF,qBAAwB,OAAO,KAEpFpqF,KAAKqqF,aAAerqF,KAAKkqF,UAAUhB,eAAetD,EAAIv9B,IAG1DmhC,EAAmB1kF,UAAUyb,YAAc,WACzC,MAAO,IAETipE,EAAmB1kF,UAAU0b,SAAW,WACtC,OAAOgpE,GAGFA,GACPJ,IAEEkB,GAAkC,WACpCtqF,KAAKyvE,IAAM,KACXzvE,KAAKuqF,uBAAyB,KAC9B,IAAIlqB,EAAK/qD,UAAU,GACnBtV,KAAKyvE,IAAMpP,EACXrgE,KAAKuqF,uBAAyB,IAAI/iD,IAEpC8iD,GAAgCxlF,UAAUujE,qBAAuB,SAA+B6X,EAAIC,EAAW1lE,EAAI2lE,GAGjH,GAAIF,IAAOzlE,GAAM0lE,IAAcC,EAAa,OAAO,KACnD,IAAI1a,EAAMwa,EAAGjwC,iBAAiBkwC,GAC1Bxa,EAAMua,EAAGjwC,iBAAiBkwC,EAAY,GACtCva,EAAMnrD,EAAGw1B,iBAAiBmwC,GAC1Bva,EAAMprD,EAAGw1B,iBAAiBmwC,EAAY,GAE1C,GADApgF,KAAKyvE,IAAI70C,oBAAoB8qC,EAAKC,EAAKC,EAAKC,GACxC7lE,KAAKyvE,IAAIt0C,mBACPn7B,KAAKyvE,IAAIn0C,yBAA0B,CACrC,IAAK,IAAIhB,EAAW,EAAGA,EAAWt6B,KAAKyvE,IAAIz0C,qBAAsBV,IAVtDt6B,KAWFuqF,uBAAuBtqF,IAXrBD,KAWgCyvE,IAAI95D,gBAAgB2kB,IAE/D4lD,EAAGxf,iBAAiB1gE,KAAKyvE,IAAK0Q,EAAW,GACzC1lE,EAAGimD,iBAAiB1gE,KAAKyvE,IAAK2Q,EAAW,KAI/CkK,GAAgCxlF,UAAU+qC,OAAS,WACjD,OAAO,GAETy6C,GAAgCxlF,UAAU0lF,yBAA2B,WACnE,OAAOxqF,KAAKuqF,wBAEdD,GAAgCxlF,UAAUyb,YAAc,WACtD,MAAO,CAAC0/D,KAEVqK,GAAgCxlF,UAAU0b,SAAW,WACnD,OAAO8pE,IAGT,IAAIG,GAAqB,WACvBzqF,KAAK0qF,IAAM,KACX1qF,KAAKyvE,IAAM,KACXzvE,KAAK+lF,aAAe,KACpB/lF,KAAK8lF,OAAS,KACd9lF,KAAK2qF,cAAgB,KACrB3qF,KAAKsnE,iBAAmB,KACxB,IAAIrsB,EAAK3lC,UAAU,GACnBtV,KAAK0qF,IAAMzvC,EACXj7C,KAAKyvE,IAAM,IAAIzzC,GACfh8B,KAAKyvE,IAAIr0C,kBAAkB6f,GAC3Bj7C,KAAK+lF,aAAe9qC,EAAGM,YAEzBkvC,GAAmB3lF,UAAU8lF,iBAAmB,SAA2BC,GACzE,IAAIC,EAAmBhsB,GAAmB6B,mBAAmBkqB,GACzDE,EAAK,IAAIjE,GAAgBgE,GAC7B,IACEC,EAAGxD,aACH,MAAOp6D,GACP,KAAIA,aAAcgD,IAET,MAAMhD,EADbA,EAAGinB,oBAITq2C,GAAmB3lF,UAAU67D,mBAAqB,WAChD,OAAO7B,GAAmB6B,mBAAmB3gE,KAAKsnE,mBAEpDmjB,GAAmB3lF,UAAUkmF,UAAY,SAAoBpqB,EAAYP,GACvE,IAAI4qB,EAAgBjrF,KAAKkrF,0BAA0BtqB,EAAYP,GAC/DrgE,KAAKmrF,yBAAyBF,GAC9BjrF,KAAKorF,mBAAmBxqB,IAE1B6pB,GAAmB3lF,UAAUomF,0BAA4B,SAAoCtqB,EAAYP,GACvG,IAAIgrB,EAAiB,IAAIf,GAAgCjqB,GAGzD,OAFArgE,KAAK8lF,OAAO/e,sBAAsBskB,GAClCrrF,KAAK8lF,OAAOnf,aAAa/F,GAClByqB,EAAeb,4BAExBC,GAAmB3lF,UAAUsmF,mBAAqB,WAGhD,GAAIvmE,GAAavP,UAAU,GAAI0xB,IAE7B,IADA,IACS2kC,EADGr2D,UAAU,GACFmwB,WAAYkmC,EAAGjmC,WAAY,CAC7C,IAAI4lD,EAAQ3f,EAAGjqE,OALJ1B,KAMJorF,mBAAmBE,QAEvB,GAAIh2E,UAAU,aAAcwpD,GAGjC,IAFA,IAAIpjD,EAAIpG,UAAU,GACdgyE,EAAO5rE,EAAEu0B,iBACJpxC,EAAI,EAAGA,EAAIyoF,EAAK7mF,OAAQ5B,IAAK,CACpC,IAAI6qF,EAAW,IAAIhC,GAASJ,EAAKzoF,GAZtBmB,KAYiC+lF,aAZjC/lF,KAYsDyvE,KAZtDzvE,KAac2qF,cAAclB,KAAKC,EAAUhuE,EAAG7c,IAEvD6c,EAAEqkD,gBAAgBunB,EAAKzoF,GAAIA,KAKnC4rF,GAAmB3lF,UAAU6hE,aAAe,SAAuBkkB,GACjE7qF,KAAKsnE,iBAAmBujB,EACxB7qF,KAAK8lF,OAAS,IAAI9e,GAClBhnE,KAAK2qF,cAAgB,IAAIrB,GAAoBtpF,KAAK8lF,OAAOpe,YACzD1nE,KAAKgrF,UAAUH,EAAqB7qF,KAAKyvE,MAE3Cgb,GAAmB3lF,UAAUqmF,yBAA2B,SAAmCI,GAGzF,IAFE,IAEOv4C,EAAKu4C,EAAQ9lD,WAAYuN,EAAGtN,WAAY,CAC/C,IAAI8lD,EAASx4C,EAAGtxC,OACZgoF,EAAW,IAAIhC,GAAS8D,EAJfxrF,KAI8B+lF,aAJ9B/lF,KAImDyvE,KAJnDzvE,KAKN2qF,cAAclB,KAAKC,KAG9Be,GAAmB3lF,UAAUyb,YAAc,WACzC,MAAO,CAACmmD,KAEV+jB,GAAmB3lF,UAAU0b,SAAW,WACtC,OAAOiqE,IAGT,IAAIgB,GAAW,WAMb,GALAzrF,KAAK0rF,SAAW,KAChB1rF,KAAK81D,UAAY,KACjB91D,KAAKwvE,WAAa,IAAIlH,GACtBtoE,KAAK2rF,gBAAkB,KACvB3rF,KAAK4rF,eAAiB,KACG,IAArBt2E,UAAU7U,OAAc,CAC1B,IAAIyjC,EAAI5uB,UAAU,GAClBtV,KAAK0rF,SAAWxnD,OACX,GAAyB,IAArB5uB,UAAU7U,OAAc,CACjC,IAAIujC,EAAM1uB,UAAU,GAChB66D,EAAY76D,UAAU,GAC1BtV,KAAK0rF,SAAW1nD,EAChBhkC,KAAKwvE,WAAaW,IAIlB0b,GAAqB,CAAEnjB,UAAW,CAAEnkE,cAAc,GAAOunF,SAAU,CAAEvnF,cAAc,GAAOulE,SAAU,CAAEvlE,cAAc,GAAOwlE,WAAY,CAAExlE,cAAc,GAAOwnF,qBAAsB,CAAExnF,cAAc,IACxMknF,GAAS3mF,UAAUknF,qBAAuB,SAA+BC,GACvE,IAAI9G,EAAQ,IAAIU,GAAY,IAAI4E,GAAmB,IAAIhwC,GAAe,IAAOwxC,EAAQ1wC,YACjF2wC,EAAa,IAAIlI,GAAchkF,KAAKwvE,YACxC0c,EAAW9H,yBAAyB6H,GACpCC,EAAW1G,SAASL,GACpBnlF,KAAK2rF,gBAAkBO,EAAW9G,OAAOplF,KAAK0rF,SAAU1rF,KAAK81D,YAE/D21B,GAAS3mF,UAAUqnF,uBAAyB,WAG1C,GAAyB,IAArB72E,UAAU7U,OAAc,CAC1B,IAAK,IAAI2rF,EAAaX,GAASM,qBAAsBK,GAAc,EAAGA,IAAc,CAClF,IAJWpsF,KAKFmsF,uBAAuBC,GAC9B,MAAOj/D,GACP,KAAIA,aAAcs0B,IAET,MAAMt0B,EATNntB,KAQA4rF,eAAiBz+D,EAG5B,GAA+B,OAXpBntB,KAWA2rF,gBAA4B,OAAO,KAEhD,MAAM3rF,KAAK4rF,eACN,GAAyB,IAArBt2E,UAAU7U,OAAc,CACjC,IAAI4rF,EAAkB/2E,UAAU,GAC5Bg3E,EAAuBb,GAASc,qBAAqBvsF,KAAK0rF,SAAU1rF,KAAK81D,UAAWu2B,GACpFJ,EAAU,IAAIxxC,GAAe6xC,GACjCtsF,KAAKgsF,qBAAqBC,KAG9BR,GAAS3mF,UAAU0nF,gBAAkB,WAEnC,GADAxsF,KAAKysF,0BACwB,OAAzBzsF,KAAK2rF,gBAA4B,OAAO,KAC5C,IAAIe,EAAQ1sF,KAAK0rF,SAAS7nD,aAAasB,oBACnCunD,EAAMhxC,YAAcjB,GAAeM,MAAS/6C,KAAKgsF,qBAAqBU,GAAiB1sF,KAAKmsF,0BAElGV,GAAS3mF,UAAUqkE,oBAAsB,SAA8BD,GACrElpE,KAAKwvE,WAAWrG,oBAAoBD,IAEtCuiB,GAAS3mF,UAAU2nF,wBAA0B,WAC3C,IACE,IAAIP,EAAa,IAAIlI,GAAchkF,KAAKwvE,YACxCxvE,KAAK2rF,gBAAkBO,EAAW9G,OAAOplF,KAAK0rF,SAAU1rF,KAAK81D,WAC7D,MAAO3oC,GACP,KAAIA,aAAcuL,IAET,MAAMvL,EADbntB,KAAK4rF,eAAiBz+D,IAI5Bs+D,GAAS3mF,UAAU6nF,kBAAoB,SAA4BrpE,GAGjE,OAFAtjB,KAAK81D,UAAYxyC,EACjBtjB,KAAKwsF,kBACExsF,KAAK2rF,iBAEdF,GAAS3mF,UAAUwkE,eAAiB,SAAyBD,GAC3DrpE,KAAKwvE,WAAWlG,eAAeD,IAEjCoiB,GAAS3mF,UAAUyb,YAAc,WAC/B,MAAO,IAETkrE,GAAS3mF,UAAU0b,SAAW,WAC5B,OAAOirE,IAETA,GAASmB,SAAW,WAClB,GAAyB,IAArBt3E,UAAU7U,OAAc,CAC1B,IAAIyjC,EAAI5uB,UAAU,GACdgO,EAAWhO,UAAU,GAGzB,OAFW,IAAIm2E,GAASvnD,GACLyoD,kBAAkBrpE,GAEhC,GAAyB,IAArBhO,UAAU7U,OAAc,CACjC,GAAIuE,OAAOgb,UAAU1K,UAAU,KAAQA,UAAU,aAAcqtB,IAAoC,iBAAjBrtB,UAAU,GAAkB,CAC5G,IAAI0uB,EAAM1uB,UAAU,GAChBu3E,EAAav3E,UAAU,GACvB4zD,EAAmB5zD,UAAU,GAC7Bw3E,EAAQ,IAAIrB,GAASznD,GAGzB,OAFA8oD,EAAM3jB,oBAAoBD,GACV4jB,EAAMH,kBAAkBE,GAEnC,GAAIv3E,UAAU,aAAcgzD,IAAqBhzD,UAAU,aAAcqtB,IAAoC,iBAAjBrtB,UAAU,GAAkB,CAC7H,IAAIy3E,EAAMz3E,UAAU,GAChB03E,EAAa13E,UAAU,GACvB23E,EAAS33E,UAAU,GAGvB,OAFc,IAAIm2E,GAASsB,EAAKE,GACRN,kBAAkBK,SAGvC,GAAyB,IAArB13E,UAAU7U,OAAc,CACjC,IAAIysF,EAAM53E,UAAU,GAChB63E,EAAa73E,UAAU,GACvB8zD,EAAqB9zD,UAAU,GAC/B+zD,EAAc/zD,UAAU,GACxB83E,EAAU,IAAI3B,GAASyB,GAI3B,OAHAE,EAAQjkB,oBAAoBC,GAC5BgkB,EAAQ9jB,eAAeD,GACP+jB,EAAQT,kBAAkBQ,KAI9C1B,GAASc,qBAAuB,SAA+BroD,EAAG5gB,EAAU+pE,GAC1E,IAAIr9D,EAAMkU,EAAEa,sBAGRuoD,EAFSxoE,GAAS5I,IAAI1Z,KAAKiP,IAAIue,EAAI4C,WAAYpwB,KAAKiP,IAAIue,EAAI6C,WAAYrwB,KAAKiP,IAAIue,EAAI8C,WAAYtwB,KAAKiP,IAAIue,EAAI+C,YAEzF,GADFzP,EAAW,EAAMA,EAAW,GAG/CiqE,EAAeF,EADS7qF,KAAK4d,MAAM5d,KAAK2iB,IAAImoE,GAAa9qF,KAAK2iB,IAAI,IAAM,GAG5E,OADkB3iB,KAAK2C,IAAI,GAAMooF,IAGnC1B,GAAmBnjB,UAAU18D,IAAM,WAAc,OAAOs8D,GAAiBI,WACzEmjB,GAAmBC,SAAS9/E,IAAM,WAAc,OAAOs8D,GAAiBwB,UACxE+hB,GAAmB/hB,SAAS99D,IAAM,WAAc,OAAOs8D,GAAiBwB,UACxE+hB,GAAmB9hB,WAAW/9D,IAAM,WAAc,OAAOs8D,GAAiByB,YAC1E8hB,GAAmBE,qBAAqB//E,IAAM,WAAc,OAAO,IAEnEvH,OAAOid,iBAAkB+pE,GAAUI,IAEnC,IAAI2B,GAAoB,WACtBxtF,KAAK6T,IAAM,CAAC,IAAIkO,GAAc,IAAIA,IAClC/hB,KAAK81D,UAAY10C,GAAOsC,IACxB1jB,KAAKytF,SAAU,GAEjBD,GAAkB1oF,UAAUmrC,eAAiB,WAC3C,OAAOjwC,KAAK6T,KAEd25E,GAAkB1oF,UAAU6qB,cAAgB,SAAwB9wB,GAClE,OAAOmB,KAAK6T,IAAIhV,IAElB2uF,GAAkB1oF,UAAU4oF,WAAa,WACvC,GAAyB,IAArBp4E,UAAU7U,OAAc,CAC1B,IAAIktF,EAASr4E,UAAU,GACvBtV,KAAK0tF,WAAWC,EAAO95E,IAAI,GAAI85E,EAAO95E,IAAI,SACrC,GAAyB,IAArByB,UAAU7U,OAAc,CACjC,IAAI0Z,EAAK7E,UAAU,GACfzS,EAAKyS,UAAU,GACnB,GAAItV,KAAKytF,QAEP,OADAztF,KAAK4tF,WAAWzzE,EAAItX,GACb,KAET,IAAIwE,EAAO8S,EAAGmJ,SAASzgB,GACnBwE,EAAOrH,KAAK81D,WAAa91D,KAAK4tF,WAAWzzE,EAAItX,EAAIwE,KAGzDmmF,GAAkB1oF,UAAU8oF,WAAa,WACvC,GAAyB,IAArBt4E,UAAU7U,OACZT,KAAKytF,SAAU,OACV,GAAyB,IAArBn4E,UAAU7U,OAAc,CACjC,IAAI0Z,EAAK7E,UAAU,GACfzS,EAAKyS,UAAU,GACnBtV,KAAK6T,IAAI,GAAG2P,cAAcrJ,GAC1Bna,KAAK6T,IAAI,GAAG2P,cAAc3gB,GAC1B7C,KAAK81D,UAAY37C,EAAGmJ,SAASzgB,GAC7B7C,KAAKytF,SAAU,OACV,GAAyB,IAArBn4E,UAAU7U,OAAc,CACjC,IAAI+sD,EAAOl4C,UAAU,GACjB4b,EAAO5b,UAAU,GACjBgO,EAAWhO,UAAU,GACzBtV,KAAK6T,IAAI,GAAG2P,cAAcgqC,GAC1BxtD,KAAK6T,IAAI,GAAG2P,cAAc0N,GAC1BlxB,KAAK81D,UAAYxyC,EACjBtjB,KAAKytF,SAAU,IAGnBD,GAAkB1oF,UAAUgyD,YAAc,WACxC,OAAO92D,KAAK81D,WAEd03B,GAAkB1oF,UAAU+oF,WAAa,WACvC,GAAyB,IAArBv4E,UAAU7U,OAAc,CAC1B,IAAIktF,EAASr4E,UAAU,GACvBtV,KAAK6tF,WAAWF,EAAO95E,IAAI,GAAI85E,EAAO95E,IAAI,SACrC,GAAyB,IAArByB,UAAU7U,OAAc,CACjC,IAAI0Z,EAAK7E,UAAU,GACfzS,EAAKyS,UAAU,GACnB,GAAItV,KAAKytF,QAEP,OADAztF,KAAK4tF,WAAWzzE,EAAItX,GACb,KAET,IAAIwE,EAAO8S,EAAGmJ,SAASzgB,GACnBwE,EAAOrH,KAAK81D,WAAa91D,KAAK4tF,WAAWzzE,EAAItX,EAAIwE,KAGzDmmF,GAAkB1oF,UAAUyb,YAAc,WACxC,MAAO,IAETitE,GAAkB1oF,UAAU0b,SAAW,WACrC,OAAOgtE,IAGT,IAAIM,GAAwB,aAE5BA,GAAsBhpF,UAAUyb,YAAc,WAC5C,MAAO,IAETutE,GAAsBhpF,UAAU0b,SAAW,WACzC,OAAOstE,IAETA,GAAsBC,gBAAkB,WACtC,GAAIz4E,UAAU,aAAck4E,IAAsBl4E,UAAU,aAAco9B,IAAcp9B,UAAU,aAAcyM,GAM9G,IALA,IAAI8V,EAAOviB,UAAU,GACjB/N,EAAK+N,UAAU,GACfq4E,EAASr4E,UAAU,GACnBiiB,EAASM,EAAKoY,iBACd+9C,EAAc,IAAIhtB,GACbniE,EAAI,EAAGA,EAAI04B,EAAO92B,OAAS,EAAG5B,IAAK,CAC1CmvF,EAAY/qB,eAAe1rC,EAAO14B,GAAI04B,EAAO14B,EAAI,IACjD,IAAImjE,EAAYgsB,EAAYnnF,aAAaU,GACzComF,EAAOD,WAAW1rB,EAAWz6D,QAE1B,GAAI+N,UAAU,aAAck4E,IAAsBl4E,UAAU,aAAcmhC,IAAWnhC,UAAU,aAAcyM,GAAa,CAC/H,IAAI1Y,EAAOiM,UAAU,GACjB24E,EAAO34E,UAAU,GACjB44E,EAAW54E,UAAU,GACzBw4E,GAAsBC,gBAAgB1kF,EAAK+tC,kBAAmB62C,EAAMC,GACpE,IAAK,IAAI3tD,EAAM,EAAGA,EAAMl3B,EAAKstC,qBAAsBpW,IACjDutD,GAAsBC,gBAAgB1kF,EAAKuuC,iBAAiBrX,GAAM0tD,EAAMC,QAErE,GAAI54E,UAAU,aAAck4E,IAAsBl4E,UAAU,aAAcqtB,IAAYrtB,UAAU,aAAcyM,GAAa,CAChI,IAAIxZ,EAAO+M,UAAU,GACjB64E,EAAO74E,UAAU,GACjB84E,EAAW94E,UAAU,GACzB,GAAI/M,aAAgBmqC,GAClBo7C,GAAsBC,gBAAgBxlF,EAAM4lF,EAAMC,QAC7C,GAAI7lF,aAAgBkuC,GACzBq3C,GAAsBC,gBAAgBxlF,EAAM4lF,EAAMC,QAC7C,GAAI7lF,aAAgBwnC,GAEzB,IADA,IAAIe,EAAKvoC,EACA0gC,EAAM,EAAGA,EAAM6H,EAAGrM,mBAAoBwE,IAAO,CACpD,IAAI/E,EAAI4M,EAAGhN,aAAamF,GACxB6kD,GAAsBC,gBAAgB7pD,EAAGiqD,EAAMC,QAGjDA,EAASV,WAAWnlF,EAAKonB,gBAAiBw+D,QAEvC,GAAI74E,UAAU,aAAck4E,IAAsBl4E,UAAU,aAAc0rD,IAAe1rD,UAAU,aAAcyM,GAAa,CACnI,IAAIxX,EAAU+K,UAAU,GACpB+4E,EAAO/4E,UAAU,GACjBg5E,EAAWh5E,UAAU,GACrBi5E,EAAchkF,EAAQ1D,aAAawnF,GACvCC,EAASZ,WAAWa,EAAaF,KAIrC,IAAIG,GAAmC,SAA2CnV,GAChFr5E,KAAKyuF,WAAa,IAAIjB,GACtBxtF,KAAKk5E,WAAaG,GAAa,MAG7BqV,GAAqB,CAAEC,uBAAwB,CAAEpqF,cAAc,GAAOqqF,0BAA2B,CAAErqF,cAAc,IACrHiqF,GAAiC1pF,UAAU+pF,2BAA6B,SAAqCrV,GAC3G,IAAIsV,EAAa,IAAIF,GAA0B5uF,KAAKk5E,YACpDM,EAAMhkD,MAAMs5D,GACZ9uF,KAAKyuF,WAAWZ,WAAWiB,EAAWC,wBAExCP,GAAiC1pF,UAAUkqF,yBAA2B,SAAmCxV,GACvG,IAAIsV,EAAa,IAAIH,GAAuB3uF,KAAKk5E,YACjDM,EAAMhkD,MAAMs5D,GACZ9uF,KAAKyuF,WAAWZ,WAAWiB,EAAWC,wBAExCP,GAAiC1pF,UAAUmqF,aAAe,SAAuBC,GAG/E,OAFAlvF,KAAKgvF,yBAAyBE,GAC9BlvF,KAAK6uF,2BAA2BK,GACzBlvF,KAAKyuF,WAAW33B,eAEzB03B,GAAiC1pF,UAAUqqF,kBAAoB,WAC7D,OAAOnvF,KAAKyuF,YAEdD,GAAiC1pF,UAAUyb,YAAc,WACvD,MAAO,IAETiuE,GAAiC1pF,UAAU0b,SAAW,WACpD,OAAOguE,IAETE,GAAmBC,uBAAuB3iF,IAAM,WAAc,OAAO2iF,IACrED,GAAmBE,0BAA0B5iF,IAAM,WAAc,OAAO4iF,IAExEnqF,OAAOid,iBAAkB8sE,GAAkCE,IAE3D,IAAIC,GAAyB,SAAiCpmF,GAC5DvI,KAAKyuF,WAAa,IAAIjB,GACtBxtF,KAAKovF,WAAa,IAAI5B,GACtBxtF,KAAK6xC,MAAQtpC,GAAQ,MAEvBomF,GAAuB7pF,UAAU49B,OAAS,SAAiBn7B,GACzDvH,KAAKovF,WAAWxB,aAChBE,GAAsBC,gBAAgB/tF,KAAK6xC,MAAOtqC,EAAIvH,KAAKovF,YAC3DpvF,KAAKyuF,WAAWZ,WAAW7tF,KAAKovF,aAElCT,GAAuB7pF,UAAUiqF,oBAAsB,WACrD,OAAO/uF,KAAKyuF,YAEdE,GAAuB7pF,UAAUyb,YAAc,WAC7C,MAAO,CAAC2lB,KAEVyoD,GAAuB7pF,UAAU0b,SAAW,WAC1C,OAAOmuE,IAGT,IAAIC,GAA4B,SAAoCrmF,GAClEvI,KAAKyuF,WAAa,IAAIjB,GACtBxtF,KAAKovF,WAAa,IAAI5B,GACtBxtF,KAAK6xC,MAAQtpC,GAAQ,MAEvBqmF,GAA0B9pF,UAAU49B,OAAS,SAAiBkN,EAAKxuC,GACjE,GAAc,IAAVA,EAAe,OAAO,KAC1B,IAAI+Y,EAAKy1B,EAAIjgB,cAAcvuB,EAAQ,GAC/ByB,EAAK+sC,EAAIjgB,cAAcvuB,GACvBiuF,EAAQ,IAAIttE,IAAY5H,EAAGza,EAAImD,EAAGnD,GAAK,GAAIya,EAAGjb,EAAI2D,EAAG3D,GAAK,GAC9Dc,KAAKovF,WAAWxB,aAChBE,GAAsBC,gBAAgB/tF,KAAK6xC,MAAOw9C,EAAOrvF,KAAKovF,YAC9DpvF,KAAKyuF,WAAWZ,WAAW7tF,KAAKovF,aAElCR,GAA0B9pF,UAAU+qC,OAAS,WAC3C,OAAO,GAET++C,GAA0B9pF,UAAUgrC,kBAAoB,WACtD,OAAO,GAET8+C,GAA0B9pF,UAAUiqF,oBAAsB,WACxD,OAAO/uF,KAAKyuF,YAEdG,GAA0B9pF,UAAUyb,YAAc,WAChD,MAAO,CAACovB,KAEVi/C,GAA0B9pF,UAAU0b,SAAW,WAC7C,OAAOouE,IAGT,IAAIU,GAAmB,SAA2BC,GAChDvvF,KAAKwvF,OAASD,GAAS,MAEzBD,GAAiBxqF,UAAU49B,OAAS,SAAiBn6B,GAC/CA,aAAgBkuC,IAAWz2C,KAAKwvF,OAAOvvF,IAAIsI,IAEjD+mF,GAAiBxqF,UAAUyb,YAAc,WACvC,MAAO,CAACmvB,KAEV4/C,GAAiBxqF,UAAU0b,SAAW,WACpC,OAAO8uE,IAETA,GAAiBt8B,YAAc,WAC7B,GAAyB,IAArB19C,UAAU7U,OAAc,CAC1B,IAAI8H,EAAO+M,UAAU,GACrB,OAAOg6E,GAAiBt8B,YAAYzqD,EAAM,IAAIi/B,IACzC,GAAyB,IAArBlyB,UAAU7U,OAAc,CACjC,IAAIyxC,EAAS58B,UAAU,GACnBpS,EAAOoS,UAAU,GAMrB,OALI48B,aAAkBuE,GACpBvzC,EAAKjD,IAAIiyC,GACAA,aAAkBnC,IAC3BmC,EAAO1c,MAAM,IAAI85D,GAAiBpsF,IAE7BA,IAIX,IAAIusF,GAA2B,WAG7B,GAFAzvF,KAAK0vF,OAAS,KACd1vF,KAAK2vF,uBAAwB,EACJ,IAArBr6E,UAAU7U,OAAc,CAC1B,IAAIs3B,EAAQziB,UAAU,GACtBtV,KAAK0vF,OAAS33D,OACT,GAAyB,IAArBziB,UAAU7U,OAAc,CACjC,IAAImvF,EAAUt6E,UAAU,GACpBu6E,EAAuBv6E,UAAU,GACrCtV,KAAK0vF,OAASE,EACd5vF,KAAK2vF,sBAAwBE,IAGjCJ,GAAyB3qF,UAAU49B,OAAS,SAAiBn6B,GAC3D,GAAIvI,KAAK2vF,uBAAyBpnF,aAAgByvC,GAAY,CAC5D,IAAIngB,EAAOtvB,EAAKs7B,aAAalM,iBAAiBpvB,EAAK4tC,yBAEnD,OADAn2C,KAAK0vF,OAAOzvF,IAAI43B,GACT,KAELtvB,aAAgBmqC,IAAc1yC,KAAK0vF,OAAOzvF,IAAIsI,IAEpDknF,GAAyB3qF,UAAUgrF,qBAAuB,SAA+BD,GACvF7vF,KAAK2vF,sBAAwBE,GAE/BJ,GAAyB3qF,UAAUyb,YAAc,WAC/C,MAAO,CAACkiB,KAEVgtD,GAAyB3qF,UAAU0b,SAAW,WAC5C,OAAOivE,IAETA,GAAyBhT,YAAc,WACrC,GAAyB,IAArBnnE,UAAU7U,OAAc,CAC1B,IAAI8H,EAAO+M,UAAU,GACrB,OAAO/M,EAAKs7B,aAAayY,cAAcmzC,GAAyBM,SAASxnF,IACpE,GAAyB,IAArB+M,UAAU7U,OAAc,CACjC,IAAIyxC,EAAS58B,UAAU,GACnB06E,EAAoB16E,UAAU,GAClC,OAAO48B,EAAOrO,aAAayY,cAAcmzC,GAAyBM,SAAS79C,EAAQ89C,MAGvFP,GAAyBM,SAAW,WAClC,GAAyB,IAArBz6E,UAAU7U,OAAc,CAC1B,IAAI8H,EAAO+M,UAAU,GACrB,OAAOm6E,GAAyBM,SAASxnF,GAAM,GAC1C,GAAyB,IAArB+M,UAAU7U,OAAc,CACjC,GAAIokB,GAAavP,UAAU,GAAI0xB,KAAeniB,GAAavP,UAAU,GAAI0xB,IAAa,CAGpF,IAFA,IAAIhwB,EAAQ1B,UAAU,GAClBs6E,EAAUt6E,UAAU,GACfzW,EAAImY,EAAMyuB,WAAY5mC,EAAE6mC,WAAY,CAC3C,IAAIxB,EAAIrlC,EAAE6C,OACV+tF,GAAyBM,SAAS7rD,EAAG0rD,GAEvC,OAAOA,EACF,GAAIt6E,UAAU,aAAcqtB,IAAoC,kBAAjBrtB,UAAU,GAAkB,CAChF,IAAI48B,EAAS58B,UAAU,GACnB06E,EAAoB16E,UAAU,GAC9ByiB,EAAQ,IAAIyP,GAEhB,OADA0K,EAAO1c,MAAM,IAAIi6D,GAAyB13D,EAAOi4D,IAC1Cj4D,EACF,GAAIziB,UAAU,aAAcqtB,IAAY9d,GAAavP,UAAU,GAAI0xB,IAAa,CACrF,IAAIipD,EAAS36E,UAAU,GACnB46E,EAAU56E,UAAU,GAMxB,OALI26E,aAAkBv9C,GACpBw9C,EAAQjwF,IAAIgwF,GAEZA,EAAOz6D,MAAM,IAAIi6D,GAAyBS,IAErCA,QAEJ,GAAyB,IAArB56E,UAAU7U,OAAc,CACjC,GAA4B,kBAAjB6U,UAAU,IAAqBuP,GAAavP,UAAU,GAAI0xB,KAAeniB,GAAavP,UAAU,GAAI0xB,IAAc,CAI3H,IAHA,IAAImpD,EAAU76E,UAAU,GACpB86E,EAAU96E,UAAU,GACpB+6E,EAAsB/6E,UAAU,GAC3BirB,EAAM4vD,EAAQ1qD,WAAYlF,EAAImF,WAAY,CACjD,IAAI1B,EAAMzD,EAAI7+B,OACd+tF,GAAyBM,SAAS/rD,EAAKosD,EAASC,GAElD,OAAOD,EACF,GAA4B,kBAAjB96E,UAAU,IAAqBA,UAAU,aAAcqtB,IAAY9d,GAAavP,UAAU,GAAI0xB,IAAc,CAC5H,IAAIspD,EAASh7E,UAAU,GACnBi7E,EAAUj7E,UAAU,GACpBk7E,EAAsBl7E,UAAU,GAEpC,OADAg7E,EAAO96D,MAAM,IAAIi6D,GAAyBc,EAASC,IAC5CD,KAKb,IAAIE,GAAe,WAIjB,GAHAzwF,KAAK0wF,cAAgBvqD,GAAiBU,sBACtC7mC,KAAK2wF,MAAQ,KACb3wF,KAAK4wF,eAAiB,KACG,IAArBt7E,UAAU7U,aAAsB,GAAyB,IAArB6U,UAAU7U,OAAc,CAC9D,IAAIowF,EAAev7E,UAAU,GAC7B,GAAqB,OAAjBu7E,EAAyB,MAAM,IAAIhwE,GAAyB,yBAChE7gB,KAAK0wF,cAAgBG,IAGzBJ,GAAa3rF,UAAUgsF,eAAiB,WAGtC,GAAIx7E,UAAU,aAAcyM,IAAczM,UAAU,aAAcmhC,GAAS,CACzE,IAAI90C,EAAI2T,UAAU,GACdjM,EAAOiM,UAAU,GACrB,GAAIjM,EAAKysB,UAAa,OAAOzR,GAASI,SACtC,IAAIwT,EAAQ5uB,EAAK+tC,kBACb25C,EAAW/wF,KAAKgxF,oBAAoBrvF,EAAGs2B,GAC3C,GAAI84D,IAAa1sE,GAASI,SAAY,OAAOJ,GAASI,SACtD,GAAIssE,IAAa1sE,GAASG,SAAY,OAAOH,GAASG,SACtD,IAAK,IAAI3lB,EAAI,EAAGA,EAAIwK,EAAKstC,qBAAsB93C,IAAK,CAClD,IAAIy6C,EAAOjwC,EAAKuuC,iBAAiB/4C,GAC7BoyF,EAZOjxF,KAYUgxF,oBAAoBrvF,EAAG23C,GAC5C,GAAI23C,IAAY5sE,GAASE,SAAY,OAAOF,GAASI,SACrD,GAAIwsE,IAAY5sE,GAASG,SAAY,OAAOH,GAASG,SAEvD,OAAOH,GAASE,SACX,GAAIjP,UAAU,aAAcyM,IAAczM,UAAU,aAAco9B,GAAY,CACnF,IAAItS,EAAM9qB,UAAU,GAChBtW,EAAIsW,UAAU,GAClB,IAAKtW,EAAE+lC,sBAAsB/R,WAAWoN,GAAQ,OAAO/b,GAASI,SAChE,IAAIld,EAAKvI,EAAEixC,iBACX,OAAKjxC,EAAEwyC,aACDpR,EAAI9lB,OAAO/S,EAAG,MAAO64B,EAAI9lB,OAAO/S,EAAGA,EAAG9G,OAAS,IAIjD67B,GAAaiG,SAASnC,EAAK74B,GAAc8c,GAASE,SAC/CF,GAASI,SAJLJ,GAASG,SAKf,GAAIlP,UAAU,aAAcyM,IAAczM,UAAU,aAAcihC,GAAO,CAC9E,IAAI26C,EAAM57E,UAAU,GAGpB,OAFWA,UAAU,GACFqa,gBACPjN,SAASwuE,GAAe7sE,GAASE,SACtCF,GAASI,WAGpBgsE,GAAa3rF,UAAUksF,oBAAsB,SAA8BrvF,EAAG8H,GAC5E,OAAKA,EAAKs7B,sBAAsB/R,WAAWrxB,GACpC26B,GAAa4D,kBAAkBv+B,EAAG8H,EAAKwmC,kBADU5rB,GAASI,UAGnEgsE,GAAa3rF,UAAUkuB,WAAa,SAAqBrxB,EAAG4G,GAC1D,OAAOvI,KAAK46E,OAAOj5E,EAAG4G,KAAU8b,GAASI,UAE3CgsE,GAAa3rF,UAAUqsF,mBAAqB,SAA6B3rC,GACnEA,IAAQnhC,GAASE,WAAYvkB,KAAK2wF,OAAQ,GAC1CnrC,IAAQnhC,GAASG,UAAYxkB,KAAK4wF,kBAExCH,GAAa3rF,UAAUssF,gBAAkB,SAA0BzvF,EAAG4G,GAMpE,GAHIA,aAAgBguC,IAClBv2C,KAAKmxF,mBAAmBnxF,KAAK8wF,eAAenvF,EAAG4G,IAE7CA,aAAgBmqC,GAClB1yC,KAAKmxF,mBAAmBnxF,KAAK8wF,eAAenvF,EAAG4G,SAC1C,GAAIA,aAAgBkuC,GACzBz2C,KAAKmxF,mBAAmBnxF,KAAK8wF,eAAenvF,EAAG4G,SAC1C,GAAIA,aAAgB+oC,GAEzB,IADA,IAAI+/C,EAAK9oF,EACA1J,EAAI,EAAGA,EAAIwyF,EAAG5sD,mBAAoB5lC,IAAK,CAC9C,IAAIG,EAAIqyF,EAAGvtD,aAAajlC,GAZbmB,KAaJmxF,mBAbInxF,KAasB8wF,eAAenvF,EAAG3C,SAEhD,GAAIuJ,aAAgB6vC,GAEzB,IADA,IAAIk5C,EAAQ/oF,EACHg4B,EAAM,EAAGA,EAAM+wD,EAAM7sD,mBAAoBlE,IAAO,CACvD,IAAIl3B,EAAOioF,EAAMxtD,aAAavD,GAlBnBvgC,KAmBJmxF,mBAnBInxF,KAmBsB8wF,eAAenvF,EAAG0H,SAEhD,GAAId,aAAgBwnC,GAEzB,IADA,IAAIsrC,EAAQ,IAAIR,GAA2BtyE,GACpC8yE,EAAM31C,WAAW,CACtB,IAAI41C,EAAKD,EAAM35E,OACX45E,IAAO/yE,GAzBAvI,KAyBeoxF,gBAAgBzvF,EAAG25E,KAInDmV,GAAa3rF,UAAU81E,OAAS,SAAiBj5E,EAAG4G,GAClD,OAAIA,EAAKutB,UAAoBzR,GAASI,SAClClc,aAAgBmqC,GACX1yC,KAAK8wF,eAAenvF,EAAG4G,GACrBA,aAAgBkuC,GAClBz2C,KAAK8wF,eAAenvF,EAAG4G,IAEhCvI,KAAK2wF,OAAQ,EACb3wF,KAAK4wF,eAAiB,EACtB5wF,KAAKoxF,gBAAgBzvF,EAAG4G,GACpBvI,KAAK0wF,cAAc5pD,aAAa9mC,KAAK4wF,gBAA0BvsE,GAASG,SACxExkB,KAAK4wF,eAAiB,GAAK5wF,KAAK2wF,MAAgBtsE,GAASE,SACtDF,GAASI,WAElBgsE,GAAa3rF,UAAUyb,YAAc,WACnC,MAAO,IAETkwE,GAAa3rF,UAAU0b,SAAW,WAChC,OAAOiwE,IAGT,IAAIc,GAAmB,SAASA,IAI9B,GAHAvxF,KAAKwxF,WAAa,KAClBxxF,KAAKyxF,UAAY,KACjBzxF,KAAK6T,IAAM,KACc,IAArByB,UAAU7U,OAAc,CAC1B,IAAIixF,EAAYp8E,UAAU,GACtB/N,EAAK+N,UAAU,GACnBi8E,EAAiB5wF,KAAKX,KAAM0xF,EAAWH,EAAiBI,YAAapqF,QAChE,GAAyB,IAArB+N,UAAU7U,OAAc,CACjC,IAAImxF,EAAct8E,UAAU,GACxB6zE,EAAW7zE,UAAU,GACrB24E,EAAO34E,UAAU,GACrBtV,KAAKwxF,WAAaI,EAClB5xF,KAAKyxF,UAAYtI,EACjBnpF,KAAK6T,IAAMo6E,IAIX4D,GAAqB,CAAEF,YAAa,CAAEptF,cAAc,IACxDgtF,GAAiBzsF,UAAUgtF,aAAe,WACxC,OAAO9xF,KAAKyxF,YAAcF,GAAiBI,aAE7CJ,GAAiBzsF,UAAU6qB,cAAgB,WACzC,OAAO3vB,KAAK6T,KAEd09E,GAAiBzsF,UAAUitF,qBAAuB,WAChD,OAAO/xF,KAAKwxF,YAEdD,GAAiBzsF,UAAU08E,gBAAkB,WAC3C,OAAOxhF,KAAKyxF,WAEdF,GAAiBzsF,UAAUyb,YAAc,WACvC,MAAO,IAETgxE,GAAiBzsF,UAAU0b,SAAW,WACpC,OAAO+wE,IAETM,GAAmBF,YAAY3lF,IAAM,WAAc,OAAQ,GAE3DvH,OAAOid,iBAAkB6vE,GAAkBM,IAE3C,IAAIG,GAAiB,SAAyBtwD,GAC5C1hC,KAAKgnD,KAAOtlB,GAAO,MAErBswD,GAAeltF,UAAU49B,OAAS,SAAiBn6B,GAC7CA,aAAgBguC,IAASv2C,KAAKgnD,KAAK/mD,IAAIsI,IAE7CypF,GAAeltF,UAAUyb,YAAc,WACrC,MAAO,CAACmvB,KAEVsiD,GAAeltF,UAAU0b,SAAW,WAClC,OAAOwxE,IAETA,GAAeC,UAAY,WACzB,GAAyB,IAArB38E,UAAU7U,OAAc,CAC1B,IAAI8H,EAAO+M,UAAU,GACrB,OAAI/M,aAAgBguC,GACXgf,GAAYG,cAAcntD,GAE5BypF,GAAeC,UAAU1pF,EAAM,IAAIi/B,IACrC,GAAyB,IAArBlyB,UAAU7U,OAAc,CACjC,IAAIyxC,EAAS58B,UAAU,GACnBpS,EAAOoS,UAAU,GAMrB,OALI48B,aAAkBqE,GACpBrzC,EAAKjD,IAAIiyC,GACAA,aAAkBnC,IAC3BmC,EAAO1c,MAAM,IAAIw8D,GAAe9uF,IAE3BA,IAIX,IAAIgvF,GAAiC,WACnClyF,KAAKmyF,WAAa,KAClB,IAAIC,EAAY98E,UAAU,GAC1BtV,KAAKmyF,WAAaC,GAEpBF,GAA+BptF,UAAU49B,OAAS,SAAiBn6B,IAC7DA,aAAgBguC,IAAShuC,aAAgBmqC,IAAcnqC,aAAgBkuC,KAAWz2C,KAAKmyF,WAAWlyF,IAAI,IAAIsxF,GAAiBhpF,EAAM,EAAGA,EAAKonB,mBAE/IuiE,GAA+BptF,UAAUyb,YAAc,WACrD,MAAO,CAACmvB,KAEVwiD,GAA+BptF,UAAU0b,SAAW,WAClD,OAAO0xE,IAETA,GAA+BttC,aAAe,SAAuBr8C,GACnE,IAAI6pF,EAAY,IAAI5qD,GAEpB,OADAj/B,EAAKitB,MAAM,IAAI08D,GAA+BE,IACvCA,GAGT,IAAIC,GAAa,WAMf,GALAryF,KAAK6xC,MAAQ,KACb7xC,KAAKsyF,mBAAqB,EAC1BtyF,KAAKuyF,WAAa,IAAI9B,GACtBzwF,KAAKwyF,qBAAuB,KAC5BxyF,KAAKyyF,aAAerxE,GAAOE,UACF,IAArBhM,UAAU7U,OAAc,CAC1B,IAAIiyF,EAAKp9E,UAAU,GACfq9E,EAAKr9E,UAAU,GACnBtV,KAAK6xC,MAAQ,CAAC6gD,EAAIC,GAClB3yF,KAAKsyF,mBAAqB,OACrB,GAAyB,IAArBh9E,UAAU7U,OAAc,CACjC,IAAImyF,EAAOt9E,UAAU,GACjBu9E,EAAOv9E,UAAU,GACjBw9E,EAAoBx9E,UAAU,GAClCtV,KAAK6xC,MAAQ,IAAIppC,MAAM,GAAGwjB,KAAK,MAC/BjsB,KAAK6xC,MAAM,GAAK+gD,EAChB5yF,KAAK6xC,MAAM,GAAKghD,EAChB7yF,KAAKsyF,mBAAqBQ,IAG9BT,GAAWvtF,UAAUiuF,2BAA6B,WAGhD,GAAyB,IAArBz9E,UAAU7U,OAAc,CAC1B,IAAIuyF,EAAY,IAAIvqF,MAAM,GAAGwjB,KAAK,MAElC,GADAjsB,KAAK+yF,2BAA2B,EAAGC,GAC/BhzF,KAAKyyF,cAAgBzyF,KAAKsyF,mBAAsB,OAAO,KAC3DtyF,KAAK+yF,2BAA2B,EAAGC,QAC9B,GAAyB,IAArB19E,UAAU7U,OAAc,CACjC,IAAIwyF,EAAgB39E,UAAU,GAC1B49E,EAAc59E,UAAU,GACxB69E,EAAiB,EAAIF,EACrBrgF,EAAQ08E,GAAiBt8B,YAAYhzD,KAAK6xC,MAAMohD,IACpD,GAAIrgF,EAAM9Q,OAAS,EAAG,CACpB,IAAIsxF,EAAalB,GAA+BttC,aAAa5kD,KAAK6xC,MAAMshD,IAExE,GADAnzF,KAAK+yF,2BAA2BK,EAAYxgF,EAAOsgF,GAC/ClzF,KAAKyyF,cAAgBzyF,KAAKsyF,mBAG5B,OAFAtyF,KAAKwyF,qBAAqBW,GAAkBD,EAAY,GACxDlzF,KAAKwyF,qBAAqBS,GAAiBC,EAAY,GAChD,WAGN,GAAyB,IAArB59E,UAAU7U,OACnB,GAAI6U,UAAU,aAAc7M,OAAUoc,GAAavP,UAAU,GAAI+xB,KAASxiB,GAAavP,UAAU,GAAI+xB,KAInG,IAHA,IAAIgsD,EAAO/9E,UAAU,GACjBg+E,EAAUh+E,UAAU,GACpBi+E,EAAcj+E,UAAU,GACnBzW,EAAI,EAAGA,EAAIw0F,EAAKvxF,OAAQjD,IAE/B,IADA,IAAI2mD,EAAM6tC,EAAKrnF,IAAInN,GACVoD,EAAI,EAAGA,EAAIqxF,EAAQxxF,OAAQG,IAElC,GA9BOjC,KA6BA+yF,2BAA2BvtC,EAAK8tC,EAAQtnF,IAAI/J,GAAIsxF,GA7BhDvzF,KA8BIyyF,cA9BJzyF,KA8B2BsyF,mBAAsB,OAAO,UAG9D,GAAIh9E,UAAU,aAAc7M,OAAU6M,UAAU,aAAci8E,IAAoBj8E,UAAU,aAAcmhC,GAAU,CACzH,IAAI+8C,EAAQl+E,UAAU,GAClBjM,EAAOiM,UAAU,GACjBm+E,EAAcn+E,UAAU,GACxB/N,EAAKisF,EAAM7jE,gBACf,GAAItL,GAASI,WAAazkB,KAAKuyF,WAAW3X,OAAOrzE,EAAI8B,GAKnD,OAJArJ,KAAKyyF,aAAe,EACpBgB,EAAY,GAAKD,EACjBC,EAAY,GAAK,IAAIlC,GAAiBloF,EAAM9B,GAErC,OAKf8qF,GAAWvtF,UAAU4uF,8BAAgC,SAAwC37D,EAAOnkB,EAAQ+/E,GAG1G,IAFE,IAEO90F,EAAI,EAAGA,EAAIk5B,EAAMj2B,OAAQjD,IAEhC,IADA,IAAIg5B,EAAOE,EAAM/rB,IAAInN,GACZoD,EAAI,EAAGA,EAAI2R,EAAO9R,OAAQG,IAAK,CACtC,IAAIsF,EAAKqM,EAAO5H,IAAI/J,GAEpB,GAPWjC,KAMJ4zF,mBAAmB/7D,EAAMtwB,EAAIosF,GANzB3zF,KAOAyyF,cAPAzyF,KAOuBsyF,mBAAsB,OAAO,OAIrED,GAAWvtF,UAAU+uF,qBAAuB,WAC1C,IAAIF,EAAU,IAAIlrF,MAAM,GAAGwjB,KAAK,MAC5B6nE,EAASrE,GAAyBM,SAAS/vF,KAAK6xC,MAAM,IACtDkiD,EAAStE,GAAyBM,SAAS/vF,KAAK6xC,MAAM,IACtDy1C,EAAO0K,GAAeC,UAAUjyF,KAAK6xC,MAAM,IAC3CxG,EAAO2mD,GAAeC,UAAUjyF,KAAK6xC,MAAM,IAG/C,OAFA7xC,KAAKg0F,wBAAwBF,EAAQC,EAAQJ,GAC7C3zF,KAAKi0F,kBAAkBN,GAAS,GAC5B3zF,KAAKyyF,cAAgBzyF,KAAKsyF,mBAA6B,MAC3DqB,EAAQ,GAAK,KACbA,EAAQ,GAAK,KACb3zF,KAAK0zF,8BAA8BI,EAAQzoD,EAAMsoD,GACjD3zF,KAAKi0F,kBAAkBN,GAAS,GAC5B3zF,KAAKyyF,cAAgBzyF,KAAKsyF,mBAA6B,MAC3DqB,EAAQ,GAAK,KACbA,EAAQ,GAAK,KACb3zF,KAAK0zF,8BAA8BK,EAAQzM,EAAMqM,GACjD3zF,KAAKi0F,kBAAkBN,GAAS,GAC5B3zF,KAAKyyF,cAAgBzyF,KAAKsyF,mBAA6B,MAC3DqB,EAAQ,GAAK,KACbA,EAAQ,GAAK,KACb3zF,KAAKk0F,yBAAyB5M,EAAMj8C,EAAMsoD,QAC1C3zF,KAAKi0F,kBAAkBN,GAAS,OAElCtB,GAAWvtF,UAAUqvF,iBAAmB,WAEtC,OADAn0F,KAAK4zF,qBACE5zF,KAAKwyF,sBAEdH,GAAWvtF,UAAUmvF,kBAAoB,SAA4BN,EAAS9uC,GAC5E,GAAmB,OAAf8uC,EAAQ,GAAe,OAAO,KAC9B9uC,GACF7kD,KAAKwyF,qBAAqB,GAAKmB,EAAQ,GACvC3zF,KAAKwyF,qBAAqB,GAAKmB,EAAQ,KAEvC3zF,KAAKwyF,qBAAqB,GAAKmB,EAAQ,GACvC3zF,KAAKwyF,qBAAqB,GAAKmB,EAAQ,KAG3CtB,GAAWvtF,UAAUsvF,cAAgB,WAGnC,OAFAp0F,KAAK4zF,qBACY,CAAC5zF,KAAKwyF,qBAAqB,GAAG7iE,gBAAiB3vB,KAAKwyF,qBAAqB,GAAG7iE,kBAG/F0iE,GAAWvtF,UAAU8uF,mBAAqB,WAGxC,GAAyB,IAArBt+E,UAAU7U,OAAc,CAC1B,GAAkC,OAA9BT,KAAKwyF,qBAAiC,OAAO,KAGjD,GAFAxyF,KAAKwyF,qBAAuB,IAAI/pF,MAAM,GAAGwjB,KAAK,MAC9CjsB,KAAK+yF,6BACD/yF,KAAKyyF,cAAgBzyF,KAAKsyF,mBAAsB,OAAO,KAC3DtyF,KAAK6zF,4BACA,GAAyB,IAArBv+E,UAAU7U,OACnB,GAAI6U,UAAU,aAAc7M,OAAU6M,UAAU,aAAco9B,IAAcp9B,UAAU,aAAcihC,GAAQ,CAC1G,IAAI1e,EAAOviB,UAAU,GACjB/N,EAAK+N,UAAU,GACfq+E,EAAUr+E,UAAU,GACxB,GAAIuiB,EAAKkN,sBAAsBzhB,SAAS/b,EAAGw9B,uBAAyB/kC,KAAKyyF,aAAgB,OAAO,KAGhG,IAFA,IAAI4B,EAASx8D,EAAKoY,iBACdhoC,EAAQV,EAAGooB,gBACN9wB,EAAI,EAAGA,EAAIw1F,EAAO5zF,OAAS,EAAG5B,IAAK,CAC1C,IAAIwI,EAAOi1B,GAAa6C,kBAAkBl3B,EAAOosF,EAAOx1F,GAAIw1F,EAAOx1F,EAAI,IACvE,GAAIwI,EAlBKrH,KAkBSyyF,aAAc,CAlBvBzyF,KAmBAyyF,aAAeprF,EACtB,IACIitF,EADM,IAAItzB,GAAYqzB,EAAOx1F,GAAIw1F,EAAOx1F,EAAI,IACtBgI,aAAaoB,GACvC0rF,EAAQ,GAAK,IAAIpC,GAAiB15D,EAAMh5B,EAAGy1F,GAC3CX,EAAQ,GAAK,IAAIpC,GAAiBhqF,EAAI,EAAGU,GAE3C,GAzBSjI,KAyBEyyF,cAzBFzyF,KAyByBsyF,mBAAsB,OAAO,WAE5D,GAAIh9E,UAAU,aAAc7M,OAAU6M,UAAU,aAAco9B,IAAcp9B,UAAU,aAAco9B,GAAa,CACtH,IAAI6hD,EAAQj/E,UAAU,GAClBk/E,EAAQl/E,UAAU,GAClBm/E,EAAYn/E,UAAU,GAC1B,GAAIi/E,EAAMxvD,sBAAsBzhB,SAASkxE,EAAMzvD,uBAAyB/kC,KAAKyyF,aAAgB,OAAO,KAGpG,IAFA,IAAIiC,EAAWH,EAAMtkD,iBACjB7F,EAASoqD,EAAMvkD,iBACV1P,EAAM,EAAGA,EAAMm0D,EAASj0F,OAAS,EAAG8/B,IAC3C,IAAK,IAAIt+B,EAAI,EAAGA,EAAImoC,EAAO3pC,OAAS,EAAGwB,IAAK,CAC1C,IAAI0yF,EAASr4D,GAAa4E,iBAAiBwzD,EAASn0D,GAAMm0D,EAASn0D,EAAM,GAAI6J,EAAOnoC,GAAImoC,EAAOnoC,EAAI,IACnG,GAAI0yF,EArCG30F,KAqCayyF,aAAc,CArC3BzyF,KAsCEyyF,aAAekC,EACtB,IAAIpe,EAAO,IAAIvV,GAAY0zB,EAASn0D,GAAMm0D,EAASn0D,EAAM,IACrDi2C,EAAO,IAAIxV,GAAY52B,EAAOnoC,GAAImoC,EAAOnoC,EAAI,IAC7C+/D,EAAYuU,EAAKxU,cAAcyU,GACnCie,EAAU,GAAK,IAAIlD,GAAiBgD,EAAOh0D,EAAKyhC,EAAU,IAC1DyyB,EAAU,GAAK,IAAIlD,GAAiBiD,EAAOvyF,EAAG+/D,EAAU,IAE1D,GA7COhiE,KA6CIyyF,cA7CJzyF,KA6C2BsyF,mBAAsB,OAAO,QAMzED,GAAWvtF,UAAUovF,yBAA2B,SAAmCU,EAASC,EAASlB,GAGnG,IAFE,IAEO90F,EAAI,EAAGA,EAAI+1F,EAAQ9yF,OAAQjD,IAElC,IADA,IAAIugE,EAAMw1B,EAAQ5oF,IAAInN,GACboD,EAAI,EAAGA,EAAI4yF,EAAQ/yF,OAAQG,IAAK,CACvC,IAAIgN,EAAM4lF,EAAQ7oF,IAAI/J,GAClBoF,EAAO+3D,EAAIzvC,gBAAgBrM,SAASrU,EAAI0gB,iBAM5C,GALItoB,EAPOrH,KAOOyyF,eAPPzyF,KAQFyyF,aAAeprF,EACtBssF,EAAQ,GAAK,IAAIpC,GAAiBnyB,EAAK,EAAGA,EAAIzvC,iBAC9CgkE,EAAQ,GAAK,IAAIpC,GAAiBtiF,EAAK,EAAGA,EAAI0gB,kBAVrC3vB,KAYAyyF,cAZAzyF,KAYuBsyF,mBAAsB,OAAO,OAIrED,GAAWvtF,UAAUwe,SAAW,WAC9B,GAAsB,OAAlBtjB,KAAK6xC,MAAM,IAAiC,OAAlB7xC,KAAK6xC,MAAM,GAAe,MAAM,IAAIhxB,GAAyB,qCAC3F,OAAI7gB,KAAK6xC,MAAM,GAAG/b,WAAa91B,KAAK6xC,MAAM,GAAG/b,UAAoB,GACjE91B,KAAK4zF,qBACE5zF,KAAKyyF,eAEdJ,GAAWvtF,UAAUkvF,wBAA0B,SAAkCF,EAAQC,EAAQJ,GAG/F,IAFE,IAEO90F,EAAI,EAAGA,EAAIi1F,EAAOhyF,OAAQjD,IAEjC,IADA,IAAI01F,EAAQT,EAAO9nF,IAAInN,GACdoD,EAAI,EAAGA,EAAI8xF,EAAOjyF,OAAQG,IAAK,CACtC,IAAIuyF,EAAQT,EAAO/nF,IAAI/J,GAEvB,GAPWjC,KAMJ4zF,mBAAmBW,EAAOC,EAAOb,GAN7B3zF,KAOAyyF,cAPAzyF,KAOuBsyF,mBAAsB,OAAO,OAIrED,GAAWvtF,UAAUyb,YAAc,WACjC,MAAO,IAET8xE,GAAWvtF,UAAU0b,SAAW,WAC9B,OAAO6xE,IAETA,GAAW/uE,SAAW,SAAmBovE,EAAIC,GAE3C,OADa,IAAIN,GAAWK,EAAIC,GAClBrvE,YAEhB+uE,GAAWyC,iBAAmB,SAA2BpC,EAAIC,EAAIrvE,GAE/D,OADa,IAAI+uE,GAAWK,EAAIC,EAAIrvE,GACtBA,YAAcA,GAE9B+uE,GAAW+B,cAAgB,SAAwB1B,EAAIC,GAErD,OADa,IAAIN,GAAWK,EAAIC,GAClByB,iBAGhB,IAAIW,GAAsB,WACxB/0F,KAAK6T,IAAM,CAAC,IAAIkO,GAAc,IAAIA,IAClC/hB,KAAK81D,UAAY10C,GAAOsC,IACxB1jB,KAAKytF,SAAU,GAEjBsH,GAAoBjwF,UAAUmrC,eAAiB,WAC7C,OAAOjwC,KAAK6T,KAEdkhF,GAAoBjwF,UAAU6qB,cAAgB,SAAwB9wB,GACpE,OAAOmB,KAAK6T,IAAIhV,IAElBk2F,GAAoBjwF,UAAU4oF,WAAa,WACzC,GAAyB,IAArBp4E,UAAU7U,OAAc,CAC1B,IAAIktF,EAASr4E,UAAU,GACvBtV,KAAK0tF,WAAWC,EAAO95E,IAAI,GAAI85E,EAAO95E,IAAI,SACrC,GAAyB,IAArByB,UAAU7U,OAAc,CACjC,IAAI0Z,EAAK7E,UAAU,GACfzS,EAAKyS,UAAU,GACnB,GAAItV,KAAKytF,QAEP,OADAztF,KAAK4tF,WAAWzzE,EAAItX,GACb,KAET,IAAIwE,EAAO8S,EAAGmJ,SAASzgB,GACnBwE,EAAOrH,KAAK81D,WAAa91D,KAAK4tF,WAAWzzE,EAAItX,EAAIwE,KAGzD0tF,GAAoBjwF,UAAU8oF,WAAa,WACzC,GAAyB,IAArBt4E,UAAU7U,OACZT,KAAKytF,SAAU,OACV,GAAyB,IAArBn4E,UAAU7U,OAAc,CACjC,IAAI0Z,EAAK7E,UAAU,GACfzS,EAAKyS,UAAU,GACnBtV,KAAK6T,IAAI,GAAG2P,cAAcrJ,GAC1Bna,KAAK6T,IAAI,GAAG2P,cAAc3gB,GAC1B7C,KAAK81D,UAAY37C,EAAGmJ,SAASzgB,GAC7B7C,KAAKytF,SAAU,OACV,GAAyB,IAArBn4E,UAAU7U,OAAc,CACjC,IAAI+sD,EAAOl4C,UAAU,GACjB4b,EAAO5b,UAAU,GACjBgO,EAAWhO,UAAU,GACzBtV,KAAK6T,IAAI,GAAG2P,cAAcgqC,GAC1BxtD,KAAK6T,IAAI,GAAG2P,cAAc0N,GAC1BlxB,KAAK81D,UAAYxyC,EACjBtjB,KAAKytF,SAAU,IAGnBsH,GAAoBjwF,UAAUme,SAAW,WACvC,OAAOsV,GAAUE,aAAaz4B,KAAK6T,IAAI,GAAI7T,KAAK6T,IAAI,KAEtDkhF,GAAoBjwF,UAAUgyD,YAAc,WAC1C,OAAO92D,KAAK81D,WAEdi/B,GAAoBjwF,UAAU+oF,WAAa,WACzC,GAAyB,IAArBv4E,UAAU7U,OAAc,CAC1B,IAAIktF,EAASr4E,UAAU,GACvBtV,KAAK6tF,WAAWF,EAAO95E,IAAI,GAAI85E,EAAO95E,IAAI,SACrC,GAAyB,IAArByB,UAAU7U,OAAc,CACjC,IAAI0Z,EAAK7E,UAAU,GACfzS,EAAKyS,UAAU,GACnB,GAAItV,KAAKytF,QAEP,OADAztF,KAAK4tF,WAAWzzE,EAAItX,GACb,KAET,IAAIwE,EAAO8S,EAAGmJ,SAASzgB,GACnBwE,EAAOrH,KAAK81D,WAAa91D,KAAK4tF,WAAWzzE,EAAItX,EAAIwE,KAGzD0tF,GAAoBjwF,UAAUyb,YAAc,WAC1C,MAAO,IAETw0E,GAAoBjwF,UAAU0b,SAAW,WACvC,OAAOu0E,IAGT,IAAIC,GAAkB,aAEtBA,GAAgBlwF,UAAUyb,YAAc,WACtC,MAAO,IAETy0E,GAAgBlwF,UAAU0b,SAAW,WACnC,OAAOw0E,IAETA,GAAgBjH,gBAAkB,WAChC,GAAIz4E,UAAU,aAAcy/E,IAAwBz/E,UAAU,aAAco9B,IAAcp9B,UAAU,aAAcyM,GAMhH,IALA,IAAI8V,EAAOviB,UAAU,GACjB/N,EAAK+N,UAAU,GACfq4E,EAASr4E,UAAU,GACnB04E,EAAc,IAAIhtB,GAClBzpC,EAASM,EAAKoY,iBACTpxC,EAAI,EAAGA,EAAI04B,EAAO92B,OAAS,EAAG5B,IAAK,CAC1CmvF,EAAY/qB,eAAe1rC,EAAO14B,GAAI04B,EAAO14B,EAAI,IACjD,IAAImjE,EAAYgsB,EAAYnnF,aAAaU,GACzComF,EAAOD,WAAW1rB,EAAWz6D,QAE1B,GAAI+N,UAAU,aAAcy/E,IAAwBz/E,UAAU,aAAcmhC,IAAWnhC,UAAU,aAAcyM,GAAa,CACjI,IAAI1Y,EAAOiM,UAAU,GACjB24E,EAAO34E,UAAU,GACjB44E,EAAW54E,UAAU,GACzB0/E,GAAgBjH,gBAAgB1kF,EAAK+tC,kBAAmB62C,EAAMC,GAC9D,IAAK,IAAI3tD,EAAM,EAAGA,EAAMl3B,EAAKstC,qBAAsBpW,IACjDy0D,GAAgBjH,gBAAgB1kF,EAAKuuC,iBAAiBrX,GAAM0tD,EAAMC,QAE/D,GAAI54E,UAAU,aAAcy/E,IAAwBz/E,UAAU,aAAcqtB,IAAYrtB,UAAU,aAAcyM,GAAa,CAClI,IAAIxZ,EAAO+M,UAAU,GACjB64E,EAAO74E,UAAU,GACjB84E,EAAW94E,UAAU,GACzB,GAAI/M,aAAgBmqC,GAClBsiD,GAAgBjH,gBAAgBxlF,EAAM4lF,EAAMC,QACvC,GAAI7lF,aAAgBkuC,GACzBu+C,GAAgBjH,gBAAgBxlF,EAAM4lF,EAAMC,QACvC,GAAI7lF,aAAgBwnC,GAEzB,IADA,IAAIe,EAAKvoC,EACA0gC,EAAM,EAAGA,EAAM6H,EAAGrM,mBAAoBwE,IAAO,CACpD,IAAI/E,EAAI4M,EAAGhN,aAAamF,GACxB+rD,GAAgBjH,gBAAgB7pD,EAAGiqD,EAAMC,QAG3CA,EAASV,WAAWnlF,EAAKonB,gBAAiBw+D,QAEvC,GAAI74E,UAAU,aAAcy/E,IAAwBz/E,UAAU,aAAc0rD,IAAe1rD,UAAU,aAAcyM,GAAa,CACrI,IAAIxX,EAAU+K,UAAU,GACpB+4E,EAAO/4E,UAAU,GACjBg5E,EAAWh5E,UAAU,GACrBi5E,EAAchkF,EAAQ1D,aAAawnF,GACvCC,EAASZ,WAAWa,EAAaF,KAIrC,IAAI4G,GAA4B,WAC9Bj1F,KAAKk1F,IAAM,KACXl1F,KAAKm1F,IAAM,KACXn1F,KAAKo1F,QAAU,IAAIL,GACnB/0F,KAAKq1F,aAAe,EACpB,IAAI3C,EAAKp9E,UAAU,GACfq9E,EAAKr9E,UAAU,GACnBtV,KAAKk1F,IAAMxC,EACX1yF,KAAKm1F,IAAMxC,GAGT2C,GAAqB,CAAE3G,uBAAwB,CAAEpqF,cAAc,GAAOgxF,qCAAsC,CAAEhxF,cAAc,IAChI0wF,GAA0BnwF,UAAUmrC,eAAiB,WACnD,OAAOjwC,KAAKo1F,QAAQnlD,kBAEtBglD,GAA0BnwF,UAAU0wF,mBAAqB,SAA6BC,GACpF,GAAIA,EAAc,GAAOA,GAAe,EAAO,MAAM,IAAI50E,GAAyB,wCAClF7gB,KAAKq1F,aAAeI,GAEtBR,GAA0BnwF,UAAU4wF,QAAU,SAAkBhD,EAAIC,GAClE3yF,KAAK21F,wBAAwBjD,EAAIC,EAAI3yF,KAAKo1F,SAC1Cp1F,KAAK21F,wBAAwBhD,EAAID,EAAI1yF,KAAKo1F,UAE5CH,GAA0BnwF,UAAUwe,SAAW,WAE7C,OADAtjB,KAAK01F,QAAQ11F,KAAKk1F,IAAKl1F,KAAKm1F,KACrBn1F,KAAKo1F,QAAQt+B,eAEtBm+B,GAA0BnwF,UAAU6wF,wBAA0B,SAAkCC,EAAcrtF,EAAMolF,GAClH,IAAImB,EAAa,IAAI+G,GAAyBttF,GAG9C,GAFAqtF,EAAapgE,MAAMs5D,GACnBnB,EAAOE,WAAWiB,EAAWC,uBACzB/uF,KAAKq1F,aAAe,EAAG,CACzB,IAAIS,EAAa,IAAIP,GAAqChtF,EAAMvI,KAAKq1F,cACrEO,EAAapgE,MAAMsgE,GACnBnI,EAAOE,WAAWiI,EAAW/G,yBAGjCkG,GAA0BnwF,UAAUixF,iBAAmB,WAErD,OADA/1F,KAAK21F,wBAAwB31F,KAAKk1F,IAAKl1F,KAAKm1F,IAAKn1F,KAAKo1F,SAC/Cp1F,KAAKo1F,QAAQt+B,eAEtBm+B,GAA0BnwF,UAAUyb,YAAc,WAChD,MAAO,IAET00E,GAA0BnwF,UAAU0b,SAAW,WAC7C,OAAOy0E,IAETA,GAA0B3xE,SAAW,WACnC,GAAyB,IAArBhO,UAAU7U,OAAc,CAC1B,IAAIiyF,EAAKp9E,UAAU,GACfq9E,EAAKr9E,UAAU,GAEnB,OADW,IAAI2/E,GAA0BvC,EAAIC,GACjCrvE,WACP,GAAyB,IAArBhO,UAAU7U,OAAc,CACjC,IAAImyF,EAAOt9E,UAAU,GACjBu9E,EAAOv9E,UAAU,GACjBmgF,EAAcngF,UAAU,GACxBq/E,EAAS,IAAIM,GAA0BrC,EAAMC,GAEjD,OADA8B,EAAOa,mBAAmBC,GACnBd,EAAOrxE,aAGlBgyE,GAAmB3G,uBAAuB3iF,IAAM,WAAc,OAAO6pF,IACrEP,GAAmBC,qCAAqCvpF,IAAM,WAAc,OAAOupF,IAEnF9wF,OAAOid,iBAAkBuzE,GAA2BK,IAEpD,IAAIO,GAA2B,WAC7B71F,KAAKyuF,WAAa,IAAIsG,GACtB/0F,KAAKovF,WAAa,IAAI2F,GACtB/0F,KAAKg2F,eAAiB,IAAIhB,GAC1Bh1F,KAAK6xC,MAAQ,KACb,IAAItpC,EAAO+M,UAAU,GACrBtV,KAAK6xC,MAAQtpC,GAEfstF,GAAyB/wF,UAAU49B,OAAS,SAAiBn7B,GAC3DvH,KAAKovF,WAAWxB,aAChBoH,GAAgBjH,gBAAgB/tF,KAAK6xC,MAAOtqC,EAAIvH,KAAKovF,YACrDpvF,KAAKyuF,WAAWZ,WAAW7tF,KAAKovF,aAElCyG,GAAyB/wF,UAAUiqF,oBAAsB,WACvD,OAAO/uF,KAAKyuF,YAEdoH,GAAyB/wF,UAAUyb,YAAc,WAC/C,MAAO,CAAC2lB,KAEV2vD,GAAyB/wF,UAAU0b,SAAW,WAC5C,OAAOq1E,IAGT,IAAIN,GAAuC,WACzCv1F,KAAKyuF,WAAa,IAAIsG,GACtB/0F,KAAKovF,WAAa,IAAI2F,GACtB/0F,KAAK6xC,MAAQ,KACb7xC,KAAKi2F,YAAc,EACnB,IAAI1tF,EAAO+M,UAAU,GACjB4gF,EAAW5gF,UAAU,GACzBtV,KAAK6xC,MAAQtpC,EACbvI,KAAKi2F,YAAczzF,KAAK4d,MAAM5d,KAAKuF,MAAM,EAAMmuF,KAEjDX,GAAqCzwF,UAAU49B,OAAS,SAAiBkN,EAAKxuC,GAG5E,GAAc,IAAVA,EAAe,OAAO,KAK1B,IAJA,IAAI+Y,EAAKy1B,EAAIjgB,cAAcvuB,EAAQ,GAC/ByB,EAAK+sC,EAAIjgB,cAAcvuB,GACvB+0F,GAAQtzF,EAAGnD,EAAIya,EAAGza,GAAKM,KAAKi2F,YAC5BG,GAAQvzF,EAAG3D,EAAIib,EAAGjb,GAAKc,KAAKi2F,YACvBp3F,EAAI,EAAGA,EAAImB,KAAKi2F,YAAap3F,IAAK,CACzC,IAAIa,EAAIya,EAAGza,EAAIb,EAAIs3F,EACfj3F,EAAIib,EAAGjb,EAAIL,EAAIu3F,EACf7uF,EAAK,IAAIwa,GAAWriB,EAAGR,GAVdc,KAWNovF,WAAWxB,aAClBoH,GAAgBjH,gBAZH/tF,KAY0B6xC,MAAOtqC,EAZjCvH,KAY4CovF,YAZ5CpvF,KAaNyuF,WAAWZ,WAbL7tF,KAauBovF,cAGxCmG,GAAqCzwF,UAAU+qC,OAAS,WACtD,OAAO,GAET0lD,GAAqCzwF,UAAUgrC,kBAAoB,WACjE,OAAO,GAETylD,GAAqCzwF,UAAUiqF,oBAAsB,WACnE,OAAO/uF,KAAKyuF,YAEd8G,GAAqCzwF,UAAUyb,YAAc,WAC3D,MAAO,CAACovB,KAEV4lD,GAAqCzwF,UAAU0b,SAAW,WACxD,OAAO+0E,IAGT,IAAIc,GAA0B,SAAkCC,EAAOvhB,EAAa13D,GAClFrd,KAAKu2F,kBAAoB,KACzBv2F,KAAKw2F,kBAAoB,KACzBx2F,KAAKy2F,kBAAoB,KACzBz2F,KAAK02F,kBAAoB,KACzB12F,KAAK22F,UAAW,EAChB32F,KAAK42F,QAAU,KACf52F,KAAK62F,eAAiB,KACtB72F,KAAK82F,gBAAkB,KACvB92F,KAAK+2F,OAAST,GAAS,KACvBt2F,KAAKg3F,aAAejiB,GAAe,KACnC/0E,KAAKo5B,QAAU/b,GAAU,MAGvB45E,GAAqB,CAAEC,QAAS,CAAE3yF,cAAc,GAAO4yF,uBAAwB,CAAE5yF,cAAc,IACnG8xF,GAAwBvxF,UAAUsyF,qBAAuB,SAA+Bd,EAAOe,EAAUC,GACvG,IAAIC,EAAO,IAAItC,GAA0BoC,EAAUf,GAGnD,GAFAiB,EAAK/B,mBAAmB,KACxBx1F,KAAK02F,kBAAoBa,EAAKxB,mBAC1B/1F,KAAK02F,kBAAoBY,EAAS,CACpCt3F,KAAK22F,UAAW,EAChB,IAAIj1D,EAAM61D,EAAKtnD,iBACfjwC,KAAK62F,eAAiBn1D,EAAI,GAC1B1hC,KAAK82F,gBAAkBR,EAAMzyD,aAAalM,iBAAiB+J,GAC3D1hC,KAAK42F,QAAU,yDAA2D52F,KAAK02F,kBAAoB,OAASn+D,GAAUE,aAAaiJ,EAAI,GAAIA,EAAI,IAAM,MAGzJ20D,GAAwBvxF,UAAUizC,QAAU,WAC1C,IAAIg8B,EAAcvxE,KAAKiP,IAAIzR,KAAKg3F,cAC5BQ,EAAYnB,GAAwBc,uBAAyBpjB,EAGjE,OAFA/zE,KAAKu2F,kBAAoBxiB,EAAcyjB,EACvCx3F,KAAKw2F,kBAAoBziB,EAAcyjB,KACnCx3F,KAAK+2F,OAAOjhE,YAAa91B,KAAKo5B,QAAQtD,aACtC91B,KAAKg3F,aAAe,EACtBh3F,KAAKy3F,qBAELz3F,KAAK03F,qBAEHrB,GAAwBa,SAC1B5mE,GAAOjtB,IAAIm6B,QAAQ,aAAex9B,KAAKy2F,kBAAoB,WAAa,EAAMz2F,KAAKy2F,kBAAoBz2F,KAAKg3F,cAAgB,eAAiBh3F,KAAK02F,kBAAoB,WAAa12F,KAAK02F,kBAAoB12F,KAAKg3F,aAAe,IAE3Nh3F,KAAK22F,WAEdN,GAAwBvxF,UAAU4yF,mBAAqB,WACrD,KAAM13F,KAAK+2F,kBAAkBtgD,IAAWz2C,KAAK+2F,kBAAkB3+C,IAAgBp4C,KAAK+2F,kBAAkBhnD,IACpG,OAAO,KAET,IAAI4nD,EAAa33F,KAAK43F,gBAAgB53F,KAAK+2F,QAE3C,GADA/2F,KAAK63F,qBAAqBF,EAAY33F,KAAKo5B,QAASp5B,KAAKu2F,oBACpDv2F,KAAK22F,SAAY,OAAO,KAC7B32F,KAAKo3F,qBAAqBO,EAAY33F,KAAKo5B,QAASp5B,KAAKw2F,oBAE3DH,GAAwBvxF,UAAUgzF,kBAAoB,WACpD,OAAO93F,KAAK82F,iBAEdT,GAAwBvxF,UAAU+yF,qBAAuB,SAA+BlF,EAAIrX,EAAIp8C,GAC9F,IAAI64D,EAAS,IAAI1F,GAAWM,EAAIrX,EAAIp8C,GAEpC,GADAl/B,KAAKy2F,kBAAoBsB,EAAOz0E,WAC5BtjB,KAAKy2F,kBAAoBv3D,EAAS,CACpCl/B,KAAK22F,UAAW,EAChB,IAAIj1D,EAAMq2D,EAAO3D,gBACjBp0F,KAAK62F,eAAiBkB,EAAO3D,gBAAgB,GAC7Cp0F,KAAK82F,gBAAkBnE,EAAG9uD,aAAalM,iBAAiB+J,GACxD1hC,KAAK42F,QAAU,yDAA2D52F,KAAKy2F,kBAAoB,OAASl+D,GAAUE,aAAaiJ,EAAI,GAAIA,EAAI,IAAM,OAGzJ20D,GAAwBvxF,UAAU2yF,mBAAqB,WACrD,IAAIJ,EAAWr3F,KAAKo5B,QAAQiY,cAE5B,GADArxC,KAAK63F,qBAAqB73F,KAAK+2F,OAAQM,EAAUr3F,KAAKu2F,oBACjDv2F,KAAK22F,SAAY,OAAO,KAC7B32F,KAAKo3F,qBAAqBp3F,KAAK+2F,OAAQM,EAAUr3F,KAAKw2F,oBAExDH,GAAwBvxF,UAAUkzF,iBAAmB,WACnD,OAAOh4F,KAAK62F,gBAEdR,GAAwBvxF,UAAU8yF,gBAAkB,SAA0B1zD,GAI5E,IAHA,IAAInM,EAAQ,IAAIyP,GACZywD,EAAgB,IAAIxI,GAAyB13D,GAExCl5B,EADGywF,GAAiBt8B,YAAY9uB,GACtBuB,WAAY5mC,EAAE6mC,WAAY,CAChC7mC,EAAE6C,OACR8zB,MAAMyiE,GAEb,OAAO/zD,EAAEL,aAAayY,cAAcvkB,IAEtCs+D,GAAwBvxF,UAAUozF,gBAAkB,WAClD,OAAOl4F,KAAK42F,SAEdP,GAAwBvxF,UAAUyb,YAAc,WAC9C,MAAO,IAET81E,GAAwBvxF,UAAU0b,SAAW,WAC3C,OAAO61E,IAETY,GAAmBC,QAAQlrF,IAAM,WAAc,OAAO,GACtDirF,GAAmBE,uBAAuBnrF,IAAM,WAAc,MAAO,MAErEvH,OAAOid,iBAAkB20E,GAAyBY,IAElD,IAAIkB,GAAwB,SAAgC7B,EAAOhzE,EAAUjG,GAC3Erd,KAAK22F,UAAW,EAChB32F,KAAKo4F,UAAY,KACjBp4F,KAAK62F,eAAiB,KACtB72F,KAAK82F,gBAAkB,KACvB92F,KAAK+2F,OAAST,GAAS,KACvBt2F,KAAK81D,UAAYxyC,GAAY,KAC7BtjB,KAAKo5B,QAAU/b,GAAU,MAGvBg7E,GAAqB,CAAEnB,QAAS,CAAE3yF,cAAc,GAAO+zF,kBAAmB,CAAE/zF,cAAc,IAC9F4zF,GAAsBrzF,UAAUizC,QAAU,WAExC,OADA/3C,KAAKu4F,iBACAv4F,KAAK22F,UACV32F,KAAKw4F,qBACAx4F,KAAK22F,UACV32F,KAAKy4F,gBACAz4F,KAAK22F,UACV32F,KAAK04F,YACA14F,KAAK22F,UACV32F,KAAK24F,gBACE34F,KAAK22F,UAFiB32F,KAAK22F,UAFL32F,KAAK22F,UAFL32F,KAAK22F,UAFL32F,KAAK22F,UAUpCwB,GAAsBrzF,UAAU2zF,cAAgB,WAC9C,GAAIz4F,KAAK81D,UAAY,EAAO,OAAO,KACnC,IAAI8iC,EAAU54F,KAAK81D,UAAYqiC,GAAsBG,kBACrC,IAAZM,IAAmBA,EAAU,MACjC,IAAIC,EAAc,IAAI5mE,GAASjyB,KAAK+2F,OAAOhyD,uBAC3C8zD,EAAYhlE,SAAS7zB,KAAK81D,WAC1B,IAAIgjC,EAAS,IAAI7mE,GAASjyB,KAAKo5B,QAAQ2L,uBACvC+zD,EAAOjlE,SAAS+kE,GACXE,EAAO9kE,SAAS6kE,KACnB74F,KAAK22F,UAAW,EAChB32F,KAAKo4F,UAAY,+BACjBp4F,KAAK82F,gBAAkB92F,KAAK+2F,OAAOlzD,aAAaiB,WAAWg0D,IAE7D94F,KAAK+4F,OAAO,aAEdZ,GAAsBrzF,UAAU6zF,cAAgB,WAC9C,IAAIK,EAAY,IAAI3C,GAAwBr2F,KAAK+2F,OAAQ/2F,KAAK81D,UAAW91D,KAAKo5B,SACzE4/D,EAAUjhD,YACb/3C,KAAK22F,UAAW,EAChB32F,KAAKo4F,UAAYY,EAAUd,kBAC3Bl4F,KAAK62F,eAAiBmC,EAAUhB,mBAChCh4F,KAAK82F,gBAAkBkC,EAAUlB,qBAEnC93F,KAAK+4F,OAAO,aAEdZ,GAAsBrzF,UAAU4zF,UAAY,WAC1C,IAAIO,EAAYj5F,KAAK+2F,OAAOxkE,UACxB2mE,EAAal5F,KAAKo5B,QAAQ7G,UAC1BvyB,KAAK81D,UAAY,GAAOmjC,EAAYC,IACtCl5F,KAAK22F,UAAW,EAChB32F,KAAKo4F,UAAY,gDACjBp4F,KAAK82F,gBAAkB92F,KAAKo5B,SAE1Bp5B,KAAK81D,UAAY,GAAOmjC,EAAYC,IACtCl5F,KAAK22F,UAAW,EAChB32F,KAAKo4F,UAAY,+CACjBp4F,KAAK82F,gBAAkB92F,KAAKo5B,SAE9Bp5B,KAAK+4F,OAAO,SAEdZ,GAAsBrzF,UAAUyzF,eAAiB,WACzCv4F,KAAKo5B,mBAAmBqd,IAAWz2C,KAAKo5B,mBAAmBgf,KAAiBp4C,KAAK22F,UAAW,GAClG32F,KAAKo4F,UAAY,0BACjBp4F,KAAK82F,gBAAkB92F,KAAKo5B,QAC5Bp5B,KAAK+4F,OAAO,cAEdZ,GAAsBrzF,UAAUgzF,kBAAoB,WAClD,OAAO93F,KAAK82F,iBAEdqB,GAAsBrzF,UAAUkzF,iBAAmB,WACjD,OAAOh4F,KAAK62F,gBAEdsB,GAAsBrzF,UAAU0zF,mBAAqB,WACnD,OAAIx4F,KAAK+2F,OAAOlnE,gBAAkB,EAAY,KAC1C7vB,KAAK81D,UAAY,EAAc,MAC9B91D,KAAKo5B,QAAQtD,YAChB91B,KAAK22F,UAAW,EAChB32F,KAAKo4F,UAAY,sBACjBp4F,KAAK82F,gBAAkB92F,KAAKo5B,cAE9Bp5B,KAAK+4F,OAAO,mBAEdZ,GAAsBrzF,UAAUi0F,OAAS,SAAiBI,GACxD,IAAKhB,GAAsBjB,QAAW,OAAO,KAC7C5mE,GAAOjtB,IAAIm6B,QAAQ,SAAW27D,EAAY,MAAQn5F,KAAK22F,SAAW,SAAW,YAE/EwB,GAAsBrzF,UAAUozF,gBAAkB,WAChD,OAAOl4F,KAAKo4F,WAEdD,GAAsBrzF,UAAUyb,YAAc,WAC5C,MAAO,IAET43E,GAAsBrzF,UAAU0b,SAAW,WACzC,OAAO23E,IAETA,GAAsBiB,WAAa,SAAqBl1D,EAAG5gB,EAAUjG,GACnE,IAAIg8E,EAAY,IAAIlB,GAAsBj0D,EAAG5gB,EAAUjG,GACvD,OAAKg8E,EAAUthD,UACR,KAD4BshD,EAAUnB,mBAG/CC,GAAsBpgD,QAAU,SAAkB7T,EAAG5gB,EAAUjG,GAE7D,QADgB,IAAI86E,GAAsBj0D,EAAG5gB,EAAUjG,GACzC06B,WAGhBsgD,GAAmBnB,QAAQlrF,IAAM,WAAc,OAAO,GACtDqsF,GAAmBC,kBAAkBtsF,IAAM,WAAc,MAAO,MAEhEvH,OAAOid,iBAAkBy2E,GAAuBE,IAIhD,IAAIiB,GAAqB,WACvBt5F,KAAKgnD,KAAO,KACZhnD,KAAKigE,MAAQ,KACb,IAAIv+B,EAAMpsB,UAAU,GAChBhX,EAAOgX,UAAU,GACrBtV,KAAKgnD,KAAOtlB,EACZ1hC,KAAKigE,MAAQ3hE,GAEfg7F,GAAmBx0F,UAAUmrC,eAAiB,WAC5C,OAAOjwC,KAAKgnD,MAEdsyC,GAAmBx0F,UAAUhD,KAAO,WAClC,OAAO9B,KAAKgnD,KAAKvmD,QAEnB64F,GAAmBx0F,UAAU6qB,cAAgB,SAAwB9wB,GACnE,OAAOmB,KAAKgnD,KAAKnoD,IAEnBy6F,GAAmBx0F,UAAU0sC,SAAW,WACtC,OAAOxxC,KAAKgnD,KAAK,GAAG1sC,OAAOta,KAAKgnD,KAAKhnD,KAAKgnD,KAAKvmD,OAAS,KAE1D64F,GAAmBx0F,UAAUm6D,iBAAmB,SAA2B79D,GACzE,OAAIA,IAAUpB,KAAKgnD,KAAKvmD,OAAS,GAAa,EACvC8+D,GAAOhD,OAAOv8D,KAAK2vB,cAAcvuB,GAAQpB,KAAK2vB,cAAcvuB,EAAQ,KAE7Ek4F,GAAmBx0F,UAAU+6D,QAAU,SAAkBvhE,GACvD0B,KAAKigE,MAAQ3hE,GAEfg7F,GAAmBx0F,UAAUi6D,QAAU,WACrC,OAAO/+D,KAAKigE,OAEdq5B,GAAmBx0F,UAAUme,SAAW,WACtC,OAAOsV,GAAUE,aAAa,IAAIghB,GAAwBz5C,KAAKgnD,QAEjEsyC,GAAmBx0F,UAAUyb,YAAc,WACzC,MAAO,CAACq/C,KAEV05B,GAAmBx0F,UAAU0b,SAAW,WACtC,OAAO84E,IAGT,IAAIC,GAA6B,WAC/Bv5F,KAAKw5F,uBAAwB,EAC7Bx5F,KAAKy5F,yBAA0B,EAC/Bz5F,KAAKyvE,IAAM,KACXzvE,KAAK05F,sBAAwB,KAC7B15F,KAAK25F,aAAe,KACpB35F,KAAK45F,eAAiB,IAAIpyD,GAC1BxnC,KAAK65F,mBAAqB,EAC1B75F,KAAK85F,oBAAqB,EAC1B,IAAIz5B,EAAK/qD,UAAU,GACnBtV,KAAKyvE,IAAMpP,EACXrgE,KAAK05F,sBAAwB,MAE/BH,GAA2Bz0F,UAAUi1F,wBAA0B,WAC7D,OAAO/5F,KAAK05F,uBAEdH,GAA2Bz0F,UAAUk1F,wBAA0B,SAAkCC,GAC/Fj6F,KAAKy5F,wBAA0BQ,GAEjCV,GAA2Bz0F,UAAUo1F,wBAA0B,WAC7D,OAAOl6F,KAAK25F,cAEdJ,GAA2Bz0F,UAAUquC,MAAQ,WAC3C,OAAOnzC,KAAK65F,oBAEdN,GAA2Bz0F,UAAUq1F,iBAAmB,WACtD,OAAOn6F,KAAK45F,gBAEdL,GAA2Bz0F,UAAUs1F,wBAA0B,SAAkCC,GAC/Fr6F,KAAKw5F,sBAAwBa,GAE/Bd,GAA2Bz0F,UAAUw1F,qBAAuB,SAA+BC,GACzFv6F,KAAK85F,mBAAqBS,GAE5BhB,GAA2Bz0F,UAAUujE,qBAAuB,SAA+B6X,EAAIC,EAAW1lE,EAAI2lE,GAC5G,IAAKpgF,KAAKw5F,uBAAyBx5F,KAAKm7B,kBAAqB,OAAO,KACpE,GAAI+kD,IAAOzlE,GAAM0lE,IAAcC,EAAa,OAAO,KACnD,GAAIpgF,KAAKy5F,2BACez5F,KAAKw6F,aAAata,EAAIC,IAAcngF,KAAKw6F,aAAa//E,EAAI2lE,IACxD,OAAO,KAEjC,IAAI1a,EAAMwa,EAAGjwC,iBAAiBkwC,GAC1Bxa,EAAMua,EAAGjwC,iBAAiBkwC,EAAY,GACtCva,EAAMnrD,EAAGw1B,iBAAiBmwC,GAC1Bva,EAAMprD,EAAGw1B,iBAAiBmwC,EAAY,GAC1CpgF,KAAKyvE,IAAI70C,oBAAoB8qC,EAAKC,EAAKC,EAAKC,GACxC7lE,KAAKyvE,IAAIt0C,mBACPn7B,KAAKyvE,IAAIn0C,2BACXt7B,KAAK25F,aAAe,IAAIlxF,MAAM,GAAGwjB,KAAK,MACtCjsB,KAAK25F,aAAa,GAAKj0B,EACvB1lE,KAAK25F,aAAa,GAAKh0B,EACvB3lE,KAAK25F,aAAa,GAAK/zB,EACvB5lE,KAAK25F,aAAa,GAAK9zB,EACvB7lE,KAAK05F,sBAAwB15F,KAAKyvE,IAAI95D,gBAAgB,GAClD3V,KAAK85F,oBAAsB95F,KAAK45F,eAAe35F,IAAID,KAAK05F,uBAC5D15F,KAAK65F,uBAIXN,GAA2Bz0F,UAAU01F,aAAe,SAAuB7yB,EAAQvmE,GACjF,OAAc,IAAVA,GACAA,GAASumE,EAAO7lE,OAAS,GAG/By3F,GAA2Bz0F,UAAUq2B,gBAAkB,WACrD,OAAsC,OAA/Bn7B,KAAK05F,uBAEdH,GAA2Bz0F,UAAU+qC,OAAS,WAC5C,OAAI7vC,KAAKw5F,uBAC6B,OAA/Bx5F,KAAK05F,uBAEdH,GAA2Bz0F,UAAUyb,YAAc,WACjD,MAAO,CAAC0/D,KAEVsZ,GAA2Bz0F,UAAU0b,SAAW,WAC9C,OAAO+4E,IAETA,GAA2BkB,6BAA+B,SAAuCp6B,GAC/F,IAAIq6B,EAAS,IAAInB,GAA2Bl5B,GAE5C,OADAq6B,EAAON,yBAAwB,GACxBM,GAETnB,GAA2BoB,4BAA8B,SAAsCt6B,GAC7F,OAAO,IAAIk5B,GAA2Bl5B,IAExCk5B,GAA2BqB,0BAA4B,SAAoCv6B,GACzF,IAAIq6B,EAAS,IAAInB,GAA2Bl5B,GAG5C,OAFAq6B,EAAON,yBAAwB,GAC/BM,EAAOJ,sBAAqB,GACrBI,GAGT,IAAIG,GAAsB,WACxB76F,KAAKyvE,IAAM,IAAIzzC,GACfh8B,KAAK+mF,YAAc,KACnB/mF,KAAKw5F,uBAAwB,EAC7Bx5F,KAAK6mE,QAAU,KACf7mE,KAAK22F,UAAW,EAChB,IAAI/1B,EAAatrD,UAAU,GAC3BtV,KAAK+mF,YAAcnmB,GAErBi6B,GAAoB/1F,UAAUg2F,QAAU,WACtC,GAAqB,OAAjB96F,KAAK6mE,QAAoB,OAAO,KACpC7mE,KAAKknF,8BAEP2T,GAAoB/1F,UAAUq1F,iBAAmB,WAC/C,OAAOn6F,KAAK6mE,QAAQszB,oBAEtBU,GAAoB/1F,UAAUizC,QAAU,WAEtC,OADA/3C,KAAK86F,UACE96F,KAAK22F,UAEdkE,GAAoB/1F,UAAUs1F,wBAA0B,SAAkCC,GACxFr6F,KAAKw5F,sBAAwBa,GAE/BQ,GAAoB/1F,UAAUoiF,2BAA6B,WACzDlnF,KAAK22F,UAAW,EAChB32F,KAAK6mE,QAAU,IAAI0yB,GAA2Bv5F,KAAKyvE,KACnDzvE,KAAK6mE,QAAQuzB,wBAAwBp6F,KAAKw5F,uBAC1C,IAAIrU,EAAQ,IAAIne,GAGhB,GAFAme,EAAMpe,sBAAsB/mE,KAAK6mE,SACjCse,EAAMxe,aAAa3mE,KAAK+mF,aACpB/mF,KAAK6mE,QAAQ1rC,kBAEf,OADAn7B,KAAK22F,UAAW,EACT,MAGXkE,GAAoB/1F,UAAUyiF,WAAa,WAEzC,GADAvnF,KAAK86F,WACA96F,KAAK22F,SAAY,MAAM,IAAIl1C,GAAkBzhD,KAAKk4F,kBAAmBl4F,KAAK6mE,QAAQkzB,4BAEzFc,GAAoB/1F,UAAUozF,gBAAkB,WAC9C,GAAIl4F,KAAK22F,SAAY,MAAO,yBAC5B,IAAIoE,EAAU/6F,KAAK6mE,QAAQqzB,0BAC3B,MAAO,wCAA0C3hE,GAAUE,aAAasiE,EAAQ,GAAIA,EAAQ,IAAM,QAAUxiE,GAAUE,aAAasiE,EAAQ,GAAIA,EAAQ,KAEzJF,GAAoB/1F,UAAUyb,YAAc,WAC1C,MAAO,IAETs6E,GAAoB/1F,UAAU0b,SAAW,WACvC,OAAOq6E,IAETA,GAAoBG,qBAAuB,SAA+Bp6B,GACxE,IAAImqB,EAAK,IAAI8P,GAAoBj6B,GAGjC,OAFAmqB,EAAGqP,yBAAwB,GAC3BrP,EAAGhzC,UACIgzC,EAAGoP,oBAGZ,IAAIc,GAAsB,SAASA,IACjCj7F,KAAKk7F,IAAM,KACX,IAAItwC,EAAQt1C,UAAU,GACtBtV,KAAKk7F,IAAM,IAAIL,GAAoBI,EAAoBE,iBAAiBvwC,KAE1EqwC,GAAoBn2F,UAAUyiF,WAAa,WACzCvnF,KAAKk7F,IAAI3T,cAEX0T,GAAoBn2F,UAAUyb,YAAc,WAC1C,MAAO,IAET06E,GAAoBn2F,UAAU0b,SAAW,WACvC,OAAOy6E,IAETA,GAAoBE,iBAAmB,SAA2BvwC,GAEhE,IADA,IAAIgW,EAAa,IAAIp5B,GACZ3oC,EAAI+rD,EAAMnlB,WAAY5mC,EAAE6mC,WAAY,CAC3C,IAAIhqB,EAAI7c,EAAE6C,OACVk/D,EAAW3gE,IAAI,IAAIq5F,GAAmB59E,EAAEu0B,iBAAkBv0B,IAE5D,OAAOklD,GAETq6B,GAAoB1T,WAAa,SAAqB38B,GACpC,IAAIqwC,GAAoBrwC,GAC9B28B,cAGZ,IAAI6T,GAA2B,SAAmCC,GAChEr7F,KAAKs7F,OAASD,GAEhBD,GAAyBt2F,UAAUw0B,IAAM,SAAcwX,GAIrD,IAHE,IAEEyqD,EAAS,IAAI/zD,GACR3oC,EAAI,EAAGA,EAAIiyC,EAAGrM,mBAAoB5lC,IAAK,CAC9C,IAAIqlC,EAJSlkC,KAIEs7F,OAAOhiE,IAAIwX,EAAGhN,aAAajlC,IACrCqlC,EAAEpO,WAAaylE,EAAOt7F,IAAIikC,GAEjC,OAAO4M,EAAGjN,aAAaxL,yBAAyBtD,GAAgB6nB,gBAAgB2+C,KAElFH,GAAyBt2F,UAAUyb,YAAc,WAC/C,MAAO,IAET66E,GAAyBt2F,UAAU0b,SAAW,WAC5C,OAAO46E,IAETA,GAAyB9hE,IAAM,SAAcwX,EAAI0qD,GAE/C,OADa,IAAIJ,GAAyBI,GAC5BliE,IAAIwX,IAGpB,IAAI2qD,GAAc,WAChBz7F,KAAK07F,IAAM,KACX17F,KAAKonD,iBAAmB,KACxBpnD,KAAKuyF,WAAa,KAClBvyF,KAAK27F,eAAiB,IAAIn0D,GAC1BxnC,KAAK47F,gBAAkB,IAAIp0D,GAC3B,IAAIg0D,EAAKlmF,UAAU,GACfwf,EAAkBxf,UAAU,GAC5BumF,EAAYvmF,UAAU,GAC1BtV,KAAK07F,IAAMF,EACXx7F,KAAKonD,iBAAmBtyB,EACxB90B,KAAKuyF,WAAasJ,GAEpBJ,GAAY32F,UAAUg3F,aAAe,SAAuBC,GAG1D,IAFE,IAEO/oD,EAAKhzC,KAAK07F,IAAIM,WAAW7qC,cAAc1rB,WAAYuN,EAAGtN,WAAY,CACzE,IAAI4a,EAAKtN,EAAGtxC,OAHC1B,KAINi8F,gBAAgB37C,EAAIy7C,EAJd/7F,KAI6B27F,gBAJ7B37F,KAKNk8F,yBAAyB57C,EAAIy7C,EALvB/7F,KAKsC27F,kBAGvDF,GAAY32F,UAAUq3F,kBAAoB,SAA4BzgF,EAAG0gF,GACvE,IAAI52C,EAAMxlD,KAAKuyF,WAAW3X,OAAOl/D,EAAEiU,gBAAiB3vB,KAAK07F,IAAIW,eAAeD,IAC5E1gF,EAAEgsC,WAAWvC,YAAYi3C,EAAa52C,IAExCi2C,GAAY32F,UAAU6yD,MAAQ,SAAgBokC,GAI5C,OAHA/7F,KAAK0+E,uBACL1+E,KAAK87F,aAAaC,GAClB/7F,KAAKs8F,WAAWP,GACT/7F,KAAK47F,iBAEdH,GAAY32F,UAAUm3F,gBAAkB,SAA0B37C,EAAIy7C,EAAQnxC,GAC5E,IAAIlE,EAAQpG,EAAGoH,WACXhsC,EAAI4kC,EAAGK,UACPL,EAAG+O,eACA/O,EAAGoC,cAAe65C,GAAUC,aAAa91C,EAAOq1C,IAAYrgF,EAAEyuC,cACjES,EAAM3qD,IAAIyb,GACV4kC,EAAGuP,gBAAe,MAIxB4rC,GAAY32F,UAAU45E,qBAAuB,WAG3C,IAFE,IAEO9tB,EAAS5wD,KAAK07F,IAAIM,WAAWh4C,WAAWve,WAAYmrB,EAAOlrB,WAAY,CACnEkrB,EAAOlvD,OACby/C,WAAWu9B,uBAElB,IAAK,IAAI1rC,EAAKhzC,KAAK07F,IAAIM,WAAW7qC,cAAc1rB,WAAYuN,EAAGtN,WAAY,CACzE,IAAI4a,EAAKtN,EAAGtxC,OACRga,EAAI4kC,EAAGK,UACX,GAAIL,EAAG+O,eAAiB3zC,EAAE0uC,eAAgB,CACxC,IAAID,EAVOnqD,KAUY07F,IAAIe,aAAan8C,EAAG3wB,iBAC3CjU,EAAE4uC,WAAWH,MAInBsxC,GAAY32F,UAAU43F,mBAAqB,SAA6BC,GAGtE,IAFE,IAEO3pD,EAAK2pD,EAAUl3D,WAAYuN,EAAGtN,WAAY,CACjD,IAAIhqB,EAAIs3B,EAAGtxC,OACPglD,EAAQhrC,EAAEgsC,WACVhsC,EAAE6rC,eACAb,EAAM/zB,OAAO,GANN3yB,KAMmBm8F,kBAAkBzgF,EAAG,GANxC1b,KAM4Dm8F,kBAAkBzgF,EAAG,MAIlG+/E,GAAY32F,UAAUw3F,WAAa,SAAqBP,GAGtD,IAFE,IAEO/oD,EAAKhzC,KAAK27F,eAAel2D,WAAYuN,EAAGtN,WAAY,CAC3D,IAAIhqB,EAAIs3B,EAAGtxC,OAEPm2B,EALS73B,KAKKonD,iBAAiBzvB,iBAAiBjc,EAAEu0B,kBALzCjwC,KAMN47F,gBAAgB37F,IAAI43B,GAC3Bnc,EAAE2nC,aAAY,KAGlBo4C,GAAY32F,UAAUo3F,yBAA2B,SAAmC57C,EAAIy7C,EAAQnxC,GAC9F,IAAIlE,EAAQpG,EAAGoH,WACf,OAAIpH,EAAG+O,aAAuB,KAC1B/O,EAAGoC,YAAsB,KACzBpC,EAAG8C,qBAA+B,KAClC9C,EAAGK,UAAUx1C,aAAuB,MACxC0tB,GAAOE,SAASunB,EAAGn1C,cAAgBm1C,EAAGgB,SAASn2C,gBAAkBm1C,EAAGK,UAAUx1C,mBAC1EoxF,GAAUC,aAAa91C,EAAOq1C,IAAWA,IAAWQ,GAAUhjF,eAChEqxC,EAAM3qD,IAAIqgD,EAAGK,WACbL,EAAGuP,gBAAe,OAGtB4rC,GAAY32F,UAAUyb,YAAc,WAClC,MAAO,IAETk7E,GAAY32F,UAAU0b,SAAW,WAC/B,OAAOi7E,IAGT,IAAImB,GAAe,WACjB58F,KAAK07F,IAAM,KACX17F,KAAKonD,iBAAmB,KACxBpnD,KAAK68F,iBAAmB,IAAIr1D,GAC5B,IAAIg0D,EAAKlmF,UAAU,GACfwf,EAAkBxf,UAAU,GAEhCtV,KAAK07F,IAAMF,EACXx7F,KAAKonD,iBAAmBtyB,GAE1B8nE,GAAa93F,UAAUg4F,yBAA2B,SAAmC15F,GACnF,IAAI6E,EAAQ7E,EAAEusB,gBACd,IAAK3vB,KAAK07F,IAAIqB,cAAc90F,GAAQ,CAClC,IAAIV,EAAKvH,KAAKonD,iBAAiB9vB,YAAYrvB,GAC3CjI,KAAK68F,iBAAiB58F,IAAIsH,KAG9Bq1F,GAAa93F,UAAUk4F,6BAA+B,SAAuCjB,GAG3F,IAFE,IAEOnrC,EAAS5wD,KAAK07F,IAAIM,WAAWh4C,WAAWve,WAAYmrB,EAAOlrB,WAAY,CAC9E,IAAItiC,EAAIwtD,EAAOlvD,OACf,IAAI0B,EAAE+H,gBACF/H,EAAEynD,2BAC2B,IAA7BznD,EAAE+9C,WAAW07B,aAAqBkf,IAAWQ,GAAUhjF,eAAc,CACvE,IAAImtC,EAAQtjD,EAAEskD,WACV60C,GAAUC,aAAa91C,EAAOq1C,IARvB/7F,KASF88F,yBAAyB15F,MAKxCw5F,GAAa93F,UAAU6yD,MAAQ,SAAgBokC,GAE7C,OADA/7F,KAAKg9F,6BAA6BjB,GAC3B/7F,KAAK68F,kBAEdD,GAAa93F,UAAUyb,YAAc,WACnC,MAAO,IAETq8E,GAAa93F,UAAU0b,SAAW,WAChC,OAAOo8E,IAGT,IAAIK,GAAsB,WACxBj9F,KAAKk5E,WAAa,KAClBl5E,KAAK6iC,SAAW,KAChB7iC,KAAKk9F,qBAAsB,EAC3Bl9F,KAAKm9F,iCAAkC,EACvCn9F,KAAKo9F,sBAAuB,EAC5Bp9F,KAAKq9F,eAAgB,GAEvBJ,GAAoBn4F,UAAUw4F,eAAiB,SAAyB/0F,EAAMnG,GAC5E,OAAOpC,KAAK6iC,SAASvL,YAAYt3B,KAAKu9F,qBAAqBh1F,EAAK4tC,wBAAyB5tC,KAE3F00F,GAAoBn4F,UAAU04F,iBAAmB,SAA2Bj1F,EAAMnG,GAC9E,IAEEq7F,GAAwB,EACxBxlE,EAAQj4B,KAAK09F,oBAAoBn1F,EAAK6uC,kBAAmB7uC,GAC/C,OAAV0vB,GAAoBA,aAAiB+f,KAAe/f,EAAMnC,YAAa2nE,GAAwB,GAEnG,IADA,IAAIvlE,EAAQ,IAAIsP,GACP3oC,EAAI,EAAGA,EAAI0J,EAAKouC,qBAAsB93C,IAAK,CAClD,IAAIy6C,EAPSt5C,KAOK09F,oBAAoBn1F,EAAKqvC,iBAAiB/4C,GAAI0J,GACnD,OAAT+wC,GAAiBA,EAAKxjB,YAGpBwjB,aAAgBtB,KAAeylD,GAAwB,GAC7DvlE,EAAMj4B,IAAIq5C,IAEZ,GAAImkD,EAAyB,OAAOz9F,KAAK6iC,SAAS7K,cAAcC,EAAOC,EAAMiP,QAAQ,KACnF,IAAIzP,EAAa,IAAI8P,GAGrB,OAFc,OAAVvP,GAAkBP,EAAWz3B,IAAIg4B,GACrCP,EAAWwP,OAAOhP,GACXl4B,KAAK6iC,SAASyZ,cAAc5kB,IAGvCulE,GAAoBn4F,UAAU64F,yBAA2B,SAAmCpmE,GAC1F,OAAOv3B,KAAK6iC,SAASuT,+BAA+Bl1B,OAAOqW,IAE7D0lE,GAAoBn4F,UAAU84F,iBAAmB,WAC/C,OAAO59F,KAAKk5E,YAEd+jB,GAAoBn4F,UAAU+4F,yBAA2B,SAAmCt1F,EAAMnG,GAIhG,IAHE,IAEE07F,EAAgB,IAAIt2D,GACf3oC,EAAI,EAAGA,EAAI0J,EAAKk8B,mBAAoB5lC,IAAK,CAChD,IAAIk/F,EAJS/9F,KAIcg+F,oBAAoBz1F,EAAKu7B,aAAajlC,GAAI0J,GAC/C,OAAlBw1F,IACAA,EAAcjoE,WAClBgoE,EAAc79F,IAAI89F,IAEpB,OAAO/9F,KAAK6iC,SAASyZ,cAAcwhD,IAErCb,GAAoBn4F,UAAUy4F,qBAAuB,SAA+BhmE,EAAQn1B,GAC1F,OAAOpC,KAAKqa,KAAKkd,IAEnB0lE,GAAoBn4F,UAAUk5F,oBAAsB,SAA8Bz1F,EAAMnG,GACtF,OAAOpC,KAAK6iC,SAASlL,iBAAiB33B,KAAKu9F,qBAAqBh1F,EAAK4tC,wBAAyB5tC,KAEhG00F,GAAoBn4F,UAAUm5F,oBAAsB,SAA8B11F,EAAMnG,GAItF,IAHE,IAEE07F,EAAgB,IAAIt2D,GACf3oC,EAAI,EAAGA,EAAI0J,EAAKk8B,mBAAoB5lC,IAAK,CAChD,IAAIk/F,EAJS/9F,KAIcs9F,eAAe/0F,EAAKu7B,aAAajlC,GAAI0J,GAC1C,OAAlBw1F,IACAA,EAAcjoE,WAClBgoE,EAAc79F,IAAI89F,IAEpB,OAAO/9F,KAAK6iC,SAASyZ,cAAcwhD,IAErCb,GAAoBn4F,UAAUo5F,sBAAwB,SAAgC31F,EAAMnG,GAI1F,IAHE,IAEE07F,EAAgB,IAAIt2D,GACf3oC,EAAI,EAAGA,EAAI0J,EAAKk8B,mBAAoB5lC,IAAK,CAChD,IAAIk/F,EAJS/9F,KAIcw9F,iBAAiBj1F,EAAKu7B,aAAajlC,GAAI0J,GAC5C,OAAlBw1F,IACAA,EAAcjoE,WAClBgoE,EAAc79F,IAAI89F,IAEpB,OAAO/9F,KAAK6iC,SAASyZ,cAAcwhD,IAErCb,GAAoBn4F,UAAUuV,KAAO,SAAeu1B,GAClD,OAAOA,EAAIv1B,QAEb4iF,GAAoBn4F,UAAUq5F,4BAA8B,SAAsC51F,EAAMnG,GAItG,IAHE,IAEE07F,EAAgB,IAAIt2D,GACf3oC,EAAI,EAAGA,EAAI0J,EAAKk8B,mBAAoB5lC,IAAK,CAChD,IAAIk/F,EAJS/9F,KAIco+F,UAAU71F,EAAKu7B,aAAajlC,IACjC,OAAlBk/F,IALS/9F,KAMFk9F,qBAAuBa,EAAcjoE,WAChDgoE,EAAc79F,IAAI89F,IAEpB,OAAI/9F,KAAKm9F,gCAA0Cn9F,KAAK6iC,SAASxK,yBAAyBtD,GAAgB6nB,gBAAgBkhD,IACnH99F,KAAK6iC,SAASyZ,cAAcwhD,IAErCb,GAAoBn4F,UAAUs5F,UAAY,SAAoB/kB,GAG5D,GAFAr5E,KAAKk5E,WAAaG,EAClBr5E,KAAK6iC,SAAWw2C,EAAUx1C,aACtBw1C,aAAqB9iC,GAAS,OAAOv2C,KAAKs9F,eAAejkB,EAAW,MACxE,GAAIA,aAAqBvhC,GAAc,OAAO93C,KAAKi+F,oBAAoB5kB,EAAW,MAClF,GAAIA,aAAqBrhC,GAAc,OAAOh4C,KAAK09F,oBAAoBrkB,EAAW,MAClF,GAAIA,aAAqB3mC,GAAc,OAAO1yC,KAAKg+F,oBAAoB3kB,EAAW,MAClF,GAAIA,aAAqB/nC,GAAmB,OAAOtxC,KAAK69F,yBAAyBxkB,EAAW,MAC5F,GAAIA,aAAqB5iC,GAAW,OAAOz2C,KAAKw9F,iBAAiBnkB,EAAW,MAC5E,GAAIA,aAAqBjhC,GAAgB,OAAOp4C,KAAKk+F,sBAAsB7kB,EAAW,MACtF,GAAIA,aAAqBtpC,GAAsB,OAAO/vC,KAAKm+F,4BAA4B9kB,EAAW,MAClG,MAAM,IAAIx4D,GAAyB,6BAA+Bw4D,EAAU74D,WAAW24B,YAEzF8jD,GAAoBn4F,UAAU44F,oBAAsB,SAA8Bn1F,EAAMnG,GACtF,IAAIwtC,EAAM5vC,KAAKu9F,qBAAqBh1F,EAAK4tC,wBAAyB5tC,GAClE,GAAY,OAARqnC,EAAgB,OAAO5vC,KAAK6iC,SAASjL,iBAAiB,MAC1D,IAAIymE,EAAUzuD,EAAI9tC,OAClB,OAAIu8F,EAAU,GAAKA,EAAU,IAAMr+F,KAAKq9F,cAAwBr9F,KAAK6iC,SAASlL,iBAAiBiY,GACxF5vC,KAAK6iC,SAASjL,iBAAiBgY,IAExCqtD,GAAoBn4F,UAAUyb,YAAc,WAC1C,MAAO,IAET08E,GAAoBn4F,UAAU0b,SAAW,WACvC,OAAOy8E,IAGT,IAAIqB,GAAoB,SAASA,IAM/B,GALAt+F,KAAKu+F,eAAiB,EACtBv+F,KAAKw+F,QAAU,KACfx+F,KAAKo1E,KAAO,IAAIpU,GAChBhhE,KAAKy+F,gCAAiC,EACtCz+F,KAAK0+F,WAAY,EACbppF,UAAU,aAAco9B,IAAsC,iBAAjBp9B,UAAU,GAAiB,CAC1E,IAAIqpF,EAAUrpF,UAAU,GACpBspF,EAAgBtpF,UAAU,GAC9BgpF,EAAkB39F,KAAKX,KAAM2+F,EAAQ1uD,iBAAkB2uD,QAClD,GAAItpF,UAAU,aAAc7M,OAAiC,iBAAjB6M,UAAU,GAAiB,CAC5E,IAAIupF,EAASvpF,UAAU,GACnBwpF,EAAkBxpF,UAAU,GAChCtV,KAAKw+F,QAAUK,EACf7+F,KAAK0+F,UAAYJ,EAAkB9sD,SAASqtD,GAC5C7+F,KAAKu+F,eAAiBO,IAG1BR,GAAkBx5F,UAAUi6F,aAAe,SAAuBC,EAAWzT,GAI3E,IAHE,IAEEjpF,EAAMtC,KAAK0+F,UAAYM,EAAUl9F,OAAS,EAAIk9F,EAAUl9F,OACnDjD,EAAI,EAAGA,EAAIyD,EAAKzD,IAAK,CAC5B,IAAIogG,EAAQD,EAAUhzF,IAAInN,GACtBqgG,EALSl/F,KAKSm/F,kBAAkBF,EAAO1T,GAC9B,OAAb2T,IACFF,EAAUrzF,IAAI9M,EAAG,IAAIkjB,GAAWm9E,IACtB,IAANrgG,GAROmB,KAQW0+F,WAAaM,EAAUrzF,IAAIqzF,EAAUl9F,OAAS,EAAG,IAAIigB,GAAWm9E,OAI5FZ,GAAkBx5F,UAAUq6F,kBAAoB,SAA4B53F,EAAIgkF,GAG9E,IAFE,IAEO1sF,EAAI,EAAGA,EAAI0sF,EAAQ9qF,OAAQ5B,IAAK,CACvC,GAAI0I,EAAGmb,SAAS6oE,EAAQ1sF,IAAO,OAAO,KACtC,GAAI0I,EAAG+b,SAASioE,EAAQ1sF,IAJXmB,KAIwBu+F,eAAkB,OAAOhT,EAAQ1sF,GAExE,OAAO,MAETy/F,GAAkBx5F,UAAUs6F,OAAS,SAAiB7T,GACpD,IAAI9gD,EAAY,IAAIpC,GAAeroC,KAAKw+F,SAIxC,OAHAx+F,KAAK++F,aAAat0D,EAAW8gD,GAC7BvrF,KAAKq/F,aAAa50D,EAAW8gD,GAChB9gD,EAAUva,qBAGzBouE,GAAkBx5F,UAAUu6F,aAAe,SAAuBL,EAAWzT,GAG3E,GAAuB,IAAnBA,EAAQ9qF,OAAgB,OAAO,KACnC,IAAI6+F,EAAkB/T,EAAQ9qF,OAC1B8qF,EAAQ,GAAG7oE,SAAS6oE,EAAQA,EAAQ9qF,OAAS,MAAO6+F,EAAkB/T,EAAQ9qF,OAAS,GAC3F,IAAK,IAAI5B,EAAI,EAAGA,EAAIygG,EAAiBzgG,IAAK,CACxC,IAAI2sF,EAASD,EAAQ1sF,GACjBuC,EAPSpB,KAOMu/F,uBAAuB/T,EAAQwT,GAC9C59F,GAAS,GACX49F,EAAU/+F,IAAImB,EAAQ,EAAG,IAAI2gB,GAAWypE,IAAS,KAIvD8S,GAAkBx5F,UAAUy6F,uBAAyB,SAAiC/T,EAAQwT,GAK5F,IAJE,IAEE9/D,EAAU9d,GAAOE,UACjBk+E,GAAa,EACR3gG,EAAI,EAAGA,EAAImgG,EAAUl9F,OAAS,EAAGjD,IAAK,CAG7C,GAPamB,KAKNo1E,KAAKj7D,GAAK6kF,EAAUhzF,IAAInN,GALlBmB,KAMNo1E,KAAKvyE,GAAKm8F,EAAUhzF,IAAInN,EAAI,GANtBmB,KAOFo1E,KAAKj7D,GAAGuI,SAAS8oE,IAPfxrF,KAOiCo1E,KAAKvyE,GAAG6f,SAAS8oE,GAAS,CACtE,GARWxrF,KAQAy+F,+BAAkC,SAAmB,OAAQ,EAE1E,IAAIp3F,EAVSrH,KAUKo1E,KAAK9xD,SAASkoE,GAC5BnkF,EAXSrH,KAWKu+F,gBAAkBl3F,EAAO63B,IACzCA,EAAU73B,EACVm4F,EAAY3gG,GAGhB,OAAO2gG,GAETlB,GAAkBx5F,UAAU26F,iCAAmC,SAA2CC,GACxG1/F,KAAKy+F,+BAAiCiB,GAExCpB,GAAkBx5F,UAAUyb,YAAc,WACxC,MAAO,IAET+9E,GAAkBx5F,UAAU0b,SAAW,WACrC,OAAO89E,IAETA,GAAkB9sD,SAAW,SAAmB9P,GAC9C,QAAIA,EAAIjhC,QAAU,IACXihC,EAAI,GAAGhf,SAASgf,EAAIA,EAAIjhC,OAAS,KAG1C,IAAIk/F,GAAkB,SAA0BC,GAC9C5/F,KAAK6/F,SAAWD,GAAW,MAGzBE,GAAqB,CAAEC,sBAAuB,CAAEx7F,cAAc,IAClEo7F,GAAgB76F,UAAUs6F,OAAS,SAAiBY,EAAUpB,GAC5D,IAAIrT,EAAUvrF,KAAKigG,yBAAyBD,GAE5C,OADgB,IAAIE,GAAgBtB,EAAerT,GAClC6S,UAAUp+F,KAAK6/F,WAElCF,GAAgB76F,UAAUq7F,WAAa,SAAqBvB,EAAewB,GACzE,IAAI7U,EAAUvrF,KAAKigG,yBAAyBjgG,KAAK6/F,UAE7CQ,EADY,IAAIH,GAAgBtB,EAAerT,GAAS,GAChC6S,UAAUp+F,KAAK6/F,UACvCxiF,EAASgjF,EAIb,OAHID,GAAev7E,GAAaxH,EAAQm5B,MACtCn5B,EAASgjF,EAAYjb,OAAO,IAEvB/nE,GAETsiF,GAAgB76F,UAAUw7F,qBAAuB,SAA+BC,GAG9E,OAFgBvgG,KAAKwgG,4BAA4BD,GACvB,IAG5BZ,GAAgB76F,UAAUm7F,yBAA2B,SAAmC/7D,GAGtF,IAFA,IAAIu8D,EAAQ,IAAItyD,GACZzM,EAAMwC,EAAE+L,iBACHpxC,EAAI,EAAGA,EAAI6iC,EAAIjhC,OAAQ5B,IAC9B4hG,EAAMxgG,IAAIyhC,EAAI7iC,IAEhB,OAAO4hG,EAAMt5D,QAAQ,IAAI1+B,MAAM,GAAGwjB,KAAK,QAEzC0zE,GAAgB76F,UAAU07F,4BAA8B,SAAsC9+D,GAE5F,IADA,IAAIg/D,EAAYt/E,GAAOE,UACdziB,EAAI,EAAGA,EAAI6iC,EAAIjhC,OAAS,EAAG5B,IAAK,CACvC,IAAI8hG,EAASj/D,EAAI7iC,GAAGykB,SAASoe,EAAI7iC,EAAI,IACjC8hG,EAASD,IAAaA,EAAYC,GAExC,OAAOD,GAETf,GAAgB76F,UAAUyb,YAAc,WACtC,MAAO,IAETo/E,GAAgB76F,UAAU0b,SAAW,WACnC,OAAOm/E,IAETA,GAAgBlW,KAAO,SAAeiJ,EAAIC,EAAIiM,GAC5C,IAAIoB,EAAW,IAAIv3F,MAAM,GAAGwjB,KAAK,MAC7B20E,EAAW,IAAIjB,GAAgBjN,GACnCsN,EAAS,GAAKY,EAASxB,OAAOzM,EAAIiM,GAClC,IAAIiC,EAAW,IAAIlB,GAAgBhN,GAEnC,OADAqN,EAAS,GAAKa,EAASzB,OAAOY,EAAS,GAAIpB,GACpCoB,GAETL,GAAgBmB,4BAA8B,WAC5C,GAAyB,IAArBxrF,UAAU7U,OAAc,CAC1B,IAAIyjC,EAAI5uB,UAAU,GACdspF,EAAgBe,GAAgBoB,8BAA8B78D,GAC9D+W,EAAK/W,EAAEiB,oBACX,GAAI8V,EAAGS,YAAcjB,GAAeM,MAAO,CACzC,IAAIimD,EAAe,EAAI/lD,EAAGM,WAAa,EAAI,MACvCylD,EAAepC,IAAiBA,EAAgBoC,GAEtD,OAAOpC,EACF,GAAyB,IAArBtpF,UAAU7U,OAAc,CACjC,IAAIiyF,EAAKp9E,UAAU,GACfq9E,EAAKr9E,UAAU,GACnB,OAAO9S,KAAKwZ,IAAI2jF,GAAgBmB,4BAA4BpO,GAAKiN,GAAgBmB,4BAA4BnO,MAGjHgN,GAAgBoB,8BAAgC,SAAwC78D,GACtF,IAAIlU,EAAMkU,EAAEa,sBAGZ,OAFmBviC,KAAKwZ,IAAIgU,EAAIyC,YAAazC,EAAIwC,YACpBmtE,GAAgBI,uBAG/CJ,GAAgBQ,WAAa,SAAqB53F,EAAMq2F,EAAewB,GAErE,OADe,IAAIT,GAAgBp3F,GACnB43F,WAAWvB,EAAewB,IAE5CN,GAAmBC,sBAAsB/zF,IAAM,WAAc,OAAO,MAEpEvH,OAAOid,iBAAkBi+E,GAAiBG,IAE1C,IAAII,GAAmB,SAAUe,GAC/B,SAASf,EAAiBtB,EAAerT,EAAS2V,GAChDD,EAAuBtgG,KAAKX,MAC5BA,KAAKu+F,eAAiBK,GAAiB,KACvC5+F,KAAKmhG,SAAW5V,GAAW,KAC3BvrF,KAAKohG,iBAA8Bl8F,IAAfg8F,GAA4BA,EAuBlD,OApBKD,IAAyBf,EAAgBj/E,UAAYggF,GAC1Df,EAAgBp7F,UAAYL,OAAOyc,OAAQ+/E,GAA0BA,EAAuBn8F,WAC5Fo7F,EAAgBp7F,UAAUqc,YAAc++E,EACxCA,EAAgBp7F,UAAUu8F,SAAW,SAAmBxC,EAAQtT,GAC9D,IAAI+V,EAAU,IAAIhD,GAAkBO,EAAQ7+F,KAAKu+F,gBAEjD,OADA+C,EAAQ7B,iCAAiCz/F,KAAKohG,aACvCE,EAAQlC,OAAO7T,IAExB2U,EAAgBp7F,UAAUy4F,qBAAuB,SAA+BhmE,EAAQn1B,GACtF,IAAIy8F,EAAStnE,EAAOrH,oBAChBizD,EAASnjF,KAAKqhG,SAASxC,EAAQ7+F,KAAKmhG,UACxC,OAAOnhG,KAAK6iC,SAASuT,+BAA+Bl1B,OAAOiiE,IAE7D+c,EAAgBp7F,UAAUyb,YAAc,WACtC,MAAO,IAET2/E,EAAgBp7F,UAAU0b,SAAW,WACnC,OAAO0/E,GAGFA,GACPjD,IAEEsE,GAAa,WACfvhG,KAAKwhG,UAAW,EAChBxhG,KAAKyhG,yBAA2B,GAChCzhG,KAAK0hG,YAAc,EACnB1hG,KAAK2hG,eAAiB,MAExBJ,GAAWz8F,UAAU88F,UAAY,WAC/B,OAAOxgF,GAAOI,iBAAiBxhB,KAAK0hG,cAEtCH,GAAWz8F,UAAU7E,IAAM,SAAcksB,GACvC,IAAI01E,EAAUzgF,GAAOG,iBAAiB4K,GACtC,OAAInsB,KAAKwhG,UACPxhG,KAAK0hG,YAAcG,EACnB7hG,KAAK2hG,eAAiBJ,GAAWO,YAAY9hG,KAAK0hG,aAClD1hG,KAAKwhG,UAAW,EACT,MAEQD,GAAWO,YAAYD,KACrB7hG,KAAK2hG,gBACtB3hG,KAAK0hG,YAAc,EACZ,OAET1hG,KAAKyhG,yBAA2BF,GAAWQ,6BAA6B/hG,KAAK0hG,YAAaG,QAC1F7hG,KAAK0hG,YAAcH,GAAWS,cAAchiG,KAAK0hG,YAAa,IAAM,GAAK1hG,KAAKyhG,8BAEhFF,GAAWz8F,UAAUme,SAAW,WAC9B,GAAyB,IAArB3N,UAAU7U,OAAc,CAC1B,IAAIwhG,EAAO3sF,UAAU,GACjB5V,EAAI0hB,GAAOI,iBAAiBygF,GAE5BC,EAAS,mEADA9gF,GAAO+gF,eAAeF,GAE/BG,EAASF,EAAOx1E,UAAUw1E,EAAOzhG,OAAS,IAE9C,OADU2hG,EAAO11E,UAAU,EAAG,GAAK,KAAO01E,EAAO11E,UAAU,EAAG,IAAM,SAAW01E,EAAO11E,UAAU,IAAM,MAAQhtB,EAAI,OAItH6hG,GAAWz8F,UAAUyb,YAAc,WACjC,MAAO,IAETghF,GAAWz8F,UAAU0b,SAAW,WAC9B,OAAO+gF,IAETA,GAAWc,OAAS,SAAiBJ,EAAMpjG,GAEzC,OAAyB,IAAjBojG,EADG,GAAKpjG,GACa,EAAI,GAEnC0iG,GAAWO,YAAc,SAAsB31E,GAC7C,OAAOA,GAAO,IAEhBo1E,GAAWS,cAAgB,SAAwBC,EAAMK,GAIvD,OADaL,KAFE,GAAKK,GAAS,IAK/Bf,GAAWQ,6BAA+B,SAAuCQ,EAAMC,GAErF,IADA,IAAIrvD,EAAQ,EACHt0C,EAAI,GAAIA,GAAK,EAAGA,IAAK,CAC5B,GAAI0iG,GAAWc,OAAOE,EAAM1jG,KAAO0iG,GAAWc,OAAOG,EAAM3jG,GAAM,OAAOs0C,EACxEA,IAEF,OAAO,IAGT,IAAIsvD,GAAoB,WACtBziG,KAAK0iG,aAAe,KACpB1iG,KAAK2iG,UAAY,IAAIC,IAGnBC,GAAqB,CAAED,uBAAwB,CAAEr+F,cAAc,GAAOu+F,WAAY,CAAEv+F,cAAc,IACtGk+F,GAAkB39F,UAAUi+F,cAAgB,SAAwBx6F,GAClE,IAAIy6F,EAAQ,IAAIF,GAAW9iG,KAAK0iG,cAChCn6F,EAAKitB,MAAMwtE,GACXz6F,EAAK67B,mBAEPq+D,GAAkB39F,UAAUm+F,iBAAmB,SAA2B16F,GACxE,GAA4B,IAAxBvI,KAAK0iG,aAAahjG,GAAqC,IAAxBM,KAAK0iG,aAAaxjG,EAAa,OAAOqJ,EACzE,IAAI26F,EAAW,IAAInhF,GAAW/hB,KAAK0iG,cACnCQ,EAASxjG,GAAKwjG,EAASxjG,EACvBwjG,EAAShkG,GAAKgkG,EAAShkG,EACvB,IAAI8jG,EAAQ,IAAIF,GAAWI,GAG3B,OAFA36F,EAAKitB,MAAMwtE,GACXz6F,EAAK67B,kBACE77B,GAETk6F,GAAkB39F,UAAUq+F,oBAAsB,WAChD,OAAOnjG,KAAK0iG,cAEdD,GAAkB39F,UAAU7E,IAAM,SAAcsI,GAC9CA,EAAKitB,MAAMx1B,KAAK2iG,WAChB3iG,KAAK0iG,aAAe1iG,KAAK2iG,UAAUQ,uBAErCV,GAAkB39F,UAAUyb,YAAc,WACxC,MAAO,IAETkiF,GAAkB39F,UAAU0b,SAAW,WACrC,OAAOiiF,IAETI,GAAmBD,uBAAuB52F,IAAM,WAAc,OAAO42F,IACrEC,GAAmBC,WAAW92F,IAAM,WAAc,OAAO82F,IAEzDr+F,OAAOid,iBAAkB+gF,GAAmBI,IAE5C,IAAID,GAAyB,WAC3B5iG,KAAKojG,aAAe,IAAI7B,GACxBvhG,KAAKqjG,aAAe,IAAI9B,IAE1BqB,GAAuB99F,UAAU49B,OAAS,SAAiBz6B,GACzDjI,KAAKojG,aAAanjG,IAAIgI,EAAMvI,GAC5BM,KAAKqjG,aAAapjG,IAAIgI,EAAM/I,IAE9B0jG,GAAuB99F,UAAUq+F,oBAAsB,WACrD,OAAO,IAAIphF,GAAW/hB,KAAKojG,aAAaxB,YAAa5hG,KAAKqjG,aAAazB,cAEzEgB,GAAuB99F,UAAUyb,YAAc,WAC7C,MAAO,CAAC2lB,KAEV08D,GAAuB99F,UAAU0b,SAAW,WAC1C,OAAOoiF,IAGT,IAAIE,GAAa,WACf9iG,KAAKgjG,MAAQ,KACb,IAAIA,EAAQ1tF,UAAU,GACtBtV,KAAKgjG,MAAQA,GAEfF,GAAWh+F,UAAU49B,OAAS,SAAiBkN,EAAK/wC,GAClD,IAAIykG,EAAK1zD,EAAIjtB,YAAY9jB,EAAG,GAAKmB,KAAKgjG,MAAMtjG,EACxC6jG,EAAK3zD,EAAIjtB,YAAY9jB,EAAG,GAAKmB,KAAKgjG,MAAM9jG,EAC5C0wC,EAAIptB,YAAY3jB,EAAG,EAAGykG,GACtB1zD,EAAIptB,YAAY3jB,EAAG,EAAG0kG,IAExBT,GAAWh+F,UAAU+qC,OAAS,WAC5B,OAAO,GAETizD,GAAWh+F,UAAUgrC,kBAAoB,WACvC,OAAO,GAETgzD,GAAWh+F,UAAUyb,YAAc,WACjC,MAAO,CAACovB,KAEVmzD,GAAWh+F,UAAU0b,SAAW,WAC9B,OAAOsiF,IAGT,IAAIU,GAAgB,SAAwB7Q,EAAIrX,GAC9Ct7E,KAAK6xC,MAAQ,IAAIppC,MAAM,GAAGwjB,KAAK,MAC/BjsB,KAAKu+F,eAAiB,KACtBv+F,KAAKyjG,KAAO,KACZzjG,KAAK6xC,MAAM,GAAK8gD,EAChB3yF,KAAK6xC,MAAM,GAAKypC,EAChBt7E,KAAKsgG,wBAEPkD,GAAc1+F,UAAU4+F,SAAW,SAAmBn7F,GAGpD,OAFe,IAAIo3F,GAAgBp3F,GACX62F,OAAO72F,EAAMvI,KAAKu+F,iBAG5CiF,GAAc1+F,UAAUm+F,iBAAmB,SAA2B16F,GACpEvI,KAAKyjG,KAAO,IAAIhB,GAChBziG,KAAKyjG,KAAKxjG,IAAIsI,EAAK,IACnBvI,KAAKyjG,KAAKxjG,IAAIsI,EAAK,IACnB,IAAIo7F,EAAU,IAAIl7F,MAAM,GAAGwjB,KAAK,MAGhC,OAFA03E,EAAQ,GAAK3jG,KAAKyjG,KAAKR,iBAAiB16F,EAAK,GAAG8R,QAChDspF,EAAQ,GAAK3jG,KAAKyjG,KAAKR,iBAAiB16F,EAAK,GAAG8R,QACzCspF,GAETH,GAAc1+F,UAAU8+F,cAAgB,SAAwBr7F,GAE9D,OADAvI,KAAKyjG,KAAKV,cAAcx6F,GACjBA,GAETi7F,GAAc1+F,UAAU6nF,kBAAoB,SAA4BoP,GACtE,IAAI8H,EAAW7jG,KAAKypF,KAAKzpF,KAAK6xC,OAC1Bx0B,EAASk/E,GAAUuH,UAAUD,EAAS,GAAIA,EAAS,GAAI9H,GAC3D,OAAO/7F,KAAK4jG,cAAcvmF,IAE5BmmF,GAAc1+F,UAAUyiF,WAAa,SAAqBrjD,GACnDA,EAAE6T,WACLznB,GAAOjtB,IAAIm6B,QAAQ,gCAGvBgmE,GAAc1+F,UAAUw7F,qBAAuB,WAC7CtgG,KAAKu+F,eAAiBoB,GAAgBmB,4BAA4B9gG,KAAK6xC,MAAM,GAAI7xC,KAAK6xC,MAAM,KAE9F2xD,GAAc1+F,UAAU2kF,KAAO,SAAelhF,GAC5C,IAAIo7F,EAAU3jG,KAAKijG,iBAAiB16F,GAEpC,OADeo3F,GAAgBlW,KAAKka,EAAQ,GAAIA,EAAQ,GAAI3jG,KAAKu+F,iBAGnEiF,GAAc1+F,UAAUyb,YAAc,WACpC,MAAO,IAETijF,GAAc1+F,UAAU0b,SAAW,WACjC,OAAOgjF,IAETA,GAAcM,UAAY,SAAoBpR,EAAIC,EAAIoJ,GAEpD,OADS,IAAIyH,GAAc9Q,EAAIC,GACrBhG,kBAAkBoP,IAE9ByH,GAAcO,MAAQ,SAAgBrR,EAAIC,GACxC,OAAO6Q,GAAcM,UAAUpR,EAAIC,EAAI4J,GAAU/iF,QAEnDgqF,GAAcl0F,aAAe,SAAuBojF,EAAIC,GACtD,OAAO6Q,GAAcM,UAAUpR,EAAIC,EAAI4J,GAAUhjF,eAEnDiqF,GAAcQ,cAAgB,SAAwBtR,EAAIC,GACxD,OAAO6Q,GAAcM,UAAUpR,EAAIC,EAAI4J,GAAU0H,gBAEnDT,GAAcU,WAAa,SAAqBxR,EAAIC,GAClD,OAAO6Q,GAAcM,UAAUpR,EAAIC,EAAI4J,GAAU9iF,aAGnD,IAAI0qF,GAAwB,SAAgCxR,EAAIrX,GAC9Dt7E,KAAK6xC,MAAQ,IAAIppC,MAAM,GAAGwjB,KAAK,MAC/BjsB,KAAK6xC,MAAM,GAAK8gD,EAChB3yF,KAAK6xC,MAAM,GAAKypC,GAElB6oB,GAAsBr/F,UAAU6nF,kBAAoB,SAA4BoP,GAC9E,IAAI1+E,EAAS,KACT+mF,GAAY,EACZC,EAAiB,KACrB,IACEhnF,EAASk/E,GAAUuH,UAAU9jG,KAAK6xC,MAAM,GAAI7xC,KAAK6xC,MAAM,GAAIkqD,GAE5CqI,GAAY,EAC3B,MAAOj3E,GACP,KAAIA,aAAcuL,IAET,MAAMvL,EADbk3E,EAAiBl3E,EAGrB,IAAKi3E,EACH,IACE/mF,EAASmmF,GAAcM,UAAU9jG,KAAK6xC,MAAM,GAAI7xC,KAAK6xC,MAAM,GAAIkqD,GAC/D,MAAO5uE,GACP,MAAIA,aAAcuL,GACV2rE,EACOl3E,EAGnB,OAAO9P,GAET8mF,GAAsBr/F,UAAUyb,YAAc,WAC5C,MAAO,IAET4jF,GAAsBr/F,UAAU0b,SAAW,WACzC,OAAO2jF,IAETA,GAAsBL,UAAY,SAAoBpR,EAAIC,EAAIoJ,GAE5D,OADS,IAAIoI,GAAsBzR,EAAIC,GAC7BhG,kBAAkBoP,IAE9BoI,GAAsBJ,MAAQ,SAAgBrR,EAAIC,GAChD,OAAOwR,GAAsBL,UAAUpR,EAAIC,EAAI4J,GAAU/iF,QAE3D2qF,GAAsB70F,aAAe,SAAuBojF,EAAIC,GAC9D,OAAOwR,GAAsBL,UAAUpR,EAAIC,EAAI4J,GAAUhjF,eAE3D4qF,GAAsBH,cAAgB,SAAwBtR,EAAIC,GAChE,OAAOwR,GAAsBL,UAAUpR,EAAIC,EAAI4J,GAAU0H,gBAE3DE,GAAsBD,WAAa,SAAqBxR,EAAIC,GAC1D,OAAOwR,GAAsBL,UAAUpR,EAAIC,EAAI4J,GAAU9iF,aAG3D,IAAI6qF,GAAkB,WACpBtkG,KAAKkiF,IAAM,KACXliF,KAAK+hF,WAAa,KAClB,IAAIG,EAAM5sE,UAAU,GAChBysE,EAAazsE,UAAU,GAC3BtV,KAAKkiF,IAAMA,EACXliF,KAAK+hF,WAAaA,GAEpBuiB,GAAgBx/F,UAAUk2F,qBAAuB,SAA+B/1B,EAAIiC,GAClFlnE,KAAKkiF,IAAIF,0BAA0BhiF,KAAK+hF,WAAY9c,EAAGid,IAAKjd,EAAG8c,WAAY7a,IAE7Eo9B,GAAgBx/F,UAAUyb,YAAc,WACtC,MAAO,IAET+jF,GAAgBx/F,UAAU0b,SAAW,WACnC,OAAO8jF,IAGT,IAAIC,GAAiB,SAASA,IAO5B,GANAvkG,KAAKinD,OAAS,KACdjnD,KAAKwkG,QAAU,KACfxkG,KAAKykG,WAAa,KAClBzkG,KAAK0kG,aAAe,KACpB1kG,KAAK2kG,kBAAoB,KACzB3kG,KAAK4kG,KAAO,KACa,IAArBtvF,UAAU7U,OAAc,CAC1B,IAAIf,EAAI4V,UAAU,GACduvF,EAAcvvF,UAAU,GAC5BtV,KAAKykG,WAAaF,EAAeh5B,OACjCvrE,KAAKwkG,QAAU9kG,EACfM,KAAK0kG,aAAeG,OACf,GAAyB,IAArBvvF,UAAU7U,OAAc,CACjC,IAAIimD,EAAQpxC,UAAU,GAClBiQ,EAAMjQ,UAAU,GAChBuzB,EAAMvzB,UAAU,GACpBtV,KAAKykG,WAAaF,EAAeO,OACjC9kG,KAAKinD,OAASP,EACd1mD,KAAKwkG,QAAUj/E,EACfvlB,KAAK4kG,KAAO/7D,IAIZk8D,GAAqB,CAAED,OAAQ,CAAEvgG,cAAc,GAAOgnE,OAAQ,CAAEhnE,cAAc,IAClFggG,GAAez/F,UAAUkgG,SAAW,WAClC,OAAOhlG,KAAKykG,aAAeF,GAAeh5B,QAE5Cg5B,GAAez/F,UAAUmgG,oBAAsB,SAA8BC,GAC3EllG,KAAK2kG,kBAAoBO,GAE3BX,GAAez/F,UAAUqgG,UAAY,WACnC,OAAOnlG,KAAK4kG,MAEdL,GAAez/F,UAAUge,UAAY,SAAoBC,GACvD,IAAIqiF,EAAKriF,EACT,OAAI/iB,KAAKwkG,QAAUY,EAAGZ,SAAmB,EACrCxkG,KAAKwkG,QAAUY,EAAGZ,QAAkB,EACpCxkG,KAAKykG,WAAaW,EAAGX,YAAsB,EAC3CzkG,KAAKykG,WAAaW,EAAGX,WAAqB,EACvC,GAETF,GAAez/F,UAAUugG,eAAiB,WACxC,OAAOrlG,KAAK0kG,cAEdH,GAAez/F,UAAUwgG,SAAW,WAClC,OAAOtlG,KAAKykG,aAAeF,GAAeO,QAE5CP,GAAez/F,UAAUygG,YAAc,SAAsBC,GAC3D,OAAoB,OAAhBxlG,KAAKinD,QACFjnD,KAAKinD,SAAWu+C,EAAGv+C,QAE5Bs9C,GAAez/F,UAAU2gG,oBAAsB,WAC7C,OAAOzlG,KAAK2kG,mBAEdJ,GAAez/F,UAAUyb,YAAc,WACrC,MAAO,CAACoB,KAEV4iF,GAAez/F,UAAU0b,SAAW,WAClC,OAAO+jF,IAETQ,GAAmBD,OAAO94F,IAAM,WAAc,OAAO,GACrD+4F,GAAmBx5B,OAAOv/D,IAAM,WAAc,OAAO,GAErDvH,OAAOid,iBAAkB6iF,GAAgBQ,IAEzC,IAAIW,GAAqB,aAEzBA,GAAmB5gG,UAAUyb,YAAc,WACzC,MAAO,IAETmlF,GAAmB5gG,UAAU0b,SAAW,WACtC,OAAOklF,IAGT,IAAIC,GAAuB,WACzB3lG,KAAKsgF,kBAAmB,EACxBtgF,KAAKugF,YAAa,EAClBvgF,KAAKwgF,oBAAqB,EAC1BxgF,KAAK0gF,yBAA2B,KAChC1gF,KAAKyvE,IAAM,KACXzvE,KAAK4lG,eAAiB,KACtB5lG,KAAK6lG,gBAAkB,KACvB7lG,KAAK2gF,oBAAsB,KAC3B3gF,KAAK8lG,kBAAoB,EACzB9lG,KAAK+gF,SAAW,EAChB/gF,KAAK+lG,UAAY,KACjB/lG,KAAKgmG,SAAU,EACfhmG,KAAKimG,sBAAuB,EAC5B,IAAI5lC,EAAK/qD,UAAU,GACf4wF,EAAgB5wF,UAAU,GAC1B6wF,EAAiB7wF,UAAU,GAC/BtV,KAAKyvE,IAAMpP,EACXrgE,KAAK4lG,eAAiBM,EACtBlmG,KAAK6lG,gBAAkBM,GAEzBR,GAAqB7gG,UAAUk8E,sBAAwB,SAAgCd,EAAIC,EAAW1lE,EAAI2lE,GACxG,GAAIF,IAAOzlE,GAC6B,IAAlCza,KAAKyvE,IAAIz0C,qBAA4B,CACvC,GAAI2qE,GAAqB1kB,mBAAmBd,EAAWC,GAAc,OAAO,EAC5E,GAAIF,EAAG1uC,WAAY,CACjB,IAAIotB,EAAcshB,EAAGhwC,eAAiB,EACtC,GAAmB,IAAdiwC,GAAmBC,IAAcxhB,GACnB,IAAdwhB,GAAmBD,IAAcvhB,EACpC,OAAO,GAKf,OAAO,GAET+mC,GAAqB7gG,UAAUo8E,2BAA6B,WAC1D,OAAOlhF,KAAK0gF,0BAEdilB,GAAqB7gG,UAAUshG,qBAAuB,SAA+BC,GACnFrmG,KAAKimG,qBAAuBI,GAE9BV,GAAqB7gG,UAAUq8E,8BAAgC,WAC7D,OAAOnhF,KAAKwgF,oBAEdmlB,GAAqB7gG,UAAUwhG,wBAA0B,SAAkCjmC,EAAIvU,GAC7F,IAAK,IAAIjtD,EAAIitD,EAASrmB,WAAY5mC,EAAE6mC,WAAY,CAC9C,IACIn+B,EADO1I,EAAE6C,OACCiuB,gBACd,GAAI0wC,EAAG1kC,eAAep0B,GAAO,OAAO,EAEtC,OAAO,GAETo+F,GAAqB7gG,UAAUu8E,sBAAwB,WACrD,OAAOrhF,KAAKugF,YAEdolB,GAAqB7gG,UAAUq2B,gBAAkB,WAC/C,OAAOn7B,KAAKsgF,kBAEdqlB,GAAqB7gG,UAAU+qC,OAAS,WACtC,OAAO7vC,KAAKgmG,SAEdL,GAAqB7gG,UAAUyhG,gBAAkB,SAA0BlmC,EAAIvU,GAC7E,OAAiB,OAAbA,MACA9rD,KAAKsmG,wBAAwBjmC,EAAIvU,EAAS,OAC1C9rD,KAAKsmG,wBAAwBjmC,EAAIvU,EAAS,MAGhD65C,GAAqB7gG,UAAU0hG,iBAAmB,SAA2BC,EAAWC,GACtF1mG,KAAK+lG,UAAY,IAAIt9F,MAAM,GAAGwjB,KAAK,MACnCjsB,KAAK+lG,UAAU,GAAKU,EACpBzmG,KAAK+lG,UAAU,GAAKW,GAEtBf,GAAqB7gG,UAAU47D,iBAAmB,SAA2Bwf,EAAIC,EAAW1lE,EAAI2lE,GAC9F,GAAIF,IAAOzlE,GAAM0lE,IAAcC,EAAa,OAAO,KACnDpgF,KAAK+gF,WACL,IAAIrb,EAAMwa,EAAGjwC,iBAAiBkwC,GAC1Bxa,EAAMua,EAAGjwC,iBAAiBkwC,EAAY,GACtCva,EAAMnrD,EAAGw1B,iBAAiBmwC,GAC1Bva,EAAMprD,EAAGw1B,iBAAiBmwC,EAAY,GAC1CpgF,KAAKyvE,IAAI70C,oBAAoB8qC,EAAKC,EAAKC,EAAKC,GACxC7lE,KAAKyvE,IAAIt0C,oBACPn7B,KAAK6lG,kBACP3lB,EAAGkD,aAAY,GACf3oE,EAAG2oE,aAAY,IAEjBpjF,KAAK8lG,oBACA9lG,KAAKghF,sBAAsBd,EAAIC,EAAW1lE,EAAI2lE,KACjDpgF,KAAKsgF,kBAAmB,GACpBtgF,KAAK4lG,gBAAmB5lG,KAAKyvE,IAAIv0C,aACnCglD,EAAGxf,iBAAiB1gE,KAAKyvE,IAAK0Q,EAAW,GACzC1lE,EAAGimD,iBAAiB1gE,KAAKyvE,IAAK2Q,EAAW,IAEvCpgF,KAAKyvE,IAAIv0C,aACXl7B,KAAK0gF,yBAA2B1gF,KAAKyvE,IAAI95D,gBAAgB,GAAG0E,OAC5Dra,KAAKugF,YAAa,EACdvgF,KAAKimG,uBACPjmG,KAAKgmG,SAAU,GAEZhmG,KAAKumG,gBAAgBvmG,KAAKyvE,IAAKzvE,KAAK+lG,aAAc/lG,KAAKwgF,oBAAqB,OAKzFmlB,GAAqB7gG,UAAUyb,YAAc,WAC3C,MAAO,IAETolF,GAAqB7gG,UAAU0b,SAAW,WACxC,OAAOmlF,IAETA,GAAqB1kB,mBAAqB,SAA6B70C,EAAIC,GACzE,OAA6B,IAAtB7pC,KAAKiP,IAAI26B,EAAKC,IAGvB,IAAIs6D,GAAgC,SAAUC,GAC5C,SAASD,IACPC,EAAsBjmG,KAAKX,MAC3BA,KAAKkK,OAAS,IAAIs9B,GAClBxnC,KAAK6mG,UAAY,KAsGnB,OAnGKD,IAAwBD,EAA6B1lF,UAAY2lF,GACtED,EAA6B7hG,UAAYL,OAAOyc,OAAQ0lF,GAAyBA,EAAsB9hG,WACvG6hG,EAA6B7hG,UAAUqc,YAAcwlF,EACrDA,EAA6B7hG,UAAUgiG,cAAgB,WAGrDvxC,GAAYxzD,KAAK/B,KAAKkK,QACtB,IAAK,IAAIrL,EAAI,EAAGA,EAAImB,KAAKkK,OAAOpI,OAAQjD,IAAK,CAC3C,IAAI2mG,EAJOxlG,KAIKkK,OAAO8B,IAAInN,GACvB2mG,EAAGR,YACLQ,EAAGH,iBAAiBJ,oBAAoBpmG,KAI9C8nG,EAA6B7hG,UAAUk2F,qBAAuB,WAG5D,GAAyB,IAArB1lF,UAAU7U,OAAc,CAC1B,IAAIymE,EAAK5xD,UAAU,GACnBtV,KAAK6mG,UAAY,EACjB7mG,KAAK8mG,gBACL,IAAK,IAAIjoG,EAAI,EAAGA,EAAImB,KAAKkK,OAAOpI,OAAQjD,IAAK,CAC3C,IAAI2mG,EAPKxlG,KAOOkK,OAAO8B,IAAInN,GAI3B,GAHI2mG,EAAGF,YAREtlG,KASA+mG,gBAAgBloG,EAAG2mG,EAAGC,sBAAuBD,EAAIt+B,GAEtDA,EAAGr3B,SACL,YAGC,GAAyB,IAArBv6B,UAAU7U,OACnB,GAAI6U,UAAU,aAAcqwF,IAAyB9gF,GAAavP,UAAU,GAAI+xB,KAASxiB,GAAavP,UAAU,GAAI+xB,IAAQ,CAC1H,IAAI2/D,EAAS1xF,UAAU,GACnB2xF,EAAS3xF,UAAU,GACnB4xF,EAAO5xF,UAAU,GACrBtV,KAAK2xD,SAASq1C,EAAQA,GACtBhnG,KAAK2xD,SAASs1C,EAAQA,GACtBjnG,KAAKg7F,qBAAqBkM,QACrB,GAA4B,kBAAjB5xF,UAAU,IAAqBuP,GAAavP,UAAU,GAAI+xB,KAAS/xB,UAAU,aAAcqwF,GAAuB,CAClI,IAAI/6C,EAAQt1C,UAAU,GAClB6xF,EAAO7xF,UAAU,GACCA,UAAU,GACTtV,KAAK2xD,SAAS/G,EAAO,MAAgB5qD,KAAK2xD,SAAS/G,GAC1E5qD,KAAKg7F,qBAAqBmM,KAIhCR,EAA6B7hG,UAAUsiG,QAAU,SAAkBj/C,EAAMk/C,GAKvE,IAJA,IAEInlB,EAAM/5B,EAAKw7B,uBACXt7B,EAAa65B,EAAIG,kBACZxjF,EAAI,EAAGA,EAAIwpD,EAAW5nD,OAAS,EAAG5B,IAAK,CAC9C,IAAIomE,EAAK,IAAIq/B,GAAgBpiB,EAAKrjF,GAC9BgmG,EAAc,IAAIN,GAAe8C,EAASnlB,EAAIpvD,QAAQj0B,GAAIomE,GANnDjlE,KAOJkK,OAAOjK,IAAI4kG,GAPP7kG,KAQJkK,OAAOjK,IAAI,IAAIskG,GAAeriB,EAAItvD,QAAQ/zB,GAAIgmG,MAGzD8B,EAA6B7hG,UAAUiiG,gBAAkB,SAA0B1kG,EAAOC,EAAKglG,EAAKpgC,GAIlG,IAHA,IAEIqgC,EAAMD,EAAInC,YACLtmG,EAAIwD,EAAOxD,EAAIyD,EAAKzD,IAAK,CAChC,IAAI2oG,EAJOxnG,KAIMkK,OAAO8B,IAAInN,GAC5B,GAAI2oG,EAAIlC,WAAY,CAClB,IAAIthC,EAAMwjC,EAAIrC,YACTmC,EAAI/B,YAAYiC,KACnBD,EAAIvM,qBAAqBh3B,EAAKkD,GARvBlnE,KASA6mG,gBAKfF,EAA6B7hG,UAAU6sD,SAAW,WAGhD,GAAyB,IAArBr8C,UAAU7U,OAEZ,IADA,IACS5B,EADGyW,UAAU,GACHmwB,WAAY5mC,EAAE6mC,WAAY,CAC3C,IAAIyiB,EAAOtpD,EAAE6C,OALJ1B,KAMFonG,QAAQj/C,EAAMA,QAElB,GAAyB,IAArB7yC,UAAU7U,OAGnB,IAFA,IAAIgnG,EAAUnyF,UAAU,GACpB+xF,EAAU/xF,UAAU,GACfirB,EAAMknE,EAAQhiE,WAAYlF,EAAImF,WAAY,CACjD,IAAI4nB,EAAS/sB,EAAI7+B,OAZR1B,KAaFonG,QAAQ95C,EAAQ+5C,KAI7BV,EAA6B7hG,UAAUyb,YAAc,WACnD,MAAO,IAETomF,EAA6B7hG,UAAU0b,SAAW,WAChD,OAAOmmF,GAGFA,GACPjB,IAEEgC,GAAoB,WACtB1nG,KAAK2nG,KAAOvmF,GAAOg6C,kBACnBp7D,KAAKg7E,KAAO55D,GAAOwmF,mBAGjBC,GAAqB,CAAEC,eAAgB,CAAEvjG,cAAc,IAC3DmjG,GAAkB5iG,UAAUijG,OAAS,WACnC,OAAO/nG,KAAK2nG,MAEdD,GAAkB5iG,UAAUkuB,WAAa,SAAqBg1E,EAAUC,GACtE,QAAIjoG,KAAK2nG,KAAOM,GAAYjoG,KAAKg7E,KAAOgtB,IAG1CN,GAAkB5iG,UAAUojG,OAAS,WACnC,OAAOloG,KAAKg7E,MAEd0sB,GAAkB5iG,UAAUme,SAAW,WACrC,OAAOsV,GAAUE,aAAa,IAAI1W,GAAW/hB,KAAK2nG,KAAM,GAAI,IAAI5lF,GAAW/hB,KAAKg7E,KAAM,KAExF0sB,GAAkB5iG,UAAUyb,YAAc,WACxC,MAAO,IAETmnF,GAAkB5iG,UAAU0b,SAAW,WACrC,OAAOknF,IAETG,GAAmBC,eAAe97F,IAAM,WAAc,OAAO87F,IAE7DrjG,OAAOid,iBAAkBgmF,GAAmBG,IAE5C,IAAIC,GAAiB,aAErBA,GAAehjG,UAAU3E,QAAU,SAAkB2jB,EAAIC,GACvD,IAAIyY,EAAK1Y,EACL2Y,EAAK1Y,EACLgiD,GAAQvpC,EAAGmrE,KAAOnrE,EAAGw+C,MAAQ,EAC7BmtB,GAAQ1rE,EAAGkrE,KAAOlrE,EAAGu+C,MAAQ,EACjC,OAAIjV,EAAOoiC,GAAgB,EACvBpiC,EAAOoiC,EAAe,EACnB,GAETL,GAAehjG,UAAUyb,YAAc,WACrC,MAAO,CAACsB,KAEVimF,GAAehjG,UAAU0b,SAAW,WAClC,OAAOsnF,IAGT,IAAIM,GAAyB,SAAUC,GACrC,SAASD,IACPC,EAAqB1nG,KAAKX,MAC1BA,KAAK+zD,MAAQ,KACb,IAAI/3C,EAAM1G,UAAU,GAChB4G,EAAM5G,UAAU,GAChBsI,EAAOtI,UAAU,GACrBtV,KAAK2nG,KAAO3rF,EACZhc,KAAKg7E,KAAO9+D,EACZlc,KAAK+zD,MAAQn2C,EAiBf,OAdKyqF,IAAuBD,EAAsBnnF,UAAYonF,GAC9DD,EAAsBtjG,UAAYL,OAAOyc,OAAQmnF,GAAwBA,EAAqBvjG,WAC9FsjG,EAAsBtjG,UAAUqc,YAAcinF,EAC9CA,EAAsBtjG,UAAU8vD,MAAQ,SAAgBozC,EAAUC,EAAU7nG,GAC1E,IAAKJ,KAAKgzB,WAAWg1E,EAAUC,GAAa,OAAO,KACnD7nG,EAAQq0D,UAAUz0D,KAAK+zD,QAEzBq0C,EAAsBtjG,UAAUyb,YAAc,WAC5C,MAAO,IAET6nF,EAAsBtjG,UAAU0b,SAAW,WACzC,OAAO4nF,GAGFA,GACPV,IAEEY,GAA2B,SAAUD,GACvC,SAASC,IACPD,EAAqB1nG,KAAKX,MAC1BA,KAAKuoG,OAAS,KACdvoG,KAAKwoG,OAAS,KACd,IAAIhsE,EAAKlnB,UAAU,GACfmnB,EAAKnnB,UAAU,GACnBtV,KAAKuoG,OAAS/rE,EACdx8B,KAAKwoG,OAAS/rE,EACdz8B,KAAKyoG,YAAYzoG,KAAKuoG,OAAQvoG,KAAKwoG,QAwBrC,OArBKH,IAAuBC,EAAwBrnF,UAAYonF,GAChEC,EAAwBxjG,UAAYL,OAAOyc,OAAQmnF,GAAwBA,EAAqBvjG,WAChGwjG,EAAwBxjG,UAAUqc,YAAcmnF,EAChDA,EAAwBxjG,UAAU2jG,YAAc,SAAsBjsE,EAAIC,GACxEz8B,KAAK2nG,KAAOnlG,KAAKwZ,IAAIwgB,EAAGmrE,KAAMlrE,EAAGkrE,MACjC3nG,KAAKg7E,KAAOx4E,KAAK0Z,IAAIsgB,EAAGw+C,KAAMv+C,EAAGu+C,OAEnCstB,EAAwBxjG,UAAU8vD,MAAQ,SAAgBozC,EAAUC,EAAU7nG,GAC5E,IAAKJ,KAAKgzB,WAAWg1E,EAAUC,GAC7B,OAAO,KAEW,OAAhBjoG,KAAKuoG,QAAmBvoG,KAAKuoG,OAAO3zC,MAAMozC,EAAUC,EAAU7nG,GAC9C,OAAhBJ,KAAKwoG,QAAmBxoG,KAAKwoG,OAAO5zC,MAAMozC,EAAUC,EAAU7nG,IAEpEkoG,EAAwBxjG,UAAUyb,YAAc,WAC9C,MAAO,IAET+nF,EAAwBxjG,UAAU0b,SAAW,WAC3C,OAAO8nF,GAGFA,GACPZ,IAEEgB,GAA4B,WAC9B1oG,KAAK2oG,QAAU,IAAInhE,GACnBxnC,KAAKD,MAAQ,KACbC,KAAK+0D,OAAS,GAEhB2zC,GAA0B5jG,UAAU8jG,UAAY,WAG9CrzC,GAAYxzD,KAAK/B,KAAK2oG,QAAS,IAAIjB,GAAkBI,gBAIrD,IAHA,IAAIt3E,EAAMxwB,KAAK2oG,QACX7jD,EAAO,KACPp0B,EAAO,IAAI8W,KACF,CAEX,GARaxnC,KAON6oG,WAAWr4E,EAAKE,GACH,IAAhBA,EAAK5uB,OAAgB,OAAO4uB,EAAK1kB,IAAI,GACzC84C,EAAOt0B,EACPA,EAAME,EACNA,EAAOo0B,IAGX4jD,GAA0B5jG,UAAUzF,OAAS,SAAiB2c,EAAKE,EAAK0B,GACtE,GAAmB,OAAf5d,KAAKD,MAAkB,MAAM,IAAI4I,MAAM,qDAC3C3I,KAAK2oG,QAAQ1oG,IAAI,IAAImoG,GAAsBpsF,EAAKE,EAAK0B,KAEvD8qF,GAA0B5jG,UAAU8vD,MAAQ,SAAgB54C,EAAKE,EAAK9b,GACpEJ,KAAK4mB,OACL5mB,KAAKD,MAAM60D,MAAM54C,EAAKE,EAAK9b,IAE7BsoG,GAA0B5jG,UAAUgkG,UAAY,WAC9C,GAAmB,OAAf9oG,KAAKD,MAAkB,OAAO,KAClCC,KAAKD,MAAQC,KAAK4oG,aAEpBF,GAA0B5jG,UAAU3B,UAAY,SAAoB5D,GAClE+wB,GAAOjtB,IAAIm6B,QAAQjF,GAAUE,aAAa,IAAI1W,GAAWxiB,EAAKooG,KAAM3nG,KAAK+0D,QAAS,IAAIhzC,GAAWxiB,EAAKy7E,KAAMh7E,KAAK+0D,WAEnH2zC,GAA0B5jG,UAAU8hB,KAAO,WACzC,GAAmB,OAAf5mB,KAAKD,MAAkB,OAAO,KAClCC,KAAK8oG,aAEPJ,GAA0B5jG,UAAU+jG,WAAa,SAAqBr4E,EAAKE,GACzE1wB,KAAK+0D,SACLrkC,EAAKkX,QACL,IAAK,IAAI/oC,EAAI,EAAGA,EAAI2xB,EAAI1uB,OAAQjD,GAAK,EAAG,CACtC,IAAI29B,EAAKhM,EAAIxkB,IAAInN,GAEjB,GAAW,QADFA,EAAI,EAAI2xB,EAAI1uB,OAAS0uB,EAAIxkB,IAAInN,GAAK,MAEzC6xB,EAAKzwB,IAAIu8B,OACJ,CACL,IAAIj9B,EAAO,IAAI+oG,GAAwB93E,EAAIxkB,IAAInN,GAAI2xB,EAAIxkB,IAAInN,EAAI,IAC/D6xB,EAAKzwB,IAAIV,MAIfmpG,GAA0B5jG,UAAUyb,YAAc,WAChD,MAAO,IAETmoF,GAA0B5jG,UAAU0b,SAAW,WAC7C,OAAOkoF,IAGT,IAAIK,GAAmB,WACrB/oG,KAAKm0D,OAAS,IAAI3sB,IAEpBuhE,GAAiBjkG,UAAU2vD,UAAY,SAAoB72C,GACzD5d,KAAKm0D,OAAOl0D,IAAI2d,IAElBmrF,GAAiBjkG,UAAUkkG,SAAW,WACpC,OAAOhpG,KAAKm0D,QAEd40C,GAAiBjkG,UAAUyb,YAAc,WACvC,MAAO,CAACi0C,KAEVu0C,GAAiBjkG,UAAU0b,SAAW,WACpC,OAAOuoF,IAGT,IAAIE,GAA4B,WAC9BjpG,KAAKonE,OAAS,KACd,IAAIljC,EAAI5uB,UAAU,GAClB,IAAKuP,GAAaqf,EAAGsS,IAAc,MAAM,IAAI31B,GAAyB,8BACtE7gB,KAAKonE,OAAS,IAAI8hC,GAAwBhlE,IAGxCilE,GAAqB,CAAEC,eAAgB,CAAE7kG,cAAc,GAAO2kG,wBAAyB,CAAE3kG,cAAc,IAC3G0kG,GAA0BnkG,UAAU81E,OAAS,SAAiBj5E,GAC5D,IAAI0nG,EAAM,IAAI9pE,GAAmB59B,GAC7BvB,EAAU,IAAIgpG,GAAeC,GAEjC,OADArpG,KAAKonE,OAAOxS,MAAMjzD,EAAEzC,EAAGyC,EAAEzC,EAAGkB,GACrBipG,EAAIrpE,eAEbipE,GAA0BnkG,UAAUyb,YAAc,WAChD,MAAO,CAACo6D,KAEVsuB,GAA0BnkG,UAAU0b,SAAW,WAC7C,OAAOyoF,IAETE,GAAmBC,eAAep9F,IAAM,WAAc,OAAOo9F,IAC7DD,GAAmBD,wBAAwBl9F,IAAM,WAAc,OAAOk9F,IAEtEzkG,OAAOid,iBAAkBunF,GAA2BE,IAEpD,IAAIC,GAAiB,WACnBppG,KAAKspG,SAAW,KAChB,IAAInpE,EAAU7qB,UAAU,GACxBtV,KAAKspG,SAAWnpE,GAElBipE,GAAetkG,UAAU2vD,UAAY,SAAoB72C,GACvD,IAAI/G,EAAM+G,EACV5d,KAAKspG,SAAS3pE,aAAa9oB,EAAI8Y,cAAc,GAAI9Y,EAAI8Y,cAAc,KAErEy5E,GAAetkG,UAAUyb,YAAc,WACrC,MAAO,CAACi0C,KAEV40C,GAAetkG,UAAU0b,SAAW,WAClC,OAAO4oF,IAGT,IAAIF,GAA0B,WAC5BlpG,KAAKonE,OAAS,IAAIshC,GAClB,IAAIngG,EAAO+M,UAAU,GACrBtV,KAAK4mB,KAAKre,IAEZ2gG,GAAwBpkG,UAAU8hB,KAAO,SAAere,GAItD,IAHE,IAGO1J,EADG4wF,GAAyBM,SAASxnF,GAC3Bk9B,WAAY5mC,EAAE6mC,WAAY,CAC3C,IACIhE,EADO7iC,EAAE6C,OACEuuC,iBALFjwC,KAMNupG,QAAQ7nE,KAGnBwnE,GAAwBpkG,UAAUykG,QAAU,SAAkB7nE,GAG5D,IAFE,IAEO7iC,EAAI,EAAGA,EAAI6iC,EAAIjhC,OAAQ5B,IAAK,CACnC,IAAIgY,EAAM,IAAImqD,GAAYt/B,EAAI7iC,EAAI,GAAI6iC,EAAI7iC,IACtCmd,EAAMxZ,KAAKwZ,IAAInF,EAAIsD,GAAGjb,EAAG2X,EAAIhU,GAAG3D,GAChCgd,EAAM1Z,KAAK0Z,IAAIrF,EAAIsD,GAAGjb,EAAG2X,EAAIhU,GAAG3D,GALvBc,KAMNonE,OAAO/nE,OAAO2c,EAAKE,EAAKrF,KAGnCqyF,GAAwBpkG,UAAU8vD,MAAQ,WACxC,GAAyB,IAArBt/C,UAAU7U,OAAc,CAC1B,IAAIub,EAAM1G,UAAU,GAChB4G,EAAM5G,UAAU,GAChBlV,EAAU,IAAI2oG,GAElB,OADA/oG,KAAKonE,OAAOxS,MAAM54C,EAAKE,EAAK9b,GACrBA,EAAQ4oG,WACV,GAAyB,IAArB1zF,UAAU7U,OAAc,CACjC,IAAI+kB,EAAQlQ,UAAU,GAClBmQ,EAAQnQ,UAAU,GAClBqjD,EAAYrjD,UAAU,GAC1BtV,KAAKonE,OAAOxS,MAAMpvC,EAAOC,EAAOkzC,KAGpCuwC,GAAwBpkG,UAAUyb,YAAc,WAC9C,MAAO,IAET2oF,GAAwBpkG,UAAU0b,SAAW,WAC3C,OAAO0oF,IAGT,IAAIM,GAAiB,SAAUC,GAC7B,SAASD,IAYP,GAXAC,EAAe9oG,KAAKX,MACpBA,KAAK0pG,YAAc,KACnB1pG,KAAK2pG,aAAe,IAAItvD,GACxBr6C,KAAK4pG,kBAAoB,KACzB5pG,KAAK6pG,+BAAgC,EACrC7pG,KAAK8pG,UAAY,KACjB9pG,KAAK+pG,eAAiB,KACtB/pG,KAAKgqG,kBAAmB,EACxBhqG,KAAKiqG,cAAgB,KACrBjqG,KAAKkqG,eAAiB,KACtBlqG,KAAKuyF,WAAa,IAAI9B,GACG,IAArBn7E,UAAU7U,OAAc,CAC1B,IAAI0qD,EAAW71C,UAAU,GACrB60F,EAAa70F,UAAU,GACvB+4C,EAAmBloB,GAAiBU,sBACxC7mC,KAAK8pG,UAAY3+C,EACjBnrD,KAAK0pG,YAAcS,EACnBnqG,KAAK4pG,kBAAoBv7C,EACN,OAAf87C,GACFnqG,KAAKC,IAAIkqG,QAEN,GAAyB,IAArB70F,UAAU7U,OAAc,CACjC,IAAI2pG,EAAa90F,UAAU,GACvB+0F,EAAe/0F,UAAU,GACzBg1F,EAAqBh1F,UAAU,GACnCtV,KAAK8pG,UAAYM,EACjBpqG,KAAK0pG,YAAcW,EACnBrqG,KAAK4pG,kBAAoBU,EACJ,OAAjBD,GACFrqG,KAAKC,IAAIoqG,IAgNf,OA3MKZ,IAAiBD,EAAcvoF,UAAYwoF,GAChDD,EAAc1kG,UAAYL,OAAOyc,OAAQuoF,GAAkBA,EAAe3kG,WAC1E0kG,EAAc1kG,UAAUqc,YAAcqoF,EACtCA,EAAc1kG,UAAUylG,oBAAsB,SAA8Bp/C,EAAUljD,GACpF,IACI29C,EADI5lD,KAAKkiD,OAAOwJ,QAAQzjD,GAChBy/C,WACR3gB,EAAgB,EACV1iB,GAASK,KACbkhC,EAAI5lB,YAAYmrB,EAAU3L,GAASE,MAC7Br7B,GAASG,UAAYuiB,IACjC,IAAI4d,EAAS6kD,EAAcgB,kBAAkBxqG,KAAK4pG,kBAAmB7iE,GACrE6e,EAAIT,YAAYgG,EAAUxG,IAE5B6kD,EAAc1kG,UAAU2lG,iBAAmB,WACzC,GAAyB,IAArBn1F,UAAU7U,OAAc,CAC1B,IAAI4/D,EAAK/qD,UAAU,GACfo1F,EAAuBp1F,UAAU,GACrC,OAAOtV,KAAKyqG,iBAAiBpqC,EAAIqqC,GAAsB,GAClD,GAAyB,IAArBp1F,UAAU7U,OAAc,CACjC,IAAIkqG,EAAOr1F,UAAU,GACjBs1F,EAAyBt1F,UAAU,GACnCu1F,EAAoBv1F,UAAU,GAC9B4xD,EAAK,IAAIy+B,GAAqBgF,GAAM,GAAM,GAC9CzjC,EAAGk/B,qBAAqByE,GACxB,IAAIC,EAAM9qG,KAAK+qG,2BACXC,EAAUhrG,KAAK0pG,uBAAuB1xD,IAAch4C,KAAK0pG,uBAAuBjzD,IAAWz2C,KAAK0pG,uBAAuBtxD,GACvH6yD,EAAqBL,IAA2BI,EAGpD,OAFAF,EAAI9P,qBAAqBh7F,KAAK+mD,OAAQmgB,EAAI+jC,GAC1CjrG,KAAKkrG,yBAAyBlrG,KAAK8pG,WAC5B5iC,IAGXsiC,EAAc1kG,UAAUqmG,kBAAoB,SAA4BC,GACtE,IAAK,IAAIvsG,EAAImB,KAAK+mD,OAAOthB,WAAY5mC,EAAE6mC,WAAY,CACzC7mC,EAAE6C,OACR+uD,OAAO4N,cAAc+sC,KAG3B5B,EAAc1kG,UAAUumG,yBAA2B,SAAmCnnE,EAAGm8B,EAAI6lC,GAC3F,IAAIh/B,EAAK,IAAIy+B,GAAqBtlC,EAAI6lC,GAAe,GAIrD,OAHAh/B,EAAGs/B,iBAAiBxmG,KAAK6rD,mBAAoB3nB,EAAE2nB,oBACrC7rD,KAAK+qG,2BACX/P,qBAAqBh7F,KAAK+mD,OAAQ7iB,EAAE6iB,OAAQmgB,GACzCA,GAETsiC,EAAc1kG,UAAU23E,YAAc,WACpC,OAAOz8E,KAAK0pG,aAEdF,EAAc1kG,UAAUs3E,oBAAsB,WAC5C,OAAOp8E,KAAK4pG,mBAEdJ,EAAc1kG,UAAUwmG,gBAAkB,WACxC,OAAOtrG,KAAKgqG,kBAEdR,EAAc1kG,UAAUy0E,SAAW,WACjC,GAAIjkE,UAAU,aAAcihC,GAAO,CACjC,IACItuC,EADIqN,UAAU,GACJqa,gBACd3vB,KAAKurG,YAAYvrG,KAAK8pG,UAAW7hG,EAAOoc,GAASE,eAC5C,GAAIjP,UAAU,aAAcyM,GAAY,CAC7C,IAAIxa,EAAK+N,UAAU,GACnBtV,KAAKurG,YAAYvrG,KAAK8pG,UAAWviG,EAAI8c,GAASE,YAGlDilF,EAAc1kG,UAAU40E,WAAa,SAAqB/3E,GAGxD3B,KAAK85E,eAAen4E,EAAEy1C,kBAAmB/yB,GAASI,SAAUJ,GAASE,UACrE,IAAK,IAAI1lB,EAAI,EAAGA,EAAI8C,EAAEg1C,qBAAsB93C,IAAK,CAC/C,IAAIy6C,EAAO33C,EAAEi2C,iBAAiB/4C,GAJnBmB,KAKJ85E,eAAexgC,EAAMj1B,GAASE,SAAUF,GAASI,YAG5D+kF,EAAc1kG,UAAUsiG,QAAU,SAAkB1rF,GAClD1b,KAAKwxD,WAAW91C,GAChB,IAAIzT,EAAQyT,EAAEu0B,iBACdjwC,KAAKurG,YAAYvrG,KAAK8pG,UAAW7hG,EAAM,GAAIoc,GAASG,UACpDxkB,KAAKurG,YAAYvrG,KAAK8pG,UAAW7hG,EAAMA,EAAMxH,OAAS,GAAI4jB,GAASG,WAErEglF,EAAc1kG,UAAUs1E,cAAgB,SAAwBviD,GAC9D,IAAI5vB,EAAQuhC,GAAiBmB,qBAAqB9S,EAAKoY,kBACvD,GAAIhoC,EAAMxH,OAAS,EAGjB,OAFAT,KAAKgqG,kBAAmB,EACxBhqG,KAAKiqG,cAAgBhiG,EAAM,GACpB,KAET,IAAIyT,EAAI,IAAIgmE,GAAKz5E,EAAO,IAAIw9C,GAAMzlD,KAAK8pG,UAAWzlF,GAASE,WAC3DvkB,KAAK2pG,aAAan9D,IAAI3U,EAAMnc,GAC5B1b,KAAKwxD,WAAW91C,GAChBmd,GAAOE,OAAO9wB,EAAMxH,QAAU,EAAG,sCACjCT,KAAKuqG,oBAAoBvqG,KAAK8pG,UAAW7hG,EAAM,IAC/CjI,KAAKuqG,oBAAoBvqG,KAAK8pG,UAAW7hG,EAAMA,EAAMxH,OAAS,KAEhE+oG,EAAc1kG,UAAU0mG,gBAAkB,WACxC,OAAOxrG,KAAKiqG,eAEdT,EAAc1kG,UAAU2mG,kBAAoB,WAI1C,IAHA,IAAI/iE,EAAO1oC,KAAK6rD,mBACZnqB,EAAM,IAAIj5B,MAAMigC,EAAK5mC,QAAQmqB,KAAK,MAClCptB,EAAI,EACCm0C,EAAKtK,EAAKjD,WAAYuN,EAAGtN,WAAY,CAC5C,IAAInmC,EAAOyzC,EAAGtxC,OACdggC,EAAI7iC,KAAOU,EAAKowB,gBAAgBtV,OAElC,OAAOqnB,GAET8nE,EAAc1kG,UAAU+mD,iBAAmB,WAEzC,OAD4B,OAAxB7rD,KAAK+pG,iBAA2B/pG,KAAK+pG,eAAiB/pG,KAAKkiD,OAAO2J,iBAAiB7rD,KAAK8pG,YACrF9pG,KAAK+pG,gBAEdP,EAAc1kG,UAAU4mG,wBAA0B,SAAkCvgD,EAAUljD,EAAOu9C,GACnG,GAAIxlD,KAAK8wD,eAAe3F,EAAUljD,GAAU,OAAO,KAC/Cu9C,IAAQnhC,GAASG,UAAYxkB,KAAK6pG,8BAAiC7pG,KAAKuqG,oBAAoBp/C,EAAUljD,GAAiBjI,KAAKurG,YAAYpgD,EAAUljD,EAAOu9C,IAE/JgkD,EAAc1kG,UAAUg1E,eAAiB,SAAyB6xB,EAAIC,EAAQC,GAC5E,GAAIF,EAAG71E,UAAa,OAAO,KAC3B,IAAI7tB,EAAQuhC,GAAiBmB,qBAAqBghE,EAAG17D,kBACrD,GAAIhoC,EAAMxH,OAAS,EAGjB,OAFAT,KAAKgqG,kBAAmB,EACxBhqG,KAAKiqG,cAAgBhiG,EAAM,GACpB,KAET,IAAI1J,EAAOqtG,EACPptG,EAAQqtG,EACRvvE,GAAasF,MAAM35B,KACrB1J,EAAOstG,EACPrtG,EAAQotG,GAEV,IAAIlwF,EAAI,IAAIgmE,GAAKz5E,EAAO,IAAIw9C,GAAMzlD,KAAK8pG,UAAWzlF,GAASG,SAAUjmB,EAAMC,IAC3EwB,KAAK2pG,aAAan9D,IAAIm/D,EAAIjwF,GAC1B1b,KAAKwxD,WAAW91C,GAChB1b,KAAKurG,YAAYvrG,KAAK8pG,UAAW7hG,EAAM,GAAIoc,GAASG,WAEtDglF,EAAc1kG,UAAUymG,YAAc,SAAsBpgD,EAAUljD,EAAOmjD,GAC3E,IAAIhoD,EAAIpD,KAAKkiD,OAAOwJ,QAAQzjD,GACxB29C,EAAMxiD,EAAEskD,WACA,OAAR9B,EACFxiD,EAAE6jD,OAAS,IAAIxB,GAAM0F,EAAUC,GACxBxF,EAAIT,YAAYgG,EAAUC,IAErCo+C,EAAc1kG,UAAUimG,yBAA2B,WACjD,OAAO,IAAIpE,IAEb6C,EAAc1kG,UAAUomG,yBAA2B,SAAmC//C,GAGpF,IAFA,IAEStsD,EAAImB,KAAK+mD,OAAOthB,WAAY5mC,EAAE6mC,WAGrC,IAFA,IAAIhqB,EAAI7c,EAAE6C,OACNo9E,EAAOpjE,EAAEgsC,WAAW1nB,YAAYmrB,GAC3B2gD,EAAOpwF,EAAE+0C,OAAOhrB,WAAYqmE,EAAKpmE,WAAY,CACpD,IAAIg4B,EAAKouC,EAAKpqG,OANL1B,KAOF0rG,wBAAwBvgD,EAAUuS,EAAGz1D,MAAO62E,KAIzD0qB,EAAc1kG,UAAU7E,IAAM,WAC5B,GAAyB,IAArBqV,UAAU7U,OAYL,OAAOgpG,EAAe3kG,UAAU7E,IAAIu1B,MAAMx1B,KAAMsV,WAXvD,IAAI4uB,EAAI5uB,UAAU,GAClB,GAAI4uB,EAAEpO,UAAa,OAAO,KAE1B,GADIoO,aAAakU,KAAgBp4C,KAAK6pG,+BAAgC,GAClE3lE,aAAauS,GAAWz2C,KAAK05E,WAAWx1C,QACvC,GAAIA,aAAawO,GAAc1yC,KAAKo6E,cAAcl2C,QAClD,GAAIA,aAAaqS,GAASv2C,KAAKu5E,SAASr1C,QACxC,GAAIA,aAAa4T,GAAc93C,KAAKw6E,cAAct2C,QAClD,GAAIA,aAAaoN,GAAmBtxC,KAAKw6E,cAAct2C,QACvD,GAAIA,aAAakU,GAAgBp4C,KAAKw6E,cAAct2C,OACpD,CAAA,KAAIA,aAAa6L,IACf,MAAM,IAAIpnC,MAAMu7B,EAAE1jB,WAAW24B,WADQn5C,KAAKw6E,cAAct2C,KAInEslE,EAAc1kG,UAAU01E,cAAgB,SAAwB1pC,GAG9D,IAFA,IAESjyC,EAAI,EAAGA,EAAIiyC,EAAGrM,mBAAoB5lC,IAAK,CAC9C,IAAIqlC,EAAI4M,EAAGhN,aAAajlC,GAHbmB,KAIJC,IAAIikC,KAGfslE,EAAc1kG,UAAU81E,OAAS,SAAiBrzE,GAChD,OAAIsd,GAAa7kB,KAAK0pG,YAAalzD,KAAcx2C,KAAK0pG,YAAYjlE,mBAAqB,IACzD,OAAxBzkC,KAAKkqG,iBACPlqG,KAAKkqG,eAAiB,IAAIjB,GAA0BjpG,KAAK0pG,cAEpD1pG,KAAKkqG,eAAetvB,OAAOrzE,IAE7BvH,KAAKuyF,WAAW3X,OAAOrzE,EAAIvH,KAAK0pG,cAEzCF,EAAc1kG,UAAUy8C,SAAW,WACjC,GAAyB,IAArBjsC,UAAU7U,OAAc,CAC1B,IAAIo3B,EAAOviB,UAAU,GACrB,OAAOtV,KAAK2pG,aAAa39F,IAAI6rB,GACtB,OAAO4xE,EAAe3kG,UAAUy8C,SAAS/rB,MAAMx1B,KAAMsV,YAEhEk0F,EAAc1kG,UAAUyb,YAAc,WACpC,MAAO,IAETipF,EAAc1kG,UAAU0b,SAAW,WACjC,OAAOgpF,GAETA,EAAcgB,kBAAoB,SAA4Bn8C,EAAkBtnB,GAC9E,OAAOsnB,EAAiBvnB,aAAaC,GAAiB1iB,GAASG,SAAWH,GAASE,UAG9EilF,GACPl5C,IAEEy7C,GAAkB,WAIpB,GAHA/rG,KAAKyvE,IAAM,IAAIzzC,GACfh8B,KAAKgsG,sBAAwB,KAC7BhsG,KAAKisG,KAAO,KACa,IAArB32F,UAAU7U,OAAc,CAC1B,IAAIiyF,EAAKp9E,UAAU,GACnBtV,KAAKksG,wBAAwBxZ,EAAGvtD,qBAChCnlC,KAAKisG,KAAO,IAAIxjG,MAAM,GAAGwjB,KAAK,MAC9BjsB,KAAKisG,KAAK,GAAK,IAAIzC,GAAc,EAAG9W,QAC/B,GAAyB,IAArBp9E,UAAU7U,OAAc,CACjC,IAAImyF,EAAOt9E,UAAU,GACjBq9E,EAAKr9E,UAAU,GACf+4C,EAAmBloB,GAAiBU,sBACpC+rD,EAAKztD,oBAAoBriB,UAAU6vE,EAAGxtD,sBAAwB,EAAKnlC,KAAKksG,wBAAwBtZ,EAAKztD,qBAA+BnlC,KAAKksG,wBAAwBvZ,EAAGxtD,qBACxKnlC,KAAKisG,KAAO,IAAIxjG,MAAM,GAAGwjB,KAAK,MAC9BjsB,KAAKisG,KAAK,GAAK,IAAIzC,GAAc,EAAG5W,EAAMvkC,GAC1CruD,KAAKisG,KAAK,GAAK,IAAIzC,GAAc,EAAG7W,EAAItkC,QACnC,GAAyB,IAArB/4C,UAAU7U,OAAc,CACjC,IAAI0rG,EAAO72F,UAAU,GACjBu9E,EAAOv9E,UAAU,GACjBg1F,EAAqBh1F,UAAU,GAC/B62F,EAAKhnE,oBAAoBriB,UAAU+vE,EAAK1tD,sBAAwB,EAAKnlC,KAAKksG,wBAAwBC,EAAKhnE,qBAA+BnlC,KAAKksG,wBAAwBrZ,EAAK1tD,qBAC5KnlC,KAAKisG,KAAO,IAAIxjG,MAAM,GAAGwjB,KAAK,MAC9BjsB,KAAKisG,KAAK,GAAK,IAAIzC,GAAc,EAAG2C,EAAM7B,GAC1CtqG,KAAKisG,KAAK,GAAK,IAAIzC,GAAc,EAAG3W,EAAMyX,KAG9CyB,GAAgBjnG,UAAUu3F,eAAiB,SAAyBx9F,GAClE,OAAOmB,KAAKisG,KAAKptG,GAAG49E,eAEtBsvB,GAAgBjnG,UAAUonG,wBAA0B,SAAkCjxD,GACpFj7C,KAAKgsG,sBAAwB/wD,EAC7Bj7C,KAAKyvE,IAAIr0C,kBAAkBp7B,KAAKgsG,wBAElCD,GAAgBjnG,UAAUyb,YAAc,WACtC,MAAO,IAETwrF,GAAgBjnG,UAAU0b,SAAW,WACnC,OAAOurF,IAKT,IAAIK,GAAiB,aAErBA,GAAetnG,UAAUyb,YAAc,WACrC,MAAO,IAET6rF,GAAetnG,UAAU0b,SAAW,WAClC,OAAO4rF,IAETA,GAAe9yE,IAAM,WACnB,GAAIhkB,UAAU,aAAcqtB,IAAY9d,GAAavP,UAAU,GAAI82F,GAAeC,OAAQ,CAIxF,IAHA,IAAI9jG,EAAO+M,UAAU,GACjBkmF,EAAKlmF,UAAU,GACfimF,EAAS,IAAI/zD,GACR3oC,EAAI,EAAGA,EAAI0J,EAAKk8B,mBAAoB5lC,IAAK,CAChD,IAAIqlC,EAAIs3D,EAAGliE,IAAI/wB,EAAKu7B,aAAajlC,IACvB,OAANqlC,GAAcq3D,EAAOt7F,IAAIikC,GAE/B,OAAO37B,EAAKs7B,aAAayY,cAAci/C,GAClC,GAAI12E,GAAavP,UAAU,GAAI0xB,KAAeniB,GAAavP,UAAU,GAAI82F,GAAeC,OAAQ,CAIrG,IAHA,IAAIr1F,EAAQ1B,UAAU,GAClBg3F,EAAOh3F,UAAU,GACjBi3F,EAAW,IAAI/kE,GACVjH,EAAMvpB,EAAMyuB,WAAYlF,EAAImF,WAAY,CAC/C,IAAI1B,EAAMzD,EAAI7+B,OACV8qG,EAAKF,EAAKhzE,IAAI0K,GACP,OAAPwoE,GAAeD,EAAStsG,IAAIusG,GAElC,OAAOD,IAGXH,GAAeC,MAAQ,aAEvB,IAAI9P,GAAa,SAAUwP,GACzB,SAASxP,IACP,IAAI7J,EAAKp9E,UAAU,GACfq9E,EAAKr9E,UAAU,GACnBy2F,EAAgBprG,KAAKX,KAAM0yF,EAAIC,GAC/B3yF,KAAKuyF,WAAa,IAAI9B,GACtBzwF,KAAK8xC,UAAY,KACjB9xC,KAAKysG,YAAc,KACnBzsG,KAAKmkF,OAAS,KACdnkF,KAAKy7E,UAAY,IAAImE,GACrB5/E,KAAK0sG,gBAAkB,IAAIllE,GAC3BxnC,KAAK47F,gBAAkB,IAAIp0D,GAC3BxnC,KAAK68F,iBAAmB,IAAIr1D,GAC5BxnC,KAAKmkF,OAAS,IAAI7zB,GAAY,IAAIyuB,IAClC/+E,KAAK8xC,UAAY4gD,EAAG7uD,aA4MtB,OAzMKkoE,IAAkBxP,EAAUt7E,UAAY8qF,GAC7CxP,EAAUz3F,UAAYL,OAAOyc,OAAQ6qF,GAAmBA,EAAgBjnG,WACxEy3F,EAAUz3F,UAAUqc,YAAco7E,EAClCA,EAAUz3F,UAAUu/E,iBAAmB,SAA2B3oE,GAChE,IAAI4oE,EAAetkF,KAAKy7E,UAAUuE,cAActkE,GAChD,GAAqB,OAAjB4oE,EAAuB,CACzB,IAAIC,EAAgBD,EAAa58B,WAC7B88B,EAAe9oE,EAAEgsC,WAChB48B,EAAaV,iBAAiBloE,KACjC8oE,EAAe,IAAI/+B,GAAM/pC,EAAEgsC,aACd7C,OAEf,IAAIzmC,EAAQkmE,EAAanhC,WACrB/kC,EAAMuU,UACRvU,EAAMne,IAAIskF,GAEZnmE,EAAMne,IAAIukF,GACVD,EAAc1gF,MAAM2gF,QAEpBxkF,KAAKy7E,UAAUx7E,IAAIyb,IAGvB6gF,EAAUz3F,UAAUk3F,SAAW,WAC7B,OAAOh8F,KAAKmkF,QAEdoY,EAAUz3F,UAAU6nG,2BAA6B,WAC/C,IAAK,IAAI35D,EAAKhzC,KAAKmkF,OAAOhzB,cAAc1rB,WAAYuN,EAAGtN,WAAY,CACjE,IAAI4a,EAAKtN,EAAGtxC,OACR+hD,EAAMnD,EAAGgB,SACThB,EAAGn1C,cAAgBs4C,EAAIt4C,eACzBm1C,EAAG+C,aAAY,GACfI,EAAIJ,aAAY,MAItBk5C,EAAUz3F,UAAUi4F,cAAgB,SAAwB90F,GAC1D,QAAIjI,KAAKmqD,UAAUliD,EAAOjI,KAAK47F,oBAC3B57F,KAAKmqD,UAAUliD,EAAOjI,KAAK0sG,kBAGjCnQ,EAAUz3F,UAAU0nF,gBAAkB,SAA0BogB,EAAiBC,EAAgBt6C,EAAgBu6C,GAC/G,IAAIvwD,EAAW,IAAI/U,GAInB,OAHA+U,EAASrV,OAAO0lE,GAChBrwD,EAASrV,OAAO2lE,GAChBtwD,EAASrV,OAAOqrB,GACZhW,EAASzmB,UAAoBymE,EAAUwQ,kBAAkBD,EAAQ9sG,KAAKisG,KAAK,GAAGxvB,cAAez8E,KAAKisG,KAAK,GAAGxvB,cAAez8E,KAAK8xC,WAC3H9xC,KAAK8xC,UAAUwK,cAAcC,IAEtCggD,EAAUz3F,UAAU05E,eAAiB,WACnC,IAAK,IAAI5tB,EAAS5wD,KAAKmkF,OAAOngC,WAAWve,WAAYmrB,EAAOlrB,WAAY,CAC3DkrB,EAAOlvD,OACby/C,WAAWq9B,mBAGpB+d,EAAUz3F,UAAUqlD,UAAY,SAAoBliD,EAAOs0C,GAGzD,IAFA,IAESvJ,EAAKuJ,EAAS9W,WAAYuN,EAAGtN,WAAY,CAChD,IAAIn9B,EAAOyqC,EAAGtxC,OAEd,GALW1B,KAIMuyF,WAAW3X,OAAO3yE,EAAOM,KAC9B8b,GAASI,SAAY,OAAO,EAE1C,OAAO,GAET83E,EAAUz3F,UAAUkoG,sBAAwB,WAE1C,IADA,IAAIC,EAAW,IAAIzlE,GACVwL,EAAKhzC,KAAKy7E,UAAUh2C,WAAYuN,EAAGtN,WAAY,CACtD,IAAIhqB,EAAIs3B,EAAGtxC,OACPga,EAAE+nE,gBACJzwC,EAAGvzC,SACHwtG,EAAShtG,IAAIyb,EAAEwnE,qBAGnBljF,KAAKy7E,UAAUv0C,OAAO+lE,IAExB1Q,EAAUz3F,UAAUooG,oBAAsB,WACxC,IAAK,IAAIt8C,EAAS5wD,KAAKmkF,OAAOngC,WAAWve,WAAYmrB,EAAOlrB,WAAY,CACtE,IAAInmC,EAAOqxD,EAAOlvD,OACdkkD,EAAMrmD,EAAK4hD,WAAWuG,WAC1BnoD,EAAKmoD,WAAW7jD,MAAM+hD,KAG1B22C,EAAUz3F,UAAU6nF,kBAAoB,SAA4BwgB,GAElE,OADAntG,KAAKotG,eAAeD,GACbntG,KAAKysG,aAEdlQ,EAAUz3F,UAAUuoG,kBAAoB,SAA4BziD,GAGlE,IAFA,IAES/rD,EAAI+rD,EAAMnlB,WAAY5mC,EAAE6mC,WAAY,CAC3C,IAAIhqB,EAAI7c,EAAE6C,OAHC1B,KAIJqkF,iBAAiB3oE,KAG5B6gF,EAAUz3F,UAAUsoG,eAAiB,SAAyBrR,GAC5D/7F,KAAKstG,WAAW,GAChBttG,KAAKstG,WAAW,GAChBttG,KAAKisG,KAAK,GAAGxB,iBAAiBzqG,KAAKyvE,KAAK,GACxCzvE,KAAKisG,KAAK,GAAGxB,iBAAiBzqG,KAAKyvE,KAAK,GACxCzvE,KAAKisG,KAAK,GAAGZ,yBAAyBrrG,KAAKisG,KAAK,GAAIjsG,KAAKyvE,KAAK,GAC9D,IAAI89B,EAAiB,IAAI/lE,GACzBxnC,KAAKisG,KAAK,GAAGd,kBAAkBoC,GAC/BvtG,KAAKisG,KAAK,GAAGd,kBAAkBoC,GAE/BvtG,KAAKqtG,kBAAkBE,GACvBvtG,KAAKwtG,0BACLxtG,KAAKgtG,wBACL/R,GAAoB1T,WAAWvnF,KAAKy7E,UAAUt6B,YAC9CnhD,KAAKmkF,OAAOxyB,SAAS3xD,KAAKy7E,UAAUt6B,YACpCnhD,KAAK08E,mBACL18E,KAAKytG,uBACLztG,KAAK0tG,oBAAoB3R,GACzB/7F,KAAK2sG,6BACL,IAAI9nB,EAAc,IAAI7yB,GAAehyD,KAAK8xC,WAC1C+yC,EAAY5kF,IAAID,KAAKmkF,QACrBnkF,KAAK0sG,gBAAkB7nB,EAAY7xB,cACnC,IAAI26C,EAAc,IAAIlS,GAAYz7F,KAAMA,KAAK8xC,UAAW9xC,KAAKuyF,YAC7DvyF,KAAK47F,gBAAkB+R,EAAYh2C,MAAMokC,GACzC,IAAI6R,EAAe,IAAIhR,GAAa58F,KAAMA,KAAK8xC,UAAW9xC,KAAKuyF,YAC/DvyF,KAAK68F,iBAAmB+Q,EAAaj2C,MAAMokC,GAC3C/7F,KAAKysG,YAAczsG,KAAKwsF,gBAAgBxsF,KAAK68F,iBAAkB78F,KAAK47F,gBAAiB57F,KAAK0sG,gBAAiB3Q,IAE7GQ,EAAUz3F,UAAU+oG,oBAAsB,SAA8BzqG,EAAGg5F,GACzE,IAAI52C,EAAMxlD,KAAKuyF,WAAW3X,OAAOx3E,EAAEusB,gBAAiB3vB,KAAKisG,KAAK7P,GAAa3f,eAC3Er5E,EAAEskD,WAAWvC,YAAYi3C,EAAa52C,IAExC+2C,EAAUz3F,UAAUwoG,WAAa,SAAqBniD,GAGpD,IAFA,IAEStsD,EAAImB,KAAKisG,KAAK9gD,GAAUuF,kBAAmB7xD,EAAE6mC,WAAY,CAChE,IAAIooE,EAAYjvG,EAAE6C,OAHP1B,KAIUmkF,OAAOz4B,QAAQoiD,EAAUn+E,iBACtC06B,SAASc,EAAU2iD,EAAUpmD,WAAW1nB,YAAYmrB,MAGhEoxC,EAAUz3F,UAAU4oG,oBAAsB,SAA8B3R,GACtE,IAAK,IAAI/oD,EAAKhzC,KAAKmkF,OAAOhzB,cAAc1rB,WAAYuN,EAAGtN,WAAY,CACjE,IAAI4a,EAAKtN,EAAGtxC,OACRglD,EAAQpG,EAAGoH,WACXhB,EAAMzB,WAAa3E,EAAG8C,sBAAwBm5C,EAAUC,aAAa91C,EAAM1mB,YAAY,EAAGwf,GAAS9e,OAAQgmB,EAAM1mB,YAAY,EAAGwf,GAAS9e,OAAQq7D,IACnJz7C,EAAG+C,aAAY,KAIrBk5C,EAAUz3F,UAAU0oG,wBAA0B,WAC5C,IAAK,IAAIx6D,EAAKhzC,KAAKy7E,UAAUh2C,WAAYuN,EAAGtN,WAAY,CACtD,IAAIhqB,EAAIs3B,EAAGtxC,OACPkkD,EAAMlqC,EAAEgsC,WACRtpC,EAAQ1C,EAAEynC,WACd,IAAK/kC,EAAMuU,SAAU,CACnBvU,EAAM8mB,YACN,IAAK,IAAIrmC,EAAI,EAAGA,EAAI,EAAGA,IAChB+mD,EAAIjzB,OAAO9zB,KAAM+mD,EAAIX,UAAa7mC,EAAMuU,OAAO9zB,KACxB,IAAtBuf,EAAMykE,SAAShkF,GACjB+mD,EAAIY,OAAO3nD,IAEXg6B,GAAOE,QAAQ3a,EAAMuU,OAAO9zB,EAAG2gD,GAAS5e,MAAO,+CAC/CglB,EAAIT,YAAYtmD,EAAG2gD,GAAS5e,KAAMxiB,EAAM4hB,YAAYnhC,EAAG2gD,GAAS5e,OAChE/H,GAAOE,QAAQ3a,EAAMuU,OAAO9zB,EAAG2gD,GAAS9e,OAAQ,gDAChDklB,EAAIT,YAAYtmD,EAAG2gD,GAAS9e,MAAOtiB,EAAM4hB,YAAYnhC,EAAG2gD,GAAS9e,aAO7E67D,EAAUz3F,UAAU43E,iBAAmB,WAGrC,IAFA,IAES9rB,EAAS5wD,KAAKmkF,OAAOngC,WAAWve,WAAYmrB,EAAOlrB,WAAY,CAC3DkrB,EAAOlvD,OACby/C,WAAWu7B,iBAJL18E,KAI6BisG,MAE1CjsG,KAAKw+E,iBACLx+E,KAAKktG,uBAEP3Q,EAAUz3F,UAAU2oG,qBAAuB,WAIzC,IAHA,IAGSM,EAAK/tG,KAAKmkF,OAAOngC,WAAWve,WAAYsoE,EAAGroE,WAAY,CAC9D,IAAItiC,EAAI2qG,EAAGrsG,OACPglD,EAAQtjD,EAAEskD,WACVtkD,EAAEmkD,eAEAb,EAAM/zB,OAAO,GARR3yB,KAQqB6tG,oBAAoBzqG,EAAG,GAR5CpD,KAQgE6tG,oBAAoBzqG,EAAG,IAElGA,EAAE+9C,WAAW08B,gBAAgBn3B,KAGjC61C,EAAUz3F,UAAU23F,aAAe,SAAuBx0F,GACxD,QAAIjI,KAAKmqD,UAAUliD,EAAOjI,KAAK0sG,kBAGjCnQ,EAAUz3F,UAAUyb,YAAc,WAChC,MAAO,IAETg8E,EAAUz3F,UAAU0b,SAAW,WAC7B,OAAO+7E,GAGFA,GACPwP,IAEFxP,GAAUuH,UAAY,SAAUjnD,EAAOmxD,EAAOjS,GAG5C,OAFU,IAAIQ,GAAU1/C,EAAOmxD,GACdrhB,kBAAkBoP,IAGrCQ,GAAUjtF,aAAe,SAAU40B,EAAG15B,GACpC,GAAI05B,EAAEpO,WAAatrB,EAAMsrB,UAAa,OAAOymE,GAAUwQ,kBAAkBxQ,GAAUhjF,aAAc2qB,EAAG15B,EAAO05B,EAAEL,cAC7G,GAAIK,EAAEP,uBAAwB,CAC5B,IAAI23C,EAAK9wE,EACT,OAAO4wF,GAAyB9hE,IAAI4K,EAAG,CACrC3jB,YAAa,WACX,MAAO,CAAC6rF,GAAeC,QAEzB/yE,IAAK,SAAU4K,GACb,OAAOA,EAAE50B,aAAagsE,MAM5B,OAFAp3C,EAAEc,2BAA2Bd,GAC7BA,EAAEc,2BAA2Bx6B,GACtB25F,GAAsBL,UAAU5/D,EAAG15B,EAAO+xF,GAAUhjF,eAE7DgjF,GAAUyH,cAAgB,SAAU9/D,EAAG15B,GACrC,GAAI05B,EAAEpO,WAAatrB,EAAMsrB,UAAW,CAClC,GAAIoO,EAAEpO,WAAatrB,EAAMsrB,UAAa,OAAOymE,GAAUwQ,kBAAkBxQ,GAAU0H,cAAe//D,EAAG15B,EAAO05B,EAAEL,cAC9G,GAAIK,EAAEpO,UAAa,OAAOtrB,EAAM6P,OAChC,GAAI7P,EAAMsrB,UAAa,OAAOoO,EAAE7pB,OAIlC,OAFA6pB,EAAEc,2BAA2Bd,GAC7BA,EAAEc,2BAA2Bx6B,GACtB25F,GAAsBL,UAAU5/D,EAAG15B,EAAO+xF,GAAU0H,gBAE7D1H,GAAU0R,gBAAkB,SAAUlS,EAAQrJ,EAAIC,GAChD,IAAIub,EAAOxb,EAAG7iE,eACVs+E,EAAOxb,EAAG9iE,eACVo+E,GAAmB,EACvB,OAAQlS,GACN,KAAKQ,GAAUhjF,aACb00F,EAAkBzrG,KAAKwZ,IAAIkyF,EAAMC,GACjC,MACF,KAAK5R,GAAU/iF,MACby0F,EAAkBzrG,KAAK0Z,IAAIgyF,EAAMC,GACjC,MACF,KAAK5R,GAAU9iF,WACbw0F,EAAkBC,EAClB,MACF,KAAK3R,GAAU0H,cACbgK,EAAkBzrG,KAAK0Z,IAAIgyF,EAAMC,GAIrC,OAAOF,GAET1R,GAAUwQ,kBAAoB,SAAUI,EAAezuG,EAAGC,EAAGyvG,GAC3D,IAAI/wF,EAAS,KACb,OAAQk/E,GAAU0R,gBAAgBd,EAAezuG,EAAGC,IAClD,KAAM,EACJ0e,EAAS+wF,EAAS/1E,yBAAyB,IAAI5vB,MAAM,GAAGwjB,KAAK,OAC7D,MACF,KAAK,EACH5O,EAAS+wF,EAAS92E,cAClB,MACF,KAAK,EACHja,EAAS+wF,EAASz2E,mBAClB,MACF,KAAK,EACHta,EAAS+wF,EAASp2E,gBAItB,OAAO3a,GAETk/E,GAAU2H,WAAa,SAAUhgE,EAAG15B,GAClC,OAAI05B,EAAEpO,UAAoBymE,GAAUwQ,kBAAkBxQ,GAAU9iF,WAAYyqB,EAAG15B,EAAO05B,EAAEL,cACpFr5B,EAAMsrB,UAAoBoO,EAAE7pB,QAChC6pB,EAAEc,2BAA2Bd,GAC7BA,EAAEc,2BAA2Bx6B,GACtB25F,GAAsBL,UAAU5/D,EAAG15B,EAAO+xF,GAAU9iF,cAE7D8iF,GAAUC,aAAe,WACvB,GAAyB,IAArBlnF,UAAU7U,OAAc,CAC1B,IAAIimD,EAAQpxC,UAAU,GAClBymF,EAASzmF,UAAU,GACnB+4F,EAAO3nD,EAAM1mB,YAAY,GACzBsuE,EAAO5nD,EAAM1mB,YAAY,GAC7B,OAAOu8D,GAAUC,aAAa6R,EAAMC,EAAMvS,GACrC,GAAyB,IAArBzmF,UAAU7U,OAAc,CACjC,IAAI8tG,EAASj5F,UAAU,GACnBk5F,EAASl5F,UAAU,GACnB63F,EAAgB73F,UAAU,GAG9B,OAFIi5F,IAAWlqF,GAASG,WAAY+pF,EAASlqF,GAASE,UAClDiqF,IAAWnqF,GAASG,WAAYgqF,EAASnqF,GAASE,UAC9C4oF,GACN,KAAK5Q,GAAUhjF,aACb,OAAOg1F,IAAWlqF,GAASE,UAAYiqF,IAAWnqF,GAASE,SAC7D,KAAKg4E,GAAU/iF,MACb,OAAO+0F,IAAWlqF,GAASE,UAAYiqF,IAAWnqF,GAASE,SAC7D,KAAKg4E,GAAU9iF,WACb,OAAO80F,IAAWlqF,GAASE,UAAYiqF,IAAWnqF,GAASE,SAC7D,KAAKg4E,GAAU0H,cACb,OAAQsK,IAAWlqF,GAASE,UAAYiqF,IAAWnqF,GAASE,UAAcgqF,IAAWlqF,GAASE,UAAYiqF,IAAWnqF,GAASE,SAGlI,OAAO,IAGXg4E,GAAUhjF,aAAe,EACzBgjF,GAAU/iF,MAAQ,EAClB+iF,GAAU9iF,WAAa,EACvB8iF,GAAU0H,cAAgB,EAE1B,IAAIwK,GAAoB,WACtBzuG,KAAK0uG,GAAK,KACV1uG,KAAK2uG,2BAA6B,KAClC3uG,KAAK4uG,UAAY,KACjB5uG,KAAKuyF,WAAa,IAAI9B,GACtBzwF,KAAKo1E,KAAO,IAAIpU,GAChB,IAAI98B,EAAI5uB,UAAU,GACdu5F,EAA4Bv5F,UAAU,GAC1CtV,KAAK0uG,GAAKxqE,EACVlkC,KAAK2uG,2BAA6BE,EAClC7uG,KAAK4uG,UAAY5uG,KAAK8uG,gBAAgB5qE,IAExCuqE,GAAkB3pG,UAAUiqG,4BAA8B,SAAsCxnG,GAG9F,IAFE,IAEO1I,EAAI,EAAGA,EAAImB,KAAK4uG,UAAUnqE,mBAAoB5lC,IAGrD,IAFA,IACI+wC,EAJS5vC,KAGK4uG,UAAU9qE,aAAajlC,GAC1Bs3C,wBACNl0C,EAAI,EAAGA,EAAI2tC,EAAI9tC,OAAS,EAAGG,IAAK,CAIvC,GAHA2tC,EAAIjgB,cAAc1tB,EANPjC,KAMiBo1E,KAAKj7D,IACjCy1B,EAAIjgB,cAAc1tB,EAAI,EAPXjC,KAOqBo1E,KAAKvyE,IAP1B7C,KAQOo1E,KAAK9xD,SAAS/b,IARrBvH,KASQ2uG,2BAA8B,OAAO,EAG5D,OAAO,GAETF,GAAkB3pG,UAAUk7B,YAAc,SAAsBz4B,GAC9D,OAAIvH,KAAK+uG,4BAA4BxnG,GAAc8c,GAASG,SACrDxkB,KAAKuyF,WAAW3X,OAAOrzE,EAAIvH,KAAK0uG,KAEzCD,GAAkB3pG,UAAUgqG,gBAAkB,SAA0B5qE,GACtE,IAAI8qE,EAAY,IAAIC,GACpB/qE,EAAE1O,MAAMw5E,GACR,IAAIE,EAAWF,EAAUG,cACrBp3E,EAAQhD,GAAgBgoB,kBAAkBmyD,GAC9C,OAAOhrE,EAAEL,aAAa/L,sBAAsBC,IAE9C02E,GAAkB3pG,UAAUyb,YAAc,WACxC,MAAO,IAETkuF,GAAkB3pG,UAAU0b,SAAW,WACrC,OAAOiuF,IAGT,IAAIQ,GAA6B,WAC/BjvG,KAAK4uG,UAAY,KACjB5uG,KAAK4uG,UAAY,IAAIpnE,IAEvBynE,GAA2BnqG,UAAUqqG,YAAc,WACjD,OAAOnvG,KAAK4uG,WAEdK,GAA2BnqG,UAAU49B,OAAS,SAAiBwB,GAG7D,GAAIA,aAAauS,GAAS,CACxB,IAAIptC,EAAO66B,EACXlkC,KAAK4uG,UAAU3uG,IAAIoJ,EAAK+tC,mBACxB,IAAK,IAAIv4C,EAAI,EAAGA,EAAIwK,EAAKstC,qBAAsB93C,IALlCmB,KAMJ4uG,UAAU3uG,IAAIoJ,EAAKuuC,iBAAiB/4C,MAIjDowG,GAA2BnqG,UAAUyb,YAAc,WACjD,MAAO,CAACmvB,KAEVu/D,GAA2BnqG,UAAU0b,SAAW,WAC9C,OAAOyuF,IAGT,IAAIG,GAAuB,WACzBpvG,KAAK0uG,GAAK,KACV1uG,KAAKqvG,SAAU,EACfrvG,KAAKsvG,UAAW,EAChB,IAAIprE,EAAI5uB,UAAU,GAClBtV,KAAK0uG,GAAKxqE,GAEZkrE,GAAqBtqG,UAAUyqG,cAAgB,SAAwB13E,EAAM+qC,EAAgB4sC,GAI3F,IAHE,IAEE9tE,EAAM7J,EAAKoY,iBACNpxC,EAAI,EAAGA,EAAI6iC,EAAIjhC,OAAS,EAAG5B,IAHrBmB,KAINyvG,oBAAoB/tE,EAAI7iC,GAAI6iC,EAAI7iC,EAAI,GAAI+jE,EAAgB4sC,IAGnEJ,GAAqBtqG,UAAU4qG,mBAAqB,SAA6BC,EAAQC,GACvF5vG,KAAKqvG,QAAUM,EACf3vG,KAAKsvG,SAAWM,GAElBR,GAAqBtqG,UAAUmtF,UAAY,SAAoBrvB,GAK7D,IAJE,IAEE4sC,EAAY,IAAIhoE,GAEX3oC,EADG4wF,GAAyBM,SAAS/vF,KAAK0uG,IAChCjpE,WAAY5mC,EAAE6mC,WAAY,CAC3C,IAAI7N,EAAOh5B,EAAE6C,OALA1B,KAMNuvG,cAAc13E,EAAM+qC,EAAgB4sC,GAE7C,OAAOA,GAETJ,GAAqBtqG,UAAU2qG,oBAAsB,SAA8Bt1F,EAAItX,EAAI+/D,EAAgB4sC,GACzG,IAAIrsF,EAAKtgB,EAAGnD,EAAIya,EAAGza,EACf0jB,EAAKvgB,EAAG3D,EAAIib,EAAGjb,EACfge,EAAM1a,KAAK8D,KAAK6c,EAAKA,EAAKC,EAAKA,GAC/B2/C,EAAKH,EAAiBz/C,EAAKjG,EAC3B8lD,EAAKJ,EAAiBx/C,EAAKlG,EAC3B2yF,GAAQhtG,EAAGnD,EAAIya,EAAGza,GAAK,EACvBowG,GAAQjtG,EAAG3D,EAAIib,EAAGjb,GAAK,EAC3B,GAAIc,KAAKqvG,QAAS,CAChB,IAAIU,EAAa,IAAIhuF,GAAW8tF,EAAO7sC,EAAI8sC,EAAO/sC,GAClDysC,EAAUvvG,IAAI8vG,GAEhB,GAAI/vG,KAAKsvG,SAAU,CACjB,IAAIU,EAAc,IAAIjuF,GAAW8tF,EAAO7sC,EAAI8sC,EAAO/sC,GACnDysC,EAAUvvG,IAAI+vG,KAGlBZ,GAAqBtqG,UAAUyb,YAAc,WAC3C,MAAO,IAET6uF,GAAqBtqG,UAAU0b,SAAW,WACxC,OAAO4uF,IAGT,IAAIa,GAAyB,SAASA,IACpCjwG,KAAK6xC,MAAQ,KACb7xC,KAAKkwG,WAAa,KAClBlwG,KAAKmwG,UAAY,IAAI1nG,MAAM,GAAGwjB,KAAK,MACnCjsB,KAAKowG,iBAAmB,KACxBpwG,KAAK2uG,2BAA6BsB,EAAuBI,UACzDrwG,KAAKswG,YAAc,IAAI9oE,GACvB,IAAI9oC,EAAI4W,UAAU,GACd3W,EAAI2W,UAAU,GACd+H,EAAS/H,UAAU,GACvBtV,KAAK2uG,2BAA6BsB,EAAuBM,iCAAiC7xG,EAAGC,GAC7FqB,KAAK6xC,MAAQ,CAACnzC,EAAGC,EAAG0e,GACpBrd,KAAKkwG,WAAa,CAAC,IAAIzB,GAAkBzuG,KAAK6xC,MAAM,GAAI7xC,KAAK2uG,4BAA6B,IAAIF,GAAkBzuG,KAAK6xC,MAAM,GAAI7xC,KAAK2uG,4BAA6B,IAAIF,GAAkBzuG,KAAK6xC,MAAM,GAAI7xC,KAAK2uG,8BAGzM6B,GAAqB,CAAEH,UAAW,CAAE9rG,cAAc,IACtD0rG,GAAuBnrG,UAAU2rG,aAAe,SAAuB3M,EAAW3/C,EAAUusD,GAC1FpgF,GAAOjtB,IAAIm6B,QAAQ,8BAAgCnZ,GAASM,iBAAiBw/B,EAAS,IAAM,MAAQ9/B,GAASM,iBAAiBw/B,EAAS,IAAM,cAAgBusD,EAAmB,IAAM,KAAO,WAAarsF,GAASM,iBAAiBw/B,EAAS,MAE/O8rD,GAAuBnrG,UAAUizC,QAAU,SAAkB+rD,GAC3D9jG,KAAK2wG,WAAW3wG,KAAK6xC,MAAM,IAC3B7xC,KAAK2wG,WAAW3wG,KAAK6xC,MAAM,IAC3B,IAAIkG,EAAU/3C,KAAKunF,WAAWuc,GAC9B,OAAO/rD,GAETk4D,GAAuBnrG,UAAUyiF,WAAa,WAG5C,GAAyB,IAArBjyE,UAAU7U,OAAc,CAE1B,IADA,IAAIqjG,EAAYxuF,UAAU,GACjBzW,EAAI,EAAGA,EAAImB,KAAKswG,YAAYxuG,OAAQjD,IAAK,CAChD,IAAI0I,EALOvH,KAKKswG,YAAYtkG,IAAInN,GAChC,IANWmB,KAMCunF,WAAWuc,EAAWv8F,GAEhC,OARSvH,KAOFowG,iBAAmB7oG,GACnB,EAGX,OAAO,EACF,GAAyB,IAArB+N,UAAU7U,OAAc,CACjC,IAAImwG,EAAct7F,UAAU,GACxB24E,EAAO34E,UAAU,GAIrB,OAHAtV,KAAKmwG,UAAU,GAAKnwG,KAAKkwG,WAAW,GAAGlwE,YAAYiuD,GACnDjuF,KAAKmwG,UAAU,GAAKnwG,KAAKkwG,WAAW,GAAGlwE,YAAYiuD,GACnDjuF,KAAKmwG,UAAU,GAAKnwG,KAAKkwG,WAAW,GAAGlwE,YAAYiuD,KAC/CgiB,GAAuBY,YAAY7wG,KAAKmwG,UAAW9rF,GAASG,WACzDxkB,KAAK8wG,cAAcF,EAAa5wG,KAAKmwG,aAGhDF,GAAuBnrG,UAAU6rG,WAAa,SAAqBzsE,GACjE,IAAI6sE,EAAQ,IAAI3B,GAAqBlrE,GACrClkC,KAAKswG,YAAYppE,OAAO6pE,EAAM9e,UAAU,EAAIjyF,KAAK2uG,8BAEnDsB,GAAuBnrG,UAAUgsG,cAAgB,SAAwBhN,EAAW3/C,GAClF,IAAIusD,EAAmBnU,GAAUC,aAAar4C,EAAS,GAAIA,EAAS,GAAI2/C,GAEpE/rD,IAAY24D,EADOvsD,EAAS,KAAO9/B,GAASE,UAGhD,OADKwzB,GAAW/3C,KAAKywG,aAAa3M,EAAW3/C,EAAUusD,GAChD34D,GAETk4D,GAAuBnrG,UAAUksG,mBAAqB,WACpD,OAAOhxG,KAAKowG,kBAEdH,GAAuBnrG,UAAUyb,YAAc,WAC7C,MAAO,IAET0vF,GAAuBnrG,UAAU0b,SAAW,WAC1C,OAAOyvF,IAETA,GAAuBY,YAAc,SAAsB1sD,EAAUqB,GACnE,IAAK,IAAI3mD,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAIslD,EAAStlD,KAAO2mD,EAAO,OAAO,EAEpC,OAAO,GAETyqD,GAAuBM,iCAAmC,SAA2C7d,EAAIC,GACvG,OAAOnwF,KAAKwZ,IAAI2jF,GAAgBoB,8BAA8BrO,GAAKiN,GAAgBoB,8BAA8BpO,KAEnHsd,GAAuBl4D,QAAU,SAAkBr5C,EAAGC,EAAGmlG,EAAWzmF,GAElE,OADgB,IAAI4yF,GAAuBvxG,EAAGC,EAAG0e,GAChC06B,QAAQ+rD,IAE3B0M,GAAmBH,UAAUrkG,IAAM,WAAc,OAAO,MAExDvH,OAAOid,iBAAkBuuF,GAAwBO,IAIjD,IAAIS,GAAmB,SAASA,EAAkBj6F,GAChDhX,KAAKkxG,aAAe,KACpBlxG,KAAKmxG,YAAa,EAClBnxG,KAAKoxG,YAAc,KACnBpxG,KAAKkxG,aAAeD,EAAiBI,eAAer6F,GACpDhX,KAAKoxG,YAAcp6F,GAErBi6F,GAAiBnsG,UAAUwsG,gBAAkB,SAA0B/oG,EAAMgpG,GAG3E,GAAa,OAAThpG,EAAiB,OAAO,KAC5B,IAAK,IAAI1J,EAAI,EAAGA,EAAI0J,EAAKk8B,mBAAoB5lC,IAAK,CAChD,IAAI2yG,EAAWjpG,EAAKu7B,aAAajlC,GAJpBmB,KAKFmxG,YAAcK,EAAS17E,WAClCy7E,EAAMtxG,IAAIuxG,KAGdP,GAAiBnsG,UAAU2sG,QAAU,WAInC,IAHE,IAEEF,EAAQ,IAAI/pE,GACP3oC,EAAImB,KAAKoxG,YAAY3rE,WAAY5mC,EAAE6mC,WAAY,CACtD,IAAIxB,EAAIrlC,EAAE6C,OAJG1B,KAKNsxG,gBAAgBptE,EAAGqtE,GAE5B,OAAqB,IAAjBA,EAAMzvG,OACkB,OAAtB9B,KAAKkxG,aACAlxG,KAAKkxG,aAAa74E,yBAAyB,MAE7C,KAEFr4B,KAAKkxG,aAAa50D,cAAci1D,IAEzCN,GAAiBnsG,UAAUyb,YAAc,WACvC,MAAO,IAET0wF,GAAiBnsG,UAAU0b,SAAW,WACpC,OAAOywF,IAETA,GAAiBQ,QAAU,WACzB,GAAyB,IAArBn8F,UAAU7U,OAAc,CAC1B,IAAIuW,EAAQ1B,UAAU,GAEtB,OADe,IAAI27F,GAAiBj6F,GACpBy6F,UACX,GAAyB,IAArBn8F,UAAU7U,OAAc,CACjC,IAAIiyF,EAAKp9E,UAAU,GACfq9E,EAAKr9E,UAAU,GAEnB,OADiB,IAAI27F,GAAiBA,GAAiBjuG,WAAW0vF,EAAIC,IACpD8e,UACb,GAAyB,IAArBn8F,UAAU7U,OAAc,CACjC,IAAImyF,EAAOt9E,UAAU,GACjBu9E,EAAOv9E,UAAU,GACjBgmE,EAAKhmE,UAAU,GAEnB,OADiB,IAAI27F,GAAiBA,GAAiBjuG,WAAW4vF,EAAMC,EAAMvX,IAC5Dm2B,YAGtBR,GAAiBI,eAAiB,SAAyBr6F,GACzD,OAAIA,EAAM8e,UAAoB,KACvB9e,EAAMyuB,WAAW/jC,OAAOmiC,cAEjCotE,GAAiBjuG,WAAa,WAC5B,GAAyB,IAArBsS,UAAU7U,OAAc,CAC1B,IAAIixG,EAAOp8F,UAAU,GACjBq8F,EAAOr8F,UAAU,GACjBpS,EAAO,IAAIskC,GAGf,OAFAtkC,EAAKjD,IAAIyxG,GACTxuG,EAAKjD,IAAI0xG,GACFzuG,EACF,GAAyB,IAArBoS,UAAU7U,OAAc,CACjC,IAAImxG,EAASt8F,UAAU,GACnBu8F,EAASv8F,UAAU,GACnBw8F,EAAOx8F,UAAU,GACjBy8F,EAAS,IAAIvqE,GAIjB,OAHAuqE,EAAO9xG,IAAI2xG,GACXG,EAAO9xG,IAAI4xG,GACXE,EAAO9xG,IAAI6xG,GACJC,IAIX,IAAIC,GAAuB,WACzBhyG,KAAKiyG,YAAc,KACnBjyG,KAAKkxG,aAAe,KACpB,IAAIt+F,EAAQ0C,UAAU,GACtBtV,KAAKiyG,YAAcr/F,EACM,OAArB5S,KAAKiyG,cAAwBjyG,KAAKiyG,YAAc,IAAIzqE,KAGtD0qE,GAAqB,CAAEC,sBAAuB,CAAE5tG,cAAc,IAClEytG,GAAqBltG,UAAUstG,mBAAqB,SAA6BC,GAI/E,IAHE,IAEEr7F,EAAQ,IAAIwwB,GACP3oC,EAAIwzG,EAAS5sE,WAAY5mC,EAAE6mC,WAAY,CAC9C,IAAI3iB,EAAIlkB,EAAE6C,OACN6G,EAAO,KACPsc,GAAa9B,EAAGskB,IAClB9+B,EAPWvI,KAOGsyG,UAAUvvF,GACfA,aAAa4f,KACtBp6B,EAAOwa,GAET/L,EAAM/W,IAAIsI,GAEZ,OAAOyO,GAETg7F,GAAqBltG,UAAUytG,kBAAoB,SAA4BviF,EAAKznB,EAAMiqG,GAExF,IADA,IAAIC,EAAoB,IAAIjrE,GACnB3oC,EAAI,EAAGA,EAAI0J,EAAKk8B,mBAAoB5lC,IAAK,CAChD,IAAI6zG,EAAOnqG,EAAKu7B,aAAajlC,GACzB6zG,EAAK3tE,sBAAsB/R,WAAWhD,GAAQyiF,EAAkBxyG,IAAIyyG,GAAgBF,EAAcvyG,IAAIyyG,GAE5G,OAAO1yG,KAAKkxG,aAAa50D,cAAcm2D,IAEzCT,GAAqBltG,UAAU6tG,eAAiB,SAAyBjgB,EAAIC,GAC3E,IAAIigB,EAAQlgB,EAAG3tD,sBACX8tE,EAAQlgB,EAAG5tD,sBACf,IAAK6tE,EAAM5/E,WAAW6/E,GAEpB,OADY5B,GAAiBQ,QAAQ/e,EAAIC,GAG3C,GAAID,EAAGjuD,oBAAsB,GAAKkuD,EAAGluD,oBAAsB,EAAK,OAAOzkC,KAAK8yG,YAAYpgB,EAAIC,GAC5F,IAAIogB,EAAYH,EAAMtjG,aAAaujG,GACnC,OAAO7yG,KAAKgzG,+BAA+BtgB,EAAIC,EAAIogB,IAErDf,GAAqBltG,UAAUi/F,MAAQ,WACrC,GAAyB,OAArB/jG,KAAKiyG,YAAwB,MAAM,IAAItpG,MAAM,yCACjD,GAAI3I,KAAKiyG,YAAYn8E,UAAa,OAAO,KACzC91B,KAAKkxG,aAAelxG,KAAKiyG,YAAYxsE,WAAW/jC,OAAOmiC,aAEvD,IADA,IAAIziC,EAAQ,IAAI64D,GAAQ+3C,GAAqBG,uBACpCtzG,EAAImB,KAAKiyG,YAAYxsE,WAAY5mC,EAAE6mC,WAAY,CACtD,IAAI9nB,EAAO/e,EAAE6C,OACbN,EAAM/B,OAAOue,EAAKmnB,sBAAuBnnB,GAE3C5d,KAAKiyG,YAAc,KACnB,IAAIgB,EAAW7xG,EAAM02D,YAErB,OADe93D,KAAKsyG,UAAUW,IAGhCjB,GAAqBltG,UAAUouG,YAAc,WAC3C,GAAyB,IAArB59F,UAAU7U,OAAc,CAC1B,IAAIuW,EAAQ1B,UAAU,GACtB,OAAOtV,KAAKkzG,YAAYl8F,EAAO,EAAGA,EAAMlV,QACnC,GAAyB,IAArBwT,UAAU7U,OAAc,CACjC,IAAI0vF,EAAU76E,UAAU,GACpBjT,EAAQiT,UAAU,GAClBhT,EAAMgT,UAAU,GACpB,GAAIhT,EAAMD,GAAS,EAAG,CACpB,IAAIqwF,EAAKsf,GAAqBv1B,YAAY0T,EAAS9tF,GACnD,OAAOrC,KAAKmzG,UAAUzgB,EAAI,MACrB,GAAIpwF,EAAMD,GAAU,EACzB,OAAOrC,KAAKmzG,UAAUnB,GAAqBv1B,YAAY0T,EAAS9tF,GAAQ2vG,GAAqBv1B,YAAY0T,EAAS9tF,EAAQ,IAE1H,IAAIwoC,EAAMroC,KAAK4d,OAAO9d,EAAMD,GAAS,GACjCuwF,EAAO5yF,KAAKkzG,YAAY/iB,EAAS9tF,EAAOwoC,GACxC8nD,EAAK3yF,KAAKkzG,YAAY/iB,EAAStlD,EAAKvoC,GACxC,OAAOtC,KAAKmzG,UAAUvgB,EAAMD,KAIlCqf,GAAqBltG,UAAUsuG,cAAgB,SAAwBp8F,GAErE,IADA,IAAI+sF,EAAQ,KACHllG,EAAImY,EAAMyuB,WAAY5mC,EAAE6mC,WAAY,CAC3C,IAAIxB,EAAIrlC,EAAE6C,OACYqiG,EAAR,OAAVA,EAA0B7/D,EAAE7pB,OAAyB0pF,EAAMA,MAAM7/D,GAEvE,OAAO6/D,GAETiO,GAAqBltG,UAAUquG,UAAY,SAAoBzgB,EAAIC,GACjE,OAAW,OAAPD,GAAsB,OAAPC,EAAsB,KAC9B,OAAPD,EAAsBC,EAAGt4E,OAClB,OAAPs4E,EAAsBD,EAAGr4E,OACtBra,KAAK2yG,eAAejgB,EAAIC,IAEjCqf,GAAqBltG,UAAUguG,YAAc,SAAsBpgB,EAAIC,GACrE,OAAOqf,GAAqBqB,mBAAmB3gB,EAAGqR,MAAMpR,KAE1Dqf,GAAqBltG,UAAUwtG,UAAY,SAAoBD,GAC7D,IAAIr7F,EAAQhX,KAAKoyG,mBAAmBC,GAEpC,OADYryG,KAAKkzG,YAAYl8F,IAG/Bg7F,GAAqBltG,UAAUkuG,+BAAiC,SAAyCtgB,EAAIC,EAAI2gB,GAC/G,IAAIC,EAAgB,IAAI/rE,GACpBgsE,EAAQxzG,KAAKuyG,kBAAkBe,EAAQ5gB,EAAI6gB,GAC3CE,EAAQzzG,KAAKuyG,kBAAkBe,EAAQ3gB,EAAI4gB,GAC3CxP,EAAQ/jG,KAAK8yG,YAAYU,EAAOC,GAGpC,OAFAF,EAActzG,IAAI8jG,GACCkN,GAAiBQ,QAAQ8B,IAG9CvB,GAAqBltG,UAAU4uG,YAAc,WAC3C,GAAyB,IAArBp+F,UAAU7U,OAAc,CAC1B,IAAIuW,EAAQ1B,UAAU,GAItB,OAHc0B,EAAMhL,IAAI,GAAG63B,aACPyY,cAActlC,GACbouE,OAAO,GAEvB,GAAyB,IAArB9vE,UAAU7U,OAAc,CACjC,IAAIiyF,EAAKp9E,UAAU,GACfq9E,EAAKr9E,UAAU,GAInB,OAHgBo9E,EAAG7uD,aACKxL,yBAAyB,CAACq6D,EAAIC,IAC7BvN,OAAO,KAIpC4sB,GAAqBltG,UAAUyb,YAAc,WAC3C,MAAO,IAETyxF,GAAqBltG,UAAU0b,SAAW,WACxC,OAAOwxF,IAETA,GAAqBqB,mBAAqB,SAA6BnvE,GACrE,GAAIrf,GAAaqf,EAAGsS,IAClB,OAAOtS,EAET,IAAI9L,EAAWk3D,GAAiBt8B,YAAY9uB,GAC5C,OAAwB,IAApB9L,EAASt2B,OAAuBs2B,EAASpsB,IAAI,GAC1Ck4B,EAAEL,aAAa1L,mBAAmBpD,GAAgB+nB,eAAe1kB,KAE1E45E,GAAqBv1B,YAAc,SAAsBv5E,EAAM9B,GAC7D,OAAIA,GAAS8B,EAAKpB,OAAiB,KAC5BoB,EAAK8I,IAAI5K,IAElB4wG,GAAqBjO,MAAQ,SAAgBnxF,GAE3C,OADS,IAAIo/F,GAAqBp/F,GACxBmxF,SAEZmO,GAAmBC,sBAAsBnmG,IAAM,WAAc,OAAO,GAEpEvH,OAAOid,iBAAkBswF,GAAsBE,IAE/C,IAAIyB,GAAU,aC7vkBd,SAAS5P,aACD6P,EAAS,IAAIv0D,GACbhiC,EAASu2F,EAAO5+E,KAAK0pB,KAAKm1D,UAAUv+F,UAAU,GAAG4f,WAE5Cr2B,EAAI,EAAGA,EAAIyW,UAAU7U,OAAQ5B,IAClCwe,EAASs2F,GAAQ5P,MAAM1mF,EAAQu2F,EAAO5+E,KAAK0pB,KAAKm1D,UAAUv+F,UAAUzW,GAAGq2B,kBAMpE,CACH7jB,KAAM,UACN6jB,SAJJ7X,GADa,IAAIkiC,IACD9pB,MAAMpY,GAKlBy2F,WAAYx+F,UAAU,GAAGw+F,YC2CjC,SAASl1D,GAAQ1pB,EAAU4+E,EAAYC,OAG9BC,GADLD,EAAUA,GAAW,IACG,MAAM,IAAIprG,MAAM,0BACpCuF,EAAO6lG,EAAQ7lG,KACfxB,EAAKqnG,EAAQrnG,WAGAxH,IAAbgwB,EAAwB,MAAM,IAAIvsB,MAAM,2BACxCmrG,GAAcA,EAAW3yF,cAAgB1c,OAAQ,MAAM,IAAIkE,MAAM,gCACjEuF,GA8kBR,SAAsBA,OACbA,EAAM,MAAM,IAAIvF,MAAM,wBACtBF,MAAMC,QAAQwF,GAAO,MAAM,IAAIvF,MAAM,4BACtB,IAAhBuF,EAAKzN,QAAgC,IAAhByN,EAAKzN,OAAc,MAAM,IAAIkI,MAAM,2CAC5DuF,EAAKlN,QAAQ,SAAUmrB,OA5C3B,SAAkBA,UACNhM,MAAMgM,IAAgB,OAARA,IAAiB1jB,MAAMC,QAAQyjB,GA4C5C8nF,CAAS9nF,GAAM,MAAM,IAAIxjB,MAAM,oCAnlB9BurG,CAAahmG,GACnBxB,GA2mBR,SAAoBA,OACXA,EAAI,MAAM,IAAI/D,MAAM,sBACwB,IAA7C,CAAC,SAAU,UAAU4H,UAAe7D,IAAY,MAAM,IAAI/D,MAAM,mCA7mB5DwrG,CAAWznG,OAGf0nG,EAAO,CAAC/iG,KAAM,kBACd3E,IAAI0nG,EAAK1nG,GAAKA,GACdwB,IAAMkmG,EAAKlmG,KAAOA,GACtBkmG,EAAKN,WAAaA,GAAc,GAChCM,EAAKl/E,SAAWA,EACTk/E,EA4iBX,SAASJ,GAAS1d,WACJA,GAAWA,EAAMn1E,cAAgB1c,OC1O/C,SAAS4vG,GAASC,EAASr7F,OACnBpa,EAAGoD,EAAGiiC,EAAGhP,EAAUq/E,EACnBC,EACA7wE,EACA8wE,EACAC,EACAC,EACAC,EAAe,EACfC,EAAuC,sBAAjBP,EAAQjjG,KAC9ByjG,EAA6B,YAAjBR,EAAQjjG,KACpB0jG,EAAOF,EAAsBP,EAAQv1D,SAASt+C,OAAS,MActD5B,EAAI,EAAGA,EAAIk2G,EAAMl2G,IAAK,KAEvB21G,EAA2BK,EAAsBP,EAAQv1D,SAASlgD,GAAGq2B,SAChE4/E,EAAYR,EAAQp/E,SAAWo/E,EACpCG,EAAqBI,EAAsBP,EAAQv1D,SAASlgD,GAAGi1G,WAC1DgB,EAAYR,EAAQR,WAAa,GACtCY,EAAeG,EAAsBP,EAAQv1D,SAASlgD,GAAGqP,KACpD4mG,EAAYR,EAAQpmG,UAAOhJ,EAChCyvG,EAAaE,EAAsBP,EAAQv1D,SAASlgD,GAAG6N,GAClDooG,EAAYR,EAAQ5nG,QAAKxH,EAE9BqvG,GADA5wE,IAAwB6wE,GAA4D,uBAAjCA,EAAwBnjG,MAC5CmjG,EAAwBxuE,WAAWvlC,OAAS,EAEtEyjC,EAAI,EAAGA,EAAIqwE,EAAOrwE,OAKF,QAJjBhP,EAAWyO,EACP6wE,EAAwBxuE,WAAW9B,GAAKswE,UAOpCt/E,EAAS7jB,UACZ,YACA,iBACA,iBACA,cACA,sBACA,mBACmF,IAAhF4H,EAASic,EAAU0/E,EAAcH,EAAmBC,EAAaC,GAAsB,OAAO,YAGjG,yBACI1yG,EAAI,EAAGA,EAAIizB,EAAS8Q,WAAWvlC,OAAQwB,QAC0D,IAA9FgX,EAASic,EAAS8Q,WAAW/jC,GAAI2yG,EAAcH,EAAmBC,EAAaC,GAAsB,OAAO,sBAK9G,IAAIhsG,MAAM,kCApBgE,IAA5EsQ,EAAS,KAAM27F,EAAcH,EAAmBC,EAAaC,GAAsB,OAAO,EAwBtGC,KCrdR,SAASI,GAASV,EAASP,OAGlBC,GADLD,EAAUA,GAAW,IACG,MAAM,IAAIprG,MAAM,0BACpCssG,EAAYlB,EAAQkB,UACpBhrE,EAAc8pE,EAAQ9pE,YACtBirE,EAASnB,EAAQmB,UAGrBD,EAAaA,MAAAA,GAAiD90F,MAAM80F,GAAc,EAAIA,EACtFhrE,EAAeA,MAAAA,GAAqD9pB,MAAM8pB,GAAgB,EAAIA,GAGzFqqE,EAAS,MAAM,IAAI3rG,MAAM,4BACL,iBAAdssG,EAAwB,MAAM,IAAItsG,MAAM,mCACxB,iBAAhBshC,EAA0B,MAAM,IAAIthC,MAAM,mCAGtC,IAAXusG,QAA+BhwG,IAAXgwG,IAAsBZ,EAAU51D,KAAK53B,MAAM43B,KAAKm1D,UAAUS,SAE9EjyC,EAAS7/D,KAAK2C,IAAI,GAAI8vG,UDX9B,SAASE,EAAUb,EAASr7F,EAAUm8F,MAElB,OAAZd,UACAryG,EAAG6G,EAAG9J,EAAGk2B,EAAUq/E,EAAOh9E,EAC1Bi9E,EAGA7wE,EAFA0xE,EAAa,EACbC,EAAa,EAEbjkG,EAAOijG,EAAQjjG,KACfwjG,EAA+B,sBAATxjG,EACtByjG,EAAqB,YAATzjG,EACZ0jG,EAAOF,EAAsBP,EAAQv1D,SAASt+C,OAAS,EAclDm0G,EAAe,EAAGA,EAAeG,EAAMH,IAAgB,CAI5DL,GADA5wE,KAFA6wE,EAA2BK,EAAsBP,EAAQv1D,SAAS61D,GAAc1/E,SAC3E4/E,EAAYR,EAAQp/E,SAAWo/E,IACgD,uBAAjCE,EAAwBnjG,MAC5CmjG,EAAwBxuE,WAAWvlC,OAAS,MAEtE,IAAIolD,EAAY,EAAGA,EAAY0uD,EAAO1uD,IAAa,KAChD0vD,EAAoB,EACpBC,EAAgB,KAKH,QAJjBtgF,EAAWyO,EACP6wE,EAAwBxuE,WAAW6f,GAAa2uD,IAIpDj9E,EAASrC,EAAS+U,gBACdwrE,EAAWvgF,EAAS7jB,YAExBgkG,GAAcD,GAAkC,YAAbK,GAAuC,iBAAbA,EAAoC,EAAJ,EAErFA,QACH,eAEA,YACoF,IAAjFx8F,EAASse,EAAQ+9E,EAAYV,EAAcW,EAAmBC,GAA0B,OAAO,EACnGF,IACAC,cAEC,iBACA,iBACItzG,EAAI,EAAGA,EAAIs1B,EAAO92B,OAAQwB,IAAK,KACwD,IAApFgX,EAASse,EAAOt1B,GAAIqzG,EAAYV,EAAcW,EAAmBC,GAA0B,OAAO,EACtGF,IACiB,eAAbG,GAA2BF,IAElB,eAAbE,GAA2BF,cAE9B,cACA,sBACItzG,EAAI,EAAGA,EAAIs1B,EAAO92B,OAAQwB,IAAK,KAC3B6G,EAAI,EAAGA,EAAIyuB,EAAOt1B,GAAGxB,OAAS40G,EAAYvsG,IAAK,KAC2C,IAAvFmQ,EAASse,EAAOt1B,GAAG6G,GAAIwsG,EAAYV,EAAcW,EAAmBC,GAA0B,OAAO,EACzGF,IAEa,oBAAbG,GAAgCF,IACnB,YAAbE,GAAwBD,IAEf,YAAbC,GAAwBF,cAE3B,mBACItzG,EAAI,EAAGA,EAAIs1B,EAAO92B,OAAQwB,IAAK,KACf,iBAAbwzG,IAA6BD,EAAgB,GAC5C1sG,EAAI,EAAGA,EAAIyuB,EAAOt1B,GAAGxB,OAAQqI,IAAK,KAC9B9J,EAAI,EAAGA,EAAIu4B,EAAOt1B,GAAG6G,GAAGrI,OAAS40G,EAAYr2G,IAAK,KAC2C,IAA1Fia,EAASse,EAAOt1B,GAAG6G,GAAG9J,GAAIs2G,EAAYV,EAAcW,EAAmBC,GAA0B,OAAO,EAC5GF,IAEJE,IAEJD,cAGH,yBACItzG,EAAI,EAAGA,EAAIizB,EAAS8Q,WAAWvlC,OAAQwB,QAC8B,IAAlEkzG,EAAUjgF,EAAS8Q,WAAW/jC,GAAIgX,EAAUm8F,GAA6B,OAAO,sBAGlF,IAAIzsG,MAAM,6BC7E5BwsG,CAAUb,EAAS,SAAU/8E,IAejC,SAAwBA,EAAQ8qC,EAAQp4B,GAEhC1S,EAAO92B,OAASwpC,GAAa1S,EAAOruB,OAAO+gC,EAAa1S,EAAO92B,YAG9D,IAAI5B,EAAI,EAAGA,EAAI04B,EAAO92B,OAAQ5B,IAC/B04B,EAAO14B,GAAK2D,KAAKuF,MAAMwvB,EAAO14B,GAAKwjE,GAAUA,EApB7CqzC,CAAen+E,EAAQ8qC,EAAQp4B,KAE5BqqE,ECjBX,SAASqB,GAAUp+E,OACVA,EAAQ,MAAM,IAAI5uB,MAAM,yBAGT,YAAhB4uB,EAAOlmB,MAA0C,OAApBkmB,EAAOrC,SAAmB,OAAOqC,EAAOrC,SAAS+U,eAG9E1S,EAAO0S,YAAa,OAAO1S,EAAO0S,eAGlCxhC,MAAMC,QAAQ6uB,GAAS,OAAOA,QAE5B,IAAI5uB,MAAM,+DAwGpB,SAASmM,GAAQw/F,OACRA,EAAS,MAAM,IAAI3rG,MAAM,+BACLzD,IAArBovG,EAAQp/E,SAAwB,OAAOo/E,EAAQp/E,YAC/Co/E,EAAQrqE,aAAeqqE,EAAQtuE,WAAY,OAAOsuE,QAChD,IAAI3rG,MAAM,sDCtIpB,SAASitG,GAAYtB,EAASP,OAEtBmB,EAA6B,WAAnBW,EAAO9B,GAAwBA,EAAQmB,OAASnB,MACzDO,EAAS,MAAM,IAAI3rG,MAAM,2BAC1B0I,EDgKR,SAAiBijG,EAASvzF,OACjBuzF,EAAS,MAAM,IAAI3rG,OAAOoY,GAAQ,WAAa,mBAEhDuzF,EAAQp/E,UAAYo/E,EAAQp/E,SAAS7jB,KAAM,OAAOijG,EAAQp/E,SAAS7jB,QAEnEijG,EAAQjjG,KAAM,OAAOijG,EAAQjjG,WAC3B,IAAI1I,OAAOoY,GAAQ,WAAa,eCtK3B26B,CAAQ44D,GAGfwB,EAAY,UAERzkG,OACH,aACDykG,EAAYC,GAAUzB,aAErB,sBACA,UACDqB,GAAUrB,GAAStzG,QAAQ,SAAU62B,GACjCi+E,EAAUt1G,KAAKu1G,GAAUl+E,gBAG5B,eACD89E,GAAUrB,GAAStzG,QAAQ,SAAUo3B,OAC7B49E,EAAa,GACjB59E,EAASp3B,QAAQ,SAAUyI,GACvBusG,EAAWx1G,KAAKu1G,GAAUtsG,MAE9BqsG,EAAUt1G,KAAKw1G,eAGlB,eACM1B,MACN,iBACG2B,EAAW,GACfN,GAAUrB,GAAStzG,QAAQ,SAAUiH,OAC7B5J,EAAM4J,EAAMvE,KAAK,KAChBuyG,EAASC,eAAe73G,KACzBy3G,EAAUt1G,KAAKyH,GACfguG,EAAS53G,IAAO,yBAKlB,IAAIsK,MAAM0I,EAAO,kCAIvBijG,EAAQrqE,aACO,IAAXirE,GACAZ,EAAQrqE,YAAc6rE,EACfxB,GAEJ,CAACjjG,KAAMA,EAAM44B,YAAa6rE,IAElB,IAAXZ,GACAZ,EAAQp/E,SAAS+U,YAAc6rE,EACxBxB,GAEJ11D,GAAQ,CAACvtC,KAAMA,EAAM44B,YAAa6rE,GAAYxB,EAAQR,WAAYQ,EAAQpmG,KAAMomG,EAAQ5nG,IAWvG,SAASqpG,GAAUl+E,OA+BH5oB,EAAKC,EA1BbgD,EAAWlI,EAAOmsG,EAJlBviG,EAAS+hG,GAAU99E,MAED,IAAlBjkB,EAAOnT,SA4BCwO,EA5BuB2E,EAAO,GA4BzB1E,EA5B6B0E,EAAO,GA6B9C3E,EAAI,KAAOC,EAAI,IAAMD,EAAI,KAAOC,EAAI,IA7Be,OAAO0E,MAG7DwiG,EAAY,GACZC,EAAeziG,EAAOnT,OAAS,EAEnC21G,EAAU51G,KAAKoT,EAAO,QACjB,IAAI/U,EAAI,EAAGA,EAAIw3G,EAAcx3G,IAC9BqT,EAAY0B,EAAO/U,EAAI,GACvBmL,EAAQ4J,EAAO/U,GAGVy3G,GAAqBpkG,EAF1BikG,EAAYviG,EAAO/U,EAAI,GAEyBmL,IAC5CosG,EAAU51G,KAAKwJ,UAGvBosG,EAAU51G,KAAK21G,GACRC,EAyBX,SAASE,GAAqBj0G,EAAOC,EAAK0H,OAClCtK,EAAIsK,EAAM,GAAI9K,EAAI8K,EAAM,GACxBusG,EAASl0G,EAAM,GAAIm0G,EAASn0G,EAAM,GAClCo0G,EAAOn0G,EAAI,GAAIo0G,EAAOp0G,EAAI,GAI1Bq0G,EAAMF,EAAOF,EACbK,EAAMF,EAAOF,SAGH,KANJ92G,EAAI62G,GAIIK,GAHR13G,EAAIs3G,GAGgBG,IAGrBn0G,KAAKiP,IAAIklG,IAAQn0G,KAAKiP,IAAImlG,GAAaD,EAAM,EAAIJ,GAAU72G,GAAKA,GAAK+2G,EAAOA,GAAQ/2G,GAAKA,GAAK62G,EAC3FK,EAAM,EAAIJ,GAAUt3G,GAAKA,GAAKw3G,EAAOA,GAAQx3G,GAAKA,GAAKs3G,GC3GvE,SAASK,GAAUC,EAAOC,OAClB/I,EAAQl5F,GAAQgiG,GAChBE,EAAQliG,GAAQiiG,MAMhBnB,GAAYZ,GAASgC,EAAO,CAAC/B,UAAW,KAAKhrE,YAAY,GAAGxpC,OAAS,EAAG,OAAO,QAC/Em1G,GAAYZ,GAAShH,EAAO,CAACiH,UAAW,KAAKhrE,YAAY,GAAGxpC,OAAS,EAAG,OAAO,SAE/EmzG,EAAS,IAAIv0D,GACb3gD,EAAIk1G,EAAO5+E,KAAKggF,GAAShH,IACzBrvG,EAAIi1G,EAAO5+E,KAAKggF,GAASgC,IACzB1nG,EAAeitF,GAAUjtF,aAAa5Q,EAAGC,UAGzC2Q,EAAawmB,UAAkB,KAI5B8oB,IAFM,IAAIW,IACC9pB,MAAMnmB,IC1C5B,SAAS8gC,GAAKkkE,ULkhBd,SAAoBA,EAASr7F,EAAUg+F,OAC/BC,EAAgBD,SACpB5C,GAASC,EAAS,SAAU6C,EAAiBvC,EAAcH,EAAmBC,EAAaC,GACjCuC,EAAjC,IAAjBtC,QAAuC1vG,IAAjB+xG,EAA4CE,EACjDl+F,EAASi+F,EAAeC,EAAiBvC,EAAcH,EAAmBC,EAAaC,KAEzGuC,EKvhBAE,CAAW9C,EAAS,SAAU3sG,EAAOY,UACjCZ,EAgBf,SAAS0vG,EAAc/C,OACLz1G,EAAVuxC,EAAO,SACHkkE,EAAQjjG,UACX,iBACMimG,GAAYhD,EAAQrqE,iBAC1B,mBACIprC,EAAI,EAAGA,EAAIy1G,EAAQrqE,YAAYxpC,OAAQ5B,IACxCuxC,GAAQknE,GAAYhD,EAAQrqE,YAAYprC,WAErCuxC,MACN,YACA,iBACA,iBACA,yBACM,MACN,yBACIvxC,EAAI,EAAGA,EAAIy1G,EAAQtuE,WAAWvlC,OAAQ5B,IACvCuxC,GAAQinE,EAAc/C,EAAQtuE,WAAWnnC,WAEtCuxC,GAnCQinE,CAAc9uG,IAC9B,GRwwkBPorG,GAAQ7uG,UAAUyb,YAAc,WAC9B,MAAO,IAETozF,GAAQ7uG,UAAU0b,SAAW,WAC3B,OAAOmzF,IAETA,GAAQ5P,MAAQ,SAAgB7/D,EAAG15B,GACjC,GAAI05B,EAAEpO,WAAatrB,EAAMsrB,UAAW,CAClC,GAAIoO,EAAEpO,WAAatrB,EAAMsrB,UAAa,OAAOymE,GAAUwQ,kBAAkBxQ,GAAU/iF,MAAO0qB,EAAG15B,EAAO05B,EAAEL,cACtG,GAAIK,EAAEpO,UAAa,OAAOtrB,EAAM6P,OAChC,GAAI7P,EAAMsrB,UAAa,OAAOoO,EAAE7pB,OAIlC,OAFA6pB,EAAEc,2BAA2Bd,GAC7BA,EAAEc,2BAA2Bx6B,GACtB25F,GAAsBL,UAAU5/D,EAAG15B,EAAO+xF,GAAU/iF,QQnxkB7D,IAAI+9F,GAAS,QAmCb,SAASD,GAAY//E,OACb6Y,EAAO,KACP7Y,GAAUA,EAAO92B,OAAS,EAAG,CAC7B2vC,GAAQ5tC,KAAKiP,IAAI+lG,GAASjgF,EAAO,SAC5B,IAAI14B,EAAI,EAAGA,EAAI04B,EAAO92B,OAAQ5B,IAC/BuxC,GAAQ5tC,KAAKiP,IAAI+lG,GAASjgF,EAAO14B,YAGlCuxC,EAeX,SAASonE,GAASjgF,OACV10B,EACAC,EAEA20G,EACAC,EACAC,EACA94G,EACAuxC,EAAO,EACPwnE,EAAergF,EAAO92B,UAEtBm3G,EAAe,EAAG,KACb/4G,EAAI,EAAGA,EAAI+4G,EAAc/4G,IACtBA,IAAM+4G,EAAe,GACrBH,EAAaG,EAAe,EAC5BF,EAAcE,EAAe,EAC7BD,EAAa,GACN94G,IAAM+4G,EAAe,GAC5BH,EAAaG,EAAe,EAC5BF,EAAc,EACdC,EAAa,IAEbF,EAAa54G,EACb64G,EAAc74G,EAAI,EAClB84G,EAAa94G,EAAI,GAErBgE,EAAK00B,EAAOkgF,GACZ30G,EAAKy0B,EAAOmgF,GAEZtnE,IAASynE,GADJtgF,EAAOogF,GACI,IAAME,GAAIh1G,EAAG,KAAOL,KAAKwsE,IAAI6oC,GAAI/0G,EAAG,KAGxDstC,EAAOA,EAAOmnE,GAASA,GAAS,SAG7BnnE,EAGX,SAASynE,GAAIC,UACFA,EAAIt1G,KAAK0kB,GAAK,IChFzB,SAASg9E,GAAW6T,EAAUC,OACtBhK,EAAQl5F,GAAQijG,GAChBf,EAAQliG,GAAQkjG,GAChBlE,EAAaiE,EAASjE,YAAc,MAGxC9F,EAAQiK,GAAmBjK,GAC3BgJ,EAAQiB,GAAmBjB,IACtBhJ,EAAO,OAAO,SACdgJ,EAAO,OAAOp4D,GAAQovD,EAAO8F,OAG9BF,EAAS,IAAIv0D,GACb3gD,EAAIk1G,EAAO5+E,KAAKg5E,GAChBrvG,EAAIi1G,EAAO5+E,KAAKgiF,GAChBkB,EAAc3b,GAAU2H,WAAWxlG,EAAGC,UACtCu5G,EAAYpiF,UAAkB,KAI3B8oB,IAHM,IAAIW,IACC9pB,MAAMyiF,GAEHpE,GAUzB,SAASmE,GAAmB1vG,UAChBA,EAAK8I,UACR,iBACG++B,GAAK7nC,GAAQ,EAAUA,EACpB,SACN,mBACG0hC,EAAc,MN4fIhxB,EM3fJ,SAAUk/F,GACpB/nE,GAAK+nE,GAAc,GAAGluE,EAAYzpC,KAAK23G,EAAWjjF,SAAS+U,cN2fvEoqE,GM5fgB9rG,EN4fE,SAAU2sB,EAAU0/E,EAAcd,EAAY5lG,EAAMxB,OAY9D+oG,EAVApkG,EAAqB,OAAb6jB,EAAqB,KAAOA,EAAS7jB,YACzCA,QACH,SACA,YACA,iBACA,iBACsF,IAAnF4H,EAAS2lC,GAAQ1pB,EAAU4+E,EAAY,CAAC5lG,KAAMA,EAAMxB,GAAIA,IAAMkoG,EAAc,kBAO5EvjG,OACH,aACDokG,EAAW,kBAEV,kBACDA,EAAW,uBAEV,eACDA,EAAW,cAIV,IAAIF,EAAoB,EAAGA,EAAoBrgF,EAAS+U,YAAYxpC,OAAQ80G,IAAqB,KAC9Fx/E,EAAab,EAAS+U,YAAYsrE,OAKuC,IAAzEt8F,EAAS2lC,GAJF,CACPvtC,KAAMokG,EACNxrE,YAAalU,GAEU+9E,GAAac,EAAcW,GAA8B,OAAO,KM1hB3FtrE,EAAYxpC,OAAQ,MAAO,CAAC4Q,KAAM,eAAgB44B,YAAaA,GNwf3E,IAA8BhxB,g13kCOpkB9Bm/F,k1CCDIC,EAAI,CACNC,GAAI,OACJC,OAAQ,SAAAttF,UAAKA,EAAEutF"}