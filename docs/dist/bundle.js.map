{"version":3,"file":"bundle.js","sources":["../../node_modules/splaytree/index.js","../../dist/polygon-clipping.esm.js","../../node_modules/martinez-polygon-clipping/node_modules/splaytree/index.js","../../node_modules/martinez-polygon-clipping/src/edge_type.js","../../node_modules/martinez-polygon-clipping/src/operation.js","../../node_modules/martinez-polygon-clipping/src/compute_fields.js","../../node_modules/martinez-polygon-clipping/src/sweep_event.js","../../node_modules/martinez-polygon-clipping/src/equals.js","../../node_modules/martinez-polygon-clipping/src/signed_area.js","../../node_modules/martinez-polygon-clipping/src/compare_events.js","../../node_modules/martinez-polygon-clipping/src/divide_segment.js","../../node_modules/martinez-polygon-clipping/src/segment_intersection.js","../../node_modules/martinez-polygon-clipping/src/possible_intersection.js","../../node_modules/martinez-polygon-clipping/src/compare_segments.js","../../node_modules/martinez-polygon-clipping/src/connect_edges.js","../../node_modules/tinyqueue/index.js","../../node_modules/martinez-polygon-clipping/src/fill_queue.js","../../node_modules/martinez-polygon-clipping/src/index.js","../../node_modules/martinez-polygon-clipping/src/subdivide_segments.js","../../node_modules/turf-jsts/jsts.mjs","../../node_modules/@turf/union/main.es.js","../../node_modules/@turf/helpers/main.es.js","../../node_modules/@turf/meta/main.es.js","../../node_modules/@turf/truncate/main.es.js","../../node_modules/@turf/invariant/main.es.js","../../node_modules/@turf/clean-coords/main.es.js","../../node_modules/@turf/intersect/main.es.js","../../node_modules/@turf/area/main.es.js","../../node_modules/@turf/difference/main.es.js","../src/App.vue","../src/main.js"],"sourcesContent":["/* follows \"An implementation of top-down splaying\"\n * by D. Sleator <sleator@cs.cmu.edu> March 1992\n */\n\n/**\n * @typedef {*} Key\n */\n\n\n/**\n * @typedef {*} Value\n */\n\n\n/**\n * @typedef {function(node:Node):void} Visitor\n */\n\n\n/**\n * @typedef {function(a:Key, b:Key):number} Comparator\n */\n\n\n/**\n * @param {function(node:Node):string} NodePrinter\n */\n\n\n/**\n * @typedef {Object}  Node\n * @property {Key}    Key\n * @property {Value=} data\n * @property {Node}   left\n * @property {Node}   right\n */\n\nclass Node {\n\n  constructor (key, data) {\n    this.key    = key;\n    this.data   = data;\n    this.left   = null;\n    this.right  = null;\n  }\n}\n\nfunction DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\n\n/**\n * Simple top down splay, not requiring i to be in the tree t.\n * @param {Key} i\n * @param {Node?} t\n * @param {Comparator} comparator\n */\nfunction splay (i, t, comparator) {\n  if (t === null) return t;\n  let l, r, y;\n  const N = new Node();\n  l = r = N;\n\n  while (true) {\n    const cmp = comparator(i, t.key);\n    //if (i < t.key) {\n    if (cmp < 0) {\n      if (t.left === null) break;\n      //if (i < t.left.key) {\n      if (comparator(i, t.left.key) < 0) {\n        y = t.left;                           /* rotate right */\n        t.left = y.right;\n        y.right = t;\n        t = y;\n        if (t.left === null) break;\n      }\n      r.left = t;                               /* link right */\n      r = t;\n      t = t.left;\n    //} else if (i > t.key) {\n    } else if (cmp > 0) {\n      if (t.right === null) break;\n      //if (i > t.right.key) {\n      if (comparator(i, t.right.key) > 0) {\n        y = t.right;                          /* rotate left */\n        t.right = y.left;\n        y.left = t;\n        t = y;\n        if (t.right === null) break;\n      }\n      l.right = t;                              /* link left */\n      l = t;\n      t = t.right;\n    } else {\n      break;\n    }\n  }\n  /* assemble */\n  l.right = t.left;\n  r.left = t.right;\n  t.left = N.right;\n  t.right = N.left;\n  return t;\n}\n\n\n/**\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}      root\n */\nfunction insert (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  tree._size++;\n\n  if (t === null) {\n    node.left = node.right = null;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp < 0) {\n    node.left = t.left;\n    node.right = t;\n    t.left = null;\n  } else if (cmp >= 0) {\n    node.right = t.right;\n    node.left = t;\n    t.right = null;\n  }\n  return node;\n}\n\n\n/**\n * Insert i into the tree t, unless it's already there.\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}       root\n */\nfunction add (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  if (t === null) {\n    node.left = node.right = null;\n    tree._size++;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp === 0) return t;\n  else {\n    if (cmp < 0) {\n      node.left = t.left;\n      node.right = t;\n      t.left = null;\n    } else if (cmp > 0) {\n      node.right = t.right;\n      node.left = t;\n      t.right = null;\n    }\n    tree._size++;\n    return node;\n  }\n}\n\n\n/**\n * Deletes i from the tree if it's there\n * @param {Key}        i\n * @param {Tree}       tree\n * @param {Comparator} comparator\n * @param {Tree}       tree\n * @return {Node}      new root\n */\nfunction remove (i, t, comparator, tree) {\n  let x;\n  if (t === null) return null;\n  t = splay(i, t, comparator);\n  var cmp = comparator(i, t.key);\n  if (cmp === 0) {               /* found it */\n    if (t.left === null) {\n      x = t.right;\n    } else {\n      x = splay(i, t.left, comparator);\n      x.right = t.right;\n    }\n    tree._size--;\n    return x;\n  }\n  return t;                         /* It wasn't there */\n}\n\n\nfunction split (key, v, comparator) {\n  let left, right;\n  if (v === null) {\n    left = right = null;\n  } else {\n    v = splay(key, v, comparator);\n\n    const cmp = comparator(v.key, key);\n    if (cmp === 0) {\n      left  = v.left;\n      right = v.right;\n    } else if (cmp < 0) {\n      right   = v.right;\n      v.right = null;\n      left    = v;\n    } else {\n      left   = v.left;\n      v.left = null;\n      right  = v;\n    }\n  }\n  return { left, right };\n}\n\n\nfunction merge (left, right, comparator) {\n  if (right === null) return left;\n  if (left  === null) return right;\n\n  right = splay(left.key, right, comparator);\n  right.left = left;\n  return right;\n}\n\n\n/**\n * Prints level of the tree\n * @param  {Node}                        root\n * @param  {String}                      prefix\n * @param  {Boolean}                     isTail\n * @param  {Array<string>}               out\n * @param  {Function(node:Node):String}  printNode\n */\nfunction printRow (root, prefix, isTail, out, printNode) {\n  if (root) {\n    out(`${ prefix }${ isTail ? '└── ' : '├── ' }${ printNode(root) }\\n`);\n    const indent = prefix + (isTail ? '    ' : '│   ');\n    if (root.left)  printRow(root.left,  indent, false, out, printNode);\n    if (root.right) printRow(root.right, indent, true,  out, printNode);\n  }\n}\n\n\nexport default class Tree {\n\n  constructor (comparator = DEFAULT_COMPARE) {\n    this._comparator = comparator;\n    this._root = null;\n    this._size = 0;\n  }\n\n\n  /**\n   * Inserts a key, allows duplicates\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  insert (key, data) {\n    return this._root = insert(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Adds a key, if it is not present in the tree\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  add (key, data) {\n    return this._root = add(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  remove (key) {\n    this._root = remove(key, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    let node = this._root;\n    if (node) {\n      while (node.left) node = node.left;\n      this._root = splay(node.key,  this._root, this._comparator);\n      this._root = remove(node.key, this._root, this._comparator, this);\n      return { key: node.key, data: node.data };\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  findStatic (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return current;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  find (key) {\n    if (this._root) {\n      this._root = splay(key, this._root, this._comparator);\n      if (this._comparator(key, this._root.key) !== 0) return null;\n    }\n    return this._root;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Boolean}\n   */\n  contains (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return true;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return false;\n  }\n\n\n  /**\n   * @param  {Visitor} visitor\n   * @param  {*=}      ctx\n   * @return {SplayTree}\n   */\n  forEach (visitor, ctx) {\n    let current = this._root;\n    const Q = [];  /* Initialize stack s */\n    let done = false;\n\n    while (!done) {\n      if (current !==  null) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length !== 0) {\n          current = Q.pop();\n          visitor.call(ctx, current);\n\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range (low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._comparator;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Returns array of keys\n   * @return {Array<Key>}\n   */\n  keys () {\n    const keys = [];\n    this.forEach(({ key }) => keys.push(key));\n    return keys;\n  }\n\n\n  /**\n   * Returns array of all the data in the nodes\n   * @return {Array<Value>}\n   */\n  values () {\n    const values = [];\n    this.forEach(({ data }) => values.push(data));\n    return values;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  min() {\n    if (this._root) return this.minNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  max() {\n    if (this._root) return this.maxNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  minNode(t = this._root) {\n    if (t) while (t.left) t = t.left;\n    return t;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  maxNode(t = this._root) {\n    if (t) while (t.right) t = t.right;\n    return t;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    let current = this._root, done = false, i = 0;\n    const Q = [];\n\n    while (!done) {\n      if (current) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length > 0) {\n          current = Q.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Node}   d\n   * @return {Node|null}\n   */\n  next (d) {\n    let root = this._root;\n    let successor = null;\n\n    if (d.right) {\n      successor = d.right;\n      while (successor.left) successor = successor.left;\n      return successor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) {\n        successor = root;\n        root = root.left;\n      } else root = root.right;\n    }\n\n    return successor;\n  }\n\n\n  /**\n   * @param  {Node} d\n   * @return {Node|null}\n   */\n  prev (d) {\n    let root = this._root;\n    let predecessor = null;\n\n    if (d.left !== null) {\n      predecessor = d.left;\n      while (predecessor.right) predecessor = predecessor.right;\n      return predecessor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) root = root.left;\n      else {\n        predecessor = root;\n        root = root.right;\n      }\n    }\n    return predecessor;\n  }\n\n\n  /**\n   * @return {SplayTree}\n   */\n  clear() {\n    this._root = null;\n    this._size = 0;\n    return this;\n  }\n\n\n  /**\n   * @return {NodeList}\n   */\n  toList() {\n    return toList(this._root);\n  }\n\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load (keys = [], values = [], presort = false) {\n    let size = keys.length;\n    const comparator = this._comparator;\n\n    // sort if needed\n    if (presort) sort(keys, values, 0, size - 1, comparator);\n\n    if (this._root === null) { // empty tree\n      this._root = loadRecursive(this._root, keys, values, 0, size);\n      this._size = size;\n    } else { // that re-builds the whole tree from two in-order traversals\n      const mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\n      size = this._size + size;\n      this._root = sortedListToBST({ head: mergedList }, 0, size);\n    }\n    return this;\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isEmpty() { return this._root === null; }\n\n  get size () { return this._size; }\n\n\n  /**\n   * @param  {NodePrinter=} printNode\n   * @return {String}\n   */\n  toString (printNode = (n) => n.key) {\n    const out = [];\n    printRow(this._root, '', true, (v) => out.push(v), printNode);\n    return out.join('');\n  }\n\n\n  update (key, newKey, newData) {\n    const comparator = this._comparator;\n    let { left, right } = split(key, this._root, comparator);\n    this._size--;\n    if (comparator(key, newKey) < 0) {\n      right = insert(newKey, newData, right, comparator, this);\n    } else {\n      left = insert(newKey, newData, left, comparator, this);\n    }\n    this._root = merge(left, right, comparator);\n  }\n\n\n  split(key) {\n    return split(key, this._root, this._comparator);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction createList(keys, values) {\n  const head = { next: null };\n  let p = head;\n  for (let i = 0; i < keys.length; i++) {\n    p = p.next = { key: keys[i], data: values[i] };\n  }\n  p.next = null;\n  return head.next;\n}\n\n\nfunction toList (root) {\n  var current = root;\n  var Q = [], done = false;\n\n  const head = { next: null };\n  let p = head;\n\n  while (!done) {\n    if (current) {\n      Q.push(current);\n      current = current.left;\n    } else {\n      if (Q.length > 0) {\n        current = p = p.next = Q.pop();\n        current = current.right;\n      } else done = true;\n    }\n  }\n  p.next = null; // that'll work even if the tree was empty\n  return head.next;\n}\n\n\nfunction sortedListToBST(list, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const left = sortedListToBST(list, start, middle);\n\n    const root = list.head;\n    root.left = left;\n\n    list.head = list.head.next;\n\n    root.right = sortedListToBST(list, middle + 1, end);\n    return root;\n  }\n  return null;\n}\n\n\nfunction mergeLists (l1, l2, compare = (a, b) => a - b) {\n  const head = {}; // dummy\n  let p = head;\n\n  let p1 = l1;\n  let p2 = l2;\n\n  while (p1 !== null && p2 !== null) {\n    if (compare(p1.key, p2.key) < 0) {\n      p.next = p1;\n      p1 = p1.next;\n    } else {\n      p.next = p2;\n      p2 = p2.next;\n    }\n    p = p.next;\n  }\n\n  if (p1 !== null)      p.next = p1;\n  else if (p2 !== null) p.next = p2;\n\n  return head.next;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\nvar isInBbox = function isInBbox(bbox, point) {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\n\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\nvar epsilon = Number.EPSILON; // IE Polyfill\n\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n/* FLP comparator */\n\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  } // check if one is positive and the other negative\n\n\n  if (a < 0 && 0 < b) return -1;\n  if (b < 0 && 0 < a) return 1; // check if they're flp equal\n\n  var ab = a - b;\n\n  if (ab * ab < EPSILON_SQ * a * b) {\n    return 0;\n  } // normal comparison\n\n\n  return a < b ? -1 : 1;\n};\n\n/* Cross Product of two vectors with first point at origin */\n\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n/* Dot Product of two vectors with first point at origin */\n\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n/* Comparator for two vectors with same starting point */\n\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the closest point on an line (defined by two points)\n * to another point. */\n\nvar closestPoint = function closestPoint(ptA1, ptA2, ptB) {\n  if (ptA1.x === ptA2.x) return {\n    x: ptA1.x,\n    y: ptB.y // vertical vector\n\n  };\n  if (ptA1.y === ptA2.y) return {\n    x: ptB.x,\n    y: ptA1.y // horizontal vector\n    // determinne which point is further away\n    // we use the further point as our base in the calculation, so that the\n    // vectors are more parallel, providing more accurate dot product\n\n  };\n  var v1 = {\n    x: ptB.x - ptA1.x,\n    y: ptB.y - ptA1.y\n  };\n  var v2 = {\n    x: ptB.x - ptA2.x,\n    y: ptB.y - ptA2.y\n  };\n  var vFar, vA, farPt;\n\n  if (dotProduct(v1, v1) > dotProduct(v2, v2)) {\n    vFar = v1;\n    vA = {\n      x: ptA2.x - ptA1.x,\n      y: ptA2.y - ptA1.y\n    };\n    farPt = ptA1;\n  } else {\n    vFar = v2;\n    vA = {\n      x: ptA1.x - ptA2.x,\n      y: ptA1.y - ptA2.y\n    };\n    farPt = ptA2;\n  }\n\n  var dist = dotProduct(vA, vFar) / dotProduct(vA, vA);\n  return {\n    x: farPt.x + dist * vA.x,\n    y: farPt.y + dist * vA.y\n  };\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n  var x1 = pt1.x + d2 * v1.x,\n      x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n      y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\n\nvar PtRounder =\n/*#__PURE__*/\nfunction () {\n  function PtRounder() {\n    _classCallCheck(this, PtRounder);\n\n    this.reset();\n  }\n\n  _createClass(PtRounder, [{\n    key: \"reset\",\n    value: function reset() {\n      this.xRounder = new CoordRounder();\n      this.yRounder = new CoordRounder();\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, y) {\n      return {\n        x: this.xRounder.round(x),\n        y: this.yRounder.round(y)\n      };\n    }\n  }]);\n\n  return PtRounder;\n}();\n\nvar CoordRounder =\n/*#__PURE__*/\nfunction () {\n  function CoordRounder() {\n    _classCallCheck(this, CoordRounder);\n\n    this.tree = new SplayTree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n    this.round(0);\n  } // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n\n\n  _createClass(CoordRounder, [{\n    key: \"round\",\n    value: function round(coord) {\n      var node = this.tree.add(coord);\n      var prevNode = this.tree.prev(node);\n\n      if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n        this.tree.remove(coord);\n        return prevNode.key;\n      }\n\n      var nextNode = this.tree.next(node);\n\n      if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n        this.tree.remove(coord);\n        return nextNode.key;\n      }\n\n      return coord;\n    }\n  }]);\n\n  return CoordRounder;\n}(); // singleton available by import\n\n\nvar rounder = new PtRounder();\n\n/* Given input geometry as a standard array-of-arrays geojson-style\n * geometry, return one that uses objects as points, for better perf */\n\nvar pointsAsObjects = function pointsAsObjects(geom) {\n  // we can handle well-formed multipolys and polys\n  var output = [];\n\n  if (!Array.isArray(geom)) {\n    throw new Error('Input is not a Polygon or MultiPolygon');\n  }\n\n  for (var i = 0, iMax = geom.length; i < iMax; i++) {\n    if (!Array.isArray(geom[i]) || geom[i].length == 0) {\n      throw new Error('Input is not a Polygon or MultiPolygon');\n    }\n\n    output.push([]);\n\n    for (var j = 0, jMax = geom[i].length; j < jMax; j++) {\n      if (!Array.isArray(geom[i][j]) || geom[i][j].length == 0) {\n        throw new Error('Input is not a Polygon or MultiPolygon');\n      }\n\n      if (Array.isArray(geom[i][j][0])) {\n        // multipolygon\n        output[i].push([]);\n\n        for (var k = 0, kMax = geom[i][j].length; k < kMax; k++) {\n          if (!Array.isArray(geom[i][j][k]) || geom[i][j][k].length < 2) {\n            throw new Error('Input is not a Polygon or MultiPolygon');\n          }\n\n          if (geom[i][j][k].length > 2) {\n            throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n          }\n\n          output[i][j].push(rounder.round(geom[i][j][k][0], geom[i][j][k][1]));\n        }\n      } else {\n        // polygon\n        if (geom[i][j].length < 2) {\n          throw new Error('Input is not a Polygon or MultiPolygon');\n        }\n\n        if (geom[i][j].length > 2) {\n          throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n        }\n\n        output[i].push(rounder.round(geom[i][j][0], geom[i][j][1]));\n      }\n    }\n  }\n\n  return output;\n};\n/* WARN: input modified directly */\n\nvar forceMultiPoly = function forceMultiPoly(geom) {\n  if (Array.isArray(geom)) {\n    if (geom.length === 0) return; // allow empty multipolys\n\n    if (Array.isArray(geom[0])) {\n      if (Array.isArray(geom[0][0])) {\n        if (typeof geom[0][0][0].x === 'number' && typeof geom[0][0][0].y === 'number') {\n          // multipolygon\n          return;\n        }\n      }\n\n      if (typeof geom[0][0].x === 'number' && typeof geom[0][0].y === 'number') {\n        // polygon\n        geom.unshift(geom.splice(0));\n        return;\n      }\n    }\n  }\n\n  throw new Error('Unrecognized input - not a polygon nor multipolygon');\n};\n/* WARN: input modified directly */\n\nvar cleanMultiPoly = function cleanMultiPoly(multipoly) {\n  var i = 0;\n\n  while (i < multipoly.length) {\n    var poly = multipoly[i];\n\n    if (poly.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n\n    var exteriorRing = poly[0];\n    cleanRing(exteriorRing); // poly is dropped if exteriorRing is degenerate\n\n    if (exteriorRing.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n\n    var j = 1;\n\n    while (j < poly.length) {\n      var interiorRing = poly[j];\n      cleanRing(interiorRing);\n      if (interiorRing.length === 0) poly.splice(j, 1);else j++;\n    }\n\n    i++;\n  }\n};\n/* Clean ring:\n *  - remove duplicate points\n *  - remove colinear points\n *  - remove rings with no area (less than 3 distinct points)\n *  - un-close rings (last point should not repeat first)\n *\n * WARN: input modified directly */\n\nvar cleanRing = function cleanRing(ring) {\n  if (ring.length === 0) return;\n  var firstPt = ring[0];\n  var lastPt = ring[ring.length - 1];\n  if (firstPt.x === lastPt.x && firstPt.y === lastPt.y) ring.pop();\n\n  var isPointUncessary = function isPointUncessary(prevPt, pt, nextPt) {\n    return prevPt.x === pt.x && prevPt.y === pt.y || nextPt.x === pt.x && nextPt.y === pt.y || compareVectorAngles(pt, prevPt, nextPt) === 0;\n  };\n\n  var i = 0;\n  var prevPt, nextPt;\n\n  while (i < ring.length) {\n    prevPt = i === 0 ? ring[ring.length - 1] : ring[i - 1];\n    nextPt = i === ring.length - 1 ? ring[0] : ring[i + 1];\n    if (isPointUncessary(prevPt, ring[i], nextPt)) ring.splice(i, 1);else i++;\n  } // if our ring has less than 3 distinct points now (so is degenerate)\n  // shrink it down to the empty array to communicate to our caller to\n  // drop it\n\n\n  while (ring.length < 3 && ring.length > 0) {\n    ring.pop();\n  }\n};\n\nvar SweepEvent =\n/*#__PURE__*/\nfunction () {\n  _createClass(SweepEvent, null, [{\n    key: \"compare\",\n    // for ordering sweep events in the sweep event queue\n    value: function compare(a, b) {\n      // favor event with a point that the sweep line hits first\n      var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n      if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n      if (a.point !== b.point) a.link(b); // favor right events over left\n\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n      // ordering of this case is the same as for their segments\n\n      return Segment.compare(a.segment, b.segment);\n    } // for ordering points in sweep line order\n\n  }, {\n    key: \"comparePoints\",\n    value: function comparePoints(aPt, bPt) {\n      if (aPt.x < bPt.x) return -1;\n      if (aPt.x > bPt.x) return 1;\n      if (aPt.y < bPt.y) return -1;\n      if (aPt.y > bPt.y) return 1;\n      return 0;\n    } // Warning: 'point' input will be modified and re-used (for performance)\n\n  }]);\n\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n  }\n\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n\n      var otherEvents = other.point.events;\n\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n\n      this.checkForConsuming();\n    }\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      // FIXME: The loops in this method run O(n^2) => no good.\n      //        Maintain little ordered sweep event trees?\n      //        Can we maintaining an ordering that avoids the need\n      //        for the re-sorting with getLeftmostComparator in geom-out?\n      // Compare each pair of events to see if other events also match\n      var numEvents = this.point.events.length;\n\n      for (var i = 0; i < numEvents; i++) {\n        var evt1 = this.point.events[i];\n        if (evt1.segment.consumedBy !== undefined) continue;\n\n        for (var j = i + 1; j < numEvents; j++) {\n          var evt2 = this.point.events[j];\n          if (evt2.consumedBy !== undefined) continue;\n          if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n          evt1.segment.consume(evt2.segment);\n        }\n      }\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n\n      return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n\n      var cache = new Map();\n\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n\n        var _cache$get = cache.get(a),\n            asine = _cache$get.sine,\n            acosine = _cache$get.cosine;\n\n        var _cache$get2 = cache.get(b),\n            bsine = _cache$get2.sine,\n            bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n        if (asine >= 0 && bsine >= 0) {\n          if (acosine < bcosine) return 1;\n          if (acosine > bcosine) return -1;\n          return 0;\n        } // both below x-axis\n\n\n        if (asine < 0 && bsine < 0) {\n          if (acosine < bcosine) return -1;\n          if (acosine > bcosine) return 1;\n          return 0;\n        } // one above x-axis, one below\n\n\n        if (bsine < asine) return -1;\n        if (bsine > asine) return 1;\n        return 0;\n      };\n    }\n  }]);\n\n  return SweepEvent;\n}();\n\n// segments and sweep events when all else is identical\n\nvar segmentId = 0;\n\nvar Segment =\n/*#__PURE__*/\nfunction () {\n  _createClass(Segment, null, [{\n    key: \"compare\",\n\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    value: function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var blx = b.leftSE.point.x;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n      if (brx < alx) return 1;\n      if (arx < blx) return -1;\n      var aly = a.leftSE.point.y;\n      var bly = b.leftSE.point.y;\n      var ary = a.rightSE.point.y;\n      var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n      if (alx < blx) {\n        // are the two segments in the same horizontal plane?\n        if (bly < aly && bly < ary) return 1;\n        if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n        var aCmpBLeft = a.comparePoint(b.leftSE.point);\n        if (aCmpBLeft < 0) return 1;\n        if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n        var bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return -1;\n      } // is left endpoint of segment A the right-more?\n\n\n      if (alx > blx) {\n        if (aly < bly && aly < bry) return -1;\n        if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n        var bCmpALeft = b.comparePoint(a.leftSE.point);\n        if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n        var aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight < 0) return 1;\n        if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return 1;\n      } // if we get here, the two left endpoints are in the same\n      // vertical plane, ie alx === blx\n      // consider the lower left-endpoint to come first\n\n\n      if (aly < bly) return -1;\n      if (aly > bly) return 1; // left endpoints are identical\n      // check for colinearity by using the left-more right endpoint\n      // is the A right endpoint more left-more?\n\n      if (arx < brx) {\n        var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n        if (_bCmpARight !== 0) return _bCmpARight;\n      } // is the B right endpoint more left-more?\n\n\n      if (arx > brx) {\n        var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n        if (_aCmpBRight < 0) return 1;\n        if (_aCmpBRight > 0) return -1;\n      }\n\n      if (arx !== brx) {\n        // are these two [almost] vertical segments with opposite orientation?\n        // if so, the one with the lower right endpoint comes first\n        var ay = ary - aly;\n        var ax = arx - alx;\n        var by = bry - bly;\n        var bx = brx - blx;\n        if (ay > ax && by < bx) return 1;\n        if (ay < ax && by > bx) return -1;\n      } // we have colinear segments with matching orientation\n      // consider the one with more left-more right endpoint to be first\n\n\n      if (arx > brx) return 1;\n      if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n      // vertical plane, ie arx === brx\n      // consider the lower right-endpoint to come first\n\n      if (ary < bry) return -1;\n      if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n      // fall back on creation order as consistent tie-breaker\n\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1; // identical segment, ie a === b\n\n      return 0;\n    }\n    /* Warning: a reference to ringWindings input will be stored,\n     *  and possibly will be later modified */\n\n  }]);\n\n  function Segment(leftSE, rightSE, rings, windings) {\n    _classCallCheck(this, Segment);\n\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings; // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    value: function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n    /* A vector from the left point to the right */\n\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(pt) {\n      return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n    }\n    /* Compare this segment with a point. Return value indicates:\n     *     1: point lies above or to the left of segment\n     *     0: point is colinear to segment\n     *    -1: point is below or to the right of segment */\n\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var interPt = closestPoint(this.leftSE.point, this.rightSE.point, point); // use cmp() to do the same rounding as would apply in rounder.round\n      // but avoid using rounder.round for performance boost, and to avoid\n      // saving the result in the rounding trees\n      // also, there is a fair amount of rounding error introduced when computing\n      // the closestPoint to a nearly vertical or horizontal segment. Thus, we use\n      // the more accurate coordinate for comparison of the two points\n\n      var lx = this.leftSE.point.x;\n      var ly = this.leftSE.point.y;\n      var rx = this.rightSE.point.x;\n      var ry = this.rightSE.point.y; // is the segment upward sloping?\n\n      if (ry >= ly) {\n        // is the segment more vertical?\n        if (ry - ly > rx - lx) {\n          // use the X coordinate\n          var cmpX = cmp(interPt.x, point.x);\n          if (cmpX != 0) return cmpX;\n        } else {\n          // segment is more horizontal, so use Y coord\n          var cmpY = cmp(point.y, interPt.y);\n          if (cmpY != 0) return cmpY;\n        }\n      } else {\n        // segment is more downward sloping\n        // is the segment more vertical?\n        if (ly - ry > rx - lx) {\n          // use the X coordinate\n          var _cmpX = cmp(point.x, interPt.x);\n\n          if (_cmpX != 0) return _cmpX;\n        } else {\n          // segment is more horizontal, so use the Y coordinate\n          var _cmpY = cmp(point.y, interPt.y);\n\n          if (_cmpY != 0) return _cmpY;\n        }\n      } // on the line\n\n\n      return 0;\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var tBbox = this.bbox();\n      var oBbox = other.bbox();\n      var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n      if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n\n      var tlp = this.leftSE.point;\n      var trp = this.rightSE.point;\n      var olp = other.leftSE.point;\n      var orp = other.rightSE.point; // does each endpoint touch the other segment?\n      // note that we restrict the 'touching' definition to only allow segments\n      // to touch endpoints that lie forward from where we are in the sweep line pass\n\n      var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n      var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n      var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n      var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return trp;\n        if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n\n        return null;\n      } // does this left endpoint matches (other doesn't)\n\n\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE) {\n          if (tlp.x === orp.x && tlp.y === orp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return tlp;\n      } // does other left endpoint matches (this doesn't)\n\n\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE) {\n          if (trp.x === olp.x && trp.y === olp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return olp;\n      } // trivial intersection on right endpoints\n\n\n      if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n      if (touchesThisRSE) return trp;\n      if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n\n      var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n\n      if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n      if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n      return rounder.round(pt.x, pt.y);\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(point) {\n      var newEvents = [];\n      var alreadyLinked = point.events !== undefined;\n      var newLeftSE = new SweepEvent(point, true);\n      var newRightSE = new SweepEvent(point, false);\n      var oldRightSE = this.rightSE;\n      this.replaceRightSE(newRightSE);\n      newEvents.push(newRightSE);\n      newEvents.push(newLeftSE);\n      var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n      // sometimes one of the resulting new segments is vertical, in which\n      // case its left and right events may need to be swapped\n\n      if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n        newSeg.swapEvents();\n      }\n\n      if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n        this.swapEvents();\n      } // in the point we just used to create new sweep events with was already\n      // linked to other events, we need to check if either of the affected\n      // segments should be consumed\n\n\n      if (alreadyLinked) {\n        newLeftSE.checkForConsuming();\n        newRightSE.checkForConsuming();\n      }\n\n      return newEvents;\n    }\n    /* Swap which event is left and right */\n\n  }, {\n    key: \"swapEvents\",\n    value: function swapEvents() {\n      var tmpEvt = this.rightSE;\n      this.rightSE = this.leftSE;\n      this.leftSE = tmpEvt;\n      this.leftSE.isLeft = true;\n      this.rightSE.isLeft = false;\n\n      for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n        this.windings[i] *= -1;\n      }\n    }\n    /* Consume another segment. We take their rings under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n\n      while (consumer.consumedBy) {\n        consumer = consumer.consumedBy;\n      }\n\n      while (consumee.consumedBy) {\n        consumee = consumee.consumedBy;\n      }\n\n      var cmp$$1 = Segment.compare(consumer, consumee);\n      if (cmp$$1 === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n\n      if (cmp$$1 > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      } // make sure a segment doesn't consume it's prev\n\n\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n\n      for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n        var ring = consumee.rings[i];\n        var winding = consumee.windings[i];\n        var index = consumer.rings.indexOf(ring);\n\n        if (index === -1) {\n          consumer.rings.push(ring);\n          consumer.windings.push(winding);\n        } else consumer.windings[index] += winding;\n      }\n\n      consumee.rings = null;\n      consumee.windings = null;\n      consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      if (this._prevInResult !== undefined) return this._prevInResult;\n      if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n      return this._prevInResult;\n    }\n  }, {\n    key: \"beforeState\",\n    value: function beforeState() {\n      if (this._beforeState !== undefined) return this._beforeState;\n      if (!this.prev) this._beforeState = {\n        rings: [],\n        windings: [],\n        multiPolys: []\n      };else {\n        var seg = this.prev.consumedBy || this.prev;\n        this._beforeState = seg.afterState();\n      }\n      return this._beforeState;\n    }\n  }, {\n    key: \"afterState\",\n    value: function afterState() {\n      if (this._afterState !== undefined) return this._afterState;\n      var beforeState = this.beforeState();\n      this._afterState = {\n        rings: beforeState.rings.slice(0),\n        windings: beforeState.windings.slice(0),\n        multiPolys: []\n      };\n      var ringsAfter = this._afterState.rings;\n      var windingsAfter = this._afterState.windings;\n      var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n      for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n        var ring = this.rings[i];\n        var winding = this.windings[i];\n        var index = ringsAfter.indexOf(ring);\n\n        if (index === -1) {\n          ringsAfter.push(ring);\n          windingsAfter.push(winding);\n        } else windingsAfter[index] += winding;\n      } // calcualte polysAfter\n\n\n      var polysAfter = [];\n      var polysExclude = [];\n\n      for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n        if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n        var _ring = ringsAfter[_i];\n        var poly = _ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (_ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n          var _index = polysAfter.indexOf(_ring.poly);\n\n          if (_index !== -1) polysAfter.splice(_index, 1);\n        }\n      } // calculate multiPolysAfter\n\n\n      for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n        var mp = polysAfter[_i2].multiPoly;\n        if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n      }\n\n      return this._afterState;\n    }\n    /* Is this segment part of the final result? */\n\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      if (this._isInResult !== undefined) return this._isInResult;\n      var mpsBefore = this.beforeState().multiPolys;\n      var mpsAfter = this.afterState().multiPolys;\n\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            this._isInResult = noBefores !== noAfters;\n            break;\n          }\n\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n\n            this._isInResult = most === operation.numMultiPolys && least < most;\n            break;\n          }\n\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            this._isInResult = diff % 2 === 1;\n            break;\n          }\n\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n\n            this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n            break;\n          }\n\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n\n      return this._isInResult;\n    }\n  }], [{\n    key: \"fromRing\",\n    value: function fromRing(pt1, pt2, ring) {\n      var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n      var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n      if (cmpPts < 0) {\n        leftPt = pt1;\n        rightPt = pt2;\n        winding = 1;\n      } else if (cmpPts > 0) {\n        leftPt = pt2;\n        rightPt = pt1;\n        winding = -1;\n      } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n      var leftSE = new SweepEvent(leftPt, true);\n      var rightSE = new SweepEvent(rightPt, false);\n      return new Segment(leftSE, rightSE, [ring], [winding]);\n    }\n  }]);\n\n  return Segment;\n}();\n\nvar RingIn =\n/*#__PURE__*/\nfunction () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n    var prevPoint = geomRing[0];\n    this.bbox = {\n      ll: {\n        x: prevPoint.x,\n        y: prevPoint.y\n      },\n      ur: {\n        x: prevPoint.x,\n        y: prevPoint.y\n      }\n    };\n\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      var point = geomRing[i];\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n      if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n      if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n      if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    }\n\n    this.segments.push(Segment.fromRing(prevPoint, geomRing[0], this));\n  }\n\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return RingIn;\n}();\nvar PolyIn =\n/*#__PURE__*/\nfunction () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n\n    this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n    this.bbox = {\n      ll: {\n        x: this.exteriorRing.bbox.ll.x,\n        y: this.exteriorRing.bbox.ll.y\n      },\n      ur: {\n        x: this.exteriorRing.bbox.ur.x,\n        y: this.exteriorRing.bbox.ur.y\n      }\n    };\n    this.interiorRings = [];\n\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      var ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n\n    this.multiPoly = multiPoly;\n  }\n\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return PolyIn;\n}();\nvar MultiPolyIn =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyIn(geomMultiPoly) {\n    _classCallCheck(this, MultiPolyIn);\n\n    this.polys = [];\n    this.bbox = {\n      ll: {\n        x: Number.POSITIVE_INFINITY,\n        y: Number.POSITIVE_INFINITY\n      },\n      ur: {\n        x: Number.NEGATIVE_INFINITY,\n        y: Number.NEGATIVE_INFINITY\n      }\n    };\n\n    for (var i = 0, iMax = geomMultiPoly.length; i < iMax; i++) {\n      var poly = new PolyIn(geomMultiPoly[i], this);\n      if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n\n    this.isSubject = false;\n  }\n\n  _createClass(MultiPolyIn, [{\n    key: \"markAsSubject\",\n    value: function markAsSubject() {\n      this.isSubject = true;\n    }\n  }, {\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return MultiPolyIn;\n}();\n\nvar RingOut =\n/*#__PURE__*/\nfunction () {\n  _createClass(RingOut, null, [{\n    key: \"factory\",\n\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    value: function factory(allSegments) {\n      var ringsOut = [];\n\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n        /* Walk the chain of linked events to form a closed ring */\n\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n          /* Is the ring complete? */\n\n          if (event.point === startingPoint) break;\n\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n            /* Only one way to go, so cotinue on the path */\n\n\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n            /* We must have an intersection. Check for a completed loop */\n\n\n            var indexLE = null;\n\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n\n\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n\n\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n\n        ringsOut.push(new RingOut(events));\n      }\n\n      return ringsOut;\n    }\n  }]);\n\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n\n    this.events = events;\n\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n\n    this.poly = null;\n  }\n\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      } // ring was all (within rounding error of angle calc) colinear points\n\n\n      if (points.length === 1) return null; // check if the starting point is necessary\n\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n\n      for (var _i = iStart; _i != iEnd; _i += step) {\n        orderedPoints.push([points[_i].x, points[_i].y]);\n      }\n\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n\n      return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n\n        if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        } // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n\n\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }]);\n\n  return RingOut;\n}();\nvar PolyOut =\n/*#__PURE__*/\nfunction () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n      if (geom[0] === null) return null;\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n\n      return geom;\n    }\n  }]);\n\n  return PolyOut;\n}();\nvar MultiPolyOut =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n\n      return polys;\n    }\n  }]);\n\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nvar SweepLine =\n/*#__PURE__*/\nfunction () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n    _classCallCheck(this, SweepLine);\n\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = []; // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n\n      if (event.consumedBy) {\n        if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n        return newEvents;\n      }\n\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined; // skip consumed segments still in tree\n\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      } // skip consumed segments still in tree\n\n\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n\n      if (event.isLeft) {\n        // Check for intersections against the previous segment in the sweep line\n        var prevMySplitter = null;\n\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        } // Check for intersections against the next segment in the sweep line\n\n\n        var nextMySplitter = null;\n\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        } // For simplicity, even if we find more than one intersection we only\n        // spilt on the 'earliest' (sweep-line style) of the intersections.\n        // The other intersection will be handled in a future process().\n\n\n        if (prevMySplitter !== null || nextMySplitter !== null) {\n          var mySplitter = null;\n          if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n            if (cmpSplitters < 0) mySplitter = prevMySplitter;\n            if (cmpSplitters > 0) mySplitter = nextMySplitter; // the two splitters are the exact same point\n\n            mySplitter = prevMySplitter;\n          } // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n\n          var _newEventsFromSplit2 = segment.split(mySplitter);\n\n          for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n            newEvents.push(_newEventsFromSplit2[_i2]);\n          }\n        }\n\n        if (newEvents.length > 0) {\n          // We found some intersections, so re-do the current event to\n          // make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers\n          this.tree.remove(segment);\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n\n        this.tree.remove(segment);\n      }\n\n      return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split(pt);\n      newEvents.push(rightSE); // splitting can trigger consumption\n\n      if (seg.consumedBy === undefined) this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n\n  return SweepLine;\n}();\n\nvar Operation =\n/*#__PURE__*/\nfunction () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      rounder.reset();\n      /* Make a copy of the input geometry with rounded points as objects */\n\n      var geoms = [pointsAsObjects(geom)];\n\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        geoms.push(pointsAsObjects(moreGeoms[i]));\n      }\n      /* Clean inputs */\n\n\n      for (var _i = 0, _iMax = geoms.length; _i < _iMax; _i++) {\n        forceMultiPoly(geoms[_i]);\n        cleanMultiPoly(geoms[_i]);\n      }\n      /* Convert inputs to MultiPoly objects, mark subject */\n\n\n      var multipolys = [];\n\n      for (var _i2 = 0, _iMax2 = geoms.length; _i2 < _iMax2; _i2++) {\n        multipolys.push(new MultiPolyIn(geoms[_i2]));\n      }\n\n      multipolys[0].markAsSubject();\n      operation.numMultiPolys = multipolys.length;\n      /* BBox optimization for difference operation\n       * If the bbox of a multipolygon that's part of the clipping doesn't\n       * intersect the bbox of the subject at all, we can just drop that\n       * multiploygon. */\n\n      if (operation.type === 'difference') {\n        // in place removal\n        var subject = multipolys[0];\n        var _i3 = 1;\n\n        while (_i3 < multipolys.length) {\n          if (getBboxOverlap(multipolys[_i3].bbox, subject.bbox) !== null) _i3++;else multipolys.splice(_i3, 1);\n        }\n      }\n      /* BBox optimization for intersection operation\n       * If we can find any pair of multipolygons whose bbox does not overlap,\n       * then the result will be empty. */\n\n\n      if (operation.type === 'intersection') {\n        // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n        //       it could be optimized to O(n * ln(n))\n        for (var _i4 = 0, _iMax3 = multipolys.length; _i4 < _iMax3; _i4++) {\n          var mpA = multipolys[_i4];\n\n          for (var j = _i4 + 1, jMax = multipolys.length; j < jMax; j++) {\n            if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n          }\n        }\n      }\n      /* Put segment endpoints in a priority queue */\n\n\n      var queue = new SplayTree(SweepEvent.compare);\n\n      for (var _i5 = 0, _iMax4 = multipolys.length; _i5 < _iMax4; _i5++) {\n        var sweepEvents = multipolys[_i5].getSweepEvents();\n\n        for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n          queue.insert(sweepEvents[_j]);\n        }\n      }\n      /* Pass the sweep line over those endpoints */\n\n\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n\n      while (node) {\n        var evt = node.key;\n\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          var seg = evt.segment;\n          throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n        }\n\n        var newEvents = sweepLine.process(evt);\n\n        for (var _i6 = 0, _iMax5 = newEvents.length; _i6 < _iMax5; _i6++) {\n          var _evt = newEvents[_i6];\n          if (_evt.consumedBy === undefined) queue.insert(_evt);\n        }\n\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      } // free some memory we don't need anymore\n\n\n      rounder.reset();\n      /* Collect and compile segments we're keeping into a multipolygon */\n\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n\n  return Operation;\n}(); // singleton available by import\n\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n\n  return operation.run('union', geom, moreGeoms);\n};\n\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n\n  return operation.run('intersection', geom, moreGeoms);\n};\n\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n\n  return operation.run('xor', geom, moreGeoms);\n};\n\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\n\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\nexport default class SplayTree {\n\n  constructor(compare = DEFAULT_COMPARE, noDuplicates = false) {\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  }\n\n\n  rotateLeft(x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) y.left.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)                this._root = y;\n    else if (x === x.parent.left) x.parent.left = y;\n    else                          x.parent.right = y;\n    if (y) y.left = x;\n    x.parent = y;\n  }\n\n\n  rotateRight(x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) y.right.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)               this._root = y;\n    else if(x === x.parent.left) x.parent.left = y;\n    else                         x.parent.right = y;\n    if (y) y.right = x;\n    x.parent = y;\n  }\n\n\n  _splay(x) {\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) this.rotateRight(p);\n        else              this.rotateLeft(p);\n      } else if (p.left === x && p.parent.left === p) {\n        this.rotateRight(p.parent);\n        this.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this.rotateLeft(p.parent);\n        this.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this.rotateRight(p);\n        this.rotateLeft(p);\n      } else {\n        this.rotateLeft(p);\n        this.rotateRight(p);\n      }\n    }\n  }\n\n\n  splay(x) {\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) ggp.left  = x;\n        else                 ggp.right = x;\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else gp.left = null;\n\n            p.right   = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else gp.right = null;\n\n            x.left    = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else p.left = null;\n\n        x.right  = p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else gp.right = null;\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else gp.left = null;\n\n            x.right   = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else p.right = null;\n\n        x.left   = p;\n        p.parent = x;\n      }\n    }\n  }\n\n\n  replace(u, v) {\n    if (!u.parent) this._root = v;\n    else if (u === u.parent.left) u.parent.left = v;\n    else u.parent.right = v;\n    if (v) v.parent = u.parent;\n  }\n\n\n  minNode(u = this._root) {\n    if (u) while (u.left) u = u.left;\n    return u;\n  }\n\n\n  maxNode(u = this._root) {\n    if (u) while (u.right) u = u.right;\n    return u;\n  }\n\n\n  insert(key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) return;\n        else if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    }\n\n    z = { key, data, left: null, right: null, parent: p };\n\n    if (!p)                          this._root = z;\n    else if (comp(p.key, z.key) < 0) p.right = z;\n    else                             p.left  = z;\n\n    this.splay(z);\n    this._size++;\n    return z;\n  }\n\n\n  find (key) {\n    var z    = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if      (cmp < 0) z = z.right;\n      else if (cmp > 0) z = z.left;\n      else              return z;\n    }\n    return null;\n  }\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param  {Key} key\n   * @return {boolean} true/false\n   */\n  contains (key) {\n    var node       = this._root;\n    var comparator = this._compare;\n    while (node)  {\n      var cmp = comparator(key, node.key);\n      if      (cmp === 0) return true;\n      else if (cmp < 0)   node = node.left;\n      else                node = node.right;\n    }\n\n    return false;\n  }\n\n\n  remove (key) {\n    var z = this.find(key);\n\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  removeNode(z) {\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  erase (key) {\n    var z = this.find(key);\n    if (!z) return;\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) sMax.right = t;\n      else   this._root = t;\n      t.parent = sMax;\n    }\n\n    this._size--;\n  }\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) node = node.left;\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  }\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) successor = successor.left;\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  }\n\n\n  /**\n   * Predecessor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) predecessor = predecessor.right;\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param  {forEachCallback} callback\n   * @return {SplayTree}\n   */\n  forEach(callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range(low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._compare;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load(keys = [], values = [], presort = false) {\n    if (this._size !== 0) throw new Error('bulk-load: tree is not empty');\n    const size = keys.length;\n    if (presort) sort(keys, values, 0, size - 1, this._compare);\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  }\n\n\n  min() {\n    var node = this.minNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n\n  max() {\n    var node = this.maxNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n  isEmpty() { return this._root === null; }\n  get size() { return this._size; }\n\n\n  /**\n   * Create a tree and load it with items\n   * @param  {Array<Key>}          keys\n   * @param  {Array<Value>?}        [values]\n\n   * @param  {Function?}            [comparator]\n   * @param  {Boolean?}             [presort=false] Pre-sort keys and values, using\n   *                                               tree's comparator. Sorting is done\n   *                                               in-place\n   * @param  {Boolean?}             [noDuplicates=false]   Allow duplicates\n   * @return {SplayTree}\n   */\n  static createTree(keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","export const NORMAL               = 0;\nexport const NON_CONTRIBUTING     = 1;\nexport const SAME_TRANSITION      = 2;\nexport const DIFFERENT_TRANSITION = 3;\n","export const INTERSECTION = 0;\nexport const UNION        = 1;\nexport const DIFFERENCE   = 2;\nexport const XOR          = 3;\n","import {\n  NORMAL,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION,\n  NON_CONTRIBUTING\n} from './edge_type';\nimport {\n  INTERSECTION,\n  UNION,\n  DIFFERENCE,\n  XOR\n} from './operation';\n\n/**\n * @param  {SweepEvent} event\n * @param  {SweepEvent} prev\n * @param  {Operation} operation\n */\nexport default function computeFields (event, prev, operation) {\n  // compute inOut and otherInOut fields\n  if (prev === null) {\n    event.inOut      = false;\n    event.otherInOut = true;\n\n  // previous line segment in sweepline belongs to the same polygon\n  } else {\n    if (event.isSubject === prev.isSubject) {\n      event.inOut      = !prev.inOut;\n      event.otherInOut = prev.otherInOut;\n\n    // previous line segment in sweepline belongs to the clipping polygon\n    } else {\n      event.inOut      = !prev.otherInOut;\n      event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n    }\n\n    // compute prevInResult field\n    if (prev) {\n      event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n        ? prev.prevInResult : prev;\n    }\n  }\n\n  // check if the line segment belongs to the Boolean operation\n  event.inResult = inResult(event, operation);\n}\n\n\n/* eslint-disable indent */\nfunction inResult(event, operation) {\n  switch (event.type) {\n    case NORMAL:\n      switch (operation) {\n        case INTERSECTION:\n          return !event.otherInOut;\n        case UNION:\n          return event.otherInOut;\n        case DIFFERENCE:\n          // return (event.isSubject && !event.otherInOut) ||\n          //         (!event.isSubject && event.otherInOut);\n          return (event.isSubject && event.otherInOut) ||\n                  (!event.isSubject && !event.otherInOut);\n        case XOR:\n          return true;\n      }\n      break;\n    case SAME_TRANSITION:\n      return operation === INTERSECTION || operation === UNION;\n    case DIFFERENT_TRANSITION:\n      return operation === DIFFERENCE;\n    case NON_CONTRIBUTING:\n      return false;\n  }\n  return false;\n}\n/* eslint-enable indent */\n","import { NORMAL } from './edge_type';\n\n\nexport default class SweepEvent {\n\n\n  /**\n   * Sweepline event\n   *\n   * @class {SweepEvent}\n   * @param {Array.<Number>}  point\n   * @param {Boolean}         left\n   * @param {SweepEvent=}     otherEvent\n   * @param {Boolean}         isSubject\n   * @param {Number}          edgeType\n   */\n  constructor (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Does event belong to result?\n     * @type {Boolean}\n     */\n    this.inResult = false;\n\n\n    // connection step\n\n    /**\n     * @type {Boolean}\n     */\n    this.resultInOut = false;\n\n    this.isExteriorRing = true;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isBelow (p) {\n    const p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isAbove (p) {\n    return !this.isBelow(p);\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  }\n\n\n  clone () {\n    const copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.inResult       = this.inResult;\n    copy.prevInResult   = this.prevInResult;\n    copy.isExteriorRing = this.isExteriorRing;\n    copy.inOut          = this.inOut;\n    copy.otherInOut     = this.otherInOut;\n\n    return copy;\n  }\n}\n","export default function equals(p1, p2) {\n  if (p1[0] === p2[0]) {\n    if (p1[1] === p2[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\n\n// const EPSILON = 1e-9;\n// const abs = Math.abs;\n// TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n// Precision problem.\n//\n// module.exports = function equals(p1, p2) {\n//   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n// };\n","/**\n * Signed area of the triangle (p0, p1, p2)\n * @param  {Array.<Number>} p0\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Number}\n */\nexport default function signedArea(p0, p1, p2) {\n  return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n}\n","import signedArea from './signed_area';\n\n/**\n * @param  {SweepEvent} e1\n * @param  {SweepEvent} e2\n * @return {Number}\n */\nexport default function compareEvents(e1, e2) {\n  const p1 = e1.point;\n  const p2 = e2.point;\n\n  // Different x-coordinate\n  if (p1[0] > p2[0]) return 1;\n  if (p1[0] < p2[0]) return -1;\n\n  // Different points, but same x-coordinate\n  // Event with lower y-coordinate is processed first\n  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\n  return specialCases(e1, e2, p1, p2);\n}\n\n\n/* eslint-disable no-unused-vars */\nfunction specialCases(e1, e2, p1, p2) {\n  // Same coordinates, but one is a left endpoint and the other is\n  // a right endpoint. The right endpoint is processed first\n  if (e1.left !== e2.left)\n    return e1.left ? 1 : -1;\n\n  // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n  // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n  // Same coordinates, both events\n  // are left endpoints or right endpoints.\n  // not collinear\n  if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n    // the event associate to the bottom segment is processed first\n    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n  }\n\n  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n}\n/* eslint-enable no-unused-vars */\n","import SweepEvent    from './sweep_event';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\n\n/**\n * @param  {SweepEvent} se\n * @param  {Array.<Number>} p\n * @param  {Queue} queue\n * @return {Queue}\n */\nexport default function divideSegment(se, p, queue)  {\n  const r = new SweepEvent(p, false, se,            se.isSubject);\n  const l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n  /* eslint-disable no-console */\n  if (equals(se.point, se.otherEvent.point)) {\n\n    console.warn('what is that, a collapsed segment?', se);\n  }\n  /* eslint-enable no-console */\n\n  r.contourId = l.contourId = se.contourId;\n\n  // avoid a rounding error. The left event would be processed after the right event\n  if (compareEvents(l, se.otherEvent) > 0) {\n    se.otherEvent.left = true;\n    l.left = false;\n  }\n\n  // avoid a rounding error. The left event would be processed after the right event\n  // if (compareEvents(se, r) > 0) {}\n\n  se.otherEvent.otherEvent = l;\n  se.otherEvent = r;\n\n  queue.push(l);\n  queue.push(r);\n\n  return queue;\n}\n","//const EPS = 1e-9;\n\n/**\n * Finds the magnitude of the cross product of two vectors (if we pretend\n * they're in three dimensions)\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The magnitude of the cross product\n */\nfunction crossProduct(a, b) {\n  return (a[0] * b[1]) - (a[1] * b[0]);\n}\n\n/**\n * Finds the dot product of two vectors.\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The dot product\n */\nfunction dotProduct(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]);\n}\n\n/**\n * Finds the intersection (if any) between two line segments a and b, given the\n * line segments' end points a1, a2 and b1, b2.\n *\n * This algorithm is based on Schneider and Eberly.\n * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n * Page 244.\n *\n * @param {Array.<Number>} a1 point of first line\n * @param {Array.<Number>} a2 point of first line\n * @param {Array.<Number>} b1 point of second line\n * @param {Array.<Number>} b2 point of second line\n * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n *                                         (meaning connected segments) as\n *                                         intersections\n * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n * intersection. If they overlap, the two end points of the overlapping segment.\n * Otherwise, null.\n */\nexport default function (a1, a2, b1, b2, noEndpointTouch) {\n  // The algorithm expects our lines in the form P + sd, where P is a point,\n  // s is on the interval [0, 1], and d is a vector.\n  // We are passed two points. P can be the first point of each pair. The\n  // vector, then, could be thought of as the distance (in x and y components)\n  // from the first point to the second point.\n  // So first, let's make our vectors:\n  const va = [a2[0] - a1[0], a2[1] - a1[1]];\n  const vb = [b2[0] - b1[0], b2[1] - b1[1]];\n  // We also define a function to convert back to regular point form:\n\n  /* eslint-disable arrow-body-style */\n\n  function toPoint(p, s, d) {\n    return [\n      p[0] + s * d[0],\n      p[1] + s * d[1]\n    ];\n  }\n\n  /* eslint-enable arrow-body-style */\n\n  // The rest is pretty much a straight port of the algorithm.\n  const e = [b1[0] - a1[0], b1[1] - a1[1]];\n  let kross    = crossProduct(va, vb);\n  let sqrKross = kross * kross;\n  const sqrLenA  = dotProduct(va, va);\n  //const sqrLenB  = dotProduct(vb, vb);\n\n  // Check for line intersection. This works because of the properties of the\n  // cross product -- specifically, two vectors are parallel if and only if the\n  // cross product is the 0 vector. The full calculation involves relative error\n  // to account for possible very small line segments. See Schneider & Eberly\n  // for details.\n  if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n    // If they're not parallel, then (because these are line segments) they\n    // still might not actually intersect. This code checks that the\n    // intersection point of the lines is actually on both line segments.\n    const s = crossProduct(e, vb) / kross;\n    if (s < 0 || s > 1) {\n      // not on line segment a\n      return null;\n    }\n    const t = crossProduct(e, va) / kross;\n    if (t < 0 || t > 1) {\n      // not on line segment b\n      return null;\n    }\n    if (s === 0 || s === 1) {\n      // on an endpoint of line segment a\n      return noEndpointTouch ? null : [toPoint(a1, s, va)];\n    }\n    if (t === 0 || t === 1) {\n      // on an endpoint of line segment b\n      return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n    }\n    return [toPoint(a1, s, va)];\n  }\n\n  // If we've reached this point, then the lines are either parallel or the\n  // same, but the segments could overlap partially or fully, or not at all.\n  // So we need to find the overlap, if any. To do that, we can use e, which is\n  // the (vector) difference between the two initial points. If this is parallel\n  // with the line itself, then the two lines are the same line, and there will\n  // be overlap.\n  //const sqrLenE = dotProduct(e, e);\n  kross = crossProduct(e, va);\n  sqrKross = kross * kross;\n\n  if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n  // Lines are just parallel, not the same. No overlap.\n    return null;\n  }\n\n  const sa = dotProduct(va, e) / sqrLenA;\n  const sb = sa + dotProduct(va, vb) / sqrLenA;\n  const smin = Math.min(sa, sb);\n  const smax = Math.max(sa, sb);\n\n  // this is, essentially, the FindIntersection acting on floats from\n  // Schneider & Eberly, just inlined into this function.\n  if (smin <= 1 && smax >= 0) {\n\n    // overlap on an end point\n    if (smin === 1) {\n      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n    }\n\n    if (smax === 0) {\n      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n    }\n\n    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\n    // There's overlap on a segment -- two points of intersection. Return both.\n    return [\n      toPoint(a1, smin > 0 ? smin : 0, va),\n      toPoint(a1, smax < 1 ? smax : 1, va)\n    ];\n  }\n\n  return null;\n}\n","import divideSegment from './divide_segment';\nimport intersection  from './segment_intersection';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\nimport {\n  NON_CONTRIBUTING,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION\n} from './edge_type';\n\n/**\n * @param  {SweepEvent} se1\n * @param  {SweepEvent} se2\n * @param  {Queue}      queue\n * @return {Number}\n */\nexport default function possibleIntersection (se1, se2, queue) {\n  // that disallows self-intersecting polygons,\n  // did cost us half a day, so I'll leave it\n  // out of respect\n  // if (se1.isSubject === se2.isSubject) return;\n  const inter = intersection(\n    se1.point, se1.otherEvent.point,\n    se2.point, se2.otherEvent.point\n  );\n\n  const nintersections = inter ? inter.length : 0;\n  if (nintersections === 0) return 0; // no intersection\n\n  // the line segments intersect at an endpoint of both line segments\n  if ((nintersections === 1) &&\n      (equals(se1.point, se2.point) ||\n       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n    return 0;\n  }\n\n  if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n    // if(se1.contourId === se2.contourId){\n    // console.warn('Edges of the same polygon overlap',\n    //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n    // }\n    //throw new Error('Edges of the same polygon overlap');\n    return 0;\n  }\n\n  // The line segments associated to se1 and se2 intersect\n  if (nintersections === 1) {\n\n    // if the intersection point is not an endpoint of se1\n    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n      divideSegment(se1, inter[0], queue);\n    }\n\n    // if the intersection point is not an endpoint of se2\n    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n      divideSegment(se2, inter[0], queue);\n    }\n    return 1;\n  }\n\n  // The line segments associated to se1 and se2 overlap\n  const events        = [];\n  let leftCoincide  = false;\n  let rightCoincide = false;\n\n  if (equals(se1.point, se2.point)) {\n    leftCoincide = true; // linked\n  } else if (compareEvents(se1, se2) === 1) {\n    events.push(se2, se1);\n  } else {\n    events.push(se1, se2);\n  }\n\n  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n    rightCoincide = true;\n  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n    events.push(se2.otherEvent, se1.otherEvent);\n  } else {\n    events.push(se1.otherEvent, se2.otherEvent);\n  }\n\n  if ((leftCoincide && rightCoincide) || leftCoincide) {\n    // both line segments are equal or share the left endpoint\n    se2.type = NON_CONTRIBUTING;\n    se1.type = (se2.inOut === se1.inOut)\n      ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n    if (leftCoincide && !rightCoincide) {\n      // honestly no idea, but changing events selection from [2, 1]\n      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n      divideSegment(events[1].otherEvent, events[0].point, queue);\n    }\n    return 2;\n  }\n\n  // the line segments share the right endpoint\n  if (rightCoincide) {\n    divideSegment(events[0], events[1].point, queue);\n    return 3;\n  }\n\n  // no line segment includes totally the other one\n  if (events[0] !== events[3].otherEvent) {\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[1], events[2].point, queue);\n    return 3;\n  }\n\n  // one line segment includes the other one\n  divideSegment(events[0], events[1].point, queue);\n  divideSegment(events[3].otherEvent, events[2].point, queue);\n\n  return 3;\n}\n","import signedArea    from './signed_area';\nimport compareEvents from './compare_events';\nimport equals        from './equals';\n\n\n/**\n * @param  {SweepEvent} le1\n * @param  {SweepEvent} le2\n * @return {Number}\n */\nexport default function compareSegments(le1, le2) {\n  if (le1 === le2) return 0;\n\n  // Segments are not collinear\n  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n    // If they share their left endpoint use the right endpoint to sort\n    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\n    // Different left endpoint: use the left endpoint to sort\n    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\n    // has the line segment associated to e1 been inserted\n    // into S after the line segment associated to e2 ?\n    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\n    // The line segment associated to e2 has been inserted\n    // into S after the line segment associated to e1\n    return le1.isBelow(le2.point) ? -1 : 1;\n  }\n\n  if (le1.isSubject === le2.isSubject) { // same polygon\n    let p1 = le1.point, p2 = le2.point;\n    if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n      p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]) return 0;\n      else return le1.contourId > le2.contourId ? 1 : -1;\n    }\n  } else { // Segments are collinear, but belong to separate polygons\n    return le1.isSubject ? -1 : 1;\n  }\n\n  return compareEvents(le1, le2) === 1 ? 1 : -1;\n}\n","import compareEvents from './compare_events';\nimport { DIFFERENCE } from './operation';\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<SweepEvent>}\n */\nfunction orderEvents(sortedEvents) {\n  let event, i, len, tmp;\n  const resultEvents = [];\n  for (i = 0, len = sortedEvents.length; i < len; i++) {\n    event = sortedEvents[i];\n    if ((event.left && event.inResult) ||\n      (!event.left && event.otherEvent.inResult)) {\n      resultEvents.push(event);\n    }\n  }\n  // Due to overlapping edges the resultEvents array can be not wholly sorted\n  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if ((i + 1) < len &&\n        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n        tmp = resultEvents[i];\n        resultEvents[i] = resultEvents[i + 1];\n        resultEvents[i + 1] = tmp;\n        sorted = false;\n      }\n    }\n  }\n\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    event.pos = i;\n  }\n\n  // imagine, the right event is found in the beginning of the queue,\n  // when his left counterpart is not marked yet\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    if (!event.left) {\n      tmp = event.pos;\n      event.pos = event.otherEvent.pos;\n      event.otherEvent.pos = tmp;\n    }\n  }\n\n  return resultEvents;\n}\n\n\n/**\n * @param  {Number} pos\n * @param  {Array.<SweepEvent>} resultEvents\n * @param  {Object>}    processed\n * @return {Number}\n */\nfunction nextPos(pos, resultEvents, processed, origIndex) {\n  let p, p1;\n  let newPos = pos + 1;\n  const length = resultEvents.length;\n\n  p  = resultEvents[pos].point;\n\n  if (newPos < length)\n    p1 = resultEvents[newPos].point;\n\n\n  // while in range and not the current one by value\n  while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n    if (!processed[newPos]) {\n      return newPos;\n    } else   {\n      newPos++;\n    }\n    p1 = resultEvents[newPos].point;\n  }\n\n  newPos = pos - 1;\n\n  while (processed[newPos] && newPos >= origIndex) {\n    newPos--;\n  }\n  return newPos;\n}\n\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<*>} polygons\n */\nexport default function connectEdges(sortedEvents, operation) {\n  let i, len;\n  const resultEvents = orderEvents(sortedEvents);\n\n  // \"false\"-filled array\n  const processed = {};\n  const result = [];\n  let event;\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    if (processed[i]) continue;\n    const contour = [[]];\n\n    if (!resultEvents[i].isExteriorRing) {\n      if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\n        result.push(contour);\n      } else if (result.length === 0) {\n        result.push([[contour]]);\n      } else {\n        result[result.length - 1].push(contour[0]);\n      }\n    } else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\n      result[result.length - 1].push(contour[0]);\n    } else {\n      result.push(contour);\n    }\n\n    const ringId = result.length - 1;\n    let pos = i;\n\n    const initial = resultEvents[i].point;\n    contour[0].push(initial);\n\n    while (pos >= i) {\n      event = resultEvents[pos];\n      processed[pos] = true;\n\n      if (event.left) {\n        event.resultInOut = false;\n        event.contourId   = ringId;\n      } else {\n        event.otherEvent.resultInOut = true;\n        event.otherEvent.contourId   = ringId;\n      }\n\n      pos = event.pos;\n      processed[pos] = true;\n      contour[0].push(resultEvents[pos].point);\n      pos = nextPos(pos, resultEvents, processed, i);\n    }\n\n    pos = pos === -1 ? i : pos;\n\n    event = resultEvents[pos];\n    processed[pos] = processed[event.pos] = true;\n    event.otherEvent.resultInOut = true;\n    event.otherEvent.contourId   = ringId;\n  }\n\n  // Handle if the result is a polygon (eg not multipoly)\n  // Commented it again, let's see what do we mean by that\n  // if (result.length === 1) result = result[0];\n  return result;\n}\n","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n","import Queue           from 'tinyqueue';\nimport SweepEvent      from './sweep_event';\nimport compareEvents   from './compare_events';\nimport { DIFFERENCE }  from './operation';\n\nconst max = Math.max;\nconst min = Math.min;\n\nlet contourId = 0;\n\n\nfunction processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n  let i, len, s1, s2, e1, e2;\n  for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n    s1 = contourOrHole[i];\n    s2 = contourOrHole[i + 1];\n    e1 = new SweepEvent(s1, false, undefined, isSubject);\n    e2 = new SweepEvent(s2, false, e1,        isSubject);\n    e1.otherEvent = e2;\n\n    if (s1[0] === s2[0] && s1[1] === s2[1]) {\n      continue; // skip collapsed edges, or it breaks\n    }\n\n    e1.contourId = e2.contourId = depth;\n    if (!isExteriorRing) {\n      e1.isExteriorRing = false;\n      e2.isExteriorRing = false;\n    }\n    if (compareEvents(e1, e2) > 0) {\n      e2.left = true;\n    } else {\n      e1.left = true;\n    }\n\n    const x = s1[0], y = s1[1];\n    bbox[0] = min(bbox[0], x);\n    bbox[1] = min(bbox[1], y);\n    bbox[2] = max(bbox[2], x);\n    bbox[3] = max(bbox[3], y);\n\n    // Pushing it so the queue is sorted from left to right,\n    // with object on the left having the highest priority.\n    Q.push(e1);\n    Q.push(e2);\n  }\n}\n\n\nexport default function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n  const eventQueue = new Queue(null, compareEvents);\n  let polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n  for (i = 0, ii = subject.length; i < ii; i++) {\n    polygonSet = subject[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n    }\n  }\n\n  for (i = 0, ii = clipping.length; i < ii; i++) {\n    polygonSet = clipping[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (operation === DIFFERENCE) isExteriorRing = false;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n    }\n  }\n\n  return eventQueue;\n}\n","import subdivideSegments from './subdivide_segments';\nimport connectEdges      from './connect_edges';\nimport fillQueue         from './fill_queue';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n}        from './operation';\n\nconst EMPTY = [];\n\n\nfunction trivialOperation(subject, clipping, operation) {\n  let result = null;\n  if (subject.length * clipping.length === 0) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = (subject.length === 0) ? clipping : subject;\n    }\n  }\n  return result;\n}\n\n\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n  let result = null;\n  if (sbbox[0] > cbbox[2] ||\n      cbbox[0] > sbbox[2] ||\n      sbbox[1] > cbbox[3] ||\n      cbbox[1] > sbbox[3]) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = subject.concat(clipping);\n    }\n  }\n  return result;\n}\n\n\nexport default function boolean(subject, clipping, operation) {\n  if (typeof subject[0][0][0] === 'number') {\n    subject = [subject];\n  }\n  if (typeof clipping[0][0][0] === 'number') {\n    clipping = [clipping];\n  }\n  let trivial = trivialOperation(subject, clipping, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  const sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n  const cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n  //console.time('fill queue');\n  const eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('fill queue');\n\n  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  //console.time('subdivide edges');\n  const sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('subdivide edges');\n\n  //console.time('connect vertices');\n  const result = connectEdges(sortedEvents, operation);\n  //console.timeEnd('connect vertices');\n  return result;\n}\n","import Tree                 from 'splaytree';\nimport computeFields        from './compute_fields';\nimport possibleIntersection from './possible_intersection';\nimport compareSegments      from './compare_segments';\nimport {\n  INTERSECTION,\n  DIFFERENCE\n} from './operation';\n\n\nexport default function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n  const sweepLine = new Tree(compareSegments);\n  const sortedEvents = [];\n\n  const rightbound = Math.min(sbbox[2], cbbox[2]);\n\n  let prev, next, begin;\n\n  while (eventQueue.length !== 0) {\n    let event = eventQueue.pop();\n    sortedEvents.push(event);\n\n    // optimization by bboxes for intersection and difference goes here\n    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n      break;\n    }\n\n    if (event.left) {\n      next  = prev = sweepLine.insert(event);\n      begin = sweepLine.minNode();\n\n      if (prev !== begin) prev = sweepLine.prev(prev);\n      else                prev = null;\n\n      next = sweepLine.next(next);\n\n      const prevEvent = prev ? prev.key : null;\n      let prevprevEvent;\n      computeFields(event, prevEvent, operation);\n      if (next) {\n        if (possibleIntersection(event, next.key, eventQueue) === 2) {\n          computeFields(event, prevEvent, operation);\n          computeFields(event, next.key, operation);\n        }\n      }\n\n      if (prev) {\n        if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n          let prevprev = prev;\n          if (prevprev !== begin) prevprev = sweepLine.prev(prevprev);\n          else                    prevprev = null;\n\n          prevprevEvent = prevprev ? prevprev.key : null;\n          computeFields(prevEvent, prevprevEvent, operation);\n          computeFields(event,     prevEvent,     operation);\n        }\n      }\n    } else {\n      event = event.otherEvent;\n      next = prev = sweepLine.find(event);\n\n      if (prev && next) {\n\n        if (prev !== begin) prev = sweepLine.prev(prev);\n        else                prev = null;\n\n        next = sweepLine.next(next);\n        sweepLine.remove(event);\n\n        if (next && prev) {\n          possibleIntersection(prev.key, next.key, eventQueue);\n        }\n      }\n    }\n  }\n  return sortedEvents;\n}\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","import { GeoJSONReader, GeoJSONWriter, UnionOp } from 'turf-jsts';\n\n/**\n * Takes two or more {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {...Feature<Polygon>} A polygon to combine\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union() {\n    var reader = new GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n\n    for (var i = 1; i < arguments.length; i++) {\n        result = UnionOp.union(result, reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n\n    var writer = new GeoJSONWriter();\n    result = writer.write(result);\n\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n}\n\nexport default union;\n","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\nexport default truncate;\n","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n","import { feature } from '@turf/helpers';\nimport { getCoords, getType } from '@turf/invariant';\n\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    // Backwards compatible with v4.0\n    var mutate = (typeof options === 'object') ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n\n    switch (type) {\n    case 'LineString':\n        newCoords = cleanLine(geojson);\n        break;\n    case 'MultiLineString':\n    case 'Polygon':\n        getCoords(geojson).forEach(function (line) {\n            newCoords.push(cleanLine(line));\n        });\n        break;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (polygons) {\n            var polyPoints = [];\n            polygons.forEach(function (ring) {\n                polyPoints.push(cleanLine(ring));\n            });\n            newCoords.push(polyPoints);\n        });\n        break;\n    case 'Point':\n        return geojson;\n    case 'MultiPoint':\n        var existing = {};\n        getCoords(geojson).forEach(function (coord) {\n            var key = coord.join('-');\n            if (!existing.hasOwnProperty(key)) {\n                newCoords.push(coord);\n                existing[key] = true;\n            }\n        });\n        break;\n    default:\n        throw new Error(type + ' geometry not supported');\n    }\n\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return {type: type, coordinates: newCoords};\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({type: type, coordinates: newCoords}, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\n\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1])) return points;\n\n    var prevPoint, point, nextPoint;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points[i - 1];\n        point = points[i];\n        nextPoint = points[i + 1];\n\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point)) {\n            newPoints.push(point);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n\n    if (cross !== 0) return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\nexport default cleanCoords;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport truncate from '@turf/truncate';\nimport { getGeom } from '@turf/invariant';\nimport { feature } from '@turf/helpers';\nimport cleanCoords from '@turf/clean-coords';\n\n// depend on jsts for now http://bjornharrtell.github.io/jsts/\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {Feature|null} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2) {\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n\n    // Return null if geometry is too narrow in coordinate precision\n    // fixes topology errors with JSTS\n    // https://github.com/Turfjs/turf/issues/463\n    // https://github.com/Turfjs/turf/pull/1004\n    if (cleanCoords(truncate(geom2, {precision: 4})).coordinates[0].length < 4) return null;\n    if (cleanCoords(truncate(geom1, {precision: 4})).coordinates[0].length < 4) return null;\n\n    var reader = new GeoJSONReader();\n    var a = reader.read(truncate(geom1));\n    var b = reader.read(truncate(geom2));\n    var intersection = OverlayOp.intersection(a, b);\n\n    // https://github.com/Turfjs/turf/issues/951\n    if (intersection.isEmpty()) return null;\n\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(intersection);\n    return feature(geom);\n}\n\nexport default intersect;\n","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport area from '@turf/area';\nimport { feature } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = getGeom(polygon1);\n    var geom2 = getGeom(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return feature(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new GeoJSONReader();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = OverlayOp.difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(differenced);\n\n    return feature(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (area(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        flattenEach(geom, function (feature$$1) {\n            if (area(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\nexport default difference;\n","<template>\n  <div id=\"app\">\n    <div id=\"map\">\n      <div class=\"control leaflet-bar\">\n        <h4>Input Data</h4>\n        <select v-on:change=\"setInput\">\n          <option>Asia</option>\n          <option>Almost Parallel Segments</option>\n          <option>Saw & Cheese</option>\n        </select>\n        <br><br>\n        <div v-for=\"operation in operations\">\n          <input type=\"radio\" name=\"some\" :value=\"operation\" v-on:change=\"setOperation\" v-model=\"selectedOperation\"> {{operation}}\n        </div>\n\n        <h4>Performance</h4>\n        <p>\n          polygon-clipping {{performance}} m/s<br>\n          martinez {{martinezPerf}} m/s<br>\n          jsts {{jstsPerf}} m/s<br>\n        </p>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport pc from '../..'\n\n// the martinez packaging is somewhat broken\nimport martinezBool from 'martinez-polygon-clipping'\nvar martinezUnion = (p1, p2) => martinezBool(p1, p2, 1)\nvar martinezIntersection = (p1, p2) => martinezBool(p1, p2, 0)\nvar martinezDifference = (p1, p2) => martinezBool(p1, p2, 2)\nvar martinezXor = (p1, p2) => martinezBool(p1, p2, 3)\n\n// turf v5 runs off of jsts under the hood\nimport jstsUnion from '@turf/union'\nimport jstsIntersection from '@turf/intersect'\nimport jstsDifference from '@turf/difference'\nvar jstsXor = null\n\nvar operation = pc.intersection\nvar martinezOp = martinezUnion\nvar jstsOp = jstsUnion\nvar inData = null\nvar inLayer = null\nvar outLayer = null\nvar map = null\n\nimport asia from '../geojson/asia-with-poly.json'\nimport parallel from '../geojson/parallel.json'\nimport cheese from '../geojson/cheese.json'\n\nexport default {\n  name: 'app',\n  data () {\n    return {\n      operations: ['Intersection', 'Union', 'Difference', 'XOR'],\n      selectedOperation: 'Intersection',\n      performance: '',\n      martinezPerf: '',\n      jstsPerf: ''\n    }\n  },\n  methods: {\n    setInput (e) {\n      inLayer.clearLayers()\n      outLayer.clearLayers()\n      if (e.target.value === 'Asia') inData = asia\n      if (e.target.value === 'Almost Parallel Segments') inData = parallel\n      if (e.target.value === 'Saw & Cheese') inData = cheese\n      inLayer.addData(inData)\n      map.fitBounds(inLayer.getBounds(), {\n        padding: [20, 20]\n      })\n      this.runOperation()\n    },\n    setOperation (e) {\n      this.selectedOperation = e.target.value\n      outLayer.clearLayers()\n\n      if (this.selectedOperation === 'Union') {\n        operation = pc.union\n        martinezOp = martinezUnion\n        jstsOp = jstsUnion\n      }\n      if (this.selectedOperation === 'Intersection') {\n        operation = pc.intersection\n        martinezOp = martinezIntersection\n        jstsOp = jstsIntersection\n      }\n      if (this.selectedOperation === 'XOR') {\n        operation = pc.xor\n        martinezOp = martinezXor\n        jstsOp = jstsXor\n      }\n      if (this.selectedOperation === 'Difference') {\n        operation = pc.difference\n        martinezOp = martinezDifference\n        jstsOp = jstsDifference\n      }\n\n      this.runOperation()\n    },\n    runOperation () {\n      var t0 = performance.now()\n      var outData = operation(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.performance = (performance.now() - t0).toFixed(2)\n\n      outLayer.addData({\n        'type': 'MultiPolygon',\n        'coordinates': outData\n      }).addTo(map)\n\n      var m0 = performance.now()\n      martinezOp(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.martinezPerf = (performance.now() - m0).toFixed(2)\n\n      if (jstsOp !== null) {\n        var j0 = performance.now()\n        jstsOp(inData.features[0], inData.features[1])\n        this.jstsPerf = (performance.now() - j0).toFixed(2)\n      } else {\n        this.jstsPerf = 'N/A'\n      }\n    }\n  },\n  mounted () {\n    inData = asia\n    map = window.map = L.map('map', {\n      minZoom: 1,\n      maxZoom: 20,\n      center: [0, 0],\n      zoom: 2,\n      crs: L.CRS.Simple\n    })\n\n    inLayer = L.geoJson(asia).addTo(map)\n\n    map.fitBounds(inLayer.getBounds(), {\n      padding: [20, 20]\n    })\n    outLayer = L.geoJson({\n      type: 'FeatureCollection',\n      features: []\n    }, {\n      color: 'red'\n    }).addTo(map)\n\n    this.runOperation()\n  }\n}\n</script>\n\n<style>\n    html, body, #app, #map {\n      width: 100%;\n      height: 100%;\n      margin: 0px;\n    }\n\n  .control {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background: white;\n    padding: 10px;\n    z-index: 10000;\n  }\n\n  h4{\n    margin-bottom: 5px\n  }\n  p{\n    margin-top: 5px;\n  }\n</style>\n","import Vue from 'vue'\nimport App from './App.vue'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n"],"names":["Node","key","data","left","right","DEFAULT_COMPARE","a","b","splay","i","t","comparator","l","r","y","N","cmp","insert","tree","node","_size","remove","x","split","v","Tree","_comparator","_root","this","add","current","compare","visitor","ctx","Q","done","push","length","pop","call","low","high","fn","keys","forEach","values","minNode","maxNode","index","d","root","successor","predecessor","head","next","p","toList","presort","size","sort","pivot","j","tmp","loadRecursive","parent","start","end","middle","Math","floor","mergedList","l1","l2","p1","p2","mergeLists","createList","sortedListToBST","list","printNode","n","out","printRow","prefix","isTail","indent","join","newKey","newData","merge","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype","isInBbox","bbox","point","ll","ur","getBboxOverlap","b1","b2","lowerX","upperX","epsilon","Number","EPSILON","undefined","pow","EPSILON_SQ","ab","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","v1","v2","kross","sqrt","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","horizontalIntersection","pt","verticalIntersection","PtRounder","reset","value","xRounder","CoordRounder","yRounder","round","SplayTree","coord","prevNode","prev","nextNode","rounder","pointsAsObjects","geom","output","Array","isArray","Error","iMax","jMax","k","kMax","forceMultiPoly","unshift","splice","cleanMultiPoly","multipoly","poly","exteriorRing","cleanRing","interiorRing","ring","firstPt","lastPt","prevPt","nextPt","isPointUncessary","SweepEvent","isLeft","events","ptCmp","comparePoints","link","Segment","segment","aPt","bPt","other","otherEvents","evt","checkForConsuming","numEvents","evt1","consumedBy","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","set","sine","cosine","has","_cache$get","get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","leftSE","rightSE","rings","windings","id","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","ay","ax","by","bx","newRightSE","y1","y2","isAnEndpoint","interPt","ptA1","ptA2","ptB","vFar","vA","farPt","dist","closestPoint","lx","ly","rx","ry","cmpX","cmpY","_cmpX","_cmpY","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","pt1","pt2","ve","d1","d2","intersection","vector","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","newSeg","slice","swapEvents","tmpEvt","consumer","consumee","cmp$$1","_tmp","winding","indexOf","_prevInResult","prevInResult","_beforeState","seg","afterState","multiPolys","_afterState","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","_i","_iMax","_ring","isExterior","_index","_i2","_iMax2","mp","multiPoly","_isInResult","mpsBefore","operation","type","noBefores","noAfters","least","most","numMultiPolys","diff","abs","isJustSubject","mps","isSubject","concat","leftPt","rightPt","cmpPts","RingIn","geomRing","segments","prevPoint","fromRing","sweepEvents","PolyIn","geomPoly","interiorRings","getSweepEvents","ringSweepEvents","MultiPolyIn","geomMultiPoly","polys","POSITIVE_INFINITY","NEGATIVE_INFINITY","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","indexLE","getLeftmostComparator","intersectionLE","ringEvents","reverse","points","_pt","_nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","getGeom","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","arguments","find","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","cmpSplitters","_newEventsFromSplit2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","Operation","moreGeoms","geoms","multipolys","markAsSubject","subject","mpA","_i5","_j","_jMax","sweepLine","prevQueueSize","process","_i6","_iMax5","_evt","factory","_len","_key","run","_len2","_key2","_len3","_key3","subjectGeom","_len4","clippingGeoms","_key4","noDuplicates","_compare","_noDuplicates","rotateRight","rotateLeft","gp","ggp","u","z","comp","replace","s","sMax","returnValue","callback","load","NORMAL","NON_CONTRIBUTING","SAME_TRANSITION","DIFFERENT_TRANSITION","INTERSECTION","UNION","DIFFERENCE","XOR","computeFields","inOut","otherInOut","isVertical","inResult","otherEvent","edgeType","resultInOut","p0","isBelow","copy","equals","signedArea","compareEvents","e1","e2","specialCases","divideSegment","se","console","warn","contourId","possibleIntersection","se1","se2","a1","a2","noEndpointTouch","va","vb","toPoint","e","sqrKross","sqrLenA","sa","sb","smin","min","smax","max","nintersections","leftCoincide","rightCoincide","compareSegments","le1","le2","isAbove","nextPos","pos","resultEvents","processed","origIndex","newPos","connectEdges","sortedEvents","len","sorted","orderEvents","result","contour","ringId","initial","TinyQueue","defaultCompare","_down","item","_up","top","peek","halfLength","best","processPolygon","contourOrHole","depth","s1","s2","EMPTY","boolean","clipping","trivial","trivialOperation","sbbox","Infinity","cbbox","eventQueue","polygonSet","ii","jj","Queue","fillQueue","compareBBoxes","begin","rightbound","prevprev","subdivideSegments","arrayLike","relativeStart","parseInt","relativeEnd","isFinite","isInteger","val","parseFloat","isNaN","trunc","ceil","NumberUtil","interfaces_","getClass","equalsWithTolerance","x1","x2","tolerance","IllegalArgumentException","message","name","stack","__proto__","create","constructor","Double","staticAccessors$1","MAX_VALUE","doubleToLongBits","longBitsToDouble","isInfinite","defineProperties","Comparable","Clonable","Comparator","Serializable","Coordinate","NULL_ORDINATE","c","staticAccessors","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","ordinateIndex","equals2D","getOrdinate","equals3D","equalInZ","compareTo","o","clone","toString","distance3D","dx","dy","dz","distance","hashCode","setCoordinate","f","NaN","dimensionsToTest","_dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","CoordinateSequenceFactory","Location","staticAccessors$4","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","locationValue","hasInterface","MathUtil","staticAccessors$5","LOG_10","log10","ln","log","v3","v4","clamp","x$1","min$1","max$1","wrap","v1$1","v2$1","v3$1","average","StringBuffer","str","append","setCharAt","substr","Integer","intValue","Character","isWhitespace","toUpperCase","DD","_hi","_lo","init","dd","parse","hi","lo","staticAccessors$7","PI","TWO_PI","PI_2","E","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","scale","divide","gt","lt","multiply","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","y$1","isZero","selfSubtract","getSpecialNumberString","selfDivide","tc","ty","C","U","yhi","ylo","hc","hy","dump","createNaN","ge","exp","selfMultiply","reciprocal","fhi","flo","rint","setValue","value$1","isNegative","axdd","H","h","S","H$1","T","S$1","f$1","s$1","e$1","zhi","zlo","tx","hx","selfSqr","toStandardNotation","toSciNotation","specialStr","fill","sigDigits","num","charAt","stringOfChar","numZeroes","digits","expStr","trailingDigits","substring","digitsWithDecimal","isPositive","signum","strlen","signCh","numBeforeDec","ch","isDigit","ex","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","CGAlgorithmsDD","staticAccessors$6","DP_SAFE_EPSILON","orientationIndex","q","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","q1","q2","denom1","denom2","denom","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","det","errbound","CoordinateSequence","staticAccessors$8","M","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","env","getY","toCoordinateArray","Exception","NotRepresentableException","Exception$$1","System","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","HCoordinate","w","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","px","py","pw","qx","qy","qw","xInt","yInt","Envelope","_minx","_maxx","_miny","_maxy","staticAccessors$9","getArea","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","expandToInclude","minExtent","translate","transX","transY","setToNull","maxExtent","expandBy","deltaX","deltaY","contains","centre","minq","maxq","minp","maxp","regExes","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","WKTParser","geometryFactory","GeometryFactory","read","wkt","geometry","matches","exec","search","toLowerCase","parse$1","apply","write","extractGeometry","getGeometryType","extract$1","wktType","isEmpty","coordinate","coordinate$1","point$1","_coordinates","multipoint","multipoint$1","array","_geometries","linestring","linestring$1","_points","linearring","linearring$1","multilinestring","multilinestring$1","polygon","polygon$1","_shell","_holes","multipolygon","multipolygon$1","geometrycollection","collection","createPoint","coords","trim","createMultiPoint","components","createLineString","createLinearRing","line","createMultiLineString","lines","createPolygon","shell","holes","createMultiPolygon","polygons","createGeometryCollection","wktArray","WKTWriter","parser","toLineString","RuntimeException","AssertionFailedException","RuntimeException$$1","Assert","shouldNeverReachHere","isTrue","assertion","expectedValue","actualValue","LineIntersector","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","staticAccessors$10","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","catBuf","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","precisionModel","isInteriorIntersection","inputLineIndex","computeEdgeDistance","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","pdx","pdy","nonRobustComputeEdgeDistance","RobustLineIntersector","LineIntersector$$1","isInSegmentEnvelopes","intPt","env0","env1","CGAlgorithms","normalizeToMinimum","n1","n2","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","x3","x4","xabs","checkDD","intPtDD","isIn","println","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","nearestPt","minDist","distancePointLine","RobustDeterminant","sign","swap","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","countSegment","minx","maxx","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","sum","x0","x0$1","sum$1","distanceLineLine","A","B","D","noIntersection","rNumb","isPointInRing","computeLength","pts","y0","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","minDistance","isOnLine","lineIntersector","GeometryComponentFilter","filter","Geometry","_envelope","_factory","_SRID","_userData","getSRID","staticAccessors$11","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","isGeometryCollection","getSortIndex","getFactory","getGeometryN","isRectangle","g$1","equalsTopo","g","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","other$1","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","SRID","setUserData","userData","iterator","hasNext","aElement","bElement","comparison","isGeometryCollectionOrDerived","hasNonEmptyElements","geometries","hasNullElements","CoordinateFilter","BoundaryNodeRule","staticAccessors$12","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","boundaryCount","Collection","IndexOutOfBoundsException","addAll","toArray","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","array_","ensureCapacity","clear","element","oldElement","Iterator_","found","Iterator$$1","arrayList","arrayList_","position_","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coordArrayType","coll","isChanged","coord$2","obj","allowRepeated$2","coord$3","allowRepeated$3","i$2","i$3","coord$4","coord$5","allowRepeated$5","inc","closeRing","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","isRing","ptNotInList","testPts","testPt","scroll","coordinates","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","last","mid","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","Map$1","put","entrySet","SortedMap","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","hashSet_","BLACK","colorOf","color","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","getValue","getKey","oldValue","fixAfterInsertion","getFirstEntry","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","treeSet_","Arrays","asList","Dimension","staticAccessors$14","P","L","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","dimensionValue","toDimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","isDone","isGeometryChanged","GeometryCollection","Geometry$$1","getCoordinates","getNumPoints","childCoordinates","area","isEquivalentClass","otherCollection","getBoundaryDimension","dimension","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","getBoundary","MultiLineString","GeometryCollection$$1","isClosed","nLines","revLines","BoundaryOp","lineStrings","_geom","_geomFact","_bnRule","_endpointMap","bnRule","geom$1","bnRule$1","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createMultiPointFromCoords","LineString","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","valence","count","Counter","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","NEWLINE","SIMPLE_ORDINATE_FORMAT","chars","String","getStackTrace","os","ps","printStackTrace","t$1","stackTrace","lineNumberReader","readLine","separator","separatorlen","tokenList","tmpString","token","res","format","CoordinateSequences","copyCoord","minDim","dim","isEqual","cs1","cs2","cs1Size","extend","fact","newseq","cs","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","line$1","ls","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Puntal","Point","Polygonal","Polygon","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","convexHull","getExteriorRing","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","MultiPoint","isValid","LinearRing","LineString$$1","validateConstruction","MINIMUM_VALID_SIZE","MultiPolygon","allRings","allRingsArray","GeometryEditor","_isUserDataCopied","staticAccessors$16","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","isUserDataCopied","edit","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","hole","GeometryEditorOperation","editCoordinates","CoordinateArraySequence","_dimension","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","instanceObject","readResolve","HashMap","MapInterface","map_","entries","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","staticAccessors$19","maximumPreciseValue","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","getType","description","maxSigDigits","mostPrecise","pm1","pm2","_name","nameToTypeMap","staticAccessors$1$1","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","staticAccessors$2","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","coordinates$1","shell$1","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","geometryTypes","GeoJSONParser","json","JSON","Feature","feature","FeatureCollection","featureCollection","features","sub","linearRing","geoJson","shellGeoJson","holeGeoJson","GeoJSONReader","reducePrecision","GeoJSONWriter","Position","staticAccessors$20","ON","EmptyStackException","Stack","opposite","position","empty","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","de","side","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","pPrev","pNext","orientation","usePrev","findRightmostEdgeAtNode","star","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","dirEdgeList","TopologyException","msg","msgWithCoord","LinkedList","addLast","removeFirst","BufferSubgraph","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","startEdge","isVisited","computeDepths","de$1","copySymDepths","computeDepth","outsideDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","nodeStack","setDepth","symNode","getNodes","getDirectedEdges","TopologyLocation","location","on","gl","on$1","setAllLocations","locValue","setAllLocationsIfNull","isLine","newLoc","getLocations","flip","temp","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","locValue$1","isEqualOnSide","allPositionsEqual","loc","Label","elt","onLoc","lbl","geomIndex","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","getGeometryCount","location$1","toLine","toLineLabel","label","lineLabel","EdgeRing","_startDe","_maxNodeDegree","_edges","_pts","_label","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","isFirstEdge","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","degree","getOutgoingDegree","edge","edgePts","startIndex","startIndex$1","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","deLabel","deLabel$1","setShell","toPolygon","holeLR","MinimalEdgeRing","EdgeRing$$1","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","GraphComponent","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","im","computeIM","GraphComponent$$1","_coord","edges","isIncidentEdgeInResult","print","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","setNode","setLabelBoundary","NodeMap","nodeMap","nodeFact","addNode","createNode","node$1","getBoundaryNodes","bdyNodes","Quadrant","staticAccessors$21","NE","NW","SW","SE","isNorthern","quad","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","quadrant","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","edge$1","edge$2","p0$1","label$1","compareDirection","getDy","angle","atan2","className","lastDotPos","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","depthVal","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","printEdge","printReverse","setSym","setVisitedEdge","directionFactor","oppositePos","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","NodeFactory","PlanarGraph","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de1","de2","nodes","PolygonBuilder","_shellList","sortShellsAndHoles","edgeRings","shellList","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","getBounds","ItemBoundable","_bounds","_item","bounds","getItem","PriorityQueue","_items","poll","minItem","reorder","child","ItemVisitor","visitItem","SpatialIndex","itemEnv","query","AbstractNode","_childBoundables","_level","level","staticAccessors$22","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","bp","getDistance","getBoundable","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity$1","staticAccessors$23","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","level$1","boundables$1","boundable","searchBounds","getIntersectsOp","searchBounds$1","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","createHigherLevels","getRoot","item$1","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","nearestNeighbour","itemDist","initBndPair","itemDist$1","bp$1","initBndPair$1","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","centreX","avg","centreY","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","maxSegmentIndex","isInterior","SegmentNodeList","_nodeMap","getSplitCoordinates","addEndpoints","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","edgeList","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","NodedSegmentString","getData","eiNew","getSegmentOctant","checkSplitEdgesCorrectness","splitEdges","pt0","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","setData","NodableSegmentString","addIntersection","_nodeList","_data","safeOctant","intPt$1","addIntersectionNode","li","segmentIndex$1","getNodeList","normalizedSegmentIndex","nextSegIndex","addIntersections","getNodedSubstrings","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","LineSegment","staticAccessors$24","minX","orient0","orient1","geomFactory","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","minY","midPoint","closestPoints","closestPt","close00","close01","close10","close11","factor","maxX","comp0","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","pointAlong","bits0","hash0","bits1","MonotoneChainOverlapAction","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","overlap","mc1","start1","mc2","start2","getLineSegment","MonotoneChain","_start","_end","_context","_id","context","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","getChainStartIndices","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","pts$1","mcList","Noder","computeNodes","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","SinglePassNoder$$1","si","_monoChains","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","segStr","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","MonotoneChainOverlapAction$$1","_si","ss1","ss2","processIntersections","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","quadrantSegments$1","endCapStyle","setEndCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","staticAccessors$25","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","quadSegs","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","alpha","cos","BufferInputLineSimplifier","inputLine","_distanceTol","_isDeleted","_angleOrientation","_inputLine","staticAccessors$26","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","i0","distanceTol","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","simplify","collapseLine","OffsetSegmentString","_ptList","_minimimVertexDistance","staticAccessors$28","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","revere","addPts","startPt","setMinimumVertexDistance","minimimVertexDistance","Angle","staticAccessors$29","PI_TIMES_2","PI_OVER_2","PI_OVER_4","toDegrees","radians","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","staticAccessors$27","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","direction","radius","startAngle","endAngle","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","offset","sideSign","totalAngle","nSegs","currAngleInc","currAngle","createCircle","hasNarrowConcaveAngle","OffsetCurveBuilder","getOffsetCurve","inputPts","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","SubgraphDepthLocater","_subgraphs","_seg","_cga","subgraphs","staticAccessors$30","DepthSegment","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","dirEdge","stabbedSegments$1","ds","stabbingRayLeftPt$2","stabbedSegments$2","_leftDepth","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","Triangle","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","numx","numy","perpendicularBisector","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","_inputGeom","_curveBuilder","_curveList","inputGeom","curveBuilder","addPoint","curve","addCurve","addPolygon","offsetSide","shellCoord","isErodedCompletely","addPolygonRing","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","addLineString","getCurves","cwLeftLoc","cwRightLoc","addCollection","ringCoord","envMinDimension","PointOnGeometryLocator","locate","GeometryCollectionIterator","_parent","_atStart","_max","_subcollectionIterator","isAtomic","SimplePointInAreaLocator","containsPointInPolygon","geomi","g2","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","it$1","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","geomi$1","getDegree","insertEdgeEnd","DirectedEdgeStar","EdgeEndStar$$1","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","de0","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","mergeSymLabels","degree$1","findCoveredLineEdges","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","_orientation","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","_ocaMap","edgeColl","findEdgeIndex","findEqualEdge","SegmentIntersector","e0","segIndex0","segIndex1","IntersectionAdder","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","EdgeIntersection","getSegmentIndex","EdgeIntersectionList","Edge","MonotoneChainIndexer","MonotoneChainEdge","env2","mcb","chainIndex","computeIntersectsForChain","chainIndex0","mce","chainIndex1","mce$1","getStartIndexes","computeIntersects","Depth","NULL_VALUE","staticAccessors$31","depthValue","minDepth","newValue","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","newPts","setIsolated","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","BufferBuilder","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","mergeDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","processedGraphs","subgraph","createSubgraphs","createEmptyResultGeometry","getNoder","noder","buffer","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","ss","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","scaleFactor","isIntegerPrecision","noder$1","scaleFactor$1","offsetX","offsetY","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","NodingValidator","_segStrings","staticAccessors$33","checkEndPtVertexIntersections","checkInteriorIntersections","ss0","ss0$1","ss1$1","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","staticAccessors$34","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","staticAccessors$35","HotPixelSnapAction","snap","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","isNodeAdded","MonotoneChainSelectAction$$1","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","snapRound","intersections","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","BufferOp","_argGeom","_resultGeometry","_saveException","staticAccessors$32","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","getResultGeometry","bufferOp","distance$1","bufOp","g$2","distance$2","params","g$3","distance$3","bufOp$2","maxPrecisionDigits","bufEnvMax","minUnitLog10","PointPairDistance","_isNull","setMinimum","ptDist","initialize","setMaximum","DistanceToPointFinder","computeDistance","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","_maxPtDist","staticAccessors$36","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","distFilter","getMaxPointDistance","computeMaxVertexDistance","findDistance","bufferCurve","getDistancePoints","_minPtDist","midPt","PolygonExtracter","comps","_comps","LinearComponentExtracter","_lines","_isForcedToLineString","lines$1","isForcedToLineString","setForceToLineString","getLines","forceToLineString","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","locateInternal","shellLoc","locateInPolygonRing","holeLoc","p$2","updateLocationInfo","computeLocation","ml","mpoly","GeometryLocation","_component","_segIndex","component","INSIDE_AREA","component$1","staticAccessors$38","isInsideArea","getGeometryComponent","PointExtracter","getPoints","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","g0","g1","g0$1","g1$1","terminateDistance","computeContainmentDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","isWithinDistance","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","_g0","_g1","_ptDist","_densifyFrac","staticAccessors$39","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","densifyFrac","compute","computeOrientedDistance","discreteGeom","MaxPointDistanceFilter$1","fracFilter","orientedDistance","_euclideanDist","_numSubSegs","fraction","delx","dely","BufferDistanceValidator","input","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","staticAccessors$37","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","bufCurve","maxDist","haus","distDelta","checkPositiveValid","checkNegativeValid","inputCurve","getPolygonLines","checkMinimumDistance","getErrorIndicator","distOp","getErrorLocation","lineExtracter","getErrorMessage","BufferResultValidator","_errorMsg","staticAccessors$40","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","padding","expectedEnv","bufEnv","report","distValid","inputArea","resultArea","checkName","isValidMsg","validator","BasicSegmentString","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","findAllIntersections","setKeepIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","createAnyIntersectionFinder","createIntersectionCounter","FastNodingValidator","execute","intSegs","computeIntersections","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","mapOp","_mapOp","mapped","op","LineBuilder","_op","_lineEdgesList","_resultLineList","ptLocator","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","buildLines","OverlayOp","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","PointBuilder","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","snapTolerance$1","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","_srcGeom","staticAccessors$41","SNAP_PRECISION_FACTOR","snapGeom","extractTargetCoordinates","SnapTransformer","snapToSelf","cleanResult","snappedGeom","computeSnapTolerance","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","GeometryTransformer$$1","isSelfSnap","_snapPts","_isSelfSnap","snapLine","snapper","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","padStr","toBinaryString","bitStr","getBit","nBits","num1","num2","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","staticAccessors$42","Translater","addCommonBits","trans","removeCommonBits","invCoord","getCommonCoordinate","_commonBitsX","_commonBitsY","xp","yp","SnapOverlayOp","_cbr","selfSnap","remGeom","prepareResult","prepGeom","overlayOp","union","symDifference","SYMDIFFERENCE","difference","SnapIfNeededOverlayOp","isSuccess","savedException","MonotoneChain$2","SweepLineEvent","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","INSERT","staticAccessors$43","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","EdgeSetIntersector","SegmentIntersector$2","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","setIsDoneIfProperInt","isDoneWhenProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","nOverlaps","prepareEvents","processOverlaps","edges0","edges1","si$1","si$2","addEdge","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","_min","staticAccessors$45","NodeComparator","getMin","queryMin","queryMax","getMax","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","buildTree","buildLevel","buildRoot","ArrayListVisitor","getItems","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","SegmentVisitor","rcc","_counter","addLine","GeometryGraph","PlanarGraph$$1","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","_resultPrecisionModel","_arg","setComputationPrecision","g0$2","GeometryMapper","MapOp","op$1","mapped$1","gr","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","geom1","resultDimension","dim0","dim1","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","_g","_boundaryDistanceTolerance","_linework","boundaryDistanceTolerance","extractLinework","isWithinToleranceOfBoundary","extracter","PolygonalLineworkExtracter","linework","getLinework","OffsetPointGenerator","_doLeft","_doRight","extractPoints","offsetPts","computeOffsetPoints","setSidesToGenerate","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","staticAccessors$46","reportResult","expectedInterior","addTestPts","overlayOp$1","hasLocation","isValidResult","ptGen","getInvalidLocation","GeometryCombiner","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","elems","elemGeom","combine","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","_inputPolys","staticAccessors$47","STRTREE_NODE_CAPACITY","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","unionOptimized","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","UnionOp","reader","stringify","properties","options","isObject","isNumber","validateBBox","validateId","feat","geomEach","geojson","stopG","geometryMaybeCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","truncate","precision","mutate","coordEach","excludeWrapCoord","wrapShrink","coordIndex","multiFeatureIndex","geometryIndex","geomType","truncateCoords","getCoords","cleanCoords","_typeof","newCoords","cleanLine","polyPoints","existing","hasOwnProperty","nextPoint","newPoints","secondToLast","isPointOnLineSegment","startX","startY","endX","endY","dxl","dyl","intersect","poly1","poly2","geom2","initialValue","previousValue","currentGeometry","geomReduce","calculateArea","polygonArea","RADIUS","ringArea","lowerIndex","middleIndex","upperIndex","coordsLength","rad","_","polygon1","polygon2","removeEmptyPolygon","differenced","feature$$1","script","Vue","el","render","App"],"mappings":"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"}